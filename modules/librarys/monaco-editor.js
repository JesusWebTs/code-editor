// monaco/editor.main.js
!function(e) {
  function t(t2) {
    for (var n2, r2, o2 = t2[0], s2 = t2[1], a2 = 0, c = []; a2 < o2.length; a2++)
      r2 = o2[a2], Object.prototype.hasOwnProperty.call(i, r2) && i[r2] && c.push(i[r2][0]), i[r2] = 0;
    for (n2 in s2)
      Object.prototype.hasOwnProperty.call(s2, n2) && (e[n2] = s2[n2]);
    for (l && l(t2); c.length; )
      c.shift()();
  }
  var n = {}, i = {0: 0};
  function r(t2) {
    if (n[t2])
      return n[t2].exports;
    var i2 = n[t2] = {i: t2, l: false, exports: {}};
    return e[t2].call(i2.exports, i2, i2.exports, r), i2.l = true, i2.exports;
  }
  r.e = function() {
    return Promise.resolve();
  }, r.m = e, r.c = n, r.d = function(e2, t2, n2) {
    r.o(e2, t2) || Object.defineProperty(e2, t2, {enumerable: true, get: n2});
  }, r.r = function(e2) {
    typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e2, "__esModule", {value: true});
  }, r.t = function(e2, t2) {
    if (1 & t2 && (e2 = r(e2)), 8 & t2)
      return e2;
    if (4 & t2 && typeof e2 == "object" && e2 && e2.__esModule)
      return e2;
    var n2 = Object.create(null);
    if (r.r(n2), Object.defineProperty(n2, "default", {enumerable: true, value: e2}), 2 & t2 && typeof e2 != "string")
      for (var i2 in e2)
        r.d(n2, i2, function(t3) {
          return e2[t3];
        }.bind(null, i2));
    return n2;
  }, r.n = function(e2) {
    var t2 = e2 && e2.__esModule ? function() {
      return e2.default;
    } : function() {
      return e2;
    };
    return r.d(t2, "a", t2), t2;
  }, r.o = function(e2, t2) {
    return Object.prototype.hasOwnProperty.call(e2, t2);
  }, r.p = "/", r.oe = function(e2) {
    throw console.error(e2), e2;
  };
  var o = self.webpackJsonp = self.webpackJsonp || [], s = o.push.bind(o);
  o.push = t, o = o.slice();
  for (var a = 0; a < o.length; a++)
    t(o[a]);
  var l = s;
  r(r.s = 342);
}([function(e, t, n) {
  "use strict";
  function i(e2, t2, ...n2) {
    return function(e3, t3) {
      let n3;
      return n3 = t3.length === 0 ? e3 : e3.replace(/\{(\d+)\}/g, function(e4, n4) {
        const i2 = n4[0];
        return t3[i2] !== void 0 ? t3[i2] : e4;
      }), n3;
    }(t2, n2);
  }
  n.d(t, "a", function() {
    return i;
  });
}, function(e, t, n) {
  "use strict";
  n.d(t, "s", function() {
    return g;
  }), n.d(t, "S", function() {
    return f;
  }), n.d(t, "N", function() {
    return b;
  }), n.d(t, "I", function() {
    return v;
  }), n.d(t, "e", function() {
    return w;
  }), n.d(t, "f", function() {
    return y;
  }), n.d(t, "Q", function() {
    return C;
  }), n.d(t, "R", function() {
    return x;
  }), n.d(t, "ab", function() {
    return S;
  }), n.d(t, "i", function() {
    return E;
  }), n.d(t, "n", function() {
    return L;
  }), n.d(t, "m", function() {
    return N;
  }), n.d(t, "g", function() {
    return I;
  }), n.d(t, "h", function() {
    return D;
  }), n.d(t, "j", function() {
    return O;
  }), n.d(t, "k", function() {
    return A;
  }), n.d(t, "W", function() {
    return R;
  }), n.d(t, "Y", function() {
    return M;
  }), n.d(t, "l", function() {
    return B;
  }), n.d(t, "z", function() {
    return j;
  }), n.d(t, "y", function() {
    return V;
  }), n.d(t, "F", function() {
    return q;
  }), n.d(t, "C", function() {
    return $;
  }), n.d(t, "d", function() {
    return K;
  }), n.d(t, "H", function() {
    return G;
  }), n.d(t, "B", function() {
    return Y;
  }), n.d(t, "A", function() {
    return Z;
  }), n.d(t, "G", function() {
    return X;
  }), n.d(t, "L", function() {
    return Q;
  }), n.d(t, "w", function() {
    return J;
  }), n.d(t, "J", function() {
    return ee;
  }), n.d(t, "O", function() {
    return ne;
  }), n.d(t, "E", function() {
    return ie;
  }), n.d(t, "x", function() {
    return re;
  }), n.d(t, "v", function() {
    return oe;
  }), n.d(t, "u", function() {
    return le;
  }), n.d(t, "P", function() {
    return ce;
  }), n.d(t, "M", function() {
    return de;
  }), n.d(t, "c", function() {
    return he;
  }), n.d(t, "b", function() {
    return ue;
  }), n.d(t, "X", function() {
    return pe;
  }), n.d(t, "V", function() {
    return me;
  }), n.d(t, "bb", function() {
    return fe;
  }), n.d(t, "p", function() {
    return be;
  }), n.d(t, "U", function() {
    return ve;
  }), n.d(t, "a", function() {
    return Ce;
  }), n.d(t, "Z", function() {
    return xe;
  }), n.d(t, "K", function() {
    return Se;
  }), n.d(t, "T", function() {
    return ke;
  }), n.d(t, "D", function() {
    return Ee;
  }), n.d(t, "t", function() {
    return Te;
  }), n.d(t, "cb", function() {
    return Le;
  }), n.d(t, "o", function() {
    return Ne;
  }), n.d(t, "r", function() {
    return Ie;
  }), n.d(t, "q", function() {
    return De;
  });
  var i = n(34), r = n(44), o = n(67), s = n(69), a = n(20), l = n(13), c = n(6), d = n(2), h = n(11), u = n(16), p = n(45), m = n(138);
  function g(e2) {
    for (; e2.firstChild; )
      e2.removeChild(e2.firstChild);
  }
  function f(e2) {
    e2.parentNode && e2.parentNode.removeChild(e2);
  }
  function b(e2) {
    for (; e2; ) {
      if (e2 === document.body)
        return true;
      e2 = e2.parentNode || e2.host;
    }
    return false;
  }
  const _ = new class {
    hasClass(e2, t2) {
      return Boolean(t2) && e2.classList && e2.classList.contains(t2);
    }
    addClasses(e2, ...t2) {
      t2.forEach((t3) => t3.split(" ").forEach((t4) => this.addClass(e2, t4)));
    }
    addClass(e2, t2) {
      t2 && e2.classList && e2.classList.add(t2);
    }
    removeClass(e2, t2) {
      t2 && e2.classList && e2.classList.remove(t2);
    }
    removeClasses(e2, ...t2) {
      t2.forEach((t3) => t3.split(" ").forEach((t4) => this.removeClass(e2, t4)));
    }
    toggleClass(e2, t2, n2) {
      e2.classList && e2.classList.toggle(t2, n2);
    }
  }(), v = _.hasClass.bind(_), w = _.addClass.bind(_), y = _.addClasses.bind(_), C = _.removeClass.bind(_), x = _.removeClasses.bind(_), S = _.toggleClass.bind(_);
  class k {
    constructor(e2, t2, n2, i2) {
      this._node = e2, this._type = t2, this._handler = n2, this._options = i2 || false, this._node.addEventListener(this._type, this._handler, this._options);
    }
    dispose() {
      this._handler && (this._node.removeEventListener(this._type, this._handler, this._options), this._node = null, this._handler = null);
    }
  }
  function E(e2, t2, n2, i2) {
    return new k(e2, t2, n2, i2);
  }
  function T(e2) {
    return function(t2) {
      return e2(new s.a(t2));
    };
  }
  let L = function(e2, t2, n2, i2) {
    let r2 = n2;
    return t2 === "click" || t2 === "mousedown" ? r2 = T(n2) : t2 !== "keydown" && t2 !== "keypress" && t2 !== "keyup" || (r2 = function(e3) {
      return function(t3) {
        return e3(new o.a(t3));
      };
    }(n2)), E(e2, t2, r2, i2);
  }, N = function(e2, t2, n2) {
    return I(e2, T(t2), n2);
  };
  function I(e2, t2, n2) {
    return E(e2, h.c && m.a.pointerEvents ? he.POINTER_DOWN : he.MOUSE_DOWN, t2, n2);
  }
  function D(e2, t2, n2) {
    return E(e2, h.c && m.a.pointerEvents ? he.POINTER_UP : he.MOUSE_UP, t2, n2);
  }
  function O(e2, t2) {
    return E(e2, "mouseout", (n2) => {
      let i2 = n2.relatedTarget;
      for (; i2 && i2 !== e2; )
        i2 = i2.parentNode;
      i2 !== e2 && t2(n2);
    });
  }
  function A(e2, t2) {
    return E(e2, "pointerout", (n2) => {
      let i2 = n2.relatedTarget;
      for (; i2 && i2 !== e2; )
        i2 = i2.parentNode;
      i2 !== e2 && t2(n2);
    });
  }
  let R, M, P = null;
  class F {
    constructor(e2, t2 = 0) {
      this._runner = e2, this.priority = t2, this._canceled = false;
    }
    dispose() {
      this._canceled = true;
    }
    execute() {
      if (!this._canceled)
        try {
          this._runner();
        } catch (e2) {
          Object(l.e)(e2);
        }
    }
    static sort(e2, t2) {
      return t2.priority - e2.priority;
    }
  }
  !function() {
    let e2 = [], t2 = null, n2 = false, i2 = false, r2 = () => {
      for (n2 = false, t2 = e2, e2 = [], i2 = true; t2.length > 0; ) {
        t2.sort(F.sort), t2.shift().execute();
      }
      i2 = false;
    };
    M = (t3, i3 = 0) => {
      let o2 = new F(t3, i3);
      return e2.push(o2), n2 || (n2 = true, function(e3) {
        if (!P) {
          const e4 = (e5) => setTimeout(() => e5(new Date().getTime()), 0);
          P = self.requestAnimationFrame || self.msRequestAnimationFrame || self.webkitRequestAnimationFrame || self.mozRequestAnimationFrame || self.oRequestAnimationFrame || e4;
        }
        P.call(self, e3);
      }(r2)), o2;
    }, R = (e3, n3) => {
      if (i2) {
        let i3 = new F(e3, n3);
        return t2.push(i3), i3;
      }
      return M(e3, n3);
    };
  }();
  const W = function(e2, t2) {
    return t2;
  };
  class z extends d.a {
    constructor(e2, t2, n2, i2 = W, r2 = 16) {
      super();
      let o2 = null, s2 = 0, l2 = this._register(new a.e()), c2 = () => {
        s2 = new Date().getTime(), n2(o2), o2 = null;
      };
      this._register(E(e2, t2, (e3) => {
        o2 = i2(o2, e3);
        let t3 = new Date().getTime() - s2;
        t3 >= r2 ? (l2.cancel(), c2()) : l2.setIfNotSet(c2, r2 - t3);
      }));
    }
  }
  function B(e2, t2, n2, i2, r2) {
    return new z(e2, t2, n2, i2, r2);
  }
  function j(e2) {
    return document.defaultView.getComputedStyle(e2, null);
  }
  function V(e2) {
    if (e2 !== document.body)
      return new H(e2.clientWidth, e2.clientHeight);
    if (h.c && window.visualViewport) {
      const e3 = window.visualViewport.width, t2 = window.visualViewport.height - (i.k ? 24 : 0);
      return new H(e3, t2);
    }
    if (window.innerWidth && window.innerHeight)
      return new H(window.innerWidth, window.innerHeight);
    if (document.body && document.body.clientWidth && document.body.clientHeight)
      return new H(document.body.clientWidth, document.body.clientHeight);
    if (document.documentElement && document.documentElement.clientWidth && document.documentElement.clientHeight)
      return new H(document.documentElement.clientWidth, document.documentElement.clientHeight);
    throw new Error("Unable to figure out browser width and height");
  }
  class U {
    static convertToPixels(e2, t2) {
      return parseFloat(t2) || 0;
    }
    static getDimension(e2, t2, n2) {
      let i2 = j(e2), r2 = "0";
      return i2 && (r2 = i2.getPropertyValue ? i2.getPropertyValue(t2) : i2.getAttribute(n2)), U.convertToPixels(e2, r2);
    }
    static getBorderLeftWidth(e2) {
      return U.getDimension(e2, "border-left-width", "borderLeftWidth");
    }
    static getBorderRightWidth(e2) {
      return U.getDimension(e2, "border-right-width", "borderRightWidth");
    }
    static getBorderTopWidth(e2) {
      return U.getDimension(e2, "border-top-width", "borderTopWidth");
    }
    static getBorderBottomWidth(e2) {
      return U.getDimension(e2, "border-bottom-width", "borderBottomWidth");
    }
    static getPaddingLeft(e2) {
      return U.getDimension(e2, "padding-left", "paddingLeft");
    }
    static getPaddingRight(e2) {
      return U.getDimension(e2, "padding-right", "paddingRight");
    }
    static getPaddingTop(e2) {
      return U.getDimension(e2, "padding-top", "paddingTop");
    }
    static getPaddingBottom(e2) {
      return U.getDimension(e2, "padding-bottom", "paddingBottom");
    }
    static getMarginLeft(e2) {
      return U.getDimension(e2, "margin-left", "marginLeft");
    }
    static getMarginTop(e2) {
      return U.getDimension(e2, "margin-top", "marginTop");
    }
    static getMarginRight(e2) {
      return U.getDimension(e2, "margin-right", "marginRight");
    }
    static getMarginBottom(e2) {
      return U.getDimension(e2, "margin-bottom", "marginBottom");
    }
  }
  class H {
    constructor(e2, t2) {
      this.width = e2, this.height = t2;
    }
  }
  function q(e2) {
    let t2 = e2.offsetParent, n2 = e2.offsetTop, i2 = e2.offsetLeft;
    for (; (e2 = e2.parentNode) !== null && e2 !== document.body && e2 !== document.documentElement; ) {
      n2 -= e2.scrollTop;
      const r2 = te(e2) ? null : j(e2);
      r2 && (i2 -= r2.direction !== "rtl" ? e2.scrollLeft : -e2.scrollLeft), e2 === t2 && (i2 += U.getBorderLeftWidth(e2), n2 += U.getBorderTopWidth(e2), n2 += e2.offsetTop, i2 += e2.offsetLeft, t2 = e2.offsetParent);
    }
    return {left: i2, top: n2};
  }
  function $(e2) {
    let t2 = e2.getBoundingClientRect();
    return {left: t2.left + K.scrollX, top: t2.top + K.scrollY, width: t2.width, height: t2.height};
  }
  const K = new class {
    get scrollX() {
      return typeof window.scrollX == "number" ? window.scrollX : document.body.scrollLeft + document.documentElement.scrollLeft;
    }
    get scrollY() {
      return typeof window.scrollY == "number" ? window.scrollY : document.body.scrollTop + document.documentElement.scrollTop;
    }
  }();
  function G(e2) {
    let t2 = U.getMarginLeft(e2) + U.getMarginRight(e2);
    return e2.offsetWidth + t2;
  }
  function Y(e2) {
    let t2 = U.getBorderLeftWidth(e2) + U.getBorderRightWidth(e2), n2 = U.getPaddingLeft(e2) + U.getPaddingRight(e2);
    return e2.offsetWidth - t2 - n2;
  }
  function Z(e2) {
    let t2 = U.getBorderTopWidth(e2) + U.getBorderBottomWidth(e2), n2 = U.getPaddingTop(e2) + U.getPaddingBottom(e2);
    return e2.offsetHeight - t2 - n2;
  }
  function X(e2) {
    let t2 = U.getMarginTop(e2) + U.getMarginBottom(e2);
    return e2.offsetHeight + t2;
  }
  function Q(e2, t2) {
    for (; e2; ) {
      if (e2 === t2)
        return true;
      e2 = e2.parentNode;
    }
    return false;
  }
  function J(e2, t2, n2) {
    for (; e2 && e2.nodeType === e2.ELEMENT_NODE; ) {
      if (v(e2, t2))
        return e2;
      if (n2) {
        if (typeof n2 == "string") {
          if (v(e2, n2))
            return null;
        } else if (e2 === n2)
          return null;
      }
      e2 = e2.parentNode;
    }
    return null;
  }
  function ee(e2, t2, n2) {
    return !!J(e2, t2, n2);
  }
  function te(e2) {
    return e2 && !!e2.host && !!e2.mode;
  }
  function ne(e2) {
    return !!ie(e2);
  }
  function ie(e2) {
    for (; e2.parentNode; ) {
      if (e2 === document.body)
        return null;
      e2 = e2.parentNode;
    }
    return te(e2) ? e2 : null;
  }
  function re() {
    let e2 = document.activeElement;
    for (; e2 == null ? void 0 : e2.shadowRoot; )
      e2 = e2.shadowRoot.activeElement;
    return e2;
  }
  function oe(e2 = document.getElementsByTagName("head")[0]) {
    let t2 = document.createElement("style");
    return t2.type = "text/css", t2.media = "screen", e2.appendChild(t2), t2;
  }
  let se = null;
  function ae() {
    return se || (se = oe()), se;
  }
  function le(e2, t2, n2 = ae()) {
    n2 && t2 && n2.sheet.insertRule(e2 + "{" + t2 + "}", 0);
  }
  function ce(e2, t2 = ae()) {
    if (!t2)
      return;
    let n2 = function(e3) {
      return e3 && e3.sheet && e3.sheet.rules ? e3.sheet.rules : e3 && e3.sheet && e3.sheet.cssRules ? e3.sheet.cssRules : [];
    }(t2), i2 = [];
    for (let t3 = 0; t3 < n2.length; t3++) {
      n2[t3].selectorText.indexOf(e2) !== -1 && i2.push(t3);
    }
    for (let e3 = i2.length - 1; e3 >= 0; e3--)
      t2.sheet.deleteRule(i2[e3]);
  }
  function de(e2) {
    return typeof HTMLElement == "object" ? e2 instanceof HTMLElement : e2 && typeof e2 == "object" && e2.nodeType === 1 && typeof e2.nodeName == "string";
  }
  const he = {CLICK: "click", AUXCLICK: "auxclick", DBLCLICK: "dblclick", MOUSE_UP: "mouseup", MOUSE_DOWN: "mousedown", MOUSE_OVER: "mouseover", MOUSE_MOVE: "mousemove", MOUSE_OUT: "mouseout", MOUSE_ENTER: "mouseenter", MOUSE_LEAVE: "mouseleave", MOUSE_WHEEL: i.f ? "mousewheel" : "wheel", POINTER_UP: "pointerup", POINTER_DOWN: "pointerdown", POINTER_MOVE: "pointermove", CONTEXT_MENU: "contextmenu", WHEEL: "wheel", KEY_DOWN: "keydown", KEY_PRESS: "keypress", KEY_UP: "keyup", LOAD: "load", BEFORE_UNLOAD: "beforeunload", UNLOAD: "unload", ABORT: "abort", ERROR: "error", RESIZE: "resize", SCROLL: "scroll", FULLSCREEN_CHANGE: "fullscreenchange", WK_FULLSCREEN_CHANGE: "webkitfullscreenchange", SELECT: "select", CHANGE: "change", SUBMIT: "submit", RESET: "reset", FOCUS: "focus", FOCUS_IN: "focusin", FOCUS_OUT: "focusout", BLUR: "blur", INPUT: "input", STORAGE: "storage", DRAG_START: "dragstart", DRAG: "drag", DRAG_ENTER: "dragenter", DRAG_LEAVE: "dragleave", DRAG_OVER: "dragover", DROP: "drop", DRAG_END: "dragend", ANIMATION_START: i.l ? "webkitAnimationStart" : "animationstart", ANIMATION_END: i.l ? "webkitAnimationEnd" : "animationend", ANIMATION_ITERATION: i.l ? "webkitAnimationIteration" : "animationiteration"}, ue = {stop: function(e2, t2) {
    e2.preventDefault ? e2.preventDefault() : e2.returnValue = false, t2 && (e2.stopPropagation ? e2.stopPropagation() : e2.cancelBubble = true);
  }};
  function pe(e2) {
    let t2 = [];
    for (let n2 = 0; e2 && e2.nodeType === e2.ELEMENT_NODE; n2++)
      t2[n2] = e2.scrollTop, e2 = e2.parentNode;
    return t2;
  }
  function me(e2, t2) {
    for (let n2 = 0; e2 && e2.nodeType === e2.ELEMENT_NODE; n2++)
      e2.scrollTop !== t2[n2] && (e2.scrollTop = t2[n2]), e2 = e2.parentNode;
  }
  class ge extends d.a {
    constructor(e2) {
      super(), this._onDidFocus = this._register(new c.a()), this.onDidFocus = this._onDidFocus.event, this._onDidBlur = this._register(new c.a()), this.onDidBlur = this._onDidBlur.event;
      let t2 = Q(document.activeElement, e2), n2 = false;
      const i2 = () => {
        n2 = false, t2 || (t2 = true, this._onDidFocus.fire());
      }, o2 = () => {
        t2 && (n2 = true, window.setTimeout(() => {
          n2 && (n2 = false, t2 = false, this._onDidBlur.fire());
        }, 0));
      };
      this._refreshStateHandler = () => {
        Q(document.activeElement, e2) !== t2 && (t2 ? o2() : i2());
      }, this._register(Object(r.a)(e2, he.FOCUS, true)(i2)), this._register(Object(r.a)(e2, he.BLUR, true)(o2));
    }
  }
  function fe(e2) {
    return new ge(e2);
  }
  function be(e2, ...t2) {
    return t2.forEach((t3) => e2.appendChild(t3)), t2[t2.length - 1];
  }
  const _e = /([\w\-]+)?(#([\w\-]+))?((\.([\w\-]+))*)/;
  function ve(e2, ...t2) {
    e2.innerText = "", Object(u.d)(t2).forEach((t3) => {
      t3 instanceof Node ? e2.appendChild(t3) : e2.appendChild(document.createTextNode(t3));
    });
  }
  var we;
  function ye(e2, t2, n2, ...i2) {
    let r2 = _e.exec(t2);
    if (!r2)
      throw new Error("Bad use of emmet");
    n2 = Object.assign({}, n2 || {});
    let o2, s2 = r2[1] || "div";
    return o2 = e2 !== we.HTML ? document.createElementNS(e2, s2) : document.createElement(s2), r2[3] && (o2.id = r2[3]), r2[4] && (o2.className = r2[4].replace(/\./g, " ").trim()), Object.keys(n2).forEach((e3) => {
      const t3 = n2[e3];
      t3 !== void 0 && (/^on\w+$/.test(e3) ? o2[e3] = t3 : e3 === "selected" ? t3 && o2.setAttribute(e3, "true") : o2.setAttribute(e3, t3));
    }), Object(u.d)(i2).forEach((e3) => {
      e3 instanceof Node ? o2.appendChild(e3) : o2.appendChild(document.createTextNode(e3));
    }), o2;
  }
  function Ce(e2, t2, ...n2) {
    return ye(we.HTML, e2, t2, ...n2);
  }
  function xe(...e2) {
    for (let t2 of e2)
      t2.style.display = "", t2.removeAttribute("aria-hidden");
  }
  function Se(...e2) {
    for (let t2 of e2)
      t2.style.display = "none", t2.setAttribute("aria-hidden", "true");
  }
  function ke(e2) {
    if (e2 && e2.hasAttribute("tabIndex")) {
      if (document.activeElement === e2) {
        let t2 = function(e3, t3) {
          for (; e3 && e3.nodeType === e3.ELEMENT_NODE; ) {
            if (e3 instanceof HTMLElement && e3.hasAttribute(t3))
              return e3;
            e3 = e3.parentNode;
          }
          return null;
        }(e2.parentElement, "tabIndex");
        t2 && t2.focus();
      }
      e2.removeAttribute("tabindex");
    }
  }
  function Ee(e2) {
    return Array.prototype.slice.call(document.getElementsByTagName(e2), 0);
  }
  function Te(e2) {
    const t2 = window.devicePixelRatio * e2;
    return Math.max(1, Math.floor(t2)) / window.devicePixelRatio;
  }
  function Le(e2) {
    if (h.g || i.g)
      window.open(e2);
    else {
      let t2 = window.open();
      t2 && (t2.opener = null, t2.location.href = e2);
    }
  }
  function Ne(e2) {
    const t2 = () => {
      e2(), n2 = M(t2);
    };
    let n2 = M(t2);
    return Object(d.h)(() => n2.dispose());
  }
  function Ie(e2) {
    return e2 && p.b.vscodeRemote === e2.scheme ? p.a.rewrite(e2) : e2;
  }
  function De(e2) {
    return e2 ? `url('${Ie(e2).toString(true).replace(/'/g, "%27")}')` : "url('')";
  }
  !function(e2) {
    e2.HTML = "http://www.w3.org/1999/xhtml", e2.SVG = "http://www.w3.org/2000/svg";
  }(we || (we = {})), Ce.SVG = function(e2, t2, ...n2) {
    return ye(we.SVG, e2, t2, ...n2);
  }, p.a.setPreferredWebSchema(/^https:/.test(window.location.href) ? "https" : "http");
}, function(e, t, n) {
  "use strict";
  n.d(t, "g", function() {
    return s;
  }), n.d(t, "f", function() {
    return a;
  }), n.d(t, "e", function() {
    return l;
  }), n.d(t, "h", function() {
    return c;
  }), n.d(t, "b", function() {
    return d;
  }), n.d(t, "a", function() {
    return h;
  }), n.d(t, "d", function() {
    return u;
  }), n.d(t, "c", function() {
    return p;
  });
  var i = n(37);
  function r(e2) {
  }
  class o extends Error {
    constructor(e2) {
      super(`Encounter errors while disposing of store. Errors: [${e2.join(", ")}]`), this.errors = e2;
    }
  }
  function s(e2) {
    return typeof e2.dispose == "function" && e2.dispose.length === 0;
  }
  function a(e2) {
    if (i.a.is(e2)) {
      let t2 = [];
      for (const n2 of e2)
        if (n2)
          try {
            n2.dispose();
          } catch (e3) {
            t2.push(e3);
          }
      if (t2.length === 1)
        throw t2[0];
      if (t2.length > 1)
        throw new o(t2);
      return Array.isArray(e2) ? [] : e2;
    }
    if (e2)
      return e2.dispose(), e2;
  }
  function l(...e2) {
    return e2.forEach(r), {dispose: () => a(e2)};
  }
  function c(e2) {
    const t2 = {dispose: () => {
      e2();
    }};
    return t2;
  }
  class d {
    constructor() {
      this._toDispose = new Set(), this._isDisposed = false;
    }
    dispose() {
      this._isDisposed || (this._isDisposed = true, this.clear());
    }
    clear() {
      try {
        a(this._toDispose.values());
      } finally {
        this._toDispose.clear();
      }
    }
    add(e2) {
      if (!e2)
        return e2;
      if (e2 === this)
        throw new Error("Cannot register a disposable on itself!");
      return this._isDisposed ? d.DISABLE_DISPOSED_WARNING || console.warn(new Error("Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!").stack) : this._toDispose.add(e2), e2;
    }
  }
  d.DISABLE_DISPOSED_WARNING = false;
  class h {
    constructor() {
      this._store = new d();
    }
    dispose() {
      this._store.dispose();
    }
    _register(e2) {
      if (e2 === this)
        throw new Error("Cannot register a disposable on itself!");
      return this._store.add(e2);
    }
  }
  h.None = Object.freeze({dispose() {
  }});
  class u {
    constructor() {
      this._isDisposed = false;
    }
    get value() {
      return this._isDisposed ? void 0 : this._value;
    }
    set value(e2) {
      this._isDisposed || e2 === this._value || (this._value && this._value.dispose(), this._value = e2);
    }
    clear() {
      this.value = void 0;
    }
    dispose() {
      this._isDisposed = true, this._value && this._value.dispose(), this._value = void 0;
    }
  }
  class p {
    constructor(e2) {
      this.object = e2;
    }
    dispose() {
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return r;
  });
  var i = n(9);
  class r {
    constructor(e2, t2, n2, i2) {
      e2 > n2 || e2 === n2 && t2 > i2 ? (this.startLineNumber = n2, this.startColumn = i2, this.endLineNumber = e2, this.endColumn = t2) : (this.startLineNumber = e2, this.startColumn = t2, this.endLineNumber = n2, this.endColumn = i2);
    }
    isEmpty() {
      return r.isEmpty(this);
    }
    static isEmpty(e2) {
      return e2.startLineNumber === e2.endLineNumber && e2.startColumn === e2.endColumn;
    }
    containsPosition(e2) {
      return r.containsPosition(this, e2);
    }
    static containsPosition(e2, t2) {
      return !(t2.lineNumber < e2.startLineNumber || t2.lineNumber > e2.endLineNumber) && (!(t2.lineNumber === e2.startLineNumber && t2.column < e2.startColumn) && !(t2.lineNumber === e2.endLineNumber && t2.column > e2.endColumn));
    }
    containsRange(e2) {
      return r.containsRange(this, e2);
    }
    static containsRange(e2, t2) {
      return !(t2.startLineNumber < e2.startLineNumber || t2.endLineNumber < e2.startLineNumber) && (!(t2.startLineNumber > e2.endLineNumber || t2.endLineNumber > e2.endLineNumber) && (!(t2.startLineNumber === e2.startLineNumber && t2.startColumn < e2.startColumn) && !(t2.endLineNumber === e2.endLineNumber && t2.endColumn > e2.endColumn)));
    }
    strictContainsRange(e2) {
      return r.strictContainsRange(this, e2);
    }
    static strictContainsRange(e2, t2) {
      return !(t2.startLineNumber < e2.startLineNumber || t2.endLineNumber < e2.startLineNumber) && (!(t2.startLineNumber > e2.endLineNumber || t2.endLineNumber > e2.endLineNumber) && (!(t2.startLineNumber === e2.startLineNumber && t2.startColumn <= e2.startColumn) && !(t2.endLineNumber === e2.endLineNumber && t2.endColumn >= e2.endColumn)));
    }
    plusRange(e2) {
      return r.plusRange(this, e2);
    }
    static plusRange(e2, t2) {
      let n2, i2, o, s;
      return t2.startLineNumber < e2.startLineNumber ? (n2 = t2.startLineNumber, i2 = t2.startColumn) : t2.startLineNumber === e2.startLineNumber ? (n2 = t2.startLineNumber, i2 = Math.min(t2.startColumn, e2.startColumn)) : (n2 = e2.startLineNumber, i2 = e2.startColumn), t2.endLineNumber > e2.endLineNumber ? (o = t2.endLineNumber, s = t2.endColumn) : t2.endLineNumber === e2.endLineNumber ? (o = t2.endLineNumber, s = Math.max(t2.endColumn, e2.endColumn)) : (o = e2.endLineNumber, s = e2.endColumn), new r(n2, i2, o, s);
    }
    intersectRanges(e2) {
      return r.intersectRanges(this, e2);
    }
    static intersectRanges(e2, t2) {
      let n2 = e2.startLineNumber, i2 = e2.startColumn, o = e2.endLineNumber, s = e2.endColumn, a = t2.startLineNumber, l = t2.startColumn, c = t2.endLineNumber, d = t2.endColumn;
      return n2 < a ? (n2 = a, i2 = l) : n2 === a && (i2 = Math.max(i2, l)), o > c ? (o = c, s = d) : o === c && (s = Math.min(s, d)), n2 > o || n2 === o && i2 > s ? null : new r(n2, i2, o, s);
    }
    equalsRange(e2) {
      return r.equalsRange(this, e2);
    }
    static equalsRange(e2, t2) {
      return !!e2 && !!t2 && e2.startLineNumber === t2.startLineNumber && e2.startColumn === t2.startColumn && e2.endLineNumber === t2.endLineNumber && e2.endColumn === t2.endColumn;
    }
    getEndPosition() {
      return r.getEndPosition(this);
    }
    static getEndPosition(e2) {
      return new i.a(e2.endLineNumber, e2.endColumn);
    }
    getStartPosition() {
      return r.getStartPosition(this);
    }
    static getStartPosition(e2) {
      return new i.a(e2.startLineNumber, e2.startColumn);
    }
    toString() {
      return "[" + this.startLineNumber + "," + this.startColumn + " -> " + this.endLineNumber + "," + this.endColumn + "]";
    }
    setEndPosition(e2, t2) {
      return new r(this.startLineNumber, this.startColumn, e2, t2);
    }
    setStartPosition(e2, t2) {
      return new r(e2, t2, this.endLineNumber, this.endColumn);
    }
    collapseToStart() {
      return r.collapseToStart(this);
    }
    static collapseToStart(e2) {
      return new r(e2.startLineNumber, e2.startColumn, e2.startLineNumber, e2.startColumn);
    }
    static fromPositions(e2, t2 = e2) {
      return new r(e2.lineNumber, e2.column, t2.lineNumber, t2.column);
    }
    static lift(e2) {
      return e2 ? new r(e2.startLineNumber, e2.startColumn, e2.endLineNumber, e2.endColumn) : null;
    }
    static isIRange(e2) {
      return e2 && typeof e2.startLineNumber == "number" && typeof e2.startColumn == "number" && typeof e2.endLineNumber == "number" && typeof e2.endColumn == "number";
    }
    static areIntersectingOrTouching(e2, t2) {
      return !(e2.endLineNumber < t2.startLineNumber || e2.endLineNumber === t2.startLineNumber && e2.endColumn < t2.startColumn) && !(t2.endLineNumber < e2.startLineNumber || t2.endLineNumber === e2.startLineNumber && t2.endColumn < e2.startColumn);
    }
    static areIntersecting(e2, t2) {
      return !(e2.endLineNumber < t2.startLineNumber || e2.endLineNumber === t2.startLineNumber && e2.endColumn <= t2.startColumn) && !(t2.endLineNumber < e2.startLineNumber || t2.endLineNumber === e2.startLineNumber && t2.endColumn <= e2.startColumn);
    }
    static compareRangesUsingStarts(e2, t2) {
      if (e2 && t2) {
        const n2 = 0 | e2.startLineNumber, i2 = 0 | t2.startLineNumber;
        if (n2 === i2) {
          const n3 = 0 | e2.startColumn, i3 = 0 | t2.startColumn;
          if (n3 === i3) {
            const n4 = 0 | e2.endLineNumber, i4 = 0 | t2.endLineNumber;
            if (n4 === i4) {
              return (0 | e2.endColumn) - (0 | t2.endColumn);
            }
            return n4 - i4;
          }
          return n3 - i3;
        }
        return n2 - i2;
      }
      return (e2 ? 1 : 0) - (t2 ? 1 : 0);
    }
    static compareRangesUsingEnds(e2, t2) {
      return e2.endLineNumber === t2.endLineNumber ? e2.endColumn === t2.endColumn ? e2.startLineNumber === t2.startLineNumber ? e2.startColumn - t2.startColumn : e2.startLineNumber - t2.startLineNumber : e2.endColumn - t2.endColumn : e2.endLineNumber - t2.endLineNumber;
    }
    static spansMultipleLines(e2) {
      return e2.endLineNumber > e2.startLineNumber;
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return _;
  }), n.d(t, "e", function() {
    return v;
  }), n.d(t, "c", function() {
    return y;
  }), n.d(t, "b", function() {
    return C;
  }), n.d(t, "f", function() {
    return x;
  }), n.d(t, "o", function() {
    return S;
  }), n.d(t, "j", function() {
    return k;
  }), n.d(t, "p", function() {
    return E;
  }), n.d(t, "q", function() {
    return T;
  }), n.d(t, "l", function() {
    return L;
  }), n.d(t, "k", function() {
    return N;
  }), n.d(t, "r", function() {
    return I;
  }), n.d(t, "n", function() {
    return D;
  }), n.d(t, "m", function() {
    return O;
  }), n.d(t, "d", function() {
    return i;
  }), n.d(t, "i", function() {
    return M;
  }), n.d(t, "g", function() {
    return P;
  }), n.d(t, "h", function() {
    return F;
  });
  var i, r = n(0), o = n(13), s = n(23), a = n(41), l = n(9), c = n(64), d = n(122), h = n(24), u = n(27), p = n(10), m = n(92), g = n(56), f = n(120), b = n(14);
  class _ {
    constructor(e2) {
      this.id = e2.id, this.precondition = e2.precondition, this._kbOpts = e2.kbOpts, this._menuOpts = e2.menuOpts, this._description = e2.description;
    }
    register() {
      if (Array.isArray(this._menuOpts) ? this._menuOpts.forEach(this._registerMenuItem, this) : this._menuOpts && this._registerMenuItem(this._menuOpts), this._kbOpts) {
        let e2 = this._kbOpts.kbExpr;
        this.precondition && (e2 = e2 ? p.a.and(e2, this.precondition) : this.precondition), m.a.registerCommandAndKeybindingRule({id: this.id, handler: (e3, t2) => this.runCommand(e3, t2), weight: this._kbOpts.weight, args: this._kbOpts.args, when: e2, primary: this._kbOpts.primary, secondary: this._kbOpts.secondary, win: this._kbOpts.win, linux: this._kbOpts.linux, mac: this._kbOpts.mac, description: this._description});
      } else
        u.a.registerCommand({id: this.id, handler: (e2, t2) => this.runCommand(e2, t2), description: this._description});
    }
    _registerMenuItem(e2) {
      h.d.appendMenuItem(e2.menuId, {group: e2.group, command: {id: this.id, title: e2.title, icon: e2.icon}, when: e2.when, order: e2.order});
    }
  }
  class v extends _ {
    constructor() {
      super(...arguments), this._implementations = [];
    }
    addImplementation(e2, t2) {
      return this._implementations.push([e2, t2]), this._implementations.sort((e3, t3) => t3[0] - e3[0]), {dispose: () => {
        for (let e3 = 0; e3 < this._implementations.length; e3++)
          if (this._implementations[e3][1] === t2)
            return void this._implementations.splice(e3, 1);
      }};
    }
    runCommand(e2, t2) {
      for (const n2 of this._implementations)
        if (n2[1](e2, t2))
          return;
    }
  }
  class w extends _ {
    constructor(e2, t2) {
      super(t2), this.command = e2;
    }
    runCommand(e2, t2) {
      return this.command.runCommand(e2, t2);
    }
  }
  class y extends _ {
    static bindToContribution(e2) {
      return class extends y {
        constructor(e3) {
          super(e3), this._callback = e3.handler;
        }
        runEditorCommand(t2, n2, i2) {
          e2(n2) && this._callback(e2(n2), i2);
        }
      };
    }
    runCommand(e2, t2) {
      const n2 = e2.get(a.a), i2 = n2.getFocusedCodeEditor() || n2.getActiveCodeEditor();
      if (i2)
        return i2.invokeWithinContext((e3) => {
          if (e3.get(p.b).contextMatchesRules(Object(b.n)(this.precondition)))
            return this.runEditorCommand(e3, i2, t2);
        });
    }
  }
  class C extends y {
    constructor(e2) {
      super(C.convertOptions(e2)), this.label = e2.label, this.alias = e2.alias;
    }
    static convertOptions(e2) {
      let t2;
      function n2(t3) {
        return t3.menuId || (t3.menuId = h.b.EditorContext), t3.title || (t3.title = e2.label), t3.when = p.a.and(e2.precondition, t3.when), t3;
      }
      return t2 = Array.isArray(e2.menuOpts) ? e2.menuOpts : e2.menuOpts ? [e2.menuOpts] : [], Array.isArray(e2.contextMenuOpts) ? t2.push(...e2.contextMenuOpts.map(n2)) : e2.contextMenuOpts && t2.push(n2(e2.contextMenuOpts)), e2.menuOpts = t2, e2;
    }
    runEditorCommand(e2, t2, n2) {
      return this.reportTelemetry(e2, t2), this.run(e2, t2, n2 || {});
    }
    reportTelemetry(e2, t2) {
      e2.get(f.a).publicLog2("editorActionInvoked", {name: this.label, id: this.id});
    }
  }
  class x extends C {
    constructor(e2) {
      super(e2), this._implementations = [];
    }
    runEditorCommand(e2, t2, n2) {
      this.reportTelemetry(e2, t2);
      for (const t3 of this._implementations)
        if (t3[1](e2, n2))
          return;
      return this.run(e2, t2, n2 || {});
    }
  }
  function S(e2, t2) {
    u.a.registerCommand(e2, (e3, n2) => t2(e3, n2 || {}));
  }
  function k(e2, t2) {
    S(e2, function(e3, n2) {
      const {resource: i2, position: r2} = n2;
      if (!(i2 instanceof s.a))
        throw Object(o.b)("resource");
      if (!l.a.isIPosition(r2))
        throw Object(o.b)("position");
      const a2 = e3.get(c.a).getModel(i2);
      if (a2) {
        const e4 = l.a.lift(r2);
        return t2(a2, e4, n2);
      }
      return e3.get(d.a).createModelReference(i2).then((e4) => new Promise((i3, o2) => {
        try {
          i3(t2(e4.object.textEditorModel, l.a.lift(r2), n2));
        } catch (e5) {
          o2(e5);
        }
      }).finally(() => {
        e4.dispose();
      }));
    });
  }
  function E(e2, t2) {
    u.a.registerCommand(e2, function(e3, ...n2) {
      const [i2, r2] = n2;
      Object(b.b)(s.a.isUri(i2)), Object(b.b)(l.a.isIPosition(r2));
      const o2 = e3.get(c.a).getModel(i2);
      if (o2) {
        const e4 = l.a.lift(r2);
        return t2(o2, e4, ...n2.slice(2));
      }
      return e3.get(d.a).createModelReference(i2).then((e4) => new Promise((i3, o3) => {
        try {
          i3(t2(e4.object.textEditorModel, l.a.lift(r2), n2.slice(2)));
        } catch (e5) {
          o3(e5);
        }
      }).finally(() => {
        e4.dispose();
      }));
    });
  }
  function T(e2, t2) {
    u.a.registerCommand(e2, function(e3, ...n2) {
      const [i2] = n2;
      Object(b.b)(s.a.isUri(i2));
      const r2 = e3.get(c.a).getModel(i2);
      return r2 ? t2(r2, ...n2.slice(1)) : e3.get(d.a).createModelReference(i2).then((e4) => new Promise((i3, r3) => {
        try {
          i3(t2(e4.object.textEditorModel, n2.slice(1)));
        } catch (e5) {
          r3(e5);
        }
      }).finally(() => {
        e4.dispose();
      }));
    });
  }
  function L(e2) {
    return A.INSTANCE.registerEditorCommand(e2), e2;
  }
  function N(e2) {
    const t2 = new e2();
    return A.INSTANCE.registerEditorAction(t2), t2;
  }
  function I(e2) {
    return A.INSTANCE.registerEditorAction(e2), e2;
  }
  function D(e2) {
    A.INSTANCE.registerEditorAction(e2);
  }
  function O(e2, t2) {
    A.INSTANCE.registerEditorContribution(e2, t2);
  }
  !function(e2) {
    e2.getEditorCommand = function(e3) {
      return A.INSTANCE.getEditorCommand(e3);
    }, e2.getEditorActions = function() {
      return A.INSTANCE.getEditorActions();
    }, e2.getEditorContributions = function() {
      return A.INSTANCE.getEditorContributions();
    }, e2.getSomeEditorContributions = function(e3) {
      return A.INSTANCE.getEditorContributions().filter((t2) => e3.indexOf(t2.id) >= 0);
    }, e2.getDiffEditorContributions = function() {
      return A.INSTANCE.getDiffEditorContributions();
    };
  }(i || (i = {}));
  class A {
    constructor() {
      this.editorContributions = [], this.diffEditorContributions = [], this.editorActions = [], this.editorCommands = Object.create(null);
    }
    registerEditorContribution(e2, t2) {
      this.editorContributions.push({id: e2, ctor: t2});
    }
    getEditorContributions() {
      return this.editorContributions.slice(0);
    }
    getDiffEditorContributions() {
      return this.diffEditorContributions.slice(0);
    }
    registerEditorAction(e2) {
      e2.register(), this.editorActions.push(e2);
    }
    getEditorActions() {
      return this.editorActions.slice(0);
    }
    registerEditorCommand(e2) {
      e2.register(), this.editorCommands[e2.id] = e2;
    }
    getEditorCommand(e2) {
      return this.editorCommands[e2] || null;
    }
  }
  function R(e2) {
    return e2.register(), e2;
  }
  A.INSTANCE = new A(), g.a.add("editor.contributions", A.INSTANCE);
  const M = R(new v({id: "undo", precondition: void 0, kbOpts: {weight: 0, primary: 2104}, menuOpts: [{menuId: h.b.MenubarEditMenu, group: "1_do", title: r.a({key: "miUndo", comment: ["&& denotes a mnemonic"]}, "&&Undo"), order: 1}, {menuId: h.b.CommandPalette, group: "", title: r.a("undo", "Undo"), order: 1}]}));
  R(new w(M, {id: "default:undo", precondition: void 0}));
  const P = R(new v({id: "redo", precondition: void 0, kbOpts: {weight: 0, primary: 2103, secondary: [3128], mac: {primary: 3128}}, menuOpts: [{menuId: h.b.MenubarEditMenu, group: "1_do", title: r.a({key: "miRedo", comment: ["&& denotes a mnemonic"]}, "&&Redo"), order: 2}, {menuId: h.b.CommandPalette, group: "", title: r.a("redo", "Redo"), order: 1}]}));
  R(new w(P, {id: "default:redo", precondition: void 0}));
  const F = R(new v({id: "editor.action.selectAll", precondition: void 0, kbOpts: {weight: 0, kbExpr: null, primary: 2079}, menuOpts: [{menuId: h.b.MenubarSelectionMenu, group: "1_basic", title: r.a({key: "miSelectAll", comment: ["&& denotes a mnemonic"]}, "&&Select All"), order: 1}, {menuId: h.b.CommandPalette, group: "", title: r.a("selectAll", "Select All"), order: 1}]}));
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return c;
  }), n.d(t, "gc", function() {
    return h;
  }), n.d(t, "ab", function() {
    return u;
  }), n.d(t, "Y", function() {
    return p;
  }), n.d(t, "bb", function() {
    return m;
  }), n.d(t, "Z", function() {
    return g;
  }), n.d(t, "h", function() {
    return f;
  }), n.d(t, "b", function() {
    return b;
  }), n.d(t, "rc", function() {
    return _;
  }), n.d(t, "qc", function() {
    return v;
  }), n.d(t, "uc", function() {
    return w;
  }), n.d(t, "fb", function() {
    return y;
  }), n.d(t, "hb", function() {
    return C;
  }), n.d(t, "gb", function() {
    return x;
  }), n.d(t, "db", function() {
    return S;
  }), n.d(t, "cb", function() {
    return k;
  }), n.d(t, "eb", function() {
    return E;
  }), n.d(t, "lb", function() {
    return T;
  }), n.d(t, "nb", function() {
    return L;
  }), n.d(t, "mb", function() {
    return N;
  }), n.d(t, "ob", function() {
    return I;
  }), n.d(t, "qb", function() {
    return D;
  }), n.d(t, "pb", function() {
    return O;
  }), n.d(t, "ib", function() {
    return A;
  }), n.d(t, "kb", function() {
    return R;
  }), n.d(t, "jb", function() {
    return M;
  }), n.d(t, "f", function() {
    return W;
  }), n.d(t, "e", function() {
    return z;
  }), n.d(t, "g", function() {
    return B;
  }), n.d(t, "c", function() {
    return j;
  }), n.d(t, "d", function() {
    return V;
  }), n.d(t, "ic", function() {
    return U;
  }), n.d(t, "kc", function() {
    return H;
  }), n.d(t, "lc", function() {
    return q;
  }), n.d(t, "jc", function() {
    return $;
  }), n.d(t, "cc", function() {
    return K;
  }), n.d(t, "u", function() {
    return G;
  }), n.d(t, "t", function() {
    return Y;
  }), n.d(t, "T", function() {
    return Z;
  }), n.d(t, "S", function() {
    return X;
  }), n.d(t, "L", function() {
    return Q;
  }), n.d(t, "K", function() {
    return J;
  }), n.d(t, "D", function() {
    return ee;
  }), n.d(t, "C", function() {
    return te;
  }), n.d(t, "s", function() {
    return ne;
  }), n.d(t, "B", function() {
    return ie;
  }), n.d(t, "U", function() {
    return re;
  }), n.d(t, "W", function() {
    return oe;
  }), n.d(t, "V", function() {
    return se;
  }), n.d(t, "X", function() {
    return ae;
  }), n.d(t, "dc", function() {
    return le;
  }), n.d(t, "ec", function() {
    return ce;
  }), n.d(t, "fc", function() {
    return de;
  }), n.d(t, "Yb", function() {
    return he;
  }), n.d(t, "Xb", function() {
    return ue;
  }), n.d(t, "O", function() {
    return pe;
  }), n.d(t, "P", function() {
    return me;
  }), n.d(t, "J", function() {
    return ge;
  }), n.d(t, "Q", function() {
    return fe;
  }), n.d(t, "R", function() {
    return be;
  }), n.d(t, "v", function() {
    return _e;
  }), n.d(t, "x", function() {
    return ve;
  }), n.d(t, "z", function() {
    return we;
  }), n.d(t, "w", function() {
    return ye;
  }), n.d(t, "y", function() {
    return Ce;
  }), n.d(t, "A", function() {
    return xe;
  }), n.d(t, "H", function() {
    return Se;
  }), n.d(t, "E", function() {
    return ke;
  }), n.d(t, "G", function() {
    return Ee;
  }), n.d(t, "F", function() {
    return Te;
  }), n.d(t, "I", function() {
    return Le;
  }), n.d(t, "r", function() {
    return Ne;
  }), n.d(t, "N", function() {
    return Ie;
  }), n.d(t, "M", function() {
    return De;
  }), n.d(t, "j", function() {
    return Oe;
  }), n.d(t, "k", function() {
    return Ae;
  }), n.d(t, "n", function() {
    return Re;
  }), n.d(t, "p", function() {
    return Me;
  }), n.d(t, "o", function() {
    return Pe;
  }), n.d(t, "q", function() {
    return Fe;
  }), n.d(t, "l", function() {
    return We;
  }), n.d(t, "m", function() {
    return ze;
  }), n.d(t, "xb", function() {
    return Be;
  }), n.d(t, "yb", function() {
    return je;
  }), n.d(t, "rb", function() {
    return Ve;
  }), n.d(t, "sb", function() {
    return Ue;
  }), n.d(t, "Db", function() {
    return He;
  }), n.d(t, "Eb", function() {
    return qe;
  }), n.d(t, "Cb", function() {
    return $e;
  }), n.d(t, "Ab", function() {
    return Ke;
  }), n.d(t, "Bb", function() {
    return Ge;
  }), n.d(t, "tb", function() {
    return Ye;
  }), n.d(t, "zb", function() {
    return Ze;
  }), n.d(t, "ub", function() {
    return Xe;
  }), n.d(t, "wb", function() {
    return Qe;
  }), n.d(t, "vb", function() {
    return Je;
  }), n.d(t, "tc", function() {
    return et;
  }), n.d(t, "Gb", function() {
    return tt;
  }), n.d(t, "Hb", function() {
    return nt;
  }), n.d(t, "Fb", function() {
    return it;
  }), n.d(t, "Kb", function() {
    return rt;
  }), n.d(t, "Ib", function() {
    return ot;
  }), n.d(t, "Jb", function() {
    return st;
  }), n.d(t, "Lb", function() {
    return at;
  }), n.d(t, "oc", function() {
    return lt;
  }), n.d(t, "pc", function() {
    return ct;
  }), n.d(t, "mc", function() {
    return dt;
  }), n.d(t, "nc", function() {
    return ht;
  }), n.d(t, "Vb", function() {
    return ut;
  }), n.d(t, "Wb", function() {
    return pt;
  }), n.d(t, "Ob", function() {
    return mt;
  }), n.d(t, "Pb", function() {
    return gt;
  }), n.d(t, "Nb", function() {
    return ft;
  }), n.d(t, "Tb", function() {
    return bt;
  }), n.d(t, "Mb", function() {
    return _t;
  }), n.d(t, "Rb", function() {
    return vt;
  }), n.d(t, "Sb", function() {
    return wt;
  }), n.d(t, "Qb", function() {
    return yt;
  }), n.d(t, "Zb", function() {
    return Ct;
  }), n.d(t, "bc", function() {
    return xt;
  }), n.d(t, "ac", function() {
    return St;
  }), n.d(t, "i", function() {
    return kt;
  }), n.d(t, "sc", function() {
    return Tt;
  }), n.d(t, "Ub", function() {
    return Lt;
  }), n.d(t, "hc", function() {
    return It;
  });
  var i = n(56), r = n(15), o = n(6), s = n(0), a = n(188), l = n(20);
  const c = {ColorContribution: "base.contributions.colors"};
  const d = new class {
    constructor() {
      this._onDidChangeSchema = new o.a(), this.onDidChangeSchema = this._onDidChangeSchema.event, this.colorSchema = {type: "object", properties: {}}, this.colorReferenceSchema = {type: "string", enum: [], enumDescriptions: []}, this.colorsById = {};
    }
    registerColor(e2, t2, n2, i2 = false, r2) {
      let o2 = {id: e2, description: n2, defaults: t2, needsTransparency: i2, deprecationMessage: r2};
      this.colorsById[e2] = o2;
      let s2 = {type: "string", description: n2, format: "color-hex", defaultSnippets: [{body: "${1:#ff0000}"}]};
      return r2 && (s2.deprecationMessage = r2), this.colorSchema.properties[e2] = s2, this.colorReferenceSchema.enum.push(e2), this.colorReferenceSchema.enumDescriptions.push(n2), this._onDidChangeSchema.fire(), e2;
    }
    resolveDefaultColor(e2, t2) {
      const n2 = this.colorsById[e2];
      if (n2 && n2.defaults) {
        return It(n2.defaults[t2.type], t2);
      }
    }
    getColorSchema() {
      return this.colorSchema;
    }
    toString() {
      return Object.keys(this.colorsById).sort((e2, t2) => {
        let n2 = e2.indexOf(".") === -1 ? 0 : 1, i2 = t2.indexOf(".") === -1 ? 0 : 1;
        return n2 !== i2 ? n2 - i2 : e2.localeCompare(t2);
      }).map((e2) => `- \`${e2}\`: ${this.colorsById[e2].description}`).join("\n");
    }
  }();
  function h(e2, t2, n2, i2, r2) {
    return d.registerColor(e2, t2, n2, i2, r2);
  }
  i.a.add(c.ColorContribution, d);
  const u = h("foreground", {dark: "#CCCCCC", light: "#616161", hc: "#FFFFFF"}, s.a("foreground", "Overall foreground color. This color is only used if not overridden by a component.")), p = h("errorForeground", {dark: "#F48771", light: "#A1260D", hc: "#F48771"}, s.a("errorForeground", "Overall foreground color for error messages. This color is only used if not overridden by a component.")), m = h("icon.foreground", {dark: "#C5C5C5", light: "#424242", hc: "#FFFFFF"}, s.a("iconForeground", "The default color for icons in the workbench.")), g = h("focusBorder", {dark: "#007FD4", light: "#0090F1", hc: "#F38518"}, s.a("focusBorder", "Overall border color for focused elements. This color is only used if not overridden by a component.")), f = h("contrastBorder", {light: null, dark: null, hc: "#6FC3DF"}, s.a("contrastBorder", "An extra border around elements to separate them from others for greater contrast.")), b = h("contrastActiveBorder", {light: null, dark: null, hc: g}, s.a("activeContrastBorder", "An extra border around active elements to separate them from others for greater contrast.")), _ = h("textLink.foreground", {light: "#006AB1", dark: "#3794FF", hc: "#3794FF"}, s.a("textLinkForeground", "Foreground color for links in text.")), v = h("textCodeBlock.background", {light: "#dcdcdc66", dark: "#0a0a0a66", hc: r.a.black}, s.a("textCodeBlockBackground", "Background color for code blocks in text.")), w = h("widget.shadow", {dark: "#000000", light: "#A8A8A8", hc: null}, s.a("widgetShadow", "Shadow color of widgets such as find/replace inside the editor.")), y = h("input.background", {dark: "#3C3C3C", light: r.a.white, hc: r.a.black}, s.a("inputBoxBackground", "Input box background.")), C = h("input.foreground", {dark: u, light: u, hc: u}, s.a("inputBoxForeground", "Input box foreground.")), x = h("input.border", {dark: null, light: null, hc: f}, s.a("inputBoxBorder", "Input box border.")), S = h("inputOption.activeBorder", {dark: "#007ACC00", light: "#007ACC00", hc: f}, s.a("inputBoxActiveOptionBorder", "Border color of activated options in input fields.")), k = h("inputOption.activeBackground", {dark: Tt(g, 0.4), light: Tt(g, 0.2), hc: r.a.transparent}, s.a("inputOption.activeBackground", "Background color of activated options in input fields.")), E = h("inputOption.activeForeground", {dark: r.a.white, light: r.a.black, hc: null}, s.a("inputOption.activeForeground", "Foreground color of activated options in input fields.")), T = h("inputValidation.infoBackground", {dark: "#063B49", light: "#D6ECF2", hc: r.a.black}, s.a("inputValidationInfoBackground", "Input validation background color for information severity.")), L = h("inputValidation.infoForeground", {dark: null, light: null, hc: null}, s.a("inputValidationInfoForeground", "Input validation foreground color for information severity.")), N = h("inputValidation.infoBorder", {dark: "#007acc", light: "#007acc", hc: f}, s.a("inputValidationInfoBorder", "Input validation border color for information severity.")), I = h("inputValidation.warningBackground", {dark: "#352A05", light: "#F6F5D2", hc: r.a.black}, s.a("inputValidationWarningBackground", "Input validation background color for warning severity.")), D = h("inputValidation.warningForeground", {dark: null, light: null, hc: null}, s.a("inputValidationWarningForeground", "Input validation foreground color for warning severity.")), O = h("inputValidation.warningBorder", {dark: "#B89500", light: "#B89500", hc: f}, s.a("inputValidationWarningBorder", "Input validation border color for warning severity.")), A = h("inputValidation.errorBackground", {dark: "#5A1D1D", light: "#F2DEDE", hc: r.a.black}, s.a("inputValidationErrorBackground", "Input validation background color for error severity.")), R = h("inputValidation.errorForeground", {dark: null, light: null, hc: null}, s.a("inputValidationErrorForeground", "Input validation foreground color for error severity.")), M = h("inputValidation.errorBorder", {dark: "#BE1100", light: "#BE1100", hc: f}, s.a("inputValidationErrorBorder", "Input validation border color for error severity.")), P = h("dropdown.background", {dark: "#3C3C3C", light: r.a.white, hc: r.a.black}, s.a("dropdownBackground", "Dropdown background.")), F = h("dropdown.foreground", {dark: "#F0F0F0", light: null, hc: r.a.white}, s.a("dropdownForeground", "Dropdown foreground.")), W = h("button.foreground", {dark: r.a.white, light: r.a.white, hc: r.a.white}, s.a("buttonForeground", "Button foreground color.")), z = h("button.background", {dark: "#0E639C", light: "#007ACC", hc: null}, s.a("buttonBackground", "Button background color.")), B = h("button.hoverBackground", {dark: Et(z, 0.2), light: kt(z, 0.2), hc: null}, s.a("buttonHoverBackground", "Button background color when hovering.")), j = h("badge.background", {dark: "#4D4D4D", light: "#C4C4C4", hc: r.a.black}, s.a("badgeBackground", "Badge background color. Badges are small information labels, e.g. for search results count.")), V = h("badge.foreground", {dark: r.a.white, light: "#333", hc: r.a.white}, s.a("badgeForeground", "Badge foreground color. Badges are small information labels, e.g. for search results count.")), U = h("scrollbar.shadow", {dark: "#000000", light: "#DDDDDD", hc: null}, s.a("scrollbarShadow", "Scrollbar shadow to indicate that the view is scrolled.")), H = h("scrollbarSlider.background", {dark: r.a.fromHex("#797979").transparent(0.4), light: r.a.fromHex("#646464").transparent(0.4), hc: Tt(f, 0.6)}, s.a("scrollbarSliderBackground", "Scrollbar slider background color.")), q = h("scrollbarSlider.hoverBackground", {dark: r.a.fromHex("#646464").transparent(0.7), light: r.a.fromHex("#646464").transparent(0.7), hc: Tt(f, 0.8)}, s.a("scrollbarSliderHoverBackground", "Scrollbar slider background color when hovering.")), $ = h("scrollbarSlider.activeBackground", {dark: r.a.fromHex("#BFBFBF").transparent(0.4), light: r.a.fromHex("#000000").transparent(0.6), hc: f}, s.a("scrollbarSliderActiveBackground", "Scrollbar slider background color when clicked on.")), K = h("progressBar.background", {dark: r.a.fromHex("#0E70C0"), light: r.a.fromHex("#0E70C0"), hc: f}, s.a("progressBarBackground", "Background color of the progress bar that can show for long running operations.")), G = h("editorError.foreground", {dark: "#F48771", light: "#E51400", hc: null}, s.a("editorError.foreground", "Foreground color of error squigglies in the editor.")), Y = h("editorError.border", {dark: null, light: null, hc: r.a.fromHex("#E47777").transparent(0.8)}, s.a("errorBorder", "Border color of error boxes in the editor.")), Z = h("editorWarning.foreground", {dark: "#CCA700", light: "#E9A700", hc: null}, s.a("editorWarning.foreground", "Foreground color of warning squigglies in the editor.")), X = h("editorWarning.border", {dark: null, light: null, hc: r.a.fromHex("#FFCC00").transparent(0.8)}, s.a("warningBorder", "Border color of warning boxes in the editor.")), Q = h("editorInfo.foreground", {dark: "#75BEFF", light: "#75BEFF", hc: null}, s.a("editorInfo.foreground", "Foreground color of info squigglies in the editor.")), J = h("editorInfo.border", {dark: null, light: null, hc: r.a.fromHex("#75BEFF").transparent(0.8)}, s.a("infoBorder", "Border color of info boxes in the editor.")), ee = h("editorHint.foreground", {dark: r.a.fromHex("#eeeeee").transparent(0.7), light: "#6c6c6c", hc: null}, s.a("editorHint.foreground", "Foreground color of hint squigglies in the editor.")), te = h("editorHint.border", {dark: null, light: null, hc: r.a.fromHex("#eeeeee").transparent(0.8)}, s.a("hintBorder", "Border color of hint boxes in the editor.")), ne = h("editor.background", {light: "#fffffe", dark: "#1E1E1E", hc: r.a.black}, s.a("editorBackground", "Editor background color.")), ie = h("editor.foreground", {light: "#333333", dark: "#BBBBBB", hc: r.a.white}, s.a("editorForeground", "Editor default foreground color.")), re = h("editorWidget.background", {dark: "#252526", light: "#F3F3F3", hc: "#0C141F"}, s.a("editorWidgetBackground", "Background color of editor widgets, such as find/replace.")), oe = h("editorWidget.foreground", {dark: u, light: u, hc: u}, s.a("editorWidgetForeground", "Foreground color of editor widgets, such as find/replace.")), se = h("editorWidget.border", {dark: "#454545", light: "#C8C8C8", hc: f}, s.a("editorWidgetBorder", "Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")), ae = h("editorWidget.resizeBorder", {light: null, dark: null, hc: null}, s.a("editorWidgetResizeBorder", "Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")), le = h("quickInput.background", {dark: re, light: re, hc: re}, s.a("pickerBackground", "Quick picker background color. The quick picker widget is the container for pickers like the command palette.")), ce = h("quickInput.foreground", {dark: oe, light: oe, hc: oe}, s.a("pickerForeground", "Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")), de = h("quickInputTitle.background", {dark: new r.a(new r.c(255, 255, 255, 0.105)), light: new r.a(new r.c(0, 0, 0, 0.06)), hc: "#000000"}, s.a("pickerTitleBackground", "Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")), he = h("pickerGroup.foreground", {dark: "#3794FF", light: "#0066BF", hc: r.a.white}, s.a("pickerGroupForeground", "Quick picker color for grouping labels.")), ue = h("pickerGroup.border", {dark: "#3F3F46", light: "#CCCEDB", hc: r.a.white}, s.a("pickerGroupBorder", "Quick picker color for grouping borders.")), pe = h("editor.selectionBackground", {light: "#ADD6FF", dark: "#264F78", hc: "#f3f518"}, s.a("editorSelectionBackground", "Color of the editor selection.")), me = h("editor.selectionForeground", {light: null, dark: null, hc: "#000000"}, s.a("editorSelectionForeground", "Color of the selected text for high contrast.")), ge = h("editor.inactiveSelectionBackground", {light: Tt(pe, 0.5), dark: Tt(pe, 0.5), hc: Tt(pe, 0.5)}, s.a("editorInactiveSelection", "Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."), true), fe = h("editor.selectionHighlightBackground", {light: Nt(pe, ne, 0.3, 0.6), dark: Nt(pe, ne, 0.3, 0.6), hc: null}, s.a("editorSelectionHighlight", "Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."), true), be = h("editor.selectionHighlightBorder", {light: null, dark: null, hc: b}, s.a("editorSelectionHighlightBorder", "Border color for regions with the same content as the selection.")), _e = h("editor.findMatchBackground", {light: "#A8AC94", dark: "#515C6A", hc: null}, s.a("editorFindMatch", "Color of the current search match.")), ve = h("editor.findMatchHighlightBackground", {light: "#EA5C0055", dark: "#EA5C0055", hc: null}, s.a("findMatchHighlight", "Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."), true), we = h("editor.findRangeHighlightBackground", {dark: "#3a3d4166", light: "#b4b4b44d", hc: null}, s.a("findRangeHighlight", "Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."), true), ye = h("editor.findMatchBorder", {light: null, dark: null, hc: b}, s.a("editorFindMatchBorder", "Border color of the current search match.")), Ce = h("editor.findMatchHighlightBorder", {light: null, dark: null, hc: b}, s.a("findMatchHighlightBorder", "Border color of the other search matches.")), xe = h("editor.findRangeHighlightBorder", {dark: null, light: null, hc: Tt(b, 0.4)}, s.a("findRangeHighlightBorder", "Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."), true), Se = h("editor.hoverHighlightBackground", {light: "#ADD6FF26", dark: "#264f7840", hc: "#ADD6FF26"}, s.a("hoverHighlight", "Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."), true), ke = h("editorHoverWidget.background", {light: re, dark: re, hc: re}, s.a("hoverBackground", "Background color of the editor hover.")), Ee = h("editorHoverWidget.foreground", {light: oe, dark: oe, hc: oe}, s.a("hoverForeground", "Foreground color of the editor hover.")), Te = h("editorHoverWidget.border", {light: se, dark: se, hc: se}, s.a("hoverBorder", "Border color of the editor hover.")), Le = h("editorHoverWidget.statusBarBackground", {dark: Et(ke, 0.2), light: kt(ke, 0.05), hc: re}, s.a("statusBarBackground", "Background color of the editor hover status bar.")), Ne = h("editorLink.activeForeground", {dark: "#4E94CE", light: r.a.blue, hc: r.a.cyan}, s.a("activeLinkForeground", "Color of active links.")), Ie = h("editorLightBulb.foreground", {dark: "#FFCC00", light: "#DDB100", hc: "#FFCC00"}, s.a("editorLightBulbForeground", "The color used for the lightbulb actions icon.")), De = h("editorLightBulbAutoFix.foreground", {dark: "#75BEFF", light: "#007ACC", hc: "#75BEFF"}, s.a("editorLightBulbAutoFixForeground", "The color used for the lightbulb auto fix actions icon.")), Oe = new r.a(new r.c(155, 185, 85, 0.2)), Ae = new r.a(new r.c(255, 0, 0, 0.2)), Re = h("diffEditor.insertedTextBackground", {dark: Oe, light: Oe, hc: null}, s.a("diffEditorInserted", "Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."), true), Me = h("diffEditor.removedTextBackground", {dark: Ae, light: Ae, hc: null}, s.a("diffEditorRemoved", "Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."), true), Pe = h("diffEditor.insertedTextBorder", {dark: null, light: null, hc: "#33ff2eff"}, s.a("diffEditorInsertedOutline", "Outline color for the text that got inserted.")), Fe = h("diffEditor.removedTextBorder", {dark: null, light: null, hc: "#FF008F"}, s.a("diffEditorRemovedOutline", "Outline color for text that got removed.")), We = h("diffEditor.border", {dark: null, light: null, hc: f}, s.a("diffEditorBorder", "Border color between the two text editors.")), ze = h("diffEditor.diagonalFill", {dark: "#cccccc33", light: "#22222233", hc: null}, s.a("diffDiagonalFill", "Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")), Be = h("list.focusBackground", {dark: "#062F4A", light: "#D6EBFF", hc: null}, s.a("listFocusBackground", "List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")), je = h("list.focusForeground", {dark: null, light: null, hc: null}, s.a("listFocusForeground", "List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")), Ve = h("list.activeSelectionBackground", {dark: "#094771", light: "#0074E8", hc: null}, s.a("listActiveSelectionBackground", "List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")), Ue = h("list.activeSelectionForeground", {dark: r.a.white, light: r.a.white, hc: null}, s.a("listActiveSelectionForeground", "List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")), He = h("list.inactiveSelectionBackground", {dark: "#37373D", light: "#E4E6F1", hc: null}, s.a("listInactiveSelectionBackground", "List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")), qe = h("list.inactiveSelectionForeground", {dark: null, light: null, hc: null}, s.a("listInactiveSelectionForeground", "List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")), $e = h("list.inactiveFocusBackground", {dark: null, light: null, hc: null}, s.a("listInactiveFocusBackground", "List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")), Ke = h("list.hoverBackground", {dark: "#2A2D2E", light: "#F0F0F0", hc: null}, s.a("listHoverBackground", "List/Tree background when hovering over items using the mouse.")), Ge = h("list.hoverForeground", {dark: null, light: null, hc: null}, s.a("listHoverForeground", "List/Tree foreground when hovering over items using the mouse.")), Ye = h("list.dropBackground", {dark: Be, light: Be, hc: null}, s.a("listDropBackground", "List/Tree drag and drop background when moving items around using the mouse.")), Ze = h("list.highlightForeground", {dark: "#0097fb", light: "#0066BF", hc: g}, s.a("highlight", "List/Tree foreground color of the match highlights when searching inside the list/tree.")), Xe = h("listFilterWidget.background", {light: "#efc1ad", dark: "#653723", hc: r.a.black}, s.a("listFilterWidgetBackground", "Background color of the type filter widget in lists and trees.")), Qe = h("listFilterWidget.outline", {dark: r.a.transparent, light: r.a.transparent, hc: "#f38518"}, s.a("listFilterWidgetOutline", "Outline color of the type filter widget in lists and trees.")), Je = h("listFilterWidget.noMatchesOutline", {dark: "#BE1100", light: "#BE1100", hc: f}, s.a("listFilterWidgetNoMatchesOutline", "Outline color of the type filter widget in lists and trees, when there are no matches.")), et = h("tree.indentGuidesStroke", {dark: "#585858", light: "#a9a9a9", hc: "#a9a9a9"}, s.a("treeIndentGuidesStroke", "Tree stroke color for the indentation guides.")), tt = h("menu.border", {dark: null, light: null, hc: f}, s.a("menuBorder", "Border color of menus.")), nt = h("menu.foreground", {dark: F, light: u, hc: F}, s.a("menuForeground", "Foreground color of menu items.")), it = h("menu.background", {dark: P, light: P, hc: P}, s.a("menuBackground", "Background color of menu items.")), rt = h("menu.selectionForeground", {dark: Ue, light: Ue, hc: Ue}, s.a("menuSelectionForeground", "Foreground color of the selected menu item in menus.")), ot = h("menu.selectionBackground", {dark: Ve, light: Ve, hc: Ve}, s.a("menuSelectionBackground", "Background color of the selected menu item in menus.")), st = h("menu.selectionBorder", {dark: null, light: null, hc: b}, s.a("menuSelectionBorder", "Border color of the selected menu item in menus.")), at = h("menu.separatorBackground", {dark: "#BBBBBB", light: "#888888", hc: f}, s.a("menuSeparatorBackground", "Color of a separator menu item in menus.")), lt = h("editor.snippetTabstopHighlightBackground", {dark: new r.a(new r.c(124, 124, 124, 0.3)), light: new r.a(new r.c(10, 50, 100, 0.2)), hc: new r.a(new r.c(124, 124, 124, 0.3))}, s.a("snippetTabstopHighlightBackground", "Highlight background color of a snippet tabstop.")), ct = h("editor.snippetTabstopHighlightBorder", {dark: null, light: null, hc: null}, s.a("snippetTabstopHighlightBorder", "Highlight border color of a snippet tabstop.")), dt = h("editor.snippetFinalTabstopHighlightBackground", {dark: null, light: null, hc: null}, s.a("snippetFinalTabstopHighlightBackground", "Highlight background color of the final tabstop of a snippet.")), ht = h("editor.snippetFinalTabstopHighlightBorder", {dark: "#525252", light: new r.a(new r.c(10, 50, 100, 0.5)), hc: "#525252"}, s.a("snippetFinalTabstopHighlightBorder", "Highlight border color of the final tabstop of a snippet.")), ut = h("editorOverviewRuler.findMatchForeground", {dark: "#d186167e", light: "#d186167e", hc: "#AB5A00"}, s.a("overviewRulerFindMatchForeground", "Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."), true), pt = h("editorOverviewRuler.selectionHighlightForeground", {dark: "#A0A0A0CC", light: "#A0A0A0CC", hc: "#A0A0A0CC"}, s.a("overviewRulerSelectionHighlightForeground", "Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."), true), mt = h("minimap.findMatchHighlight", {light: "#d18616", dark: "#d18616", hc: "#AB5A00"}, s.a("minimapFindMatchHighlight", "Minimap marker color for find matches."), true), gt = h("minimap.selectionHighlight", {light: "#ADD6FF", dark: "#264F78", hc: "#ffffff"}, s.a("minimapSelectionHighlight", "Minimap marker color for the editor selection."), true), ft = h("minimap.errorHighlight", {dark: new r.a(new r.c(255, 18, 18, 0.7)), light: new r.a(new r.c(255, 18, 18, 0.7)), hc: new r.a(new r.c(255, 50, 50, 1))}, s.a("minimapError", "Minimap marker color for errors.")), bt = h("minimap.warningHighlight", {dark: Z, light: Z, hc: X}, s.a("overviewRuleWarning", "Minimap marker color for warnings.")), _t = h("minimap.background", {dark: null, light: null, hc: null}, s.a("minimapBackground", "Minimap background color.")), vt = h("minimapSlider.background", {light: Tt(H, 0.5), dark: Tt(H, 0.5), hc: Tt(H, 0.5)}, s.a("minimapSliderBackground", "Minimap slider background color.")), wt = h("minimapSlider.hoverBackground", {light: Tt(q, 0.5), dark: Tt(q, 0.5), hc: Tt(q, 0.5)}, s.a("minimapSliderHoverBackground", "Minimap slider background color when hovering.")), yt = h("minimapSlider.activeBackground", {light: Tt($, 0.5), dark: Tt($, 0.5), hc: Tt($, 0.5)}, s.a("minimapSliderActiveBackground", "Minimap slider background color when clicked on.")), Ct = h("problemsErrorIcon.foreground", {dark: G, light: G, hc: G}, s.a("problemsErrorIconForeground", "The color used for the problems error icon.")), xt = h("problemsWarningIcon.foreground", {dark: Z, light: Z, hc: Z}, s.a("problemsWarningIconForeground", "The color used for the problems warning icon.")), St = h("problemsInfoIcon.foreground", {dark: Q, light: Q, hc: Q}, s.a("problemsInfoIconForeground", "The color used for the problems info icon."));
  function kt(e2, t2) {
    return (n2) => {
      let i2 = It(e2, n2);
      if (i2)
        return i2.darken(t2);
    };
  }
  function Et(e2, t2) {
    return (n2) => {
      let i2 = It(e2, n2);
      if (i2)
        return i2.lighten(t2);
    };
  }
  function Tt(e2, t2) {
    return (n2) => {
      let i2 = It(e2, n2);
      if (i2)
        return i2.transparent(t2);
    };
  }
  function Lt(...e2) {
    return (t2) => {
      for (let n2 of e2) {
        let e3 = It(n2, t2);
        if (e3)
          return e3;
      }
    };
  }
  function Nt(e2, t2, n2, i2) {
    return (o2) => {
      let s2 = It(e2, o2);
      if (s2) {
        let e3 = It(t2, o2);
        return e3 ? s2.isDarkerThan(e3) ? r.a.getLighterColor(s2, e3, n2).transparent(i2) : r.a.getDarkerColor(s2, e3, n2).transparent(i2) : s2.transparent(n2 * i2);
      }
    };
  }
  function It(e2, t2) {
    if (e2 !== null)
      return typeof e2 == "string" ? e2[0] === "#" ? r.a.fromHex(e2) : t2.getColor(e2) : e2 instanceof r.a ? e2 : typeof e2 == "function" ? e2(t2) : void 0;
  }
  let Dt = i.a.as(a.a.JSONContribution);
  Dt.registerSchema("vscode://schemas/workbench-colors", d.getColorSchema());
  const Ot = new l.d(() => Dt.notifySchemaChanged("vscode://schemas/workbench-colors"), 200);
  d.onDidChangeSchema(() => {
    Ot.isScheduled() || Ot.schedule();
  });
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return i;
  }), n.d(t, "a", function() {
    return a;
  }), n.d(t, "d", function() {
    return l;
  }), n.d(t, "c", function() {
    return c;
  }), n.d(t, "e", function() {
    return d;
  });
  var i, r = n(13), o = n(2), s = n(53);
  !function(e2) {
    function t2(e3) {
      return (t3, n3 = null, i3) => {
        let r3, o2 = false;
        return r3 = e3((e4) => {
          if (!o2)
            return r3 ? r3.dispose() : o2 = true, t3.call(n3, e4);
        }, null, i3), o2 && r3.dispose(), r3;
      };
    }
    function n2(e3, t3) {
      return l2((n3, i3 = null, r3) => e3((e4) => n3.call(i3, t3(e4)), null, r3));
    }
    function i2(e3, t3) {
      return l2((n3, i3 = null, r3) => e3((e4) => {
        t3(e4), n3.call(i3, e4);
      }, null, r3));
    }
    function r2(e3, t3) {
      return l2((n3, i3 = null, r3) => e3((e4) => t3(e4) && n3.call(i3, e4), null, r3));
    }
    function s2(e3, t3, i3) {
      let r3 = i3;
      return n2(e3, (e4) => (r3 = t3(r3, e4), r3));
    }
    function l2(e3) {
      let t3;
      const n3 = new a({onFirstListenerAdd() {
        t3 = e3(n3.fire, n3);
      }, onLastListenerRemove() {
        t3.dispose();
      }});
      return n3.event;
    }
    function c2(e3, t3, n3 = 100, i3 = false, r3) {
      let o2, s3 = void 0, l3 = void 0, c3 = 0;
      const d3 = new a({leakWarningThreshold: r3, onFirstListenerAdd() {
        o2 = e3((e4) => {
          c3++, s3 = t3(s3, e4), i3 && !l3 && (d3.fire(s3), s3 = void 0), clearTimeout(l3), l3 = setTimeout(() => {
            const e5 = s3;
            s3 = void 0, l3 = void 0, (!i3 || c3 > 1) && d3.fire(e5), c3 = 0;
          }, n3);
        });
      }, onLastListenerRemove() {
        o2.dispose();
      }});
      return d3.event;
    }
    function d2(e3) {
      let t3, n3 = true;
      return r2(e3, (e4) => {
        const i3 = n3 || e4 !== t3;
        return n3 = false, t3 = e4, i3;
      });
    }
    e2.None = () => o.a.None, e2.once = t2, e2.map = n2, e2.forEach = i2, e2.filter = r2, e2.signal = function(e3) {
      return e3;
    }, e2.any = function(...e3) {
      return (t3, n3 = null, i3) => Object(o.e)(...e3.map((e4) => e4((e5) => t3.call(n3, e5), null, i3)));
    }, e2.reduce = s2, e2.snapshot = l2, e2.debounce = c2, e2.stopwatch = function(e3) {
      const i3 = new Date().getTime();
      return n2(t2(e3), (e4) => new Date().getTime() - i3);
    }, e2.latch = d2, e2.buffer = function(e3, t3 = false, n3 = []) {
      let i3 = n3.slice(), r3 = e3((e4) => {
        i3 ? i3.push(e4) : s3.fire(e4);
      });
      const o2 = () => {
        i3 && i3.forEach((e4) => s3.fire(e4)), i3 = null;
      }, s3 = new a({onFirstListenerAdd() {
        r3 || (r3 = e3((e4) => s3.fire(e4)));
      }, onFirstListenerDidAdd() {
        i3 && (t3 ? setTimeout(o2) : o2());
      }, onLastListenerRemove() {
        r3 && r3.dispose(), r3 = null;
      }});
      return s3.event;
    };
    class h {
      constructor(e3) {
        this.event = e3;
      }
      map(e3) {
        return new h(n2(this.event, e3));
      }
      forEach(e3) {
        return new h(i2(this.event, e3));
      }
      filter(e3) {
        return new h(r2(this.event, e3));
      }
      reduce(e3, t3) {
        return new h(s2(this.event, e3, t3));
      }
      latch() {
        return new h(d2(this.event));
      }
      debounce(e3, t3 = 100, n3 = false, i3) {
        return new h(c2(this.event, e3, t3, n3, i3));
      }
      on(e3, t3, n3) {
        return this.event(e3, t3, n3);
      }
      once(e3, n3, i3) {
        return t2(this.event)(e3, n3, i3);
      }
    }
    e2.chain = function(e3) {
      return new h(e3);
    }, e2.fromNodeEventEmitter = function(e3, t3, n3 = (e4) => e4) {
      const i3 = (...e4) => r3.fire(n3(...e4)), r3 = new a({onFirstListenerAdd: () => e3.on(t3, i3), onLastListenerRemove: () => e3.removeListener(t3, i3)});
      return r3.event;
    }, e2.fromDOMEventEmitter = function(e3, t3, n3 = (e4) => e4) {
      const i3 = (...e4) => r3.fire(n3(...e4)), r3 = new a({onFirstListenerAdd: () => e3.addEventListener(t3, i3), onLastListenerRemove: () => e3.removeEventListener(t3, i3)});
      return r3.event;
    }, e2.fromPromise = function(e3) {
      const t3 = new a();
      let n3 = false;
      return e3.then(void 0, () => null).then(() => {
        n3 ? t3.fire(void 0) : setTimeout(() => t3.fire(void 0), 0);
      }), n3 = true, t3.event;
    }, e2.toPromise = function(e3) {
      return new Promise((n3) => t2(e3)(n3));
    };
  }(i || (i = {}));
  class a {
    constructor(e2) {
      this._disposed = false, this._options = e2, this._leakageMon = void 0;
    }
    get event() {
      return this._event || (this._event = (e2, t2, n2) => {
        this._listeners || (this._listeners = new s.a());
        const i2 = this._listeners.isEmpty();
        i2 && this._options && this._options.onFirstListenerAdd && this._options.onFirstListenerAdd(this);
        const r2 = this._listeners.push(t2 ? [e2, t2] : e2);
        let l2, c2;
        return i2 && this._options && this._options.onFirstListenerDidAdd && this._options.onFirstListenerDidAdd(this), this._options && this._options.onListenerDidAdd && this._options.onListenerDidAdd(this, e2, t2), this._leakageMon && (l2 = this._leakageMon.check(this._listeners.size)), c2 = {dispose: () => {
          if (l2 && l2(), c2.dispose = a._noop, !this._disposed && (r2(), this._options && this._options.onLastListenerRemove)) {
            this._listeners && !this._listeners.isEmpty() || this._options.onLastListenerRemove(this);
          }
        }}, n2 instanceof o.b ? n2.add(c2) : Array.isArray(n2) && n2.push(c2), c2;
      }), this._event;
    }
    fire(e2) {
      if (this._listeners) {
        this._deliveryQueue || (this._deliveryQueue = new s.a());
        for (let t2 of this._listeners)
          this._deliveryQueue.push([t2, e2]);
        for (; this._deliveryQueue.size > 0; ) {
          const [e3, t2] = this._deliveryQueue.shift();
          try {
            typeof e3 == "function" ? e3.call(void 0, t2) : e3[0].call(e3[1], t2);
          } catch (e4) {
            Object(r.e)(e4);
          }
        }
      }
    }
    dispose() {
      this._listeners && this._listeners.clear(), this._deliveryQueue && this._deliveryQueue.clear(), this._leakageMon && this._leakageMon.dispose(), this._disposed = true;
    }
  }
  a._noop = function() {
  };
  class l extends a {
    constructor(e2) {
      super(e2), this._isPaused = 0, this._eventQueue = new s.a(), this._mergeFn = e2 && e2.merge;
    }
    pause() {
      this._isPaused++;
    }
    resume() {
      if (this._isPaused !== 0 && --this._isPaused == 0)
        if (this._mergeFn) {
          const e2 = this._eventQueue.toArray();
          this._eventQueue.clear(), super.fire(this._mergeFn(e2));
        } else
          for (; !this._isPaused && this._eventQueue.size !== 0; )
            super.fire(this._eventQueue.shift());
    }
    fire(e2) {
      this._listeners && (this._isPaused !== 0 ? this._eventQueue.push(e2) : super.fire(e2));
    }
  }
  class c {
    constructor() {
      this.buffers = [];
    }
    wrapEvent(e2) {
      return (t2, n2, i2) => e2((e3) => {
        const i3 = this.buffers[this.buffers.length - 1];
        i3 ? i3.push(() => t2.call(n2, e3)) : t2.call(n2, e3);
      }, void 0, i2);
    }
    bufferEvents(e2) {
      const t2 = [];
      this.buffers.push(t2);
      const n2 = e2();
      return this.buffers.pop(), t2.forEach((e3) => e3()), n2;
    }
  }
  class d {
    constructor() {
      this.listening = false, this.inputEvent = i.None, this.inputEventListener = o.a.None, this.emitter = new a({onFirstListenerDidAdd: () => {
        this.listening = true, this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);
      }, onLastListenerRemove: () => {
        this.listening = false, this.inputEventListener.dispose();
      }}), this.event = this.emitter.event;
    }
    set input(e2) {
      this.inputEvent = e2, this.listening && (this.inputEventListener.dispose(), this.inputEventListener = e2(this.emitter.fire, this.emitter));
    }
    dispose() {
      this.inputEventListener.dispose(), this.emitter.dispose();
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return i;
  });
  var i, r = n(10);
  !function(e2) {
    e2.editorSimpleInput = new r.c("editorSimpleInput", false), e2.editorTextFocus = new r.c("editorTextFocus", false), e2.focus = new r.c("editorFocus", false), e2.textInputFocus = new r.c("textInputFocus", false), e2.readOnly = new r.c("editorReadonly", false), e2.columnSelection = new r.c("editorColumnSelection", false), e2.writable = e2.readOnly.toNegated(), e2.hasNonEmptySelection = new r.c("editorHasSelection", false), e2.hasOnlyEmptySelection = e2.hasNonEmptySelection.toNegated(), e2.hasMultipleSelections = new r.c("editorHasMultipleSelections", false), e2.hasSingleSelection = e2.hasMultipleSelections.toNegated(), e2.tabMovesFocus = new r.c("editorTabMovesFocus", false), e2.tabDoesNotMoveFocus = e2.tabMovesFocus.toNegated(), e2.isInWalkThroughSnippet = new r.c("isInEmbeddedEditor", false), e2.canUndo = new r.c("canUndo", false), e2.canRedo = new r.c("canRedo", false), e2.hoverVisible = new r.c("editorHoverVisible", false), e2.inCompositeEditor = new r.c("inCompositeEditor", void 0), e2.notInCompositeEditor = e2.inCompositeEditor.toNegated(), e2.languageId = new r.c("editorLangId", ""), e2.hasCompletionItemProvider = new r.c("editorHasCompletionItemProvider", false), e2.hasCodeActionsProvider = new r.c("editorHasCodeActionsProvider", false), e2.hasCodeLensProvider = new r.c("editorHasCodeLensProvider", false), e2.hasDefinitionProvider = new r.c("editorHasDefinitionProvider", false), e2.hasDeclarationProvider = new r.c("editorHasDeclarationProvider", false), e2.hasImplementationProvider = new r.c("editorHasImplementationProvider", false), e2.hasTypeDefinitionProvider = new r.c("editorHasTypeDefinitionProvider", false), e2.hasHoverProvider = new r.c("editorHasHoverProvider", false), e2.hasDocumentHighlightProvider = new r.c("editorHasDocumentHighlightProvider", false), e2.hasDocumentSymbolProvider = new r.c("editorHasDocumentSymbolProvider", false), e2.hasReferenceProvider = new r.c("editorHasReferenceProvider", false), e2.hasRenameProvider = new r.c("editorHasRenameProvider", false), e2.hasSignatureHelpProvider = new r.c("editorHasSignatureHelpProvider", false), e2.hasDocumentFormattingProvider = new r.c("editorHasDocumentFormattingProvider", false), e2.hasDocumentSelectionFormattingProvider = new r.c("editorHasDocumentSelectionFormattingProvider", false), e2.hasMultipleDocumentFormattingProvider = new r.c("editorHasMultipleDocumentFormattingProvider", false), e2.hasMultipleDocumentSelectionFormattingProvider = new r.c("editorHasMultipleDocumentSelectionFormattingProvider", false);
  }(i || (i = {}));
}, function(e, t, n) {
  "use strict";
  function i(e2) {
    return !e2 || typeof e2 != "string" || e2.trim().length === 0;
  }
  function r(e2, t2, n2 = "0") {
    const i2 = "" + e2, r2 = [i2];
    for (let e3 = i2.length; e3 < t2; e3++)
      r2.push(n2);
    return r2.reverse().join("");
  }
  n.d(t, "D", function() {
    return i;
  }), n.d(t, "M", function() {
    return r;
  }), n.d(t, "x", function() {
    return s;
  }), n.d(t, "u", function() {
    return a;
  }), n.d(t, "v", function() {
    return l;
  }), n.d(t, "W", function() {
    return c;
  }), n.d(t, "K", function() {
    return d;
  }), n.d(t, "Q", function() {
    return h;
  }), n.d(t, "p", function() {
    return u;
  }), n.d(t, "V", function() {
    return p;
  }), n.d(t, "S", function() {
    return m;
  }), n.d(t, "s", function() {
    return g;
  }), n.d(t, "q", function() {
    return f;
  }), n.d(t, "P", function() {
    return b;
  }), n.d(t, "O", function() {
    return _;
  }), n.d(t, "w", function() {
    return v;
  }), n.d(t, "z", function() {
    return w;
  }), n.d(t, "J", function() {
    return y;
  }), n.d(t, "f", function() {
    return C;
  }), n.d(t, "h", function() {
    return x;
  }), n.d(t, "g", function() {
    return S;
  }), n.d(t, "i", function() {
    return k;
  }), n.d(t, "H", function() {
    return E;
  }), n.d(t, "I", function() {
    return T;
  }), n.d(t, "t", function() {
    return N;
  }), n.d(t, "T", function() {
    return D;
  }), n.d(t, "d", function() {
    return O;
  }), n.d(t, "e", function() {
    return A;
  }), n.d(t, "F", function() {
    return R;
  }), n.d(t, "G", function() {
    return M;
  }), n.d(t, "j", function() {
    return P;
  }), n.d(t, "A", function() {
    return F;
  }), n.d(t, "L", function() {
    return z;
  }), n.d(t, "N", function() {
    return B;
  }), n.d(t, "r", function() {
    return j;
  }), n.d(t, "m", function() {
    return U;
  }), n.d(t, "k", function() {
    return q;
  }), n.d(t, "B", function() {
    return K;
  }), n.d(t, "a", function() {
    return G;
  }), n.d(t, "n", function() {
    return Y;
  }), n.d(t, "l", function() {
    return Z;
  }), n.d(t, "E", function() {
    return X;
  }), n.d(t, "C", function() {
    return Q;
  }), n.d(t, "b", function() {
    return J;
  }), n.d(t, "U", function() {
    return ee;
  }), n.d(t, "o", function() {
    return te;
  }), n.d(t, "R", function() {
    return ne;
  }), n.d(t, "y", function() {
    return ie;
  }), n.d(t, "c", function() {
    return re;
  });
  const o = /{(\d+)}/g;
  function s(e2, ...t2) {
    return t2.length === 0 ? e2 : e2.replace(o, function(e3, n2) {
      const i2 = parseInt(n2, 10);
      return isNaN(i2) || i2 < 0 || i2 >= t2.length ? e3 : t2[i2];
    });
  }
  function a(e2) {
    return e2.replace(/[<>&]/g, function(e3) {
      switch (e3) {
        case "<":
          return "&lt;";
        case ">":
          return "&gt;";
        case "&":
          return "&amp;";
        default:
          return e3;
      }
    });
  }
  function l(e2) {
    return e2.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g, "\\$&");
  }
  function c(e2, t2 = " ") {
    return h(d(e2, t2), t2);
  }
  function d(e2, t2) {
    if (!e2 || !t2)
      return e2;
    const n2 = t2.length;
    if (n2 === 0 || e2.length === 0)
      return e2;
    let i2 = 0;
    for (; e2.indexOf(t2, i2) === i2; )
      i2 += n2;
    return e2.substring(i2);
  }
  function h(e2, t2) {
    if (!e2 || !t2)
      return e2;
    const n2 = t2.length, i2 = e2.length;
    if (n2 === 0 || i2 === 0)
      return e2;
    let r2 = i2, o2 = -1;
    for (; o2 = e2.lastIndexOf(t2, r2 - 1), o2 !== -1 && o2 + n2 === r2; ) {
      if (o2 === 0)
        return "";
      r2 = o2;
    }
    return e2.substring(0, r2);
  }
  function u(e2) {
    return e2.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&").replace(/[\*]/g, ".*");
  }
  function p(e2) {
    return e2.replace(/\*/g, "");
  }
  function m(e2, t2) {
    if (e2.length < t2.length)
      return false;
    if (e2 === t2)
      return true;
    for (let n2 = 0; n2 < t2.length; n2++)
      if (e2[n2] !== t2[n2])
        return false;
    return true;
  }
  function g(e2, t2) {
    const n2 = e2.length - t2.length;
    return n2 > 0 ? e2.indexOf(t2, n2) === n2 : n2 === 0 && e2 === t2;
  }
  function f(e2, t2, n2 = {}) {
    if (!e2)
      throw new Error("Cannot create regex from empty string");
    t2 || (e2 = l(e2)), n2.wholeWord && (/\B/.test(e2.charAt(0)) || (e2 = "\\b" + e2), /\B/.test(e2.charAt(e2.length - 1)) || (e2 += "\\b"));
    let i2 = "";
    return n2.global && (i2 += "g"), n2.matchCase || (i2 += "i"), n2.multiline && (i2 += "m"), n2.unicode && (i2 += "u"), new RegExp(e2, i2);
  }
  function b(e2) {
    if (e2.source === "^" || e2.source === "^$" || e2.source === "$" || e2.source === "^\\s*$")
      return false;
    return !(!e2.exec("") || e2.lastIndex !== 0);
  }
  function _(e2) {
    return (e2.global ? "g" : "") + (e2.ignoreCase ? "i" : "") + (e2.multiline ? "m" : "") + (e2.unicode ? "u" : "");
  }
  function v(e2) {
    for (let t2 = 0, n2 = e2.length; t2 < n2; t2++) {
      const n3 = e2.charCodeAt(t2);
      if (n3 !== 32 && n3 !== 9)
        return t2;
    }
    return -1;
  }
  function w(e2, t2 = 0, n2 = e2.length) {
    for (let i2 = t2; i2 < n2; i2++) {
      const n3 = e2.charCodeAt(i2);
      if (n3 !== 32 && n3 !== 9)
        return e2.substring(t2, i2);
    }
    return e2.substring(t2, n2);
  }
  function y(e2, t2 = e2.length - 1) {
    for (let n2 = t2; n2 >= 0; n2--) {
      const t3 = e2.charCodeAt(n2);
      if (t3 !== 32 && t3 !== 9)
        return n2;
    }
    return -1;
  }
  function C(e2, t2) {
    return e2 < t2 ? -1 : e2 > t2 ? 1 : 0;
  }
  function x(e2, t2, n2 = 0, i2 = e2.length, r2 = 0, o2 = t2.length) {
    for (; n2 < i2 && r2 < o2; n2++, r2++) {
      let i3 = e2.charCodeAt(n2), o3 = t2.charCodeAt(r2);
      if (i3 < o3)
        return -1;
      if (i3 > o3)
        return 1;
    }
    const s2 = i2 - n2, a2 = o2 - r2;
    return s2 < a2 ? -1 : s2 > a2 ? 1 : 0;
  }
  function S(e2, t2) {
    return k(e2, t2, 0, e2.length, 0, t2.length);
  }
  function k(e2, t2, n2 = 0, i2 = e2.length, r2 = 0, o2 = t2.length) {
    for (; n2 < i2 && r2 < o2; n2++, r2++) {
      let s3 = e2.charCodeAt(n2), a3 = t2.charCodeAt(r2);
      if (s3 === a3)
        continue;
      const l2 = s3 - a3;
      if ((l2 !== 32 || !T(a3)) && (l2 !== -32 || !T(s3)))
        return E(s3) && E(a3) ? l2 : x(e2.toLowerCase(), t2.toLowerCase(), n2, i2, r2, o2);
    }
    const s2 = i2 - n2, a2 = o2 - r2;
    return s2 < a2 ? -1 : s2 > a2 ? 1 : 0;
  }
  function E(e2) {
    return e2 >= 97 && e2 <= 122;
  }
  function T(e2) {
    return e2 >= 65 && e2 <= 90;
  }
  function L(e2) {
    return E(e2) || T(e2);
  }
  function N(e2, t2) {
    return e2.length === t2.length && I(e2, t2);
  }
  function I(e2, t2, n2 = e2.length) {
    for (let i2 = 0; i2 < n2; i2++) {
      const n3 = e2.charCodeAt(i2), r2 = t2.charCodeAt(i2);
      if (n3 !== r2) {
        if (L(n3) && L(r2)) {
          const e3 = Math.abs(n3 - r2);
          if (e3 !== 0 && e3 !== 32)
            return false;
        } else if (String.fromCharCode(n3).toLowerCase() !== String.fromCharCode(r2).toLowerCase())
          return false;
      }
    }
    return true;
  }
  function D(e2, t2) {
    const n2 = t2.length;
    return !(t2.length > e2.length) && I(e2, t2, n2);
  }
  function O(e2, t2) {
    let n2, i2 = Math.min(e2.length, t2.length);
    for (n2 = 0; n2 < i2; n2++)
      if (e2.charCodeAt(n2) !== t2.charCodeAt(n2))
        return n2;
    return i2;
  }
  function A(e2, t2) {
    let n2, i2 = Math.min(e2.length, t2.length);
    const r2 = e2.length - 1, o2 = t2.length - 1;
    for (n2 = 0; n2 < i2; n2++)
      if (e2.charCodeAt(r2 - n2) !== t2.charCodeAt(o2 - n2))
        return n2;
    return i2;
  }
  function R(e2) {
    return 55296 <= e2 && e2 <= 56319;
  }
  function M(e2) {
    return 56320 <= e2 && e2 <= 57343;
  }
  function P(e2, t2) {
    return t2 - 56320 + (e2 - 55296 << 10) + 65536;
  }
  function F(e2, t2, n2) {
    const i2 = e2.charCodeAt(n2);
    if (R(i2) && n2 + 1 < t2) {
      const t3 = e2.charCodeAt(n2 + 1);
      if (M(t3))
        return P(i2, t3);
    }
    return i2;
  }
  function W(e2, t2) {
    const n2 = e2.charCodeAt(t2 - 1);
    if (M(n2) && t2 > 1) {
      const i2 = e2.charCodeAt(t2 - 2);
      if (R(i2))
        return P(i2, n2);
    }
    return n2;
  }
  function z(e2, t2) {
    const n2 = oe.getInstance(), i2 = t2, r2 = e2.length, o2 = F(e2, r2, t2);
    t2 += o2 >= 65536 ? 2 : 1;
    let s2 = n2.getGraphemeBreakType(o2);
    for (; t2 < r2; ) {
      const i3 = F(e2, r2, t2), o3 = n2.getGraphemeBreakType(i3);
      if (re(s2, o3))
        break;
      t2 += i3 >= 65536 ? 2 : 1, s2 = o3;
    }
    return t2 - i2;
  }
  function B(e2, t2) {
    const n2 = oe.getInstance(), i2 = t2, r2 = W(e2, t2);
    t2 -= r2 >= 65536 ? 2 : 1;
    let o2 = n2.getGraphemeBreakType(r2);
    for (; t2 > 0; ) {
      const i3 = W(e2, t2), r3 = n2.getGraphemeBreakType(i3);
      if (re(r3, o2))
        break;
      t2 -= i3 >= 65536 ? 2 : 1, o2 = r3;
    }
    return i2 - t2;
  }
  function j(e2) {
    const t2 = e2.byteLength, n2 = [];
    let i2 = 0;
    for (; i2 < t2; ) {
      const r2 = e2[i2];
      let o2;
      if (o2 = r2 >= 240 && i2 + 3 < t2 ? (7 & e2[i2++]) << 18 >>> 0 | (63 & e2[i2++]) << 12 >>> 0 | (63 & e2[i2++]) << 6 >>> 0 | (63 & e2[i2++]) << 0 >>> 0 : r2 >= 224 && i2 + 2 < t2 ? (15 & e2[i2++]) << 12 >>> 0 | (63 & e2[i2++]) << 6 >>> 0 | (63 & e2[i2++]) << 0 >>> 0 : r2 >= 192 && i2 + 1 < t2 ? (31 & e2[i2++]) << 6 >>> 0 | (63 & e2[i2++]) << 0 >>> 0 : e2[i2++], o2 >= 0 && o2 <= 55295 || o2 >= 57344 && o2 <= 65535)
        n2.push(String.fromCharCode(o2));
      else if (o2 >= 65536 && o2 <= 1114111) {
        const e3 = o2 - 65536, t3 = 55296 + ((1047552 & e3) >>> 10), i3 = 56320 + ((1023 & e3) >>> 0);
        n2.push(String.fromCharCode(t3)), n2.push(String.fromCharCode(i3));
      } else
        n2.push(String.fromCharCode(65533));
    }
    return n2.join("");
  }
  const V = /(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u08BD\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE33\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDCFF]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD50-\uDFFF]|\uD83B[\uDC00-\uDEBB])/;
  function U(e2) {
    return V.test(e2);
  }
  const H = /(?:[\u231A\u231B\u23F0\u23F3\u2600-\u27BF\u2B50\u2B55]|\uD83C[\uDDE6-\uDDFF\uDF00-\uDFFF]|\uD83D[\uDC00-\uDE4F\uDE80-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD00-\uDDFF\uDE70-\uDE73\uDE78-\uDE82\uDE90-\uDE95])/;
  function q(e2) {
    return H.test(e2);
  }
  const $ = /^[\t\n\r\x20-\x7E]*$/;
  function K(e2) {
    return $.test(e2);
  }
  const G = /[\u2028\u2029]/;
  function Y(e2) {
    return G.test(e2);
  }
  function Z(e2) {
    for (let t2 = 0, n2 = e2.length; t2 < n2; t2++)
      if (X(e2.charCodeAt(t2)))
        return true;
    return false;
  }
  function X(e2) {
    return (e2 = +e2) >= 11904 && e2 <= 55215 || e2 >= 63744 && e2 <= 64255 || e2 >= 65281 && e2 <= 65374;
  }
  function Q(e2) {
    return e2 >= 127462 && e2 <= 127487 || e2 >= 9728 && e2 <= 10175 || e2 >= 127744 && e2 <= 128591 || e2 >= 128640 && e2 <= 128764 || e2 >= 128992 && e2 <= 129003 || e2 >= 129280 && e2 <= 129535 || e2 >= 129648 && e2 <= 129651 || e2 >= 129656 && e2 <= 129666 || e2 >= 129680 && e2 <= 129685;
  }
  const J = String.fromCharCode(65279);
  function ee(e2) {
    return !!(e2 && e2.length > 0 && e2.charCodeAt(0) === 65279);
  }
  function te(e2, t2 = false) {
    return !!e2 && (t2 && (e2 = e2.replace(/\\./g, "")), e2.toLowerCase() !== e2);
  }
  function ne(e2) {
    return (e2 %= 52) < 26 ? String.fromCharCode(97 + e2) : String.fromCharCode(65 + e2 - 26);
  }
  function ie(e2) {
    return oe.getInstance().getGraphemeBreakType(e2);
  }
  function re(e2, t2) {
    return e2 === 0 ? t2 !== 5 && t2 !== 7 : (e2 !== 2 || t2 !== 3) && (e2 === 4 || e2 === 2 || e2 === 3 || (t2 === 4 || t2 === 2 || t2 === 3 || (e2 !== 8 || t2 !== 8 && t2 !== 9 && t2 !== 11 && t2 !== 12) && ((e2 !== 11 && e2 !== 9 || t2 !== 9 && t2 !== 10) && ((e2 !== 12 && e2 !== 10 || t2 !== 10) && (t2 !== 5 && t2 !== 13 && (t2 !== 7 && (e2 !== 1 && ((e2 !== 13 || t2 !== 14) && (e2 !== 6 || t2 !== 6)))))))));
  }
  class oe {
    constructor() {
      this._data = JSON.parse("[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]");
    }
    static getInstance() {
      return oe._INSTANCE || (oe._INSTANCE = new oe()), oe._INSTANCE;
    }
    getGraphemeBreakType(e2) {
      if (e2 < 32)
        return e2 === 10 ? 3 : e2 === 13 ? 2 : 4;
      if (e2 < 127)
        return 0;
      const t2 = this._data, n2 = t2.length / 3;
      let i2 = 1;
      for (; i2 <= n2; )
        if (e2 < t2[3 * i2])
          i2 *= 2;
        else {
          if (!(e2 > t2[3 * i2 + 1]))
            return t2[3 * i2 + 2];
          i2 = 2 * i2 + 1;
        }
      return 0;
    }
  }
  oe._INSTANCE = null;
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return i;
  });
  class i {
    constructor(e2, t2) {
      this.lineNumber = e2, this.column = t2;
    }
    with(e2 = this.lineNumber, t2 = this.column) {
      return e2 === this.lineNumber && t2 === this.column ? this : new i(e2, t2);
    }
    delta(e2 = 0, t2 = 0) {
      return this.with(this.lineNumber + e2, this.column + t2);
    }
    equals(e2) {
      return i.equals(this, e2);
    }
    static equals(e2, t2) {
      return !e2 && !t2 || !!e2 && !!t2 && e2.lineNumber === t2.lineNumber && e2.column === t2.column;
    }
    isBefore(e2) {
      return i.isBefore(this, e2);
    }
    static isBefore(e2, t2) {
      return e2.lineNumber < t2.lineNumber || !(t2.lineNumber < e2.lineNumber) && e2.column < t2.column;
    }
    isBeforeOrEqual(e2) {
      return i.isBeforeOrEqual(this, e2);
    }
    static isBeforeOrEqual(e2, t2) {
      return e2.lineNumber < t2.lineNumber || !(t2.lineNumber < e2.lineNumber) && e2.column <= t2.column;
    }
    static compare(e2, t2) {
      let n2 = 0 | e2.lineNumber, i2 = 0 | t2.lineNumber;
      if (n2 === i2) {
        return (0 | e2.column) - (0 | t2.column);
      }
      return n2 - i2;
    }
    clone() {
      return new i(this.lineNumber, this.column);
    }
    toString() {
      return "(" + this.lineNumber + "," + this.column + ")";
    }
    static lift(e2) {
      return new i(e2.lineNumber, e2.column);
    }
    static isIPosition(e2) {
      return e2 && typeof e2.lineNumber == "number" && typeof e2.column == "number";
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return l;
  }), n.d(t, "c", function() {
    return C;
  }), n.d(t, "b", function() {
    return x;
  }), n.d(t, "d", function() {
    return S;
  });
  var i = n(8), r = n(18), o = n(11);
  const s = new Map();
  s.set("false", false), s.set("true", true), s.set("isMac", o.f), s.set("isLinux", o.d), s.set("isWindows", o.i), s.set("isWeb", o.h), s.set("isMacNative", o.f && !o.h);
  const a = Object.prototype.hasOwnProperty;
  class l {
    static has(e2) {
      return u.create(e2);
    }
    static equals(e2, t2) {
      return p.create(e2, t2);
    }
    static regex(e2, t2) {
      return _.create(e2, t2);
    }
    static not(e2) {
      return b.create(e2);
    }
    static and(...e2) {
      return w.create(e2);
    }
    static or(...e2) {
      return y.create(e2);
    }
    static deserialize(e2, t2 = false) {
      if (e2)
        return this._deserializeOrExpression(e2, t2);
    }
    static _deserializeOrExpression(e2, t2) {
      let n2 = e2.split("||");
      return y.create(n2.map((e3) => this._deserializeAndExpression(e3, t2)));
    }
    static _deserializeAndExpression(e2, t2) {
      let n2 = e2.split("&&");
      return w.create(n2.map((e3) => this._deserializeOne(e3, t2)));
    }
    static _deserializeOne(e2, t2) {
      if ((e2 = e2.trim()).indexOf("!=") >= 0) {
        let n2 = e2.split("!=");
        return f.create(n2[0].trim(), this._deserializeValue(n2[1], t2));
      }
      if (e2.indexOf("==") >= 0) {
        let n2 = e2.split("==");
        return p.create(n2[0].trim(), this._deserializeValue(n2[1], t2));
      }
      if (e2.indexOf("=~") >= 0) {
        let n2 = e2.split("=~");
        return _.create(n2[0].trim(), this._deserializeRegexValue(n2[1], t2));
      }
      if (e2.indexOf(" in ") >= 0) {
        let t3 = e2.split(" in ");
        return m.create(t3[0].trim(), t3[1].trim());
      }
      return /^\!\s*/.test(e2) ? b.create(e2.substr(1).trim()) : u.create(e2);
    }
    static _deserializeValue(e2, t2) {
      if ((e2 = e2.trim()) === "true")
        return true;
      if (e2 === "false")
        return false;
      let n2 = /^'([^']*)'$/.exec(e2);
      return n2 ? n2[1].trim() : e2;
    }
    static _deserializeRegexValue(e2, t2) {
      if (Object(i.D)(e2)) {
        if (t2)
          throw new Error("missing regexp-value for =~-expression");
        return console.warn("missing regexp-value for =~-expression"), null;
      }
      let n2 = e2.indexOf("/"), r2 = e2.lastIndexOf("/");
      if (n2 === r2 || n2 < 0) {
        if (t2)
          throw new Error(`bad regexp-value '${e2}', missing /-enclosure`);
        return console.warn(`bad regexp-value '${e2}', missing /-enclosure`), null;
      }
      let o2 = e2.slice(n2 + 1, r2), s2 = e2[r2 + 1] === "i" ? "i" : "";
      try {
        return new RegExp(o2, s2);
      } catch (n3) {
        if (t2)
          throw new Error(`bad regexp-value '${e2}', parse error: ${n3}`);
        return console.warn(`bad regexp-value '${e2}', parse error: ${n3}`), null;
      }
    }
  }
  function c(e2, t2) {
    return e2.cmp(t2);
  }
  class d {
    constructor() {
      this.type = 0;
    }
    cmp(e2) {
      return this.type - e2.type;
    }
    equals(e2) {
      return e2.type === this.type;
    }
    evaluate(e2) {
      return false;
    }
    serialize() {
      return "false";
    }
    keys() {
      return [];
    }
    negate() {
      return h.INSTANCE;
    }
  }
  d.INSTANCE = new d();
  class h {
    constructor() {
      this.type = 1;
    }
    cmp(e2) {
      return this.type - e2.type;
    }
    equals(e2) {
      return e2.type === this.type;
    }
    evaluate(e2) {
      return true;
    }
    serialize() {
      return "true";
    }
    keys() {
      return [];
    }
    negate() {
      return d.INSTANCE;
    }
  }
  h.INSTANCE = new h();
  class u {
    constructor(e2) {
      this.key = e2, this.type = 2;
    }
    static create(e2) {
      const t2 = s.get(e2);
      return typeof t2 == "boolean" ? t2 ? h.INSTANCE : d.INSTANCE : new u(e2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this.key < e2.key ? -1 : this.key > e2.key ? 1 : 0;
    }
    equals(e2) {
      return e2.type === this.type && this.key === e2.key;
    }
    evaluate(e2) {
      return !!e2.getValue(this.key);
    }
    serialize() {
      return this.key;
    }
    keys() {
      return [this.key];
    }
    negate() {
      return b.create(this.key);
    }
  }
  class p {
    constructor(e2, t2) {
      this.key = e2, this.value = t2, this.type = 4;
    }
    static create(e2, t2) {
      if (typeof t2 == "boolean")
        return t2 ? u.create(e2) : b.create(e2);
      const n2 = s.get(e2);
      if (typeof n2 == "boolean") {
        return t2 === (n2 ? "true" : "false") ? h.INSTANCE : d.INSTANCE;
      }
      return new p(e2, t2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this.key < e2.key ? -1 : this.key > e2.key ? 1 : this.value < e2.value ? -1 : this.value > e2.value ? 1 : 0;
    }
    equals(e2) {
      return e2.type === this.type && (this.key === e2.key && this.value === e2.value);
    }
    evaluate(e2) {
      return e2.getValue(this.key) == this.value;
    }
    serialize() {
      return this.key + " == '" + this.value + "'";
    }
    keys() {
      return [this.key];
    }
    negate() {
      return f.create(this.key, this.value);
    }
  }
  class m {
    constructor(e2, t2) {
      this.key = e2, this.valueKey = t2, this.type = 10;
    }
    static create(e2, t2) {
      return new m(e2, t2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this.key < e2.key ? -1 : this.key > e2.key ? 1 : this.valueKey < e2.valueKey ? -1 : this.valueKey > e2.valueKey ? 1 : 0;
    }
    equals(e2) {
      return e2.type === this.type && (this.key === e2.key && this.valueKey === e2.valueKey);
    }
    evaluate(e2) {
      const t2 = e2.getValue(this.valueKey), n2 = e2.getValue(this.key);
      return Array.isArray(t2) ? t2.indexOf(n2) >= 0 : typeof n2 == "string" && typeof t2 == "object" && t2 !== null && a.call(t2, n2);
    }
    serialize() {
      return this.key + " in '" + this.valueKey + "'";
    }
    keys() {
      return [this.key, this.valueKey];
    }
    negate() {
      return g.create(this);
    }
  }
  class g {
    constructor(e2) {
      this._actual = e2, this.type = 11;
    }
    static create(e2) {
      return new g(e2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this._actual.cmp(e2._actual);
    }
    equals(e2) {
      return e2.type === this.type && this._actual.equals(e2._actual);
    }
    evaluate(e2) {
      return !this._actual.evaluate(e2);
    }
    serialize() {
      throw new Error("Method not implemented.");
    }
    keys() {
      return this._actual.keys();
    }
    negate() {
      return this._actual;
    }
  }
  class f {
    constructor(e2, t2) {
      this.key = e2, this.value = t2, this.type = 5;
    }
    static create(e2, t2) {
      if (typeof t2 == "boolean")
        return t2 ? b.create(e2) : u.create(e2);
      const n2 = s.get(e2);
      if (typeof n2 == "boolean") {
        return t2 === (n2 ? "true" : "false") ? d.INSTANCE : h.INSTANCE;
      }
      return new f(e2, t2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this.key < e2.key ? -1 : this.key > e2.key ? 1 : this.value < e2.value ? -1 : this.value > e2.value ? 1 : 0;
    }
    equals(e2) {
      return e2.type === this.type && (this.key === e2.key && this.value === e2.value);
    }
    evaluate(e2) {
      return e2.getValue(this.key) != this.value;
    }
    serialize() {
      return this.key + " != '" + this.value + "'";
    }
    keys() {
      return [this.key];
    }
    negate() {
      return p.create(this.key, this.value);
    }
  }
  class b {
    constructor(e2) {
      this.key = e2, this.type = 3;
    }
    static create(e2) {
      const t2 = s.get(e2);
      return typeof t2 == "boolean" ? t2 ? d.INSTANCE : h.INSTANCE : new b(e2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this.key < e2.key ? -1 : this.key > e2.key ? 1 : 0;
    }
    equals(e2) {
      return e2.type === this.type && this.key === e2.key;
    }
    evaluate(e2) {
      return !e2.getValue(this.key);
    }
    serialize() {
      return "!" + this.key;
    }
    keys() {
      return [this.key];
    }
    negate() {
      return u.create(this.key);
    }
  }
  class _ {
    constructor(e2, t2) {
      this.key = e2, this.regexp = t2, this.type = 7;
    }
    static create(e2, t2) {
      return new _(e2, t2);
    }
    cmp(e2) {
      if (e2.type !== this.type)
        return this.type - e2.type;
      if (this.key < e2.key)
        return -1;
      if (this.key > e2.key)
        return 1;
      const t2 = this.regexp ? this.regexp.source : "", n2 = e2.regexp ? e2.regexp.source : "";
      return t2 < n2 ? -1 : t2 > n2 ? 1 : 0;
    }
    equals(e2) {
      if (e2.type === this.type) {
        const t2 = this.regexp ? this.regexp.source : "", n2 = e2.regexp ? e2.regexp.source : "";
        return this.key === e2.key && t2 === n2;
      }
      return false;
    }
    evaluate(e2) {
      let t2 = e2.getValue(this.key);
      return !!this.regexp && this.regexp.test(t2);
    }
    serialize() {
      const e2 = this.regexp ? `/${this.regexp.source}/${this.regexp.ignoreCase ? "i" : ""}` : "/invalid/";
      return `${this.key} =~ ${e2}`;
    }
    keys() {
      return [this.key];
    }
    negate() {
      return v.create(this);
    }
  }
  class v {
    constructor(e2) {
      this._actual = e2, this.type = 8;
    }
    static create(e2) {
      return new v(e2);
    }
    cmp(e2) {
      return e2.type !== this.type ? this.type - e2.type : this._actual.cmp(e2._actual);
    }
    equals(e2) {
      return e2.type === this.type && this._actual.equals(e2._actual);
    }
    evaluate(e2) {
      return !this._actual.evaluate(e2);
    }
    serialize() {
      throw new Error("Method not implemented.");
    }
    keys() {
      return this._actual.keys();
    }
    negate() {
      return this._actual;
    }
  }
  class w {
    constructor(e2) {
      this.expr = e2, this.type = 6;
    }
    static create(e2) {
      return w._normalizeArr(e2);
    }
    cmp(e2) {
      if (e2.type !== this.type)
        return this.type - e2.type;
      if (this.expr.length < e2.expr.length)
        return -1;
      if (this.expr.length > e2.expr.length)
        return 1;
      for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++) {
        const n3 = c(this.expr[t2], e2.expr[t2]);
        if (n3 !== 0)
          return n3;
      }
      return 0;
    }
    equals(e2) {
      if (e2.type === this.type) {
        if (this.expr.length !== e2.expr.length)
          return false;
        for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++)
          if (!this.expr[t2].equals(e2.expr[t2]))
            return false;
        return true;
      }
      return false;
    }
    evaluate(e2) {
      for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++)
        if (!this.expr[t2].evaluate(e2))
          return false;
      return true;
    }
    static _normalizeArr(e2) {
      const t2 = [];
      let n2 = false;
      for (const i2 of e2)
        if (i2)
          if (i2.type !== 1) {
            if (i2.type === 0)
              return d.INSTANCE;
            i2.type !== 6 ? t2.push(i2) : t2.push(...i2.expr);
          } else
            n2 = true;
      if (t2.length === 0 && n2)
        return h.INSTANCE;
      if (t2.length !== 0) {
        if (t2.length === 1)
          return t2[0];
        for (t2.sort(c); t2.length > 1; ) {
          const e3 = t2[t2.length - 1];
          if (e3.type !== 9)
            break;
          t2.pop();
          const n3 = t2.pop(), i2 = y.create(e3.expr.map((e4) => w.create([e4, n3])));
          i2 && (t2.push(i2), t2.sort(c));
        }
        return new w(t2);
      }
    }
    serialize() {
      return this.expr.map((e2) => e2.serialize()).join(" && ");
    }
    keys() {
      const e2 = [];
      for (let t2 of this.expr)
        e2.push(...t2.keys());
      return e2;
    }
    negate() {
      let e2 = [];
      for (let t2 of this.expr)
        e2.push(t2.negate());
      return y.create(e2);
    }
  }
  class y {
    constructor(e2) {
      this.expr = e2, this.type = 9;
    }
    static create(e2) {
      const t2 = y._normalizeArr(e2);
      if (t2.length !== 0)
        return t2.length === 1 ? t2[0] : new y(t2);
    }
    cmp(e2) {
      if (e2.type !== this.type)
        return this.type - e2.type;
      if (this.expr.length < e2.expr.length)
        return -1;
      if (this.expr.length > e2.expr.length)
        return 1;
      for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++) {
        const n3 = c(this.expr[t2], e2.expr[t2]);
        if (n3 !== 0)
          return n3;
      }
      return 0;
    }
    equals(e2) {
      if (e2.type === this.type) {
        if (this.expr.length !== e2.expr.length)
          return false;
        for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++)
          if (!this.expr[t2].equals(e2.expr[t2]))
            return false;
        return true;
      }
      return false;
    }
    evaluate(e2) {
      for (let t2 = 0, n2 = this.expr.length; t2 < n2; t2++)
        if (this.expr[t2].evaluate(e2))
          return true;
      return false;
    }
    static _normalizeArr(e2) {
      let t2 = [], n2 = false;
      if (e2) {
        for (let i2 = 0, r2 = e2.length; i2 < r2; i2++) {
          const r3 = e2[i2];
          if (r3)
            if (r3.type !== 0) {
              if (r3.type === 1)
                return [h.INSTANCE];
              r3.type !== 9 ? t2.push(r3) : t2 = t2.concat(r3.expr);
            } else
              n2 = true;
        }
        if (t2.length === 0 && n2)
          return [d.INSTANCE];
        t2.sort(c);
      }
      return t2;
    }
    serialize() {
      return this.expr.map((e2) => e2.serialize()).join(" || ");
    }
    keys() {
      const e2 = [];
      for (let t2 of this.expr)
        e2.push(...t2.keys());
      return e2;
    }
    negate() {
      let e2 = [];
      for (let t3 of this.expr)
        e2.push(t3.negate());
      const t2 = (e3) => e3.type === 9 ? e3.expr : [e3];
      for (; e2.length > 1; ) {
        const n2 = e2.shift(), i2 = e2.shift(), r2 = [];
        for (const e3 of t2(n2))
          for (const n3 of t2(i2))
            r2.push(l.and(e3, n3));
        e2.unshift(l.or(...r2));
      }
      return e2[0];
    }
  }
  class C extends u {
    constructor(e2, t2) {
      super(e2), this._defaultValue = t2;
    }
    bindTo(e2) {
      return e2.createKey(this.key, this._defaultValue);
    }
    getValue(e2) {
      return e2.getContextKeyValue(this.key);
    }
    toNegated() {
      return l.not(this.key);
    }
  }
  const x = Object(r.c)("contextKeyService"), S = "setContext";
}, function(e, t, n) {
  "use strict";
  (function(e2, i) {
    n.d(t, "i", function() {
      return f;
    }), n.d(t, "f", function() {
      return b;
    }), n.d(t, "d", function() {
      return _;
    }), n.d(t, "g", function() {
      return v;
    }), n.d(t, "h", function() {
      return w;
    }), n.d(t, "c", function() {
      return y;
    }), n.d(t, "b", function() {
      return C;
    }), n.d(t, "j", function() {
      return x;
    }), n.d(t, "a", function() {
      return S;
    }), n.d(t, "e", function() {
      return T;
    });
    let r = false, o = false, s = false, a = false, l = false, c = false, d = void 0, h = "en", u = void 0, p = void 0;
    const m = e2 !== void 0 && e2.versions !== void 0 && e2.versions.electron !== void 0 && e2.type === "renderer";
    if (typeof navigator != "object" || m) {
      if (typeof e2 == "object") {
        r = e2.platform === "win32", o = e2.platform === "darwin", s = e2.platform === "linux", d = "en", h = "en";
        const t2 = e2.env.VSCODE_NLS_CONFIG;
        if (t2)
          try {
            const e3 = JSON.parse(t2), n2 = e3.availableLanguages["*"];
            d = e3.locale, h = n2 || "en", u = e3._translationsConfigFile;
          } catch (e3) {
          }
        a = true;
      }
    } else
      p = navigator.userAgent, r = p.indexOf("Windows") >= 0, o = p.indexOf("Macintosh") >= 0, c = (p.indexOf("Macintosh") >= 0 || p.indexOf("iPad") >= 0 || p.indexOf("iPhone") >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0, s = p.indexOf("Linux") >= 0, l = true, d = navigator.language, h = d;
    let g = 0;
    o ? g = 1 : r ? g = 3 : s && (g = 2);
    const f = r, b = o, _ = s, v = a, w = l, y = c, C = typeof self == "object" ? self : typeof i == "object" ? i : {}, x = function() {
      if (C.setImmediate)
        return C.setImmediate.bind(C);
      if (typeof C.postMessage == "function" && !C.importScripts) {
        let e3 = [];
        C.addEventListener("message", (t4) => {
          if (t4.data && t4.data.vscodeSetImmediateId)
            for (let n2 = 0, i2 = e3.length; n2 < i2; n2++) {
              const i3 = e3[n2];
              if (i3.id === t4.data.vscodeSetImmediateId)
                return e3.splice(n2, 1), void i3.callback();
            }
        });
        let t3 = 0;
        return (n2) => {
          const i2 = ++t3;
          e3.push({id: i2, callback: n2}), C.postMessage({vscodeSetImmediateId: i2}, "*");
        };
      }
      if (e2 !== void 0 && typeof e2.nextTick == "function")
        return e2.nextTick.bind(e2);
      const t2 = Promise.resolve();
      return (e3) => t2.then(e3);
    }(), S = o || c ? 2 : r ? 1 : 3;
    let k = true, E = false;
    function T() {
      if (!E) {
        E = true;
        const e3 = new Uint8Array(2);
        e3[0] = 1, e3[1] = 2;
        const t2 = new Uint16Array(e3.buffer);
        k = t2[0] === 513;
      }
      return k;
    }
  }).call(this, n(86), n(137));
}, function(e, t, n) {
  "use strict";
  n.d(t, "r", function() {
    return m;
  }), n.d(t, "B", function() {
    return g;
  }), n.d(t, "F", function() {
    return f;
  }), n.d(t, "E", function() {
    return b;
  }), n.d(t, "z", function() {
    return _;
  }), n.d(t, "h", function() {
    return v;
  }), n.d(t, "G", function() {
    return y;
  }), n.d(t, "A", function() {
    return w;
  }), n.d(t, "n", function() {
    return C;
  }), n.d(t, "v", function() {
    return x;
  }), n.d(t, "w", function() {
    return S;
  }), n.d(t, "d", function() {
    return k;
  }), n.d(t, "y", function() {
    return E;
  }), n.d(t, "p", function() {
    return T;
  }), n.d(t, "m", function() {
    return L;
  }), n.d(t, "i", function() {
    return N;
  }), n.d(t, "u", function() {
    return I;
  }), n.d(t, "f", function() {
    return D;
  }), n.d(t, "e", function() {
    return O;
  }), n.d(t, "q", function() {
    return A;
  }), n.d(t, "D", function() {
    return R;
  }), n.d(t, "b", function() {
    return M;
  }), n.d(t, "a", function() {
    return P;
  }), n.d(t, "g", function() {
    return F;
  }), n.d(t, "j", function() {
    return W;
  }), n.d(t, "t", function() {
    return z;
  }), n.d(t, "s", function() {
    return B;
  }), n.d(t, "c", function() {
    return j;
  }), n.d(t, "x", function() {
    return V;
  }), n.d(t, "o", function() {
    return U;
  }), n.d(t, "l", function() {
    return H;
  }), n.d(t, "k", function() {
    return q;
  }), n.d(t, "C", function() {
    return $;
  });
  var i = n(23), r = n(3), o = n(6), s = n(2), a = n(187), l = n(42);
  function c(e2, t2, n2, i2) {
    if (Array.isArray(e2)) {
      let r2 = 0;
      for (const o2 of e2) {
        const e3 = c(o2, t2, n2, i2);
        if (e3 === 10)
          return e3;
        e3 > r2 && (r2 = e3);
      }
      return r2;
    }
    if (typeof e2 == "string")
      return i2 ? e2 === "*" ? 5 : e2 === n2 ? 10 : 0 : 0;
    if (e2) {
      const {language: r2, pattern: o2, scheme: s2, hasAccessToAllModels: c2} = e2;
      if (!i2 && !c2)
        return 0;
      let d2 = 0;
      if (s2)
        if (s2 === t2.scheme)
          d2 = 10;
        else {
          if (s2 !== "*")
            return 0;
          d2 = 5;
        }
      if (r2)
        if (r2 === n2)
          d2 = 10;
        else {
          if (r2 !== "*")
            return 0;
          d2 = Math.max(d2, 5);
        }
      if (o2) {
        let e3;
        if (e3 = typeof o2 == "string" ? o2 : Object.assign(Object.assign({}, o2), {base: Object(l.d)(o2.base)}), e3 !== t2.fsPath && !Object(a.a)(e3, t2.fsPath))
          return 0;
        d2 = 10;
      }
      return d2;
    }
    return 0;
  }
  var d = n(64);
  function h(e2) {
    return typeof e2 != "string" && (Array.isArray(e2) ? e2.every(h) : !!e2.exclusive);
  }
  class u {
    constructor() {
      this._clock = 0, this._entries = [], this._onDidChange = new o.a();
    }
    get onDidChange() {
      return this._onDidChange.event;
    }
    register(e2, t2) {
      let n2 = {selector: e2, provider: t2, _score: -1, _time: this._clock++};
      return this._entries.push(n2), this._lastCandidate = void 0, this._onDidChange.fire(this._entries.length), Object(s.h)(() => {
        if (n2) {
          let e3 = this._entries.indexOf(n2);
          e3 >= 0 && (this._entries.splice(e3, 1), this._lastCandidate = void 0, this._onDidChange.fire(this._entries.length), n2 = void 0);
        }
      });
    }
    has(e2) {
      return this.all(e2).length > 0;
    }
    all(e2) {
      if (!e2)
        return [];
      this._updateScores(e2);
      const t2 = [];
      for (let e3 of this._entries)
        e3._score > 0 && t2.push(e3.provider);
      return t2;
    }
    ordered(e2) {
      const t2 = [];
      return this._orderedForEach(e2, (e3) => t2.push(e3.provider)), t2;
    }
    orderedGroups(e2) {
      const t2 = [];
      let n2, i2;
      return this._orderedForEach(e2, (e3) => {
        n2 && i2 === e3._score ? n2.push(e3.provider) : (i2 = e3._score, n2 = [e3.provider], t2.push(n2));
      }), t2;
    }
    _orderedForEach(e2, t2) {
      if (e2) {
        this._updateScores(e2);
        for (const e3 of this._entries)
          e3._score > 0 && t2(e3);
      }
    }
    _updateScores(e2) {
      let t2 = {uri: e2.uri.toString(), language: e2.getLanguageIdentifier().language};
      if (!this._lastCandidate || this._lastCandidate.language !== t2.language || this._lastCandidate.uri !== t2.uri) {
        this._lastCandidate = t2;
        for (let t3 of this._entries)
          if (t3._score = c(t3.selector, e2.uri, e2.getLanguageIdentifier().language, Object(d.b)(e2)), h(t3.selector) && t3._score > 0) {
            for (let e3 of this._entries)
              e3._score = 0;
            t3._score = 1e3;
            break;
          }
        this._entries.sort(u._compareByScoreAndTime);
      }
    }
    static _compareByScoreAndTime(e2, t2) {
      return e2._score < t2._score ? 1 : e2._score > t2._score ? -1 : e2._time < t2._time ? 1 : e2._time > t2._time ? -1 : 0;
    }
  }
  var p = n(17);
  class m {
    constructor(e2, t2) {
      this.language = e2, this.id = t2;
    }
  }
  class g {
    static getLanguageId(e2) {
      return (255 & e2) >>> 0;
    }
    static getTokenType(e2) {
      return (1792 & e2) >>> 8;
    }
    static getFontStyle(e2) {
      return (14336 & e2) >>> 11;
    }
    static getForeground(e2) {
      return (8372224 & e2) >>> 14;
    }
    static getBackground(e2) {
      return (4286578688 & e2) >>> 23;
    }
    static getClassNameFromMetadata(e2) {
      let t2 = "mtk" + this.getForeground(e2), n2 = this.getFontStyle(e2);
      return 1 & n2 && (t2 += " mtki"), 2 & n2 && (t2 += " mtkb"), 4 & n2 && (t2 += " mtku"), t2;
    }
    static getInlineStyleFromMetadata(e2, t2) {
      const n2 = this.getForeground(e2), i2 = this.getFontStyle(e2);
      let r2 = `color: ${t2[n2]};`;
      return 1 & i2 && (r2 += "font-style: italic;"), 2 & i2 && (r2 += "font-weight: bold;"), 4 & i2 && (r2 += "text-decoration: underline;"), r2;
    }
  }
  const f = function() {
    let e2 = Object.create(null);
    return e2[0] = "symbol-method", e2[1] = "symbol-function", e2[2] = "symbol-constructor", e2[3] = "symbol-field", e2[4] = "symbol-variable", e2[5] = "symbol-class", e2[6] = "symbol-struct", e2[7] = "symbol-interface", e2[8] = "symbol-module", e2[9] = "symbol-property", e2[10] = "symbol-event", e2[11] = "symbol-operator", e2[12] = "symbol-unit", e2[13] = "symbol-value", e2[14] = "symbol-constant", e2[15] = "symbol-enum", e2[16] = "symbol-enum-member", e2[17] = "symbol-keyword", e2[27] = "symbol-snippet", e2[18] = "symbol-text", e2[19] = "symbol-color", e2[20] = "symbol-file", e2[21] = "symbol-reference", e2[22] = "symbol-customcolor", e2[23] = "symbol-folder", e2[24] = "symbol-type-parameter", e2[25] = "account", e2[26] = "issues", function(t2) {
      const n2 = e2[t2];
      let i2 = n2 && p.c.get(n2);
      return i2 || (console.info("No codicon found for CompletionItemKind " + t2), i2 = p.a.symbolProperty), i2.classNames;
    };
  }();
  let b = function() {
    let e2 = Object.create(null);
    return e2.method = 0, e2.function = 1, e2.constructor = 2, e2.field = 3, e2.variable = 4, e2.class = 5, e2.struct = 6, e2.interface = 7, e2.module = 8, e2.property = 9, e2.event = 10, e2.operator = 11, e2.unit = 12, e2.value = 13, e2.constant = 14, e2.enum = 15, e2["enum-member"] = 16, e2.enumMember = 16, e2.keyword = 17, e2.snippet = 27, e2.text = 18, e2.color = 19, e2.file = 20, e2.reference = 21, e2.customcolor = 22, e2.folder = 23, e2["type-parameter"] = 24, e2.typeParameter = 24, e2.account = 25, e2.issue = 26, function(t2, n2) {
      let i2 = e2[t2];
      return i2 !== void 0 || n2 || (i2 = 9), i2;
    };
  }();
  var _, v, w;
  function y(e2) {
    return e2 && i.a.isUri(e2.uri) && r.a.isIRange(e2.range) && (r.a.isIRange(e2.originSelectionRange) || r.a.isIRange(e2.targetSelectionRange));
  }
  !function(e2) {
    e2[e2.Invoke = 1] = "Invoke", e2[e2.TriggerCharacter = 2] = "TriggerCharacter", e2[e2.ContentChange = 3] = "ContentChange";
  }(_ || (_ = {})), function(e2) {
    e2[e2.Text = 0] = "Text", e2[e2.Read = 1] = "Read", e2[e2.Write = 2] = "Write";
  }(v || (v = {})), function(e2) {
    const t2 = new Map();
    t2.set("file", 0), t2.set("module", 1), t2.set("namespace", 2), t2.set("package", 3), t2.set("class", 4), t2.set("method", 5), t2.set("property", 6), t2.set("field", 7), t2.set("constructor", 8), t2.set("enum", 9), t2.set("interface", 10), t2.set("function", 11), t2.set("variable", 12), t2.set("constant", 13), t2.set("string", 14), t2.set("number", 15), t2.set("boolean", 16), t2.set("array", 17), t2.set("object", 18), t2.set("key", 19), t2.set("null", 20), t2.set("enum-member", 21), t2.set("struct", 22), t2.set("event", 23), t2.set("operator", 24), t2.set("type-parameter", 25);
    const n2 = new Map();
    n2.set(0, "file"), n2.set(1, "module"), n2.set(2, "namespace"), n2.set(3, "package"), n2.set(4, "class"), n2.set(5, "method"), n2.set(6, "property"), n2.set(7, "field"), n2.set(8, "constructor"), n2.set(9, "enum"), n2.set(10, "interface"), n2.set(11, "function"), n2.set(12, "variable"), n2.set(13, "constant"), n2.set(14, "string"), n2.set(15, "number"), n2.set(16, "boolean"), n2.set(17, "array"), n2.set(18, "object"), n2.set(19, "key"), n2.set(20, "null"), n2.set(21, "enum-member"), n2.set(22, "struct"), n2.set(23, "event"), n2.set(24, "operator"), n2.set(25, "type-parameter"), e2.fromString = function(e3) {
      return t2.get(e3);
    }, e2.toString = function(e3) {
      return n2.get(e3);
    }, e2.toCssClassName = function(e3, t3) {
      const i2 = n2.get(e3);
      let r2 = i2 && p.c.get("symbol-" + i2);
      return r2 || (console.info("No codicon found for SymbolKind " + e3), r2 = p.a.symbolProperty), `${t3 ? "inline" : "block"} ${r2.classNames}`;
    };
  }(w || (w = {}));
  class C {
    constructor(e2) {
      this.value = e2;
    }
  }
  C.Comment = new C("comment"), C.Imports = new C("imports"), C.Region = new C("region");
  const x = new u(), S = new u(), k = new u(), E = new u(), T = new u(), L = new u(), N = new u(), I = new u(), D = new u(), O = new u(), A = new u(), R = new u(), M = new u(), P = new u(), F = new u(), W = new u(), z = new u(), B = new u(), j = new u(), V = new u(), U = new u(), H = new u(), q = new u(), $ = new class {
    constructor() {
      this._map = new Map(), this._promises = new Map(), this._onDidChange = new o.a(), this.onDidChange = this._onDidChange.event, this._colorMap = null;
    }
    fire(e2) {
      this._onDidChange.fire({changedLanguages: e2, changedColorMap: false});
    }
    register(e2, t2) {
      return this._map.set(e2, t2), this.fire([e2]), Object(s.h)(() => {
        this._map.get(e2) === t2 && (this._map.delete(e2), this.fire([e2]));
      });
    }
    registerPromise(e2, t2) {
      let n2 = null, i2 = false;
      return this._promises.set(e2, t2.then((t3) => {
        this._promises.delete(e2), !i2 && t3 && (n2 = this.register(e2, t3));
      })), Object(s.h)(() => {
        i2 = true, n2 && n2.dispose();
      });
    }
    getPromise(e2) {
      const t2 = this.get(e2);
      if (t2)
        return Promise.resolve(t2);
      const n2 = this._promises.get(e2);
      return n2 ? n2.then((t3) => this.get(e2)) : null;
    }
    get(e2) {
      return this._map.get(e2) || null;
    }
    setColorMap(e2) {
      this._colorMap = e2, this._onDidChange.fire({changedLanguages: Array.from(this._map.keys()), changedColorMap: true});
    }
    getColorMap() {
      return this._colorMap;
    }
    getDefaultBackground() {
      return this._colorMap && this._colorMap.length > 2 ? this._colorMap[2] : null;
    }
  }();
}, function(e, t, n) {
  "use strict";
  n.d(t, "e", function() {
    return r;
  }), n.d(t, "f", function() {
    return o;
  }), n.d(t, "g", function() {
    return s;
  }), n.d(t, "d", function() {
    return a;
  }), n.d(t, "a", function() {
    return l;
  }), n.d(t, "b", function() {
    return c;
  }), n.d(t, "c", function() {
    return d;
  });
  const i = new class {
    constructor() {
      this.listeners = [], this.unexpectedErrorHandler = function(e2) {
        setTimeout(() => {
          if (e2.stack)
            throw new Error(e2.message + "\n\n" + e2.stack);
          throw e2;
        }, 0);
      };
    }
    emit(e2) {
      this.listeners.forEach((t2) => {
        t2(e2);
      });
    }
    onUnexpectedError(e2) {
      this.unexpectedErrorHandler(e2), this.emit(e2);
    }
    onUnexpectedExternalError(e2) {
      this.unexpectedErrorHandler(e2);
    }
  }();
  function r(e2) {
    a(e2) || i.onUnexpectedError(e2);
  }
  function o(e2) {
    a(e2) || i.onUnexpectedExternalError(e2);
  }
  function s(e2) {
    if (e2 instanceof Error) {
      let {name: t2, message: n2} = e2;
      return {$isError: true, name: t2, message: n2, stack: e2.stacktrace || e2.stack};
    }
    return e2;
  }
  function a(e2) {
    return e2 instanceof Error && e2.name === "Canceled" && e2.message === "Canceled";
  }
  function l() {
    const e2 = new Error("Canceled");
    return e2.name = e2.message, e2;
  }
  function c(e2) {
    return e2 ? new Error("Illegal argument: " + e2) : new Error("Illegal argument");
  }
  function d(e2) {
    return e2 ? new Error("Illegal state: " + e2) : new Error("Illegal state");
  }
}, function(e, t, n) {
  "use strict";
  function i(e2) {
    return Array.isArray(e2);
  }
  function r(e2) {
    return typeof e2 == "string";
  }
  function o(e2) {
    return !(typeof e2 != "object" || e2 === null || Array.isArray(e2) || e2 instanceof RegExp || e2 instanceof Date);
  }
  function s(e2) {
    return typeof e2 == "number" && !isNaN(e2);
  }
  function a(e2) {
    return e2 === true || e2 === false;
  }
  function l(e2) {
    return e2 === void 0;
  }
  function c(e2) {
    return l(e2) || e2 === null;
  }
  function d(e2, t2) {
    if (!e2)
      throw new Error(t2 ? `Unexpected type, expected '${t2}'` : "Unexpected type");
  }
  function h(e2) {
    if (c(e2))
      throw new Error("Assertion Failed: argument is undefined or null");
    return e2;
  }
  function u(e2) {
    return typeof e2 == "function";
  }
  function p(e2, t2) {
    const n2 = Math.min(e2.length, t2.length);
    for (let i2 = 0; i2 < n2; i2++)
      m(e2[i2], t2[i2]);
  }
  function m(e2, t2) {
    if (r(t2)) {
      if (typeof e2 !== t2)
        throw new Error("argument does not match constraint: typeof " + t2);
    } else if (u(t2)) {
      try {
        if (e2 instanceof t2)
          return;
      } catch (e3) {
      }
      if (!c(e2) && e2.constructor === t2)
        return;
      if (t2.length === 1 && t2.call(void 0, e2) === true)
        return;
      throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true");
    }
  }
  function g(e2) {
    const t2 = [];
    for (const n2 of function(e3) {
      let t3 = [], n3 = Object.getPrototypeOf(e3);
      for (; Object.prototype !== n3; )
        t3 = t3.concat(Object.getOwnPropertyNames(n3)), n3 = Object.getPrototypeOf(n3);
      return t3;
    }(e2))
      typeof e2[n2] == "function" && t2.push(n2);
    return t2;
  }
  function f(e2, t2) {
    const n2 = (e3) => function() {
      const n3 = Array.prototype.slice.call(arguments, 0);
      return t2(e3, n3);
    };
    let i2 = {};
    for (const t3 of e2)
      i2[t3] = n2(t3);
    return i2;
  }
  function b(e2) {
    return e2 === null ? void 0 : e2;
  }
  n.d(t, "e", function() {
    return i;
  }), n.d(t, "j", function() {
    return r;
  }), n.d(t, "i", function() {
    return o;
  }), n.d(t, "h", function() {
    return s;
  }), n.d(t, "f", function() {
    return a;
  }), n.d(t, "k", function() {
    return l;
  }), n.d(t, "l", function() {
    return c;
  }), n.d(t, "b", function() {
    return d;
  }), n.d(t, "a", function() {
    return h;
  }), n.d(t, "g", function() {
    return u;
  }), n.d(t, "m", function() {
    return p;
  }), n.d(t, "d", function() {
    return g;
  }), n.d(t, "c", function() {
    return f;
  }), n.d(t, "n", function() {
    return b;
  });
}, function(e, t, n) {
  "use strict";
  function i(e2, t2) {
    const n2 = Math.pow(10, t2);
    return Math.round(e2 * n2) / n2;
  }
  n.d(t, "c", function() {
    return r;
  }), n.d(t, "b", function() {
    return s;
  }), n.d(t, "a", function() {
    return a;
  });
  class r {
    constructor(e2, t2, n2, r2 = 1) {
      this.r = 0 | Math.min(255, Math.max(0, e2)), this.g = 0 | Math.min(255, Math.max(0, t2)), this.b = 0 | Math.min(255, Math.max(0, n2)), this.a = i(Math.max(Math.min(1, r2), 0), 3);
    }
    static equals(e2, t2) {
      return e2.r === t2.r && e2.g === t2.g && e2.b === t2.b && e2.a === t2.a;
    }
  }
  class o {
    constructor(e2, t2, n2, r2) {
      this.h = 0 | Math.max(Math.min(360, e2), 0), this.s = i(Math.max(Math.min(1, t2), 0), 3), this.l = i(Math.max(Math.min(1, n2), 0), 3), this.a = i(Math.max(Math.min(1, r2), 0), 3);
    }
    static equals(e2, t2) {
      return e2.h === t2.h && e2.s === t2.s && e2.l === t2.l && e2.a === t2.a;
    }
    static fromRGBA(e2) {
      const t2 = e2.r / 255, n2 = e2.g / 255, i2 = e2.b / 255, r2 = e2.a, s2 = Math.max(t2, n2, i2), a2 = Math.min(t2, n2, i2);
      let l = 0, c = 0;
      const d = (a2 + s2) / 2, h = s2 - a2;
      if (h > 0) {
        switch (c = Math.min(d <= 0.5 ? h / (2 * d) : h / (2 - 2 * d), 1), s2) {
          case t2:
            l = (n2 - i2) / h + (n2 < i2 ? 6 : 0);
            break;
          case n2:
            l = (i2 - t2) / h + 2;
            break;
          case i2:
            l = (t2 - n2) / h + 4;
        }
        l *= 60, l = Math.round(l);
      }
      return new o(l, c, d, r2);
    }
    static _hue2rgb(e2, t2, n2) {
      return n2 < 0 && (n2 += 1), n2 > 1 && (n2 -= 1), n2 < 1 / 6 ? e2 + 6 * (t2 - e2) * n2 : n2 < 0.5 ? t2 : n2 < 2 / 3 ? e2 + (t2 - e2) * (2 / 3 - n2) * 6 : e2;
    }
    static toRGBA(e2) {
      const t2 = e2.h / 360, {s: n2, l: i2, a: s2} = e2;
      let a2, l, c;
      if (n2 === 0)
        a2 = l = c = i2;
      else {
        const e3 = i2 < 0.5 ? i2 * (1 + n2) : i2 + n2 - i2 * n2, r2 = 2 * i2 - e3;
        a2 = o._hue2rgb(r2, e3, t2 + 1 / 3), l = o._hue2rgb(r2, e3, t2), c = o._hue2rgb(r2, e3, t2 - 1 / 3);
      }
      return new r(Math.round(255 * a2), Math.round(255 * l), Math.round(255 * c), s2);
    }
  }
  class s {
    constructor(e2, t2, n2, r2) {
      this.h = 0 | Math.max(Math.min(360, e2), 0), this.s = i(Math.max(Math.min(1, t2), 0), 3), this.v = i(Math.max(Math.min(1, n2), 0), 3), this.a = i(Math.max(Math.min(1, r2), 0), 3);
    }
    static equals(e2, t2) {
      return e2.h === t2.h && e2.s === t2.s && e2.v === t2.v && e2.a === t2.a;
    }
    static fromRGBA(e2) {
      const t2 = e2.r / 255, n2 = e2.g / 255, i2 = e2.b / 255, r2 = Math.max(t2, n2, i2), o2 = r2 - Math.min(t2, n2, i2), a2 = r2 === 0 ? 0 : o2 / r2;
      let l;
      return l = o2 === 0 ? 0 : r2 === t2 ? ((n2 - i2) / o2 % 6 + 6) % 6 : r2 === n2 ? (i2 - t2) / o2 + 2 : (t2 - n2) / o2 + 4, new s(Math.round(60 * l), a2, r2, e2.a);
    }
    static toRGBA(e2) {
      const {h: t2, s: n2, v: i2, a: o2} = e2, s2 = i2 * n2, a2 = s2 * (1 - Math.abs(t2 / 60 % 2 - 1)), l = i2 - s2;
      let [c, d, h] = [0, 0, 0];
      return t2 < 60 ? (c = s2, d = a2) : t2 < 120 ? (c = a2, d = s2) : t2 < 180 ? (d = s2, h = a2) : t2 < 240 ? (d = a2, h = s2) : t2 < 300 ? (c = a2, h = s2) : t2 < 360 && (c = s2, h = a2), c = Math.round(255 * (c + l)), d = Math.round(255 * (d + l)), h = Math.round(255 * (h + l)), new r(c, d, h, o2);
    }
  }
  class a {
    constructor(e2) {
      if (!e2)
        throw new Error("Color needs a value");
      if (e2 instanceof r)
        this.rgba = e2;
      else if (e2 instanceof o)
        this._hsla = e2, this.rgba = o.toRGBA(e2);
      else {
        if (!(e2 instanceof s))
          throw new Error("Invalid color ctor argument");
        this._hsva = e2, this.rgba = s.toRGBA(e2);
      }
    }
    static fromHex(e2) {
      return a.Format.CSS.parseHex(e2) || a.red;
    }
    get hsla() {
      return this._hsla ? this._hsla : o.fromRGBA(this.rgba);
    }
    get hsva() {
      return this._hsva ? this._hsva : s.fromRGBA(this.rgba);
    }
    equals(e2) {
      return !!e2 && r.equals(this.rgba, e2.rgba) && o.equals(this.hsla, e2.hsla) && s.equals(this.hsva, e2.hsva);
    }
    getRelativeLuminance() {
      return i(0.2126 * a._relativeLuminanceForComponent(this.rgba.r) + 0.7152 * a._relativeLuminanceForComponent(this.rgba.g) + 0.0722 * a._relativeLuminanceForComponent(this.rgba.b), 4);
    }
    static _relativeLuminanceForComponent(e2) {
      const t2 = e2 / 255;
      return t2 <= 0.03928 ? t2 / 12.92 : Math.pow((t2 + 0.055) / 1.055, 2.4);
    }
    isLighter() {
      return (299 * this.rgba.r + 587 * this.rgba.g + 114 * this.rgba.b) / 1e3 >= 128;
    }
    isLighterThan(e2) {
      return this.getRelativeLuminance() > e2.getRelativeLuminance();
    }
    isDarkerThan(e2) {
      return this.getRelativeLuminance() < e2.getRelativeLuminance();
    }
    lighten(e2) {
      return new a(new o(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * e2, this.hsla.a));
    }
    darken(e2) {
      return new a(new o(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * e2, this.hsla.a));
    }
    transparent(e2) {
      const {r: t2, g: n2, b: i2, a: o2} = this.rgba;
      return new a(new r(t2, n2, i2, o2 * e2));
    }
    isTransparent() {
      return this.rgba.a === 0;
    }
    isOpaque() {
      return this.rgba.a === 1;
    }
    opposite() {
      return new a(new r(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));
    }
    toString() {
      return "" + a.Format.CSS.format(this);
    }
    static getLighterColor(e2, t2, n2) {
      if (e2.isLighterThan(t2))
        return e2;
      n2 = n2 || 0.5;
      const i2 = e2.getRelativeLuminance(), r2 = t2.getRelativeLuminance();
      return n2 = n2 * (r2 - i2) / r2, e2.lighten(n2);
    }
    static getDarkerColor(e2, t2, n2) {
      if (e2.isDarkerThan(t2))
        return e2;
      n2 = n2 || 0.5;
      const i2 = e2.getRelativeLuminance();
      return n2 = n2 * (i2 - t2.getRelativeLuminance()) / i2, e2.darken(n2);
    }
  }
  a.white = new a(new r(255, 255, 255, 1)), a.black = new a(new r(0, 0, 0, 1)), a.red = new a(new r(255, 0, 0, 1)), a.blue = new a(new r(0, 0, 255, 1)), a.cyan = new a(new r(0, 255, 255, 1)), a.lightgrey = new a(new r(211, 211, 211, 1)), a.transparent = new a(new r(0, 0, 0, 0)), function(e2) {
    let t2;
    !function(t3) {
      let n2;
      !function(t4) {
        function n3(e3) {
          const t5 = e3.toString(16);
          return t5.length !== 2 ? "0" + t5 : t5;
        }
        function i2(e3) {
          switch (e3) {
            case 48:
              return 0;
            case 49:
              return 1;
            case 50:
              return 2;
            case 51:
              return 3;
            case 52:
              return 4;
            case 53:
              return 5;
            case 54:
              return 6;
            case 55:
              return 7;
            case 56:
              return 8;
            case 57:
              return 9;
            case 97:
            case 65:
              return 10;
            case 98:
            case 66:
              return 11;
            case 99:
            case 67:
              return 12;
            case 100:
            case 68:
              return 13;
            case 101:
            case 69:
              return 14;
            case 102:
            case 70:
              return 15;
          }
          return 0;
        }
        t4.formatRGB = function(t5) {
          return t5.rgba.a === 1 ? `rgb(${t5.rgba.r}, ${t5.rgba.g}, ${t5.rgba.b})` : e2.Format.CSS.formatRGBA(t5);
        }, t4.formatRGBA = function(e3) {
          return `rgba(${e3.rgba.r}, ${e3.rgba.g}, ${e3.rgba.b}, ${+e3.rgba.a.toFixed(2)})`;
        }, t4.formatHSL = function(t5) {
          return t5.hsla.a === 1 ? `hsl(${t5.hsla.h}, ${(100 * t5.hsla.s).toFixed(2)}%, ${(100 * t5.hsla.l).toFixed(2)}%)` : e2.Format.CSS.formatHSLA(t5);
        }, t4.formatHSLA = function(e3) {
          return `hsla(${e3.hsla.h}, ${(100 * e3.hsla.s).toFixed(2)}%, ${(100 * e3.hsla.l).toFixed(2)}%, ${e3.hsla.a.toFixed(2)})`;
        }, t4.formatHex = function(e3) {
          return `#${n3(e3.rgba.r)}${n3(e3.rgba.g)}${n3(e3.rgba.b)}`;
        }, t4.formatHexA = function(t5, i3 = false) {
          return i3 && t5.rgba.a === 1 ? e2.Format.CSS.formatHex(t5) : `#${n3(t5.rgba.r)}${n3(t5.rgba.g)}${n3(t5.rgba.b)}${n3(Math.round(255 * t5.rgba.a))}`;
        }, t4.format = function(t5) {
          return t5.isOpaque() ? e2.Format.CSS.formatHex(t5) : e2.Format.CSS.formatRGBA(t5);
        }, t4.parseHex = function(t5) {
          const n4 = t5.length;
          if (n4 === 0)
            return null;
          if (t5.charCodeAt(0) !== 35)
            return null;
          if (n4 === 7) {
            const n5 = 16 * i2(t5.charCodeAt(1)) + i2(t5.charCodeAt(2)), o2 = 16 * i2(t5.charCodeAt(3)) + i2(t5.charCodeAt(4)), s2 = 16 * i2(t5.charCodeAt(5)) + i2(t5.charCodeAt(6));
            return new e2(new r(n5, o2, s2, 1));
          }
          if (n4 === 9) {
            const n5 = 16 * i2(t5.charCodeAt(1)) + i2(t5.charCodeAt(2)), o2 = 16 * i2(t5.charCodeAt(3)) + i2(t5.charCodeAt(4)), s2 = 16 * i2(t5.charCodeAt(5)) + i2(t5.charCodeAt(6)), a2 = 16 * i2(t5.charCodeAt(7)) + i2(t5.charCodeAt(8));
            return new e2(new r(n5, o2, s2, a2 / 255));
          }
          if (n4 === 4) {
            const n5 = i2(t5.charCodeAt(1)), o2 = i2(t5.charCodeAt(2)), s2 = i2(t5.charCodeAt(3));
            return new e2(new r(16 * n5 + n5, 16 * o2 + o2, 16 * s2 + s2));
          }
          if (n4 === 5) {
            const n5 = i2(t5.charCodeAt(1)), o2 = i2(t5.charCodeAt(2)), s2 = i2(t5.charCodeAt(3)), a2 = i2(t5.charCodeAt(4));
            return new e2(new r(16 * n5 + n5, 16 * o2 + o2, 16 * s2 + s2, (16 * a2 + a2) / 255));
          }
          return null;
        };
      }(n2 = t3.CSS || (t3.CSS = {}));
    }(t2 = e2.Format || (e2.Format = {}));
  }(a || (a = {}));
}, function(e, t, n) {
  "use strict";
  function i(e2, t2 = 0) {
    return e2[e2.length - (1 + t2)];
  }
  function r(e2) {
    if (e2.length === 0)
      throw new Error("Invalid tail call");
    return [e2.slice(0, e2.length - 1), e2[e2.length - 1]];
  }
  function o(e2, t2, n2 = (e3, t3) => e3 === t3) {
    if (e2 === t2)
      return true;
    if (!e2 || !t2)
      return false;
    if (e2.length !== t2.length)
      return false;
    for (let i2 = 0, r2 = e2.length; i2 < r2; i2++)
      if (!n2(e2[i2], t2[i2]))
        return false;
    return true;
  }
  function s(e2, t2, n2) {
    let i2 = 0, r2 = e2.length - 1;
    for (; i2 <= r2; ) {
      const o2 = (i2 + r2) / 2 | 0, s2 = n2(e2[o2], t2);
      if (s2 < 0)
        i2 = o2 + 1;
      else {
        if (!(s2 > 0))
          return o2;
        r2 = o2 - 1;
      }
    }
    return -(i2 + 1);
  }
  function a(e2, t2) {
    let n2 = 0, i2 = e2.length;
    if (i2 === 0)
      return 0;
    for (; n2 < i2; ) {
      const r2 = Math.floor((n2 + i2) / 2);
      t2(e2[r2]) ? i2 = r2 : n2 = r2 + 1;
    }
    return n2;
  }
  function l(e2, t2) {
    return function e3(t3, n2, i2, r2, o2) {
      if (r2 <= i2)
        return;
      const s2 = i2 + (r2 - i2) / 2 | 0;
      if (e3(t3, n2, i2, s2, o2), e3(t3, n2, s2 + 1, r2, o2), n2(t3[s2], t3[s2 + 1]) <= 0)
        return;
      !function(e4, t4, n3, i3, r3, o3) {
        let s3 = n3, a2 = i3 + 1;
        for (let t5 = n3; t5 <= r3; t5++)
          o3[t5] = e4[t5];
        for (let l2 = n3; l2 <= r3; l2++)
          s3 > i3 ? e4[l2] = o3[a2++] : a2 > r3 ? e4[l2] = o3[s3++] : t4(o3[a2], o3[s3]) < 0 ? e4[l2] = o3[a2++] : e4[l2] = o3[s3++];
      }(t3, n2, i2, s2, r2, o2);
    }(e2, t2, 0, e2.length - 1, []), e2;
  }
  function c(e2, t2) {
    const n2 = [];
    let i2 = void 0;
    for (const r2 of l(e2.slice(0), t2))
      i2 && t2(i2[0], r2) === 0 ? i2.push(r2) : (i2 = [r2], n2.push(i2));
    return n2;
  }
  function d(e2) {
    return e2.filter((e3) => !!e3);
  }
  function h(e2) {
    return !Array.isArray(e2) || e2.length === 0;
  }
  function u(e2) {
    return Array.isArray(e2) && e2.length > 0;
  }
  function p(e2, t2) {
    if (!t2)
      return e2.filter((t3, n3) => e2.indexOf(t3) === n3);
    const n2 = Object.create(null);
    return e2.filter((e3) => {
      const i2 = t2(e3);
      return !n2[i2] && (n2[i2] = true, true);
    });
  }
  function m(e2) {
    const t2 = new Set();
    return e2.filter((e3) => !t2.has(e3) && (t2.add(e3), true));
  }
  function g(e2, t2) {
    for (let n2 = 0; n2 < e2.length; n2++) {
      if (t2(e2[n2]))
        return n2;
    }
    return -1;
  }
  function f(e2, t2, n2) {
    const i2 = g(e2, t2);
    return i2 < 0 ? n2 : e2[i2];
  }
  function b(e2, t2) {
    return e2.length > 0 ? e2[0] : t2;
  }
  function _(e2) {
    return [].concat(...e2);
  }
  function v(e2, t2) {
    let n2 = typeof t2 == "number" ? e2 : 0;
    typeof t2 == "number" ? n2 = e2 : (n2 = 0, t2 = e2);
    const i2 = [];
    if (n2 <= t2)
      for (let e3 = n2; e3 < t2; e3++)
        i2.push(e3);
    else
      for (let e3 = n2; e3 > t2; e3--)
        i2.push(e3);
    return i2;
  }
  function w(e2, t2, n2) {
    const i2 = e2.slice(0, t2), r2 = e2.slice(t2);
    return i2.concat(n2, r2);
  }
  function y(e2, t2) {
    const n2 = e2.indexOf(t2);
    n2 > -1 && (e2.splice(n2, 1), e2.unshift(t2));
  }
  function C(e2, t2) {
    const n2 = e2.indexOf(t2);
    n2 > -1 && (e2.splice(n2, 1), e2.push(t2));
  }
  function x(e2) {
    return Array.isArray(e2) ? e2 : [e2];
  }
  n.d(t, "t", function() {
    return i;
  }), n.d(t, "u", function() {
    return r;
  }), n.d(t, "g", function() {
    return o;
  }), n.d(t, "c", function() {
    return s;
  }), n.d(t, "h", function() {
    return a;
  }), n.d(t, "p", function() {
    return l;
  }), n.d(t, "m", function() {
    return c;
  }), n.d(t, "d", function() {
    return d;
  }), n.d(t, "n", function() {
    return h;
  }), n.d(t, "o", function() {
    return u;
  }), n.d(t, "e", function() {
    return p;
  }), n.d(t, "f", function() {
    return m;
  }), n.d(t, "j", function() {
    return g;
  }), n.d(t, "i", function() {
    return f;
  }), n.d(t, "k", function() {
    return b;
  }), n.d(t, "l", function() {
    return _;
  }), n.d(t, "s", function() {
    return v;
  }), n.d(t, "a", function() {
    return w;
  }), n.d(t, "r", function() {
    return y;
  }), n.d(t, "q", function() {
    return C;
  }), n.d(t, "b", function() {
    return x;
  });
}, function(e, t, n) {
  "use strict";
  n.d(t, "c", function() {
    return s;
  }), n.d(t, "e", function() {
    return a;
  }), n.d(t, "a", function() {
    return l;
  }), n.d(t, "b", function() {
    return d;
  }), n.d(t, "d", function() {
    return u;
  }), n.d(t, "g", function() {
    return p;
  }), n.d(t, "f", function() {
    return m;
  }), n.d(t, "h", function() {
    return f;
  });
  var i = n(151), r = n(6);
  const o = new class {
    constructor() {
      this._icons = new Map(), this._onDidRegister = new r.a();
    }
    add(e2) {
      this._icons.has(e2.id) ? console.error("Duplicate registration of codicon " + e2.id) : (this._icons.set(e2.id, e2), this._onDidRegister.fire(e2));
    }
    get(e2) {
      return this._icons.get(e2);
    }
    get all() {
      return this._icons.values();
    }
    get onDidRegister() {
      return this._onDidRegister.event;
    }
  }(), s = o;
  function a(e2, t2, n2) {
    return new l(e2, t2);
  }
  class l {
    constructor(e2, t2, n2) {
      this.id = e2, this.definition = t2, this.description = n2, o.add(this);
    }
    get classNames() {
      return "codicon codicon-" + this.id;
    }
    get cssSelector() {
      return ".codicon.codicon-" + this.id;
    }
  }
  !function(e2) {
    e2.add = new e2("add", {character: "\\ea60"}), e2.plus = new e2("plus", {character: "\\ea60"}), e2.gistNew = new e2("gist-new", {character: "\\ea60"}), e2.repoCreate = new e2("repo-create", {character: "\\ea60"}), e2.lightbulb = new e2("lightbulb", {character: "\\ea61"}), e2.lightBulb = new e2("light-bulb", {character: "\\ea61"}), e2.repo = new e2("repo", {character: "\\ea62"}), e2.repoDelete = new e2("repo-delete", {character: "\\ea62"}), e2.gistFork = new e2("gist-fork", {character: "\\ea63"}), e2.repoForked = new e2("repo-forked", {character: "\\ea63"}), e2.gitPullRequest = new e2("git-pull-request", {character: "\\ea64"}), e2.gitPullRequestAbandoned = new e2("git-pull-request-abandoned", {character: "\\ea64"}), e2.recordKeys = new e2("record-keys", {character: "\\ea65"}), e2.keyboard = new e2("keyboard", {character: "\\ea65"}), e2.tag = new e2("tag", {character: "\\ea66"}), e2.tagAdd = new e2("tag-add", {character: "\\ea66"}), e2.tagRemove = new e2("tag-remove", {character: "\\ea66"}), e2.person = new e2("person", {character: "\\ea67"}), e2.personAdd = new e2("person-add", {character: "\\ea67"}), e2.personFollow = new e2("person-follow", {character: "\\ea67"}), e2.personOutline = new e2("person-outline", {character: "\\ea67"}), e2.personFilled = new e2("person-filled", {character: "\\ea67"}), e2.gitBranch = new e2("git-branch", {character: "\\ea68"}), e2.gitBranchCreate = new e2("git-branch-create", {character: "\\ea68"}), e2.gitBranchDelete = new e2("git-branch-delete", {character: "\\ea68"}), e2.sourceControl = new e2("source-control", {character: "\\ea68"}), e2.mirror = new e2("mirror", {character: "\\ea69"}), e2.mirrorPublic = new e2("mirror-public", {character: "\\ea69"}), e2.star = new e2("star", {character: "\\ea6a"}), e2.starAdd = new e2("star-add", {character: "\\ea6a"}), e2.starDelete = new e2("star-delete", {character: "\\ea6a"}), e2.starEmpty = new e2("star-empty", {character: "\\ea6a"}), e2.comment = new e2("comment", {character: "\\ea6b"}), e2.commentAdd = new e2("comment-add", {character: "\\ea6b"}), e2.alert = new e2("alert", {character: "\\ea6c"}), e2.warning = new e2("warning", {character: "\\ea6c"}), e2.search = new e2("search", {character: "\\ea6d"}), e2.searchSave = new e2("search-save", {character: "\\ea6d"}), e2.logOut = new e2("log-out", {character: "\\ea6e"}), e2.signOut = new e2("sign-out", {character: "\\ea6e"}), e2.logIn = new e2("log-in", {character: "\\ea6f"}), e2.signIn = new e2("sign-in", {character: "\\ea6f"}), e2.eye = new e2("eye", {character: "\\ea70"}), e2.eyeUnwatch = new e2("eye-unwatch", {character: "\\ea70"}), e2.eyeWatch = new e2("eye-watch", {character: "\\ea70"}), e2.circleFilled = new e2("circle-filled", {character: "\\ea71"}), e2.primitiveDot = new e2("primitive-dot", {character: "\\ea71"}), e2.closeDirty = new e2("close-dirty", {character: "\\ea71"}), e2.debugBreakpoint = new e2("debug-breakpoint", {character: "\\ea71"}), e2.debugBreakpointDisabled = new e2("debug-breakpoint-disabled", {character: "\\ea71"}), e2.debugHint = new e2("debug-hint", {character: "\\ea71"}), e2.primitiveSquare = new e2("primitive-square", {character: "\\ea72"}), e2.edit = new e2("edit", {character: "\\ea73"}), e2.pencil = new e2("pencil", {character: "\\ea73"}), e2.info = new e2("info", {character: "\\ea74"}), e2.issueOpened = new e2("issue-opened", {character: "\\ea74"}), e2.gistPrivate = new e2("gist-private", {character: "\\ea75"}), e2.gitForkPrivate = new e2("git-fork-private", {character: "\\ea75"}), e2.lock = new e2("lock", {character: "\\ea75"}), e2.mirrorPrivate = new e2("mirror-private", {character: "\\ea75"}), e2.close = new e2("close", {character: "\\ea76"}), e2.removeClose = new e2("remove-close", {character: "\\ea76"}), e2.x = new e2("x", {character: "\\ea76"}), e2.repoSync = new e2("repo-sync", {character: "\\ea77"}), e2.sync = new e2("sync", {character: "\\ea77"}), e2.clone = new e2("clone", {character: "\\ea78"}), e2.desktopDownload = new e2("desktop-download", {character: "\\ea78"}), e2.beaker = new e2("beaker", {character: "\\ea79"}), e2.microscope = new e2("microscope", {character: "\\ea79"}), e2.vm = new e2("vm", {character: "\\ea7a"}), e2.deviceDesktop = new e2("device-desktop", {character: "\\ea7a"}), e2.file = new e2("file", {character: "\\ea7b"}), e2.fileText = new e2("file-text", {character: "\\ea7b"}), e2.more = new e2("more", {character: "\\ea7c"}), e2.ellipsis = new e2("ellipsis", {character: "\\ea7c"}), e2.kebabHorizontal = new e2("kebab-horizontal", {character: "\\ea7c"}), e2.mailReply = new e2("mail-reply", {character: "\\ea7d"}), e2.reply = new e2("reply", {character: "\\ea7d"}), e2.organization = new e2("organization", {character: "\\ea7e"}), e2.organizationFilled = new e2("organization-filled", {character: "\\ea7e"}), e2.organizationOutline = new e2("organization-outline", {character: "\\ea7e"}), e2.newFile = new e2("new-file", {character: "\\ea7f"}), e2.fileAdd = new e2("file-add", {character: "\\ea7f"}), e2.newFolder = new e2("new-folder", {character: "\\ea80"}), e2.fileDirectoryCreate = new e2("file-directory-create", {character: "\\ea80"}), e2.trash = new e2("trash", {character: "\\ea81"}), e2.trashcan = new e2("trashcan", {character: "\\ea81"}), e2.history = new e2("history", {character: "\\ea82"}), e2.clock = new e2("clock", {character: "\\ea82"}), e2.folder = new e2("folder", {character: "\\ea83"}), e2.fileDirectory = new e2("file-directory", {character: "\\ea83"}), e2.symbolFolder = new e2("symbol-folder", {character: "\\ea83"}), e2.logoGithub = new e2("logo-github", {character: "\\ea84"}), e2.markGithub = new e2("mark-github", {character: "\\ea84"}), e2.github = new e2("github", {character: "\\ea84"}), e2.terminal = new e2("terminal", {character: "\\ea85"}), e2.console = new e2("console", {character: "\\ea85"}), e2.repl = new e2("repl", {character: "\\ea85"}), e2.zap = new e2("zap", {character: "\\ea86"}), e2.symbolEvent = new e2("symbol-event", {character: "\\ea86"}), e2.error = new e2("error", {character: "\\ea87"}), e2.stop = new e2("stop", {character: "\\ea87"}), e2.variable = new e2("variable", {character: "\\ea88"}), e2.symbolVariable = new e2("symbol-variable", {character: "\\ea88"}), e2.array = new e2("array", {character: "\\ea8a"}), e2.symbolArray = new e2("symbol-array", {character: "\\ea8a"}), e2.symbolModule = new e2("symbol-module", {character: "\\ea8b"}), e2.symbolPackage = new e2("symbol-package", {character: "\\ea8b"}), e2.symbolNamespace = new e2("symbol-namespace", {character: "\\ea8b"}), e2.symbolObject = new e2("symbol-object", {character: "\\ea8b"}), e2.symbolMethod = new e2("symbol-method", {character: "\\ea8c"}), e2.symbolFunction = new e2("symbol-function", {character: "\\ea8c"}), e2.symbolConstructor = new e2("symbol-constructor", {character: "\\ea8c"}), e2.symbolBoolean = new e2("symbol-boolean", {character: "\\ea8f"}), e2.symbolNull = new e2("symbol-null", {character: "\\ea8f"}), e2.symbolNumeric = new e2("symbol-numeric", {character: "\\ea90"}), e2.symbolNumber = new e2("symbol-number", {character: "\\ea90"}), e2.symbolStructure = new e2("symbol-structure", {character: "\\ea91"}), e2.symbolStruct = new e2("symbol-struct", {character: "\\ea91"}), e2.symbolParameter = new e2("symbol-parameter", {character: "\\ea92"}), e2.symbolTypeParameter = new e2("symbol-type-parameter", {character: "\\ea92"}), e2.symbolKey = new e2("symbol-key", {character: "\\ea93"}), e2.symbolText = new e2("symbol-text", {character: "\\ea93"}), e2.symbolReference = new e2("symbol-reference", {character: "\\ea94"}), e2.goToFile = new e2("go-to-file", {character: "\\ea94"}), e2.symbolEnum = new e2("symbol-enum", {character: "\\ea95"}), e2.symbolValue = new e2("symbol-value", {character: "\\ea95"}), e2.symbolRuler = new e2("symbol-ruler", {character: "\\ea96"}), e2.symbolUnit = new e2("symbol-unit", {character: "\\ea96"}), e2.activateBreakpoints = new e2("activate-breakpoints", {character: "\\ea97"}), e2.archive = new e2("archive", {character: "\\ea98"}), e2.arrowBoth = new e2("arrow-both", {character: "\\ea99"}), e2.arrowDown = new e2("arrow-down", {character: "\\ea9a"}), e2.arrowLeft = new e2("arrow-left", {character: "\\ea9b"}), e2.arrowRight = new e2("arrow-right", {character: "\\ea9c"}), e2.arrowSmallDown = new e2("arrow-small-down", {character: "\\ea9d"}), e2.arrowSmallLeft = new e2("arrow-small-left", {character: "\\ea9e"}), e2.arrowSmallRight = new e2("arrow-small-right", {character: "\\ea9f"}), e2.arrowSmallUp = new e2("arrow-small-up", {character: "\\eaa0"}), e2.arrowUp = new e2("arrow-up", {character: "\\eaa1"}), e2.bell = new e2("bell", {character: "\\eaa2"}), e2.bold = new e2("bold", {character: "\\eaa3"}), e2.book = new e2("book", {character: "\\eaa4"}), e2.bookmark = new e2("bookmark", {character: "\\eaa5"}), e2.debugBreakpointConditionalUnverified = new e2("debug-breakpoint-conditional-unverified", {character: "\\eaa6"}), e2.debugBreakpointConditional = new e2("debug-breakpoint-conditional", {character: "\\eaa7"}), e2.debugBreakpointConditionalDisabled = new e2("debug-breakpoint-conditional-disabled", {character: "\\eaa7"}), e2.debugBreakpointDataUnverified = new e2("debug-breakpoint-data-unverified", {character: "\\eaa8"}), e2.debugBreakpointData = new e2("debug-breakpoint-data", {character: "\\eaa9"}), e2.debugBreakpointDataDisabled = new e2("debug-breakpoint-data-disabled", {character: "\\eaa9"}), e2.debugBreakpointLogUnverified = new e2("debug-breakpoint-log-unverified", {character: "\\eaaa"}), e2.debugBreakpointLog = new e2("debug-breakpoint-log", {character: "\\eaab"}), e2.debugBreakpointLogDisabled = new e2("debug-breakpoint-log-disabled", {character: "\\eaab"}), e2.briefcase = new e2("briefcase", {character: "\\eaac"}), e2.broadcast = new e2("broadcast", {character: "\\eaad"}), e2.browser = new e2("browser", {character: "\\eaae"}), e2.bug = new e2("bug", {character: "\\eaaf"}), e2.calendar = new e2("calendar", {character: "\\eab0"}), e2.caseSensitive = new e2("case-sensitive", {character: "\\eab1"}), e2.check = new e2("check", {character: "\\eab2"}), e2.checklist = new e2("checklist", {character: "\\eab3"}), e2.chevronDown = new e2("chevron-down", {character: "\\eab4"}), e2.chevronLeft = new e2("chevron-left", {character: "\\eab5"}), e2.chevronRight = new e2("chevron-right", {character: "\\eab6"}), e2.chevronUp = new e2("chevron-up", {character: "\\eab7"}), e2.chromeClose = new e2("chrome-close", {character: "\\eab8"}), e2.chromeMaximize = new e2("chrome-maximize", {character: "\\eab9"}), e2.chromeMinimize = new e2("chrome-minimize", {character: "\\eaba"}), e2.chromeRestore = new e2("chrome-restore", {character: "\\eabb"}), e2.circleOutline = new e2("circle-outline", {character: "\\eabc"}), e2.debugBreakpointUnverified = new e2("debug-breakpoint-unverified", {character: "\\eabc"}), e2.circleSlash = new e2("circle-slash", {character: "\\eabd"}), e2.circuitBoard = new e2("circuit-board", {character: "\\eabe"}), e2.clearAll = new e2("clear-all", {character: "\\eabf"}), e2.clippy = new e2("clippy", {character: "\\eac0"}), e2.closeAll = new e2("close-all", {character: "\\eac1"}), e2.cloudDownload = new e2("cloud-download", {character: "\\eac2"}), e2.cloudUpload = new e2("cloud-upload", {character: "\\eac3"}), e2.code = new e2("code", {character: "\\eac4"}), e2.collapseAll = new e2("collapse-all", {character: "\\eac5"}), e2.colorMode = new e2("color-mode", {character: "\\eac6"}), e2.commentDiscussion = new e2("comment-discussion", {character: "\\eac7"}), e2.compareChanges = new e2("compare-changes", {character: "\\eafd"}), e2.creditCard = new e2("credit-card", {character: "\\eac9"}), e2.dash = new e2("dash", {character: "\\eacc"}), e2.dashboard = new e2("dashboard", {character: "\\eacd"}), e2.database = new e2("database", {character: "\\eace"}), e2.debugContinue = new e2("debug-continue", {character: "\\eacf"}), e2.debugDisconnect = new e2("debug-disconnect", {character: "\\ead0"}), e2.debugPause = new e2("debug-pause", {character: "\\ead1"}), e2.debugRestart = new e2("debug-restart", {character: "\\ead2"}), e2.debugStart = new e2("debug-start", {character: "\\ead3"}), e2.debugStepInto = new e2("debug-step-into", {character: "\\ead4"}), e2.debugStepOut = new e2("debug-step-out", {character: "\\ead5"}), e2.debugStepOver = new e2("debug-step-over", {character: "\\ead6"}), e2.debugStop = new e2("debug-stop", {character: "\\ead7"}), e2.debug = new e2("debug", {character: "\\ead8"}), e2.deviceCameraVideo = new e2("device-camera-video", {character: "\\ead9"}), e2.deviceCamera = new e2("device-camera", {character: "\\eada"}), e2.deviceMobile = new e2("device-mobile", {character: "\\eadb"}), e2.diffAdded = new e2("diff-added", {character: "\\eadc"}), e2.diffIgnored = new e2("diff-ignored", {character: "\\eadd"}), e2.diffModified = new e2("diff-modified", {character: "\\eade"}), e2.diffRemoved = new e2("diff-removed", {character: "\\eadf"}), e2.diffRenamed = new e2("diff-renamed", {character: "\\eae0"}), e2.diff = new e2("diff", {character: "\\eae1"}), e2.discard = new e2("discard", {character: "\\eae2"}), e2.editorLayout = new e2("editor-layout", {character: "\\eae3"}), e2.emptyWindow = new e2("empty-window", {character: "\\eae4"}), e2.exclude = new e2("exclude", {character: "\\eae5"}), e2.extensions = new e2("extensions", {character: "\\eae6"}), e2.eyeClosed = new e2("eye-closed", {character: "\\eae7"}), e2.fileBinary = new e2("file-binary", {character: "\\eae8"}), e2.fileCode = new e2("file-code", {character: "\\eae9"}), e2.fileMedia = new e2("file-media", {character: "\\eaea"}), e2.filePdf = new e2("file-pdf", {character: "\\eaeb"}), e2.fileSubmodule = new e2("file-submodule", {character: "\\eaec"}), e2.fileSymlinkDirectory = new e2("file-symlink-directory", {character: "\\eaed"}), e2.fileSymlinkFile = new e2("file-symlink-file", {character: "\\eaee"}), e2.fileZip = new e2("file-zip", {character: "\\eaef"}), e2.files = new e2("files", {character: "\\eaf0"}), e2.filter = new e2("filter", {character: "\\eaf1"}), e2.flame = new e2("flame", {character: "\\eaf2"}), e2.foldDown = new e2("fold-down", {character: "\\eaf3"}), e2.foldUp = new e2("fold-up", {character: "\\eaf4"}), e2.fold = new e2("fold", {character: "\\eaf5"}), e2.folderActive = new e2("folder-active", {character: "\\eaf6"}), e2.folderOpened = new e2("folder-opened", {character: "\\eaf7"}), e2.gear = new e2("gear", {character: "\\eaf8"}), e2.gift = new e2("gift", {character: "\\eaf9"}), e2.gistSecret = new e2("gist-secret", {character: "\\eafa"}), e2.gist = new e2("gist", {character: "\\eafb"}), e2.gitCommit = new e2("git-commit", {character: "\\eafc"}), e2.gitCompare = new e2("git-compare", {character: "\\eafd"}), e2.gitMerge = new e2("git-merge", {character: "\\eafe"}), e2.githubAction = new e2("github-action", {character: "\\eaff"}), e2.githubAlt = new e2("github-alt", {character: "\\eb00"}), e2.globe = new e2("globe", {character: "\\eb01"}), e2.grabber = new e2("grabber", {character: "\\eb02"}), e2.graph = new e2("graph", {character: "\\eb03"}), e2.gripper = new e2("gripper", {character: "\\eb04"}), e2.heart = new e2("heart", {character: "\\eb05"}), e2.home = new e2("home", {character: "\\eb06"}), e2.horizontalRule = new e2("horizontal-rule", {character: "\\eb07"}), e2.hubot = new e2("hubot", {character: "\\eb08"}), e2.inbox = new e2("inbox", {character: "\\eb09"}), e2.issueClosed = new e2("issue-closed", {character: "\\eb0a"}), e2.issueReopened = new e2("issue-reopened", {character: "\\eb0b"}), e2.issues = new e2("issues", {character: "\\eb0c"}), e2.italic = new e2("italic", {character: "\\eb0d"}), e2.jersey = new e2("jersey", {character: "\\eb0e"}), e2.json = new e2("json", {character: "\\eb0f"}), e2.kebabVertical = new e2("kebab-vertical", {character: "\\eb10"}), e2.key = new e2("key", {character: "\\eb11"}), e2.law = new e2("law", {character: "\\eb12"}), e2.lightbulbAutofix = new e2("lightbulb-autofix", {character: "\\eb13"}), e2.linkExternal = new e2("link-external", {character: "\\eb14"}), e2.link = new e2("link", {character: "\\eb15"}), e2.listOrdered = new e2("list-ordered", {character: "\\eb16"}), e2.listUnordered = new e2("list-unordered", {character: "\\eb17"}), e2.liveShare = new e2("live-share", {character: "\\eb18"}), e2.loading = new e2("loading", {character: "\\eb19"}), e2.location = new e2("location", {character: "\\eb1a"}), e2.mailRead = new e2("mail-read", {character: "\\eb1b"}), e2.mail = new e2("mail", {character: "\\eb1c"}), e2.markdown = new e2("markdown", {character: "\\eb1d"}), e2.megaphone = new e2("megaphone", {character: "\\eb1e"}), e2.mention = new e2("mention", {character: "\\eb1f"}), e2.milestone = new e2("milestone", {character: "\\eb20"}), e2.mortarBoard = new e2("mortar-board", {character: "\\eb21"}), e2.move = new e2("move", {character: "\\eb22"}), e2.multipleWindows = new e2("multiple-windows", {character: "\\eb23"}), e2.mute = new e2("mute", {character: "\\eb24"}), e2.noNewline = new e2("no-newline", {character: "\\eb25"}), e2.note = new e2("note", {character: "\\eb26"}), e2.octoface = new e2("octoface", {character: "\\eb27"}), e2.openPreview = new e2("open-preview", {character: "\\eb28"}), e2.package_ = new e2("package", {character: "\\eb29"}), e2.paintcan = new e2("paintcan", {character: "\\eb2a"}), e2.pin = new e2("pin", {character: "\\eb2b"}), e2.play = new e2("play", {character: "\\eb2c"}), e2.run = new e2("run", {character: "\\eb2c"}), e2.plug = new e2("plug", {character: "\\eb2d"}), e2.preserveCase = new e2("preserve-case", {character: "\\eb2e"}), e2.preview = new e2("preview", {character: "\\eb2f"}), e2.project = new e2("project", {character: "\\eb30"}), e2.pulse = new e2("pulse", {character: "\\eb31"}), e2.question = new e2("question", {character: "\\eb32"}), e2.quote = new e2("quote", {character: "\\eb33"}), e2.radioTower = new e2("radio-tower", {character: "\\eb34"}), e2.reactions = new e2("reactions", {character: "\\eb35"}), e2.references = new e2("references", {character: "\\eb36"}), e2.refresh = new e2("refresh", {character: "\\eb37"}), e2.regex = new e2("regex", {character: "\\eb38"}), e2.remoteExplorer = new e2("remote-explorer", {character: "\\eb39"}), e2.remote = new e2("remote", {character: "\\eb3a"}), e2.remove = new e2("remove", {character: "\\eb3b"}), e2.replaceAll = new e2("replace-all", {character: "\\eb3c"}), e2.replace = new e2("replace", {character: "\\eb3d"}), e2.repoClone = new e2("repo-clone", {character: "\\eb3e"}), e2.repoForcePush = new e2("repo-force-push", {character: "\\eb3f"}), e2.repoPull = new e2("repo-pull", {character: "\\eb40"}), e2.repoPush = new e2("repo-push", {character: "\\eb41"}), e2.report = new e2("report", {character: "\\eb42"}), e2.requestChanges = new e2("request-changes", {character: "\\eb43"}), e2.rocket = new e2("rocket", {character: "\\eb44"}), e2.rootFolderOpened = new e2("root-folder-opened", {character: "\\eb45"}), e2.rootFolder = new e2("root-folder", {character: "\\eb46"}), e2.rss = new e2("rss", {character: "\\eb47"}), e2.ruby = new e2("ruby", {character: "\\eb48"}), e2.saveAll = new e2("save-all", {character: "\\eb49"}), e2.saveAs = new e2("save-as", {character: "\\eb4a"}), e2.save = new e2("save", {character: "\\eb4b"}), e2.screenFull = new e2("screen-full", {character: "\\eb4c"}), e2.screenNormal = new e2("screen-normal", {character: "\\eb4d"}), e2.searchStop = new e2("search-stop", {character: "\\eb4e"}), e2.server = new e2("server", {character: "\\eb50"}), e2.settingsGear = new e2("settings-gear", {character: "\\eb51"}), e2.settings = new e2("settings", {character: "\\eb52"}), e2.shield = new e2("shield", {character: "\\eb53"}), e2.smiley = new e2("smiley", {character: "\\eb54"}), e2.sortPrecedence = new e2("sort-precedence", {character: "\\eb55"}), e2.splitHorizontal = new e2("split-horizontal", {character: "\\eb56"}), e2.splitVertical = new e2("split-vertical", {character: "\\eb57"}), e2.squirrel = new e2("squirrel", {character: "\\eb58"}), e2.starFull = new e2("star-full", {character: "\\eb59"}), e2.starHalf = new e2("star-half", {character: "\\eb5a"}), e2.symbolClass = new e2("symbol-class", {character: "\\eb5b"}), e2.symbolColor = new e2("symbol-color", {character: "\\eb5c"}), e2.symbolConstant = new e2("symbol-constant", {character: "\\eb5d"}), e2.symbolEnumMember = new e2("symbol-enum-member", {character: "\\eb5e"}), e2.symbolField = new e2("symbol-field", {character: "\\eb5f"}), e2.symbolFile = new e2("symbol-file", {character: "\\eb60"}), e2.symbolInterface = new e2("symbol-interface", {character: "\\eb61"}), e2.symbolKeyword = new e2("symbol-keyword", {character: "\\eb62"}), e2.symbolMisc = new e2("symbol-misc", {character: "\\eb63"}), e2.symbolOperator = new e2("symbol-operator", {character: "\\eb64"}), e2.symbolProperty = new e2("symbol-property", {character: "\\eb65"}), e2.wrench = new e2("wrench", {character: "\\eb65"}), e2.wrenchSubaction = new e2("wrench-subaction", {character: "\\eb65"}), e2.symbolSnippet = new e2("symbol-snippet", {character: "\\eb66"}), e2.tasklist = new e2("tasklist", {character: "\\eb67"}), e2.telescope = new e2("telescope", {character: "\\eb68"}), e2.textSize = new e2("text-size", {character: "\\eb69"}), e2.threeBars = new e2("three-bars", {character: "\\eb6a"}), e2.thumbsdown = new e2("thumbsdown", {character: "\\eb6b"}), e2.thumbsup = new e2("thumbsup", {character: "\\eb6c"}), e2.tools = new e2("tools", {character: "\\eb6d"}), e2.triangleDown = new e2("triangle-down", {character: "\\eb6e"}), e2.triangleLeft = new e2("triangle-left", {character: "\\eb6f"}), e2.triangleRight = new e2("triangle-right", {character: "\\eb70"}), e2.triangleUp = new e2("triangle-up", {character: "\\eb71"}), e2.twitter = new e2("twitter", {character: "\\eb72"}), e2.unfold = new e2("unfold", {character: "\\eb73"}), e2.unlock = new e2("unlock", {character: "\\eb74"}), e2.unmute = new e2("unmute", {character: "\\eb75"}), e2.unverified = new e2("unverified", {character: "\\eb76"}), e2.verified = new e2("verified", {character: "\\eb77"}), e2.versions = new e2("versions", {character: "\\eb78"}), e2.vmActive = new e2("vm-active", {character: "\\eb79"}), e2.vmOutline = new e2("vm-outline", {character: "\\eb7a"}), e2.vmRunning = new e2("vm-running", {character: "\\eb7b"}), e2.watch = new e2("watch", {character: "\\eb7c"}), e2.whitespace = new e2("whitespace", {character: "\\eb7d"}), e2.wholeWord = new e2("whole-word", {character: "\\eb7e"}), e2.window = new e2("window", {character: "\\eb7f"}), e2.wordWrap = new e2("word-wrap", {character: "\\eb80"}), e2.zoomIn = new e2("zoom-in", {character: "\\eb81"}), e2.zoomOut = new e2("zoom-out", {character: "\\eb82"}), e2.listFilter = new e2("list-filter", {character: "\\eb83"}), e2.listFlat = new e2("list-flat", {character: "\\eb84"}), e2.listSelection = new e2("list-selection", {character: "\\eb85"}), e2.selection = new e2("selection", {character: "\\eb85"}), e2.listTree = new e2("list-tree", {character: "\\eb86"}), e2.debugBreakpointFunctionUnverified = new e2("debug-breakpoint-function-unverified", {character: "\\eb87"}), e2.debugBreakpointFunction = new e2("debug-breakpoint-function", {character: "\\eb88"}), e2.debugBreakpointFunctionDisabled = new e2("debug-breakpoint-function-disabled", {character: "\\eb88"}), e2.debugStackframeActive = new e2("debug-stackframe-active", {character: "\\eb89"}), e2.debugStackframeDot = new e2("debug-stackframe-dot", {character: "\\eb8a"}), e2.debugStackframe = new e2("debug-stackframe", {character: "\\eb8b"}), e2.debugStackframeFocused = new e2("debug-stackframe-focused", {character: "\\eb8b"}), e2.debugBreakpointUnsupported = new e2("debug-breakpoint-unsupported", {character: "\\eb8c"}), e2.symbolString = new e2("symbol-string", {character: "\\eb8d"}), e2.debugReverseContinue = new e2("debug-reverse-continue", {character: "\\eb8e"}), e2.debugStepBack = new e2("debug-step-back", {character: "\\eb8f"}), e2.debugRestartFrame = new e2("debug-restart-frame", {character: "\\eb90"}), e2.callIncoming = new e2("call-incoming", {character: "\\eb92"}), e2.callOutgoing = new e2("call-outgoing", {character: "\\eb93"}), e2.menu = new e2("menu", {character: "\\eb94"}), e2.expandAll = new e2("expand-all", {character: "\\eb95"}), e2.feedback = new e2("feedback", {character: "\\eb96"}), e2.groupByRefType = new e2("group-by-ref-type", {character: "\\eb97"}), e2.ungroupByRefType = new e2("ungroup-by-ref-type", {character: "\\eb98"}), e2.account = new e2("account", {character: "\\eb99"}), e2.bellDot = new e2("bell-dot", {character: "\\eb9a"}), e2.debugConsole = new e2("debug-console", {character: "\\eb9b"}), e2.library = new e2("library", {character: "\\eb9c"}), e2.output = new e2("output", {character: "\\eb9d"}), e2.runAll = new e2("run-all", {character: "\\eb9e"}), e2.syncIgnored = new e2("sync-ignored", {character: "\\eb9f"}), e2.pinned = new e2("pinned", {character: "\\eba0"}), e2.githubInverted = new e2("github-inverted", {character: "\\eba1"}), e2.debugAlt = new e2("debug-alt", {character: "\\eb91"}), e2.serverProcess = new e2("server-process", {character: "\\eba2"}), e2.serverEnvironment = new e2("server-environment", {character: "\\eba3"}), e2.pass = new e2("pass", {character: "\\eba4"}), e2.stopCircle = new e2("stop-circle", {character: "\\eba5"}), e2.playCircle = new e2("play-circle", {character: "\\eba6"}), e2.record = new e2("record", {character: "\\eba7"}), e2.debugAltSmall = new e2("debug-alt-small", {character: "\\eba8"}), e2.vmConnect = new e2("vm-connect", {character: "\\eba9"}), e2.cloud = new e2("cloud", {character: "\\ebaa"}), e2.merge = new e2("merge", {character: "\\ebab"});
  }(l || (l = {}));
  const c = /(\\)?\$\([a-z0-9\-]+?(?:~[a-z0-9\-]*?)?\)/gi;
  function d(e2) {
    return e2.replace(c, (e3, t2) => t2 ? e3 : "\\" + e3);
  }
  const h = /\\\$\([a-z0-9\-]+?(?:~[a-z0-9\-]*?)?\)/gi;
  function u(e2) {
    return e2.replace(h, (e3) => "\\" + e3);
  }
  const p = /(\\)?\$\((([a-z0-9\-]+?)(?:~([a-z0-9\-]*?))?)\)/gi;
  function m(e2) {
    return e2.replace(p, (e3, t2, n2, i2, r2) => t2 ? `$(${n2})` : `<span class="codicon codicon-${i2}${r2 ? " codicon-animation-" + r2 : ""}"></span>`);
  }
  const g = /(\s)?(\\)?\$\([a-z0-9\-]+?(?:~[a-z0-9\-]*?)?\)(\s)?/gi;
  function f(e2) {
    return e2.indexOf(i.a) === -1 ? e2 : e2.replace(g, (e3, t2, n2, i2) => n2 ? e3 : t2 || i2 || "");
  }
}, function(e, t, n) {
  "use strict";
  var i;
  n.d(t, "b", function() {
    return i;
  }), n.d(t, "a", function() {
    return r;
  }), n.d(t, "c", function() {
    return s;
  }), n.d(t, "d", function() {
    return a;
  }), function(e2) {
    e2.serviceIds = new Map(), e2.DI_TARGET = "$di$target", e2.DI_DEPENDENCIES = "$di$dependencies", e2.getServiceDependencies = function(t2) {
      return t2[e2.DI_DEPENDENCIES] || [];
    };
  }(i || (i = {}));
  const r = s("instantiationService");
  function o(e2, t2, n2, r2) {
    t2[i.DI_TARGET] === t2 ? t2[i.DI_DEPENDENCIES].push({id: e2, index: n2, optional: r2}) : (t2[i.DI_DEPENDENCIES] = [{id: e2, index: n2, optional: r2}], t2[i.DI_TARGET] = t2);
  }
  function s(e2) {
    if (i.serviceIds.has(e2))
      return i.serviceIds.get(e2);
    const t2 = function(e3, n2, i2) {
      if (arguments.length !== 3)
        throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
      o(t2, e3, i2, false);
    };
    return t2.toString = () => e2, i.serviceIds.set(e2, t2), t2;
  }
  function a(e2) {
    return function(t2, n2, i2) {
      if (arguments.length !== 3)
        throw new Error("@optional-decorator can only be used to decorate a parameter");
      o(e2, t2, i2, true);
    };
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "c", function() {
    return a;
  }), n.d(t, "h", function() {
    return l;
  }), n.d(t, "e", function() {
    return c;
  }), n.d(t, "b", function() {
    return d;
  }), n.d(t, "f", function() {
    return h;
  }), n.d(t, "a", function() {
    return u;
  }), n.d(t, "g", function() {
    return m;
  }), n.d(t, "d", function() {
    return g;
  });
  var i = n(18), r = n(2), o = n(56), s = n(6);
  const a = Object(i.c)("themeService");
  function l(e2) {
    return {id: e2};
  }
  var c;
  !function(e2) {
    e2.isThemeIcon = function(e3) {
      return e3 && typeof e3 == "object" && typeof e3.id == "string";
    };
    const t2 = /^\$\(([a-z.]+\/)?([a-z-~]+)\)$/i;
    e2.fromString = function(e3) {
      const n3 = t2.exec(e3);
      if (!n3)
        return;
      let [, i2, r2] = n3;
      return i2 || (i2 = "codicon/"), {id: i2 + r2};
    };
    const n2 = /^(codicon\/)?([a-z-]+)(~[a-z]+)?$/i;
    e2.asClassName = function(e3) {
      const t3 = n2.exec(e3.id);
      if (!t3)
        return;
      let [, , i2, r2] = t3, o2 = "codicon codicon-" + i2;
      return r2 && (o2 += " " + r2.substr(1)), o2;
    };
  }(c || (c = {}));
  const d = "hc";
  function h(e2) {
    switch (e2) {
      case "dark":
        return "vs-dark";
      case d:
        return "hc-black";
      default:
        return "vs";
    }
  }
  const u = {ThemingContribution: "base.contributions.theming"};
  let p = new class {
    constructor() {
      this.themingParticipants = [], this.themingParticipants = [], this.onThemingParticipantAddedEmitter = new s.a();
    }
    onColorThemeChange(e2) {
      return this.themingParticipants.push(e2), this.onThemingParticipantAddedEmitter.fire(e2), Object(r.h)(() => {
        const t2 = this.themingParticipants.indexOf(e2);
        this.themingParticipants.splice(t2, 1);
      });
    }
    getThemingParticipants() {
      return this.themingParticipants;
    }
  }();
  function m(e2) {
    return p.onColorThemeChange(e2);
  }
  o.a.add(u.ThemingContribution, p);
  class g extends r.a {
    constructor(e2) {
      super(), this.themeService = e2, this.theme = e2.getColorTheme(), this._register(this.themeService.onDidColorThemeChange((e3) => this.onThemeChange(e3)));
    }
    onThemeChange(e2) {
      this.theme = e2, this.updateStyles();
    }
    updateStyles() {
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "i", function() {
    return s;
  }), n.d(t, "f", function() {
    return a;
  }), n.d(t, "j", function() {
    return l;
  }), n.d(t, "a", function() {
    return c;
  }), n.d(t, "l", function() {
    return d;
  }), n.d(t, "g", function() {
    return h;
  }), n.d(t, "h", function() {
    return u;
  }), n.d(t, "e", function() {
    return p;
  }), n.d(t, "c", function() {
    return m;
  }), n.d(t, "d", function() {
    return g;
  }), n.d(t, "k", function() {
    return f;
  }), n.d(t, "b", function() {
    return b;
  });
  var i = n(25), r = n(13), o = n(2);
  function s(e2) {
    return e2 && typeof e2.then == "function";
  }
  function a(e2) {
    const t2 = new i.b(), n2 = e2(t2.token), o2 = new Promise((e3, i2) => {
      t2.token.onCancellationRequested(() => {
        i2(r.a());
      }), Promise.resolve(n2).then((n3) => {
        t2.dispose(), e3(n3);
      }, (e4) => {
        t2.dispose(), i2(e4);
      });
    });
    return new class {
      cancel() {
        t2.cancel();
      }
      then(e3, t3) {
        return o2.then(e3, t3);
      }
      catch(e3) {
        return this.then(void 0, e3);
      }
      finally(e3) {
        return o2.finally(e3);
      }
    }();
  }
  function l(e2, t2, n2) {
    return Promise.race([e2, new Promise((e3) => t2.onCancellationRequested(() => e3(n2)))]);
  }
  class c {
    constructor(e2) {
      this.defaultDelay = e2, this.timeout = null, this.completionPromise = null, this.doResolve = null, this.doReject = null, this.task = null;
    }
    trigger(e2, t2 = this.defaultDelay) {
      return this.task = e2, this.cancelTimeout(), this.completionPromise || (this.completionPromise = new Promise((e3, t3) => {
        this.doResolve = e3, this.doReject = t3;
      }).then(() => {
        if (this.completionPromise = null, this.doResolve = null, this.task) {
          const e3 = this.task;
          return this.task = null, e3();
        }
      })), this.timeout = setTimeout(() => {
        this.timeout = null, this.doResolve && this.doResolve(null);
      }, t2), this.completionPromise;
    }
    isTriggered() {
      return this.timeout !== null;
    }
    cancel() {
      this.cancelTimeout(), this.completionPromise && (this.doReject && this.doReject(r.a()), this.completionPromise = null);
    }
    cancelTimeout() {
      this.timeout !== null && (clearTimeout(this.timeout), this.timeout = null);
    }
    dispose() {
      this.cancelTimeout();
    }
  }
  function d(e2, t2) {
    return t2 ? new Promise((n2, i2) => {
      const o2 = setTimeout(n2, e2);
      t2.onCancellationRequested(() => {
        clearTimeout(o2), i2(r.a());
      });
    }) : a((t3) => d(e2, t3));
  }
  function h(e2, t2 = 0) {
    const n2 = setTimeout(e2, t2);
    return Object(o.h)(() => clearTimeout(n2));
  }
  function u(e2, t2 = (e3) => !!e3, n2 = null) {
    let i2 = 0;
    const r2 = e2.length, o2 = () => {
      if (i2 >= r2)
        return Promise.resolve(n2);
      const s2 = e2[i2++];
      return Promise.resolve(s2()).then((e3) => t2(e3) ? Promise.resolve(e3) : o2());
    };
    return o2();
  }
  class p {
    constructor(e2, t2) {
      this._token = -1, typeof e2 == "function" && typeof t2 == "number" && this.setIfNotSet(e2, t2);
    }
    dispose() {
      this.cancel();
    }
    cancel() {
      this._token !== -1 && (clearTimeout(this._token), this._token = -1);
    }
    cancelAndSet(e2, t2) {
      this.cancel(), this._token = setTimeout(() => {
        this._token = -1, e2();
      }, t2);
    }
    setIfNotSet(e2, t2) {
      this._token === -1 && (this._token = setTimeout(() => {
        this._token = -1, e2();
      }, t2));
    }
  }
  class m {
    constructor() {
      this._token = -1;
    }
    dispose() {
      this.cancel();
    }
    cancel() {
      this._token !== -1 && (clearInterval(this._token), this._token = -1);
    }
    cancelAndSet(e2, t2) {
      this.cancel(), this._token = setInterval(() => {
        e2();
      }, t2);
    }
  }
  class g {
    constructor(e2, t2) {
      this.timeoutToken = -1, this.runner = e2, this.timeout = t2, this.timeoutHandler = this.onTimeout.bind(this);
    }
    dispose() {
      this.cancel(), this.runner = null;
    }
    cancel() {
      this.isScheduled() && (clearTimeout(this.timeoutToken), this.timeoutToken = -1);
    }
    schedule(e2 = this.timeout) {
      this.cancel(), this.timeoutToken = setTimeout(this.timeoutHandler, e2);
    }
    isScheduled() {
      return this.timeoutToken !== -1;
    }
    onTimeout() {
      this.timeoutToken = -1, this.runner && this.doRun();
    }
    doRun() {
      this.runner && this.runner();
    }
  }
  let f;
  !function() {
    if (typeof requestIdleCallback != "function" || typeof cancelIdleCallback != "function") {
      const e2 = Object.freeze({didTimeout: true, timeRemaining: () => 15});
      f = (t2) => {
        const n2 = setTimeout(() => t2(e2));
        let i2 = false;
        return {dispose() {
          i2 || (i2 = true, clearTimeout(n2));
        }};
      };
    } else
      f = (e2, t2) => {
        const n2 = requestIdleCallback(e2, typeof t2 == "number" ? {timeout: t2} : void 0);
        let i2 = false;
        return {dispose() {
          i2 || (i2 = true, cancelIdleCallback(n2));
        }};
      };
  }();
  class b {
    constructor(e2) {
      this._didRun = false, this._executor = () => {
        try {
          this._value = e2();
        } catch (e3) {
          this._error = e3;
        } finally {
          this._didRun = true;
        }
      }, this._handle = f(() => this._executor());
    }
    dispose() {
      this._handle.dispose();
    }
    get value() {
      if (this._didRun || (this._handle.dispose(), this._executor()), this._error)
        throw this._error;
      return this._value;
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return o;
  });
  var i = n(9), r = n(3);
  class o extends r.a {
    constructor(e2, t2, n2, i2) {
      super(e2, t2, n2, i2), this.selectionStartLineNumber = e2, this.selectionStartColumn = t2, this.positionLineNumber = n2, this.positionColumn = i2;
    }
    toString() {
      return "[" + this.selectionStartLineNumber + "," + this.selectionStartColumn + " -> " + this.positionLineNumber + "," + this.positionColumn + "]";
    }
    equalsSelection(e2) {
      return o.selectionsEqual(this, e2);
    }
    static selectionsEqual(e2, t2) {
      return e2.selectionStartLineNumber === t2.selectionStartLineNumber && e2.selectionStartColumn === t2.selectionStartColumn && e2.positionLineNumber === t2.positionLineNumber && e2.positionColumn === t2.positionColumn;
    }
    getDirection() {
      return this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn ? 0 : 1;
    }
    setEndPosition(e2, t2) {
      return this.getDirection() === 0 ? new o(this.startLineNumber, this.startColumn, e2, t2) : new o(e2, t2, this.startLineNumber, this.startColumn);
    }
    getPosition() {
      return new i.a(this.positionLineNumber, this.positionColumn);
    }
    setStartPosition(e2, t2) {
      return this.getDirection() === 0 ? new o(e2, t2, this.endLineNumber, this.endColumn) : new o(this.endLineNumber, this.endColumn, e2, t2);
    }
    static fromPositions(e2, t2 = e2) {
      return new o(e2.lineNumber, e2.column, t2.lineNumber, t2.column);
    }
    static liftSelection(e2) {
      return new o(e2.selectionStartLineNumber, e2.selectionStartColumn, e2.positionLineNumber, e2.positionColumn);
    }
    static selectionsArrEqual(e2, t2) {
      if (e2 && !t2 || !e2 && t2)
        return false;
      if (!e2 && !t2)
        return true;
      if (e2.length !== t2.length)
        return false;
      for (let n2 = 0, i2 = e2.length; n2 < i2; n2++)
        if (!this.selectionsEqual(e2[n2], t2[n2]))
          return false;
      return true;
    }
    static isISelection(e2) {
      return e2 && typeof e2.selectionStartLineNumber == "number" && typeof e2.selectionStartColumn == "number" && typeof e2.positionLineNumber == "number" && typeof e2.positionColumn == "number";
    }
    static createWithDirection(e2, t2, n2, i2, r2) {
      return r2 === 0 ? new o(e2, t2, n2, i2) : new o(n2, i2, e2, t2);
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return m;
  }), n.d(t, "f", function() {
    return g;
  }), n.d(t, "c", function() {
    return f;
  }), n.d(t, "d", function() {
    return v;
  }), n.d(t, "e", function() {
    return w;
  }), n.d(t, "a", function() {
    return y;
  }), n.d(t, "g", function() {
    return C;
  });
  var i = n(13), r = n(8), o = n(9), s = n(3), a = n(21), l = n(30), c = n(39);
  const d = () => true, h = () => false, u = (e2) => e2 === " " || e2 === "	";
  function p(e2, t2, n2) {
    e2.has(t2) ? e2.get(t2).push(n2) : e2.set(t2, [n2]);
  }
  class m {
    constructor(e2, t2, n2) {
      this._languageIdentifier = e2;
      const i2 = n2.options, r2 = i2.get(117);
      this.readOnly = i2.get(72), this.tabSize = t2.tabSize, this.indentSize = t2.indentSize, this.insertSpaces = t2.insertSpaces, this.lineHeight = i2.get(51), this.pageSize = Math.max(1, Math.floor(r2.height / this.lineHeight) - 2), this.useTabStops = i2.get(104), this.wordSeparators = i2.get(105), this.emptySelectionClipboard = i2.get(26), this.copyWithSyntaxHighlighting = i2.get(16), this.multiCursorMergeOverlapping = i2.get(60), this.multiCursorPaste = i2.get(62), this.autoClosingBrackets = i2.get(5), this.autoClosingQuotes = i2.get(7), this.autoClosingOvertype = i2.get(6), this.autoSurround = i2.get(10), this.autoIndent = i2.get(8), this.autoClosingPairsOpen2 = new Map(), this.autoClosingPairsClose2 = new Map(), this.surroundingPairs = {}, this._electricChars = null, this.shouldAutoCloseBefore = {quote: m._getShouldAutoClose(e2, this.autoClosingQuotes), bracket: m._getShouldAutoClose(e2, this.autoClosingBrackets)};
      let o2 = m._getAutoClosingPairs(e2);
      if (o2)
        for (const e3 of o2)
          p(this.autoClosingPairsOpen2, e3.open.charAt(e3.open.length - 1), e3), e3.close.length === 1 && p(this.autoClosingPairsClose2, e3.close, e3);
      let s2 = m._getSurroundingPairs(e2);
      if (s2)
        for (const e3 of s2)
          this.surroundingPairs[e3.open] = e3.close;
    }
    static shouldRecreate(e2) {
      return e2.hasChanged(117) || e2.hasChanged(105) || e2.hasChanged(26) || e2.hasChanged(60) || e2.hasChanged(62) || e2.hasChanged(5) || e2.hasChanged(7) || e2.hasChanged(6) || e2.hasChanged(10) || e2.hasChanged(104) || e2.hasChanged(51) || e2.hasChanged(72);
    }
    get electricChars() {
      if (!this._electricChars) {
        this._electricChars = {};
        let e2 = m._getElectricCharacters(this._languageIdentifier);
        if (e2)
          for (const t2 of e2)
            this._electricChars[t2] = true;
      }
      return this._electricChars;
    }
    normalizeIndentation(e2) {
      return l.b.normalizeIndentation(e2, this.indentSize, this.insertSpaces);
    }
    static _getElectricCharacters(e2) {
      try {
        return c.a.getElectricCharacters(e2.id);
      } catch (e3) {
        return Object(i.e)(e3), null;
      }
    }
    static _getAutoClosingPairs(e2) {
      try {
        return c.a.getAutoClosingPairs(e2.id);
      } catch (e3) {
        return Object(i.e)(e3), null;
      }
    }
    static _getShouldAutoClose(e2, t2) {
      switch (t2) {
        case "beforeWhitespace":
          return u;
        case "languageDefined":
          return m._getLanguageDefinedShouldAutoClose(e2);
        case "always":
          return d;
        case "never":
          return h;
      }
    }
    static _getLanguageDefinedShouldAutoClose(e2) {
      try {
        const t2 = c.a.getAutoCloseBeforeSet(e2.id);
        return (e3) => t2.indexOf(e3) !== -1;
      } catch (e3) {
        return Object(i.e)(e3), h;
      }
    }
    static _getSurroundingPairs(e2) {
      try {
        return c.a.getSurroundingPairs(e2.id);
      } catch (e3) {
        return Object(i.e)(e3), null;
      }
    }
  }
  class g {
    constructor(e2, t2, n2, i2) {
      this.selectionStart = e2, this.selectionStartLeftoverVisibleColumns = t2, this.position = n2, this.leftoverVisibleColumns = i2, this.selection = g._computeSelection(this.selectionStart, this.position);
    }
    equals(e2) {
      return this.selectionStartLeftoverVisibleColumns === e2.selectionStartLeftoverVisibleColumns && this.leftoverVisibleColumns === e2.leftoverVisibleColumns && this.position.equals(e2.position) && this.selectionStart.equalsRange(e2.selectionStart);
    }
    hasSelection() {
      return !this.selection.isEmpty() || !this.selectionStart.isEmpty();
    }
    move(e2, t2, n2, i2) {
      return e2 ? new g(this.selectionStart, this.selectionStartLeftoverVisibleColumns, new o.a(t2, n2), i2) : new g(new s.a(t2, n2, t2, n2), i2, new o.a(t2, n2), i2);
    }
    static _computeSelection(e2, t2) {
      let n2, i2, r2, o2;
      return e2.isEmpty() ? (n2 = e2.startLineNumber, i2 = e2.startColumn, r2 = t2.lineNumber, o2 = t2.column) : t2.isBeforeOrEqual(e2.getStartPosition()) ? (n2 = e2.endLineNumber, i2 = e2.endColumn, r2 = t2.lineNumber, o2 = t2.column) : (n2 = e2.startLineNumber, i2 = e2.startColumn, r2 = t2.lineNumber, o2 = t2.column), new a.a(n2, i2, r2, o2);
    }
  }
  class f {
    constructor(e2, t2, n2) {
      this.model = e2, this.coordinatesConverter = t2, this.cursorConfig = n2;
    }
  }
  class b {
    constructor(e2) {
      this.modelState = e2, this.viewState = null;
    }
  }
  class _ {
    constructor(e2) {
      this.modelState = null, this.viewState = e2;
    }
  }
  class v {
    constructor(e2, t2) {
      this.modelState = e2, this.viewState = t2;
    }
    static fromModelState(e2) {
      return new b(e2);
    }
    static fromViewState(e2) {
      return new _(e2);
    }
    static fromModelSelection(e2) {
      const t2 = e2.selectionStartLineNumber, n2 = e2.selectionStartColumn, i2 = e2.positionLineNumber, r2 = e2.positionColumn, a2 = new g(new s.a(t2, n2, t2, n2), 0, new o.a(i2, r2), 0);
      return v.fromModelState(a2);
    }
    static fromModelSelections(e2) {
      let t2 = [];
      for (let n2 = 0, i2 = e2.length; n2 < i2; n2++)
        t2[n2] = this.fromModelSelection(e2[n2]);
      return t2;
    }
    equals(e2) {
      return this.viewState.equals(e2.viewState) && this.modelState.equals(e2.modelState);
    }
  }
  class w {
    constructor(e2, t2, n2) {
      this.type = e2, this.commands = t2, this.shouldPushStackElementBefore = n2.shouldPushStackElementBefore, this.shouldPushStackElementAfter = n2.shouldPushStackElementAfter;
    }
  }
  class y {
    static visibleColumnFromColumn(e2, t2, n2) {
      const i2 = e2.length, o2 = t2 - 1 < i2 ? t2 - 1 : i2;
      let s2 = 0, a2 = 0;
      for (; a2 < o2; ) {
        const t3 = r.A(e2, o2, a2);
        if (a2 += t3 >= 65536 ? 2 : 1, t3 === 9)
          s2 = y.nextRenderTabStop(s2, n2);
        else {
          let n3 = r.y(t3);
          for (; a2 < o2; ) {
            const t4 = r.A(e2, o2, a2), i3 = r.y(t4);
            if (r.c(n3, i3))
              break;
            a2 += t4 >= 65536 ? 2 : 1, n3 = i3;
          }
          r.E(t3) || r.C(t3) ? s2 += 2 : s2 += 1;
        }
      }
      return s2;
    }
    static visibleColumnFromColumn2(e2, t2, n2) {
      return this.visibleColumnFromColumn(t2.getLineContent(n2.lineNumber), n2.column, e2.tabSize);
    }
    static columnFromVisibleColumn(e2, t2, n2) {
      if (t2 <= 0)
        return 1;
      const i2 = e2.length;
      let o2 = 0, s2 = 1, a2 = 0;
      for (; a2 < i2; ) {
        const l2 = r.A(e2, i2, a2);
        let c2;
        if (a2 += l2 >= 65536 ? 2 : 1, l2 === 9)
          c2 = y.nextRenderTabStop(o2, n2);
        else {
          let t3 = r.y(l2);
          for (; a2 < i2; ) {
            const n3 = r.A(e2, i2, a2), o3 = r.y(n3);
            if (r.c(t3, o3))
              break;
            a2 += n3 >= 65536 ? 2 : 1, t3 = o3;
          }
          c2 = r.E(l2) || r.C(l2) ? o2 + 2 : o2 + 1;
        }
        const d2 = a2 + 1;
        if (c2 >= t2) {
          return c2 - t2 < t2 - o2 ? d2 : s2;
        }
        o2 = c2, s2 = d2;
      }
      return i2 + 1;
    }
    static columnFromVisibleColumn2(e2, t2, n2, i2) {
      let r2 = this.columnFromVisibleColumn(t2.getLineContent(n2), i2, e2.tabSize), o2 = t2.getLineMinColumn(n2);
      if (r2 < o2)
        return o2;
      let s2 = t2.getLineMaxColumn(n2);
      return r2 > s2 ? s2 : r2;
    }
    static nextRenderTabStop(e2, t2) {
      return e2 + t2 - e2 % t2;
    }
    static nextIndentTabStop(e2, t2) {
      return e2 + t2 - e2 % t2;
    }
    static prevRenderTabStop(e2, t2) {
      return e2 - 1 - (e2 - 1) % t2;
    }
    static prevIndentTabStop(e2, t2) {
      return e2 - 1 - (e2 - 1) % t2;
    }
  }
  function C(e2) {
    return e2 === "'" || e2 === '"' || e2 === "`";
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return d;
  }), n.d(t, "b", function() {
    return f;
  });
  var i = n(11), r = n(42);
  const o = /^\w[\w\d+.-]*$/, s = /^\//, a = /^\/\//;
  const l = "/", c = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;
  class d {
    constructor(e2, t2, n2, i2, r2, c2 = false) {
      typeof e2 == "object" ? (this.scheme = e2.scheme || "", this.authority = e2.authority || "", this.path = e2.path || "", this.query = e2.query || "", this.fragment = e2.fragment || "") : (this.scheme = function(e3, t3) {
        return e3 || t3 ? e3 : "file";
      }(e2, c2), this.authority = t2 || "", this.path = function(e3, t3) {
        switch (e3) {
          case "https":
          case "http":
          case "file":
            t3 ? t3[0] !== l && (t3 = l + t3) : t3 = l;
        }
        return t3;
      }(this.scheme, n2 || ""), this.query = i2 || "", this.fragment = r2 || "", function(e3, t3) {
        if (!e3.scheme && t3)
          throw new Error(`[UriError]: Scheme is missing: {scheme: "", authority: "${e3.authority}", path: "${e3.path}", query: "${e3.query}", fragment: "${e3.fragment}"}`);
        if (e3.scheme && !o.test(e3.scheme))
          throw new Error("[UriError]: Scheme contains illegal characters.");
        if (e3.path) {
          if (e3.authority) {
            if (!s.test(e3.path))
              throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character');
          } else if (a.test(e3.path))
            throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")');
        }
      }(this, c2));
    }
    static isUri(e2) {
      return e2 instanceof d || !!e2 && (typeof e2.authority == "string" && typeof e2.fragment == "string" && typeof e2.path == "string" && typeof e2.query == "string" && typeof e2.scheme == "string" && typeof e2.fsPath == "function" && typeof e2.with == "function" && typeof e2.toString == "function");
    }
    get fsPath() {
      return f(this, false);
    }
    with(e2) {
      if (!e2)
        return this;
      let {scheme: t2, authority: n2, path: i2, query: r2, fragment: o2} = e2;
      return t2 === void 0 ? t2 = this.scheme : t2 === null && (t2 = ""), n2 === void 0 ? n2 = this.authority : n2 === null && (n2 = ""), i2 === void 0 ? i2 = this.path : i2 === null && (i2 = ""), r2 === void 0 ? r2 = this.query : r2 === null && (r2 = ""), o2 === void 0 ? o2 = this.fragment : o2 === null && (o2 = ""), t2 === this.scheme && n2 === this.authority && i2 === this.path && r2 === this.query && o2 === this.fragment ? this : new u(t2, n2, i2, r2, o2);
    }
    static parse(e2, t2 = false) {
      const n2 = c.exec(e2);
      return n2 ? new u(n2[2] || "", v(n2[4] || ""), v(n2[5] || ""), v(n2[7] || ""), v(n2[9] || ""), t2) : new u("", "", "", "", "");
    }
    static file(e2) {
      let t2 = "";
      if (i.i && (e2 = e2.replace(/\\/g, l)), e2[0] === l && e2[1] === l) {
        const n2 = e2.indexOf(l, 2);
        n2 === -1 ? (t2 = e2.substring(2), e2 = l) : (t2 = e2.substring(2, n2), e2 = e2.substring(n2) || l);
      }
      return new u("file", t2, e2, "", "");
    }
    static from(e2) {
      return new u(e2.scheme, e2.authority, e2.path, e2.query, e2.fragment);
    }
    static joinPath(e2, ...t2) {
      if (!e2.path)
        throw new Error("[UriError]: cannot call joinPaths on URI without path");
      let n2;
      return n2 = i.i && e2.scheme === "file" ? d.file(r.i.join(f(e2, true), ...t2)).path : r.e.join(e2.path, ...t2), e2.with({path: n2});
    }
    toString(e2 = false) {
      return b(this, e2);
    }
    toJSON() {
      return this;
    }
    static revive(e2) {
      if (e2) {
        if (e2 instanceof d)
          return e2;
        {
          const t2 = new u(e2);
          return t2._formatted = e2.external, t2._fsPath = e2._sep === h ? e2.fsPath : null, t2;
        }
      }
      return e2;
    }
  }
  const h = i.i ? 1 : void 0;
  class u extends d {
    constructor() {
      super(...arguments), this._formatted = null, this._fsPath = null;
    }
    get fsPath() {
      return this._fsPath || (this._fsPath = f(this, false)), this._fsPath;
    }
    toString(e2 = false) {
      return e2 ? b(this, true) : (this._formatted || (this._formatted = b(this, false)), this._formatted);
    }
    toJSON() {
      const e2 = {$mid: 1};
      return this._fsPath && (e2.fsPath = this._fsPath, e2._sep = h), this._formatted && (e2.external = this._formatted), this.path && (e2.path = this.path), this.scheme && (e2.scheme = this.scheme), this.authority && (e2.authority = this.authority), this.query && (e2.query = this.query), this.fragment && (e2.fragment = this.fragment), e2;
    }
  }
  const p = {58: "%3A", 47: "%2F", 63: "%3F", 35: "%23", 91: "%5B", 93: "%5D", 64: "%40", 33: "%21", 36: "%24", 38: "%26", 39: "%27", 40: "%28", 41: "%29", 42: "%2A", 43: "%2B", 44: "%2C", 59: "%3B", 61: "%3D", 32: "%20"};
  function m(e2, t2) {
    let n2 = void 0, i2 = -1;
    for (let r2 = 0; r2 < e2.length; r2++) {
      const o2 = e2.charCodeAt(r2);
      if (o2 >= 97 && o2 <= 122 || o2 >= 65 && o2 <= 90 || o2 >= 48 && o2 <= 57 || o2 === 45 || o2 === 46 || o2 === 95 || o2 === 126 || t2 && o2 === 47)
        i2 !== -1 && (n2 += encodeURIComponent(e2.substring(i2, r2)), i2 = -1), n2 !== void 0 && (n2 += e2.charAt(r2));
      else {
        n2 === void 0 && (n2 = e2.substr(0, r2));
        const t3 = p[o2];
        t3 !== void 0 ? (i2 !== -1 && (n2 += encodeURIComponent(e2.substring(i2, r2)), i2 = -1), n2 += t3) : i2 === -1 && (i2 = r2);
      }
    }
    return i2 !== -1 && (n2 += encodeURIComponent(e2.substring(i2))), n2 !== void 0 ? n2 : e2;
  }
  function g(e2) {
    let t2 = void 0;
    for (let n2 = 0; n2 < e2.length; n2++) {
      const i2 = e2.charCodeAt(n2);
      i2 === 35 || i2 === 63 ? (t2 === void 0 && (t2 = e2.substr(0, n2)), t2 += p[i2]) : t2 !== void 0 && (t2 += e2[n2]);
    }
    return t2 !== void 0 ? t2 : e2;
  }
  function f(e2, t2) {
    let n2;
    return n2 = e2.authority && e2.path.length > 1 && e2.scheme === "file" ? `//${e2.authority}${e2.path}` : e2.path.charCodeAt(0) === 47 && (e2.path.charCodeAt(1) >= 65 && e2.path.charCodeAt(1) <= 90 || e2.path.charCodeAt(1) >= 97 && e2.path.charCodeAt(1) <= 122) && e2.path.charCodeAt(2) === 58 ? t2 ? e2.path.substr(1) : e2.path[1].toLowerCase() + e2.path.substr(2) : e2.path, i.i && (n2 = n2.replace(/\//g, "\\")), n2;
  }
  function b(e2, t2) {
    const n2 = t2 ? g : m;
    let i2 = "", {scheme: r2, authority: o2, path: s2, query: a2, fragment: c2} = e2;
    if (r2 && (i2 += r2, i2 += ":"), (o2 || r2 === "file") && (i2 += l, i2 += l), o2) {
      let e3 = o2.indexOf("@");
      if (e3 !== -1) {
        const t3 = o2.substr(0, e3);
        o2 = o2.substr(e3 + 1), e3 = t3.indexOf(":"), e3 === -1 ? i2 += n2(t3, false) : (i2 += n2(t3.substr(0, e3), false), i2 += ":", i2 += n2(t3.substr(e3 + 1), false)), i2 += "@";
      }
      o2 = o2.toLowerCase(), e3 = o2.indexOf(":"), e3 === -1 ? i2 += n2(o2, false) : (i2 += n2(o2.substr(0, e3), false), i2 += o2.substr(e3));
    }
    if (s2) {
      if (s2.length >= 3 && s2.charCodeAt(0) === 47 && s2.charCodeAt(2) === 58) {
        const e3 = s2.charCodeAt(1);
        e3 >= 65 && e3 <= 90 && (s2 = `/${String.fromCharCode(e3 + 32)}:${s2.substr(3)}`);
      } else if (s2.length >= 2 && s2.charCodeAt(1) === 58) {
        const e3 = s2.charCodeAt(0);
        e3 >= 65 && e3 <= 90 && (s2 = `${String.fromCharCode(e3 + 32)}:${s2.substr(2)}`);
      }
      i2 += n2(s2, true);
    }
    return a2 && (i2 += "?", i2 += n2(a2, false)), c2 && (i2 += "#", i2 += t2 ? c2 : m(c2, false)), i2;
  }
  const _ = /(%[0-9A-Za-z][0-9A-Za-z])+/g;
  function v(e2) {
    return e2.match(_) ? e2.replace(_, (e3) => function e4(t2) {
      try {
        return decodeURIComponent(t2);
      } catch (n2) {
        return t2.length > 3 ? t2.substr(0, 3) + e4(t2.substr(3)) : t2;
      }
    }(e3)) : e2;
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "f", function() {
    return p;
  }), n.d(t, "b", function() {
    return m;
  }), n.d(t, "a", function() {
    return g;
  }), n.d(t, "d", function() {
    return f;
  }), n.d(t, "e", function() {
    return _;
  }), n.d(t, "c", function() {
    return v;
  });
  var i = n(60), r = n(18), o = n(10), s = n(27), a = n(2), l = n(6), c = n(37), d = n(53), h = function(e2, t2, n2, i2) {
    var r2, o2 = arguments.length, s2 = o2 < 3 ? t2 : i2 === null ? i2 = Object.getOwnPropertyDescriptor(t2, n2) : i2;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
      s2 = Reflect.decorate(e2, t2, n2, i2);
    else
      for (var a2 = e2.length - 1; a2 >= 0; a2--)
        (r2 = e2[a2]) && (s2 = (o2 < 3 ? r2(s2) : o2 > 3 ? r2(t2, n2, s2) : r2(t2, n2)) || s2);
    return o2 > 3 && s2 && Object.defineProperty(t2, n2, s2), s2;
  }, u = function(e2, t2) {
    return function(n2, i2) {
      t2(n2, i2, e2);
    };
  };
  function p(e2) {
    return e2.command !== void 0;
  }
  class m {
    constructor(e2) {
      this.id = m._idPool++, this._debugName = e2;
    }
  }
  m._idPool = 0, m.CommandPalette = new m("CommandPalette"), m.EditorContext = new m("EditorContext"), m.EditorContextPeek = new m("EditorContextPeek"), m.MenubarEditMenu = new m("MenubarEditMenu"), m.MenubarGoMenu = new m("MenubarGoMenu"), m.MenubarSelectionMenu = new m("MenubarSelectionMenu");
  const g = Object(r.c)("menuService"), f = new class {
    constructor() {
      this._commands = new Map(), this._menuItems = new Map(), this._onDidChangeMenu = new l.a(), this.onDidChangeMenu = this._onDidChangeMenu.event, this._commandPaletteChangeEvent = {has: (e2) => e2 === m.CommandPalette};
    }
    addCommand(e2) {
      return this.addCommands(c.a.single(e2));
    }
    addCommands(e2) {
      for (const t2 of e2)
        this._commands.set(t2.id, t2);
      return this._onDidChangeMenu.fire(this._commandPaletteChangeEvent), Object(a.h)(() => {
        let t2 = false;
        for (const n2 of e2)
          t2 = this._commands.delete(n2.id) || t2;
        t2 && this._onDidChangeMenu.fire(this._commandPaletteChangeEvent);
      });
    }
    getCommand(e2) {
      return this._commands.get(e2);
    }
    getCommands() {
      const e2 = new Map();
      return this._commands.forEach((t2, n2) => e2.set(n2, t2)), e2;
    }
    appendMenuItem(e2, t2) {
      return this.appendMenuItems(c.a.single({id: e2, item: t2}));
    }
    appendMenuItems(e2) {
      const t2 = new Set(), n2 = new d.a();
      for (const {id: i2, item: r2} of e2) {
        let e3 = this._menuItems.get(i2);
        e3 || (e3 = new d.a(), this._menuItems.set(i2, e3)), n2.push(e3.push(r2)), t2.add(i2);
      }
      return this._onDidChangeMenu.fire(t2), Object(a.h)(() => {
        if (n2.size > 0) {
          for (let e3 of n2)
            e3();
          this._onDidChangeMenu.fire(t2), n2.clear();
        }
      });
    }
    getMenuItems(e2) {
      let t2;
      return t2 = this._menuItems.has(e2) ? [...this._menuItems.get(e2)] : [], e2 === m.CommandPalette && this._appendImplicitItems(t2), t2;
    }
    _appendImplicitItems(e2) {
      const t2 = new Set();
      for (const n2 of e2)
        p(n2) && (t2.add(n2.command.id), n2.alt && t2.add(n2.alt.id));
      this._commands.forEach((n2, i2) => {
        t2.has(i2) || e2.push({command: n2});
      });
    }
  }();
  let b = class extends i.a {
    constructor(e2, t2, n2) {
      super(e2, t2), this._commandService = n2;
    }
    run(...e2) {
      return this._commandService.executeCommand(this.id, ...e2);
    }
  };
  b = h([u(2, s.b)], b);
  class _ extends i.d {
    constructor(e2, t2, n2, r2) {
      super("submenuitem." + e2.submenu.id, typeof e2.title == "string" ? e2.title : e2.title.value, () => {
        const o2 = [], s2 = t2.createMenu(e2.submenu, n2), a2 = s2.getActions(r2);
        s2.dispose();
        for (let e3 of a2) {
          const [, t3] = e3;
          t3.length > 0 && (o2.push(...t3), o2.push(new i.c()));
        }
        return o2.length && o2.pop(), o2;
      }, "submenu"), this.item = e2;
    }
  }
  let v = class e2 extends b {
    constructor(t2, n2, i2, r2, o2) {
      if (typeof t2.title == "string" ? super(t2.id, t2.title, o2) : super(t2.id, t2.title.value, o2), this._cssClass = void 0, this._enabled = !t2.precondition || r2.contextMatchesRules(t2.precondition), this._tooltip = t2.tooltip ? typeof t2.tooltip == "string" ? t2.tooltip : t2.tooltip.value : void 0, t2.toggled) {
        const e3 = t2.toggled.condition ? t2.toggled : {condition: t2.toggled};
        this._checked = r2.contextMatchesRules(e3.condition), this._checked && e3.tooltip && (this._tooltip = typeof e3.tooltip == "string" ? e3.tooltip : e3.tooltip.value);
      }
      this._options = i2 || {}, this.item = t2, this.alt = n2 ? new e2(n2, void 0, this._options, r2, o2) : void 0;
    }
    dispose() {
      this.alt && this.alt.dispose(), super.dispose();
    }
    run(...e3) {
      let t2 = [];
      return this._options.arg && (t2 = [...t2, this._options.arg]), this._options.shouldForwardArgs && (t2 = [...t2, ...e3]), super.run(...t2);
    }
  };
  v = h([u(3, o.b), u(4, s.b)], v);
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return o;
  }), n.d(t, "b", function() {
    return a;
  });
  var i = n(6);
  const r = Object.freeze(function(e2, t2) {
    const n2 = setTimeout(e2.bind(t2), 0);
    return {dispose() {
      clearTimeout(n2);
    }};
  });
  var o;
  !function(e2) {
    e2.isCancellationToken = function(t2) {
      return t2 === e2.None || t2 === e2.Cancelled || (t2 instanceof s || !(!t2 || typeof t2 != "object") && (typeof t2.isCancellationRequested == "boolean" && typeof t2.onCancellationRequested == "function"));
    }, e2.None = Object.freeze({isCancellationRequested: false, onCancellationRequested: i.b.None}), e2.Cancelled = Object.freeze({isCancellationRequested: true, onCancellationRequested: r});
  }(o || (o = {}));
  class s {
    constructor() {
      this._isCancelled = false, this._emitter = null;
    }
    cancel() {
      this._isCancelled || (this._isCancelled = true, this._emitter && (this._emitter.fire(void 0), this.dispose()));
    }
    get isCancellationRequested() {
      return this._isCancelled;
    }
    get onCancellationRequested() {
      return this._isCancelled ? r : (this._emitter || (this._emitter = new i.a()), this._emitter.event);
    }
    dispose() {
      this._emitter && (this._emitter.dispose(), this._emitter = null);
    }
  }
  class a {
    constructor(e2) {
      this._token = void 0, this._parentListener = void 0, this._parentListener = e2 && e2.onCancellationRequested(this.cancel, this);
    }
    get token() {
      return this._token || (this._token = new s()), this._token;
    }
    cancel() {
      this._token ? this._token instanceof s && this._token.cancel() : this._token = o.Cancelled;
    }
    dispose(e2 = false) {
      e2 && this.cancel(), this._parentListener && this._parentListener.dispose(), this._token ? this._token instanceof s && this._token.dispose() : this._token = o.None;
    }
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "h", function() {
    return s;
  }), n.d(t, "b", function() {
    return a;
  }), n.d(t, "j", function() {
    return l;
  }), n.d(t, "a", function() {
    return c;
  }), n.d(t, "i", function() {
    return v;
  }), n.d(t, "e", function() {
    return w;
  }), n.d(t, "f", function() {
    return C;
  }), n.d(t, "l", function() {
    return x;
  }), n.d(t, "c", function() {
    return k;
  }), n.d(t, "d", function() {
    return E;
  }), n.d(t, "k", function() {
    return T;
  }), n.d(t, "g", function() {
    return N;
  });
  var i = n(0), r = n(11), o = n(73);
  const s = 8;
  class a {
    constructor(e2) {
      this._values = e2;
    }
    hasChanged(e2) {
      return this._values[e2];
    }
  }
  class l {
    constructor() {
      this._values = [];
    }
    _read(e2) {
      return this._values[e2];
    }
    get(e2) {
      return this._values[e2];
    }
    _write(e2, t2) {
      this._values[e2] = t2;
    }
  }
  class c {
    constructor() {
      this.stableMinimapLayoutInput = null, this.stableFitMaxMinimapScale = 0, this.stableFitRemainingWidth = 0;
    }
  }
  class d {
    constructor(e2, t2, n2, i2) {
      this.id = e2, this.name = t2, this.defaultValue = n2, this.schema = i2;
    }
    compute(e2, t2, n2) {
      return n2;
    }
  }
  class h {
    constructor(e2, t2 = null) {
      this.schema = void 0, this.id = e2, this.name = "_never_", this.defaultValue = void 0, this.deps = t2;
    }
    validate(e2) {
      return this.defaultValue;
    }
  }
  class u {
    constructor(e2, t2, n2, i2) {
      this.id = e2, this.name = t2, this.defaultValue = n2, this.schema = i2;
    }
    validate(e2) {
      return e2 === void 0 ? this.defaultValue : e2;
    }
    compute(e2, t2, n2) {
      return n2;
    }
  }
  class p extends u {
    static boolean(e2, t2) {
      return e2 === void 0 ? t2 : e2 !== "false" && Boolean(e2);
    }
    constructor(e2, t2, n2, i2) {
      i2 !== void 0 && (i2.type = "boolean", i2.default = n2), super(e2, t2, n2, i2);
    }
    validate(e2) {
      return p.boolean(e2, this.defaultValue);
    }
  }
  class m extends u {
    constructor(e2, t2, n2, i2, r2, o2) {
      o2 !== void 0 && (o2.type = "integer", o2.default = n2, o2.minimum = i2, o2.maximum = r2), super(e2, t2, n2, o2), this.minimum = i2, this.maximum = r2;
    }
    static clampedInt(e2, t2, n2, i2) {
      if (e2 === void 0)
        return t2;
      let r2 = parseInt(e2, 10);
      return isNaN(r2) ? t2 : (r2 = Math.max(n2, r2), r2 = Math.min(i2, r2), 0 | r2);
    }
    validate(e2) {
      return m.clampedInt(e2, this.defaultValue, this.minimum, this.maximum);
    }
  }
  class g extends u {
    constructor(e2, t2, n2, i2, r2) {
      r2 !== void 0 && (r2.type = "number", r2.default = n2), super(e2, t2, n2, r2), this.validationFn = i2;
    }
    static clamp(e2, t2, n2) {
      return e2 < t2 ? t2 : e2 > n2 ? n2 : e2;
    }
    static float(e2, t2) {
      if (typeof e2 == "number")
        return e2;
      if (e2 === void 0)
        return t2;
      const n2 = parseFloat(e2);
      return isNaN(n2) ? t2 : n2;
    }
    validate(e2) {
      return this.validationFn(g.float(e2, this.defaultValue));
    }
  }
  class f extends u {
    static string(e2, t2) {
      return typeof e2 != "string" ? t2 : e2;
    }
    constructor(e2, t2, n2, i2) {
      i2 !== void 0 && (i2.type = "string", i2.default = n2), super(e2, t2, n2, i2);
    }
    validate(e2) {
      return f.string(e2, this.defaultValue);
    }
  }
  class b extends u {
    constructor(e2, t2, n2, i2, r2) {
      r2 !== void 0 && (r2.type = "string", r2.enum = i2, r2.default = n2), super(e2, t2, n2, r2), this._allowedValues = i2;
    }
    static stringSet(e2, t2, n2) {
      return typeof e2 != "string" || n2.indexOf(e2) === -1 ? t2 : e2;
    }
    validate(e2) {
      return b.stringSet(e2, this.defaultValue, this._allowedValues);
    }
  }
  class _ extends d {
    constructor(e2, t2, n2, i2, r2, o2, s2) {
      s2 !== void 0 && (s2.type = "string", s2.enum = r2, s2.default = i2), super(e2, t2, n2, s2), this._allowedValues = r2, this._convert = o2;
    }
    validate(e2) {
      return typeof e2 != "string" || this._allowedValues.indexOf(e2) === -1 ? this.defaultValue : this._convert(e2);
    }
  }
  var v;
  !function(e2) {
    e2[e2.Line = 1] = "Line", e2[e2.Block = 2] = "Block", e2[e2.Underline = 3] = "Underline", e2[e2.LineThin = 4] = "LineThin", e2[e2.BlockOutline = 5] = "BlockOutline", e2[e2.UnderlineThin = 6] = "UnderlineThin";
  }(v || (v = {}));
  class w extends d {
    constructor() {
      super(37, "fontLigatures", w.OFF, {anyOf: [{type: "boolean", description: i.a("fontLigatures", "Enables/Disables font ligatures.")}, {type: "string", description: i.a("fontFeatureSettings", "Explicit font-feature-settings.")}], description: i.a("fontLigaturesGeneral", "Configures font ligatures or font features."), default: false});
    }
    validate(e2) {
      return e2 === void 0 ? this.defaultValue : typeof e2 == "string" ? e2 === "false" ? w.OFF : e2 === "true" ? w.ON : e2 : Boolean(e2) ? w.ON : w.OFF;
    }
  }
  w.OFF = '"liga" off, "calt" off', w.ON = '"liga" on, "calt" on';
  class y extends d {
    constructor() {
      super(39, "fontWeight", k.fontWeight, {anyOf: [{type: "number", minimum: y.MINIMUM_VALUE, maximum: y.MAXIMUM_VALUE, errorMessage: i.a("fontWeightErrorMessage", 'Only "normal" and "bold" keywords or numbers between 1 and 1000 are allowed.')}, {type: "string", pattern: "^(normal|bold|1000|[1-9][0-9]{0,2})$"}, {enum: y.SUGGESTION_VALUES}], default: k.fontWeight, description: i.a("fontWeight", 'Controls the font weight. Accepts "normal" and "bold" keywords or numbers between 1 and 1000.')});
    }
    validate(e2) {
      return e2 === "normal" || e2 === "bold" ? e2 : String(m.clampedInt(e2, k.fontWeight, y.MINIMUM_VALUE, y.MAXIMUM_VALUE));
    }
  }
  y.SUGGESTION_VALUES = ["normal", "bold", "100", "200", "300", "400", "500", "600", "700", "800", "900"], y.MINIMUM_VALUE = 1, y.MAXIMUM_VALUE = 1e3;
  class C extends h {
    constructor() {
      super(117, [42, 50, 31, 56, 84, 52, 53, 86, 106, 109, 110, 2]);
    }
    compute(e2, t2, n2) {
      return C.computeLayout(t2, {memory: e2.memory, outerWidth: e2.outerWidth, outerHeight: e2.outerHeight, isDominatedByLongLines: e2.isDominatedByLongLines, lineHeight: e2.fontInfo.lineHeight, viewLineCount: e2.viewLineCount, lineNumbersDigitCount: e2.lineNumbersDigitCount, typicalHalfwidthCharacterWidth: e2.fontInfo.typicalHalfwidthCharacterWidth, maxDigitWidth: e2.fontInfo.maxDigitWidth, pixelRatio: e2.pixelRatio});
    }
    static computeContainedMinimapLineCount(e2) {
      const t2 = e2.height / e2.lineHeight, n2 = e2.scrollBeyondLastLine ? t2 - 1 : 0, i2 = (e2.viewLineCount + n2) / (e2.pixelRatio * e2.height);
      return {typicalViewportLineCount: t2, extraLinesBeyondLastLine: n2, desiredRatio: i2, minimapLineCount: Math.floor(e2.viewLineCount / i2)};
    }
    static _computeMinimapLayout(e2, t2) {
      const n2 = e2.outerWidth, i2 = e2.outerHeight, r2 = e2.pixelRatio;
      if (!e2.minimap.enabled)
        return {renderMinimap: 0, minimapLeft: 0, minimapWidth: 0, minimapHeightIsEditorHeight: false, minimapIsSampling: false, minimapScale: 1, minimapLineHeight: 1, minimapCanvasInnerWidth: 0, minimapCanvasInnerHeight: Math.floor(r2 * i2), minimapCanvasOuterWidth: 0, minimapCanvasOuterHeight: i2};
      const o2 = t2.stableMinimapLayoutInput, a2 = o2 && e2.outerHeight === o2.outerHeight && e2.lineHeight === o2.lineHeight && e2.typicalHalfwidthCharacterWidth === o2.typicalHalfwidthCharacterWidth && e2.pixelRatio === o2.pixelRatio && e2.scrollBeyondLastLine === o2.scrollBeyondLastLine && e2.minimap.enabled === o2.minimap.enabled && e2.minimap.side === o2.minimap.side && e2.minimap.size === o2.minimap.size && e2.minimap.showSlider === o2.minimap.showSlider && e2.minimap.renderCharacters === o2.minimap.renderCharacters && e2.minimap.maxColumn === o2.minimap.maxColumn && e2.minimap.scale === o2.minimap.scale && e2.verticalScrollbarWidth === o2.verticalScrollbarWidth && e2.isViewportWrapping === o2.isViewportWrapping, l2 = e2.lineHeight, c2 = e2.typicalHalfwidthCharacterWidth, d2 = e2.scrollBeyondLastLine, h2 = e2.minimap.renderCharacters;
      let u2 = r2 >= 2 ? Math.round(2 * e2.minimap.scale) : e2.minimap.scale;
      const p2 = e2.minimap.maxColumn, m2 = e2.minimap.size, g2 = e2.minimap.side, f2 = e2.verticalScrollbarWidth, b2 = e2.viewLineCount, _2 = e2.remainingWidth, v2 = e2.isViewportWrapping, w2 = h2 ? 2 : 3;
      let y2 = Math.floor(r2 * i2);
      const x2 = y2 / r2;
      let S2 = false, k2 = false, E2 = w2 * u2, T2 = u2 / r2, L2 = 1;
      if (m2 === "fill" || m2 === "fit") {
        const {typicalViewportLineCount: n3, extraLinesBeyondLastLine: o3, desiredRatio: s2, minimapLineCount: c3} = C.computeContainedMinimapLineCount({viewLineCount: b2, scrollBeyondLastLine: d2, height: i2, lineHeight: l2, pixelRatio: r2});
        if (b2 / c3 > 1)
          S2 = true, k2 = true, u2 = 1, E2 = 1, T2 = u2 / r2;
        else {
          let i3 = false, c4 = u2 + 1;
          if (m2 === "fit") {
            const n4 = Math.ceil((b2 + o3) * E2);
            v2 && a2 && _2 <= t2.stableFitRemainingWidth ? (i3 = true, c4 = t2.stableFitMaxMinimapScale) : (i3 = n4 > y2, v2 && i3 ? (t2.stableMinimapLayoutInput = e2, t2.stableFitRemainingWidth = _2) : (t2.stableMinimapLayoutInput = null, t2.stableFitRemainingWidth = 0));
          }
          if (m2 === "fill" || i3) {
            S2 = true;
            const e3 = u2;
            E2 = Math.min(l2 * r2, Math.max(1, Math.floor(1 / s2))), u2 = Math.min(c4, Math.max(1, Math.floor(E2 / w2))), u2 > e3 && (L2 = Math.min(2, u2 / e3)), T2 = u2 / r2 / L2, y2 = Math.ceil(Math.max(n3, b2 + o3) * E2), v2 && i3 && (t2.stableFitMaxMinimapScale = u2);
          }
        }
      }
      const N2 = Math.floor(p2 * T2), I = Math.min(N2, Math.max(0, Math.floor((_2 - f2 - 2) * T2 / (c2 + T2))) + s);
      let D = Math.floor(r2 * I);
      const O = D / r2;
      D = Math.floor(D * L2);
      return {renderMinimap: h2 ? 1 : 2, minimapLeft: g2 === "left" ? 0 : n2 - I - f2, minimapWidth: I, minimapHeightIsEditorHeight: S2, minimapIsSampling: k2, minimapScale: u2, minimapLineHeight: E2, minimapCanvasInnerWidth: D, minimapCanvasInnerHeight: y2, minimapCanvasOuterWidth: O, minimapCanvasOuterHeight: x2};
    }
    static computeLayout(e2, t2) {
      const n2 = 0 | t2.outerWidth, i2 = 0 | t2.outerHeight, r2 = 0 | t2.lineHeight, o2 = 0 | t2.lineNumbersDigitCount, s2 = t2.typicalHalfwidthCharacterWidth, a2 = t2.maxDigitWidth, l2 = t2.pixelRatio, d2 = t2.viewLineCount, h2 = e2.get(106), u2 = e2.get(109), p2 = e2.get(110), g2 = e2.get(2), f2 = t2.isDominatedByLongLines, b2 = e2.get(42), _2 = e2.get(52).renderType !== 0, v2 = e2.get(53), w2 = e2.get(86), y2 = e2.get(56), x2 = e2.get(84), S2 = x2.verticalScrollbarSize, k2 = x2.verticalHasArrows, E2 = x2.arrowSize, T2 = x2.horizontalScrollbarSize, L2 = e2.get(50), N2 = e2.get(31);
      let I;
      if (typeof L2 == "string" && /^\d+(\.\d+)?ch$/.test(L2)) {
        const e3 = parseFloat(L2.substr(0, L2.length - 2));
        I = m.clampedInt(e3 * s2, 0, 0, 1e3);
      } else
        I = m.clampedInt(L2, 0, 0, 1e3);
      N2 && (I += 16);
      let D = 0;
      if (_2) {
        const e3 = Math.max(o2, v2);
        D = Math.round(e3 * a2);
      }
      let O = 0;
      b2 && (O = r2);
      let A = 0, R = A + O, M = R + D, P = M + I;
      const F = n2 - O - D - I;
      let W = false, z = false, B = -1;
      g2 !== 2 && (p2 && f2 ? (W = true, z = true) : h2 === "on" || h2 === "bounded" ? z = true : h2 === "wordWrapColumn" && (B = u2));
      const j = C._computeMinimapLayout({outerWidth: n2, outerHeight: i2, lineHeight: r2, typicalHalfwidthCharacterWidth: s2, pixelRatio: l2, scrollBeyondLastLine: w2, minimap: y2, verticalScrollbarWidth: S2, viewLineCount: d2, remainingWidth: F, isViewportWrapping: z}, t2.memory || new c());
      j.renderMinimap !== 0 && j.minimapLeft === 0 && (A += j.minimapWidth, R += j.minimapWidth, M += j.minimapWidth, P += j.minimapWidth);
      const V = F - j.minimapWidth, U = Math.max(1, Math.floor((V - S2 - 2) / s2)), H = k2 ? E2 : 0;
      return z && (B = Math.max(1, U), h2 === "bounded" && (B = Math.min(B, u2))), {width: n2, height: i2, glyphMarginLeft: A, glyphMarginWidth: O, lineNumbersLeft: R, lineNumbersWidth: D, decorationsLeft: M, decorationsWidth: I, contentLeft: P, contentWidth: V, minimap: j, viewportColumn: U, isWordWrapMinified: W, isViewportWrapping: z, wrappingColumn: B, verticalScrollbarWidth: S2, horizontalScrollbarHeight: T2, overviewRuler: {top: H, width: S2, height: i2 - 2 * H, right: 0}};
    }
  }
  function x(e2) {
    const t2 = e2.get(79);
    return t2 === "editable" ? e2.get(72) : t2 !== "on";
  }
  function S(e2, t2) {
    if (typeof e2 != "string")
      return t2;
    switch (e2) {
      case "hidden":
        return 2;
      case "visible":
        return 3;
      default:
        return 1;
    }
  }
  const k = {fontFamily: r.f ? "Menlo, Monaco, 'Courier New', monospace" : r.d ? "'Droid Sans Mono', 'monospace', monospace, 'Droid Sans Fallback'" : "Consolas, 'Courier New', monospace", fontWeight: "normal", fontSize: r.f ? 12 : 14, lineHeight: 0, letterSpacing: 0}, E = {tabSize: 4, indentSize: 4, insertSpaces: true, detectIndentation: true, trimAutoWhitespace: true, largeFileOptimizations: true}, T = [];
  function L(e2) {
    return T[e2.id] = e2, e2;
  }
  const N = {acceptSuggestionOnCommitCharacter: L(new p(0, "acceptSuggestionOnCommitCharacter", true, {markdownDescription: i.a("acceptSuggestionOnCommitCharacter", "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.")})), acceptSuggestionOnEnter: L(new b(1, "acceptSuggestionOnEnter", "on", ["on", "smart", "off"], {markdownEnumDescriptions: ["", i.a("acceptSuggestionOnEnterSmart", "Only accept a suggestion with `Enter` when it makes a textual change."), ""], markdownDescription: i.a("acceptSuggestionOnEnter", "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.")})), accessibilitySupport: L(new class extends d {
    constructor() {
      super(2, "accessibilitySupport", 0, {type: "string", enum: ["auto", "on", "off"], enumDescriptions: [i.a("accessibilitySupport.auto", "The editor will use platform APIs to detect when a Screen Reader is attached."), i.a("accessibilitySupport.on", "The editor will be permanently optimized for usage with a Screen Reader."), i.a("accessibilitySupport.off", "The editor will never be optimized for usage with a Screen Reader.")], default: "auto", description: i.a("accessibilitySupport", "Controls whether the editor should run in a mode where it is optimized for screen readers.")});
    }
    validate(e2) {
      switch (e2) {
        case "auto":
          return 0;
        case "off":
          return 1;
        case "on":
          return 2;
      }
      return this.defaultValue;
    }
    compute(e2, t2, n2) {
      return n2 === 0 ? e2.accessibilitySupport : n2;
    }
  }()), accessibilityPageSize: L(new m(3, "accessibilityPageSize", 10, 1, 1073741824, {description: i.a("accessibilityPageSize", "Controls the number of lines in the editor that can be read out by a screen reader. Warning: this has a performance implication for numbers larger than the default.")})), ariaLabel: L(new f(4, "ariaLabel", i.a("editorViewAccessibleLabel", "Editor content"))), autoClosingBrackets: L(new b(5, "autoClosingBrackets", "languageDefined", ["always", "languageDefined", "beforeWhitespace", "never"], {enumDescriptions: ["", i.a("editor.autoClosingBrackets.languageDefined", "Use language configurations to determine when to autoclose brackets."), i.a("editor.autoClosingBrackets.beforeWhitespace", "Autoclose brackets only when the cursor is to the left of whitespace."), ""], description: i.a("autoClosingBrackets", "Controls whether the editor should automatically close brackets after the user adds an opening bracket.")})), autoClosingOvertype: L(new b(6, "autoClosingOvertype", "auto", ["always", "auto", "never"], {enumDescriptions: ["", i.a("editor.autoClosingOvertype.auto", "Type over closing quotes or brackets only if they were automatically inserted."), ""], description: i.a("autoClosingOvertype", "Controls whether the editor should type over closing quotes or brackets.")})), autoClosingQuotes: L(new b(7, "autoClosingQuotes", "languageDefined", ["always", "languageDefined", "beforeWhitespace", "never"], {enumDescriptions: ["", i.a("editor.autoClosingQuotes.languageDefined", "Use language configurations to determine when to autoclose quotes."), i.a("editor.autoClosingQuotes.beforeWhitespace", "Autoclose quotes only when the cursor is to the left of whitespace."), ""], description: i.a("autoClosingQuotes", "Controls whether the editor should automatically close quotes after the user adds an opening quote.")})), autoIndent: L(new _(8, "autoIndent", 4, "full", ["none", "keep", "brackets", "advanced", "full"], function(e2) {
    switch (e2) {
      case "none":
        return 0;
      case "keep":
        return 1;
      case "brackets":
        return 2;
      case "advanced":
        return 3;
      case "full":
        return 4;
    }
  }, {enumDescriptions: [i.a("editor.autoIndent.none", "The editor will not insert indentation automatically."), i.a("editor.autoIndent.keep", "The editor will keep the current line's indentation."), i.a("editor.autoIndent.brackets", "The editor will keep the current line's indentation and honor language defined brackets."), i.a("editor.autoIndent.advanced", "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages."), i.a("editor.autoIndent.full", "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.")], description: i.a("autoIndent", "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.")})), automaticLayout: L(new p(9, "automaticLayout", false)), autoSurround: L(new b(10, "autoSurround", "languageDefined", ["languageDefined", "quotes", "brackets", "never"], {enumDescriptions: [i.a("editor.autoSurround.languageDefined", "Use language configurations to determine when to automatically surround selections."), i.a("editor.autoSurround.quotes", "Surround with quotes but not brackets."), i.a("editor.autoSurround.brackets", "Surround with brackets but not quotes."), ""], description: i.a("autoSurround", "Controls whether the editor should automatically surround selections.")})), codeLens: L(new p(11, "codeLens", true, {description: i.a("codeLens", "Controls whether the editor shows CodeLens.")})), colorDecorators: L(new p(12, "colorDecorators", true, {description: i.a("colorDecorators", "Controls whether the editor should render the inline color decorators and color picker.")})), columnSelection: L(new p(13, "columnSelection", false, {description: i.a("columnSelection", "Enable that the selection with the mouse and keys is doing column selection.")})), comments: L(new class extends d {
    constructor() {
      const e2 = {insertSpace: true, ignoreEmptyLines: true};
      super(14, "comments", e2, {"editor.comments.insertSpace": {type: "boolean", default: e2.insertSpace, description: i.a("comments.insertSpace", "Controls whether a space character is inserted when commenting.")}, "editor.comments.ignoreEmptyLines": {type: "boolean", default: e2.ignoreEmptyLines, description: i.a("comments.ignoreEmptyLines", "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {insertSpace: p.boolean(t2.insertSpace, this.defaultValue.insertSpace), ignoreEmptyLines: p.boolean(t2.ignoreEmptyLines, this.defaultValue.ignoreEmptyLines)};
    }
  }()), contextmenu: L(new p(15, "contextmenu", true)), copyWithSyntaxHighlighting: L(new p(16, "copyWithSyntaxHighlighting", true, {description: i.a("copyWithSyntaxHighlighting", "Controls whether syntax highlighting should be copied into the clipboard.")})), cursorBlinking: L(new _(17, "cursorBlinking", 1, "blink", ["blink", "smooth", "phase", "expand", "solid"], function(e2) {
    switch (e2) {
      case "blink":
        return 1;
      case "smooth":
        return 2;
      case "phase":
        return 3;
      case "expand":
        return 4;
      case "solid":
        return 5;
    }
  }, {description: i.a("cursorBlinking", "Control the cursor animation style.")})), cursorSmoothCaretAnimation: L(new p(18, "cursorSmoothCaretAnimation", false, {description: i.a("cursorSmoothCaretAnimation", "Controls whether the smooth caret animation should be enabled.")})), cursorStyle: L(new _(19, "cursorStyle", v.Line, "line", ["line", "block", "underline", "line-thin", "block-outline", "underline-thin"], function(e2) {
    switch (e2) {
      case "line":
        return v.Line;
      case "block":
        return v.Block;
      case "underline":
        return v.Underline;
      case "line-thin":
        return v.LineThin;
      case "block-outline":
        return v.BlockOutline;
      case "underline-thin":
        return v.UnderlineThin;
    }
  }, {description: i.a("cursorStyle", "Controls the cursor style.")})), cursorSurroundingLines: L(new m(20, "cursorSurroundingLines", 0, 0, 1073741824, {description: i.a("cursorSurroundingLines", "Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or `scrollOffset` in some other editors.")})), cursorSurroundingLinesStyle: L(new b(21, "cursorSurroundingLinesStyle", "default", ["default", "all"], {enumDescriptions: [i.a("cursorSurroundingLinesStyle.default", "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API."), i.a("cursorSurroundingLinesStyle.all", "`cursorSurroundingLines` is enforced always.")], description: i.a("cursorSurroundingLinesStyle", "Controls when `cursorSurroundingLines` should be enforced.")})), cursorWidth: L(new m(22, "cursorWidth", 0, 0, 1073741824, {markdownDescription: i.a("cursorWidth", "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.")})), disableLayerHinting: L(new p(23, "disableLayerHinting", false)), disableMonospaceOptimizations: L(new p(24, "disableMonospaceOptimizations", false)), dragAndDrop: L(new p(25, "dragAndDrop", true, {description: i.a("dragAndDrop", "Controls whether the editor should allow moving selections via drag and drop.")})), emptySelectionClipboard: L(new class extends p {
    constructor() {
      super(26, "emptySelectionClipboard", true, {description: i.a("emptySelectionClipboard", "Controls whether copying without a selection copies the current line.")});
    }
    compute(e2, t2, n2) {
      return n2 && e2.emptySelectionClipboard;
    }
  }()), extraEditorClassName: L(new f(27, "extraEditorClassName", "")), fastScrollSensitivity: L(new g(28, "fastScrollSensitivity", 5, (e2) => e2 <= 0 ? 5 : e2, {markdownDescription: i.a("fastScrollSensitivity", "Scrolling speed multiplier when pressing `Alt`.")})), find: L(new class extends d {
    constructor() {
      const e2 = {cursorMoveOnType: true, seedSearchStringFromSelection: true, autoFindInSelection: "never", globalFindClipboard: false, addExtraSpaceOnTop: true, loop: true};
      super(29, "find", e2, {"editor.find.cursorMoveOnType": {type: "boolean", default: e2.cursorMoveOnType, description: i.a("find.cursorMoveOnType", "Controls whether the cursor should jump to find matches while typing.")}, "editor.find.seedSearchStringFromSelection": {type: "boolean", default: e2.seedSearchStringFromSelection, description: i.a("find.seedSearchStringFromSelection", "Controls whether the search string in the Find Widget is seeded from the editor selection.")}, "editor.find.autoFindInSelection": {type: "string", enum: ["never", "always", "multiline"], default: e2.autoFindInSelection, enumDescriptions: [i.a("editor.find.autoFindInSelection.never", "Never turn on Find in selection automatically (default)"), i.a("editor.find.autoFindInSelection.always", "Always turn on Find in selection automatically"), i.a("editor.find.autoFindInSelection.multiline", "Turn on Find in selection automatically when multiple lines of content are selected.")], description: i.a("find.autoFindInSelection", "Controls the condition for turning on find in selection automatically.")}, "editor.find.globalFindClipboard": {type: "boolean", default: e2.globalFindClipboard, description: i.a("find.globalFindClipboard", "Controls whether the Find Widget should read or modify the shared find clipboard on macOS."), included: r.f}, "editor.find.addExtraSpaceOnTop": {type: "boolean", default: e2.addExtraSpaceOnTop, description: i.a("find.addExtraSpaceOnTop", "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.")}, "editor.find.loop": {type: "boolean", default: e2.loop, description: i.a("find.loop", "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {cursorMoveOnType: p.boolean(t2.cursorMoveOnType, this.defaultValue.cursorMoveOnType), seedSearchStringFromSelection: p.boolean(t2.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection), autoFindInSelection: typeof e2.autoFindInSelection == "boolean" ? e2.autoFindInSelection ? "always" : "never" : b.stringSet(t2.autoFindInSelection, this.defaultValue.autoFindInSelection, ["never", "always", "multiline"]), globalFindClipboard: p.boolean(t2.globalFindClipboard, this.defaultValue.globalFindClipboard), addExtraSpaceOnTop: p.boolean(t2.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop), loop: p.boolean(t2.loop, this.defaultValue.loop)};
    }
  }()), fixedOverflowWidgets: L(new p(30, "fixedOverflowWidgets", false)), folding: L(new p(31, "folding", true, {description: i.a("folding", "Controls whether the editor has code folding enabled.")})), foldingStrategy: L(new b(32, "foldingStrategy", "auto", ["auto", "indentation"], {enumDescriptions: [i.a("foldingStrategy.auto", "Use a language-specific folding strategy if available, else the indentation-based one."), i.a("foldingStrategy.indentation", "Use the indentation-based folding strategy.")], description: i.a("foldingStrategy", "Controls the strategy for computing folding ranges.")})), foldingHighlight: L(new p(33, "foldingHighlight", true, {description: i.a("foldingHighlight", "Controls whether the editor should highlight folded ranges.")})), unfoldOnClickAfterEndOfLine: L(new p(34, "unfoldOnClickAfterEndOfLine", false, {description: i.a("unfoldOnClickAfterEndOfLine", "Controls whether clicking on the empty content after a folded line will unfold the line.")})), fontFamily: L(new f(35, "fontFamily", k.fontFamily, {description: i.a("fontFamily", "Controls the font family.")})), fontInfo: L(new class extends h {
    constructor() {
      super(36);
    }
    compute(e2, t2, n2) {
      return e2.fontInfo;
    }
  }()), fontLigatures2: L(new w()), fontSize: L(new class extends u {
    constructor() {
      super(38, "fontSize", k.fontSize, {type: "number", minimum: 6, maximum: 100, default: k.fontSize, description: i.a("fontSize", "Controls the font size in pixels.")});
    }
    validate(e2) {
      let t2 = g.float(e2, this.defaultValue);
      return t2 === 0 ? k.fontSize : g.clamp(t2, 6, 100);
    }
    compute(e2, t2, n2) {
      return e2.fontInfo.fontSize;
    }
  }()), fontWeight: L(new y()), formatOnPaste: L(new p(40, "formatOnPaste", false, {description: i.a("formatOnPaste", "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.")})), formatOnType: L(new p(41, "formatOnType", false, {description: i.a("formatOnType", "Controls whether the editor should automatically format the line after typing.")})), glyphMargin: L(new p(42, "glyphMargin", true, {description: i.a("glyphMargin", "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.")})), gotoLocation: L(new class extends d {
    constructor() {
      const e2 = {multiple: "peek", multipleDefinitions: "peek", multipleTypeDefinitions: "peek", multipleDeclarations: "peek", multipleImplementations: "peek", multipleReferences: "peek", alternativeDefinitionCommand: "editor.action.goToReferences", alternativeTypeDefinitionCommand: "editor.action.goToReferences", alternativeDeclarationCommand: "editor.action.goToReferences", alternativeImplementationCommand: "", alternativeReferenceCommand: ""}, t2 = {type: "string", enum: ["peek", "gotoAndPeek", "goto"], default: e2.multiple, enumDescriptions: [i.a("editor.gotoLocation.multiple.peek", "Show peek view of the results (default)"), i.a("editor.gotoLocation.multiple.gotoAndPeek", "Go to the primary result and show a peek view"), i.a("editor.gotoLocation.multiple.goto", "Go to the primary result and enable peek-less navigation to others")]};
      super(43, "gotoLocation", e2, {"editor.gotoLocation.multiple": {deprecationMessage: i.a("editor.gotoLocation.multiple.deprecated", "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.")}, "editor.gotoLocation.multipleDefinitions": Object.assign({description: i.a("editor.editor.gotoLocation.multipleDefinitions", "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.")}, t2), "editor.gotoLocation.multipleTypeDefinitions": Object.assign({description: i.a("editor.editor.gotoLocation.multipleTypeDefinitions", "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.")}, t2), "editor.gotoLocation.multipleDeclarations": Object.assign({description: i.a("editor.editor.gotoLocation.multipleDeclarations", "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.")}, t2), "editor.gotoLocation.multipleImplementations": Object.assign({description: i.a("editor.editor.gotoLocation.multipleImplemenattions", "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.")}, t2), "editor.gotoLocation.multipleReferences": Object.assign({description: i.a("editor.editor.gotoLocation.multipleReferences", "Controls the behavior the 'Go to References'-command when multiple target locations exist.")}, t2), "editor.gotoLocation.alternativeDefinitionCommand": {type: "string", default: e2.alternativeDefinitionCommand, description: i.a("alternativeDefinitionCommand", "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.")}, "editor.gotoLocation.alternativeTypeDefinitionCommand": {type: "string", default: e2.alternativeTypeDefinitionCommand, description: i.a("alternativeTypeDefinitionCommand", "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.")}, "editor.gotoLocation.alternativeDeclarationCommand": {type: "string", default: e2.alternativeDeclarationCommand, description: i.a("alternativeDeclarationCommand", "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.")}, "editor.gotoLocation.alternativeImplementationCommand": {type: "string", default: e2.alternativeImplementationCommand, description: i.a("alternativeImplementationCommand", "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.")}, "editor.gotoLocation.alternativeReferenceCommand": {type: "string", default: e2.alternativeReferenceCommand, description: i.a("alternativeReferenceCommand", "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.")}});
    }
    validate(e2) {
      var t2, n2, i2, r2, o2;
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const s2 = e2;
      return {multiple: b.stringSet(s2.multiple, this.defaultValue.multiple, ["peek", "gotoAndPeek", "goto"]), multipleDefinitions: (t2 = s2.multipleDefinitions) !== null && t2 !== void 0 ? t2 : b.stringSet(s2.multipleDefinitions, "peek", ["peek", "gotoAndPeek", "goto"]), multipleTypeDefinitions: (n2 = s2.multipleTypeDefinitions) !== null && n2 !== void 0 ? n2 : b.stringSet(s2.multipleTypeDefinitions, "peek", ["peek", "gotoAndPeek", "goto"]), multipleDeclarations: (i2 = s2.multipleDeclarations) !== null && i2 !== void 0 ? i2 : b.stringSet(s2.multipleDeclarations, "peek", ["peek", "gotoAndPeek", "goto"]), multipleImplementations: (r2 = s2.multipleImplementations) !== null && r2 !== void 0 ? r2 : b.stringSet(s2.multipleImplementations, "peek", ["peek", "gotoAndPeek", "goto"]), multipleReferences: (o2 = s2.multipleReferences) !== null && o2 !== void 0 ? o2 : b.stringSet(s2.multipleReferences, "peek", ["peek", "gotoAndPeek", "goto"]), alternativeDefinitionCommand: f.string(s2.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand), alternativeTypeDefinitionCommand: f.string(s2.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand), alternativeDeclarationCommand: f.string(s2.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand), alternativeImplementationCommand: f.string(s2.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand), alternativeReferenceCommand: f.string(s2.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand)};
    }
  }()), hideCursorInOverviewRuler: L(new p(44, "hideCursorInOverviewRuler", false, {description: i.a("hideCursorInOverviewRuler", "Controls whether the cursor should be hidden in the overview ruler.")})), highlightActiveIndentGuide: L(new p(45, "highlightActiveIndentGuide", true, {description: i.a("highlightActiveIndentGuide", "Controls whether the editor should highlight the active indent guide.")})), hover: L(new class extends d {
    constructor() {
      const e2 = {enabled: true, delay: 300, sticky: true};
      super(46, "hover", e2, {"editor.hover.enabled": {type: "boolean", default: e2.enabled, description: i.a("hover.enabled", "Controls whether the hover is shown.")}, "editor.hover.delay": {type: "number", default: e2.delay, description: i.a("hover.delay", "Controls the delay in milliseconds after which the hover is shown.")}, "editor.hover.sticky": {type: "boolean", default: e2.sticky, description: i.a("hover.sticky", "Controls whether the hover should remain visible when mouse is moved over it.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {enabled: p.boolean(t2.enabled, this.defaultValue.enabled), delay: m.clampedInt(t2.delay, this.defaultValue.delay, 0, 1e4), sticky: p.boolean(t2.sticky, this.defaultValue.sticky)};
    }
  }()), inDiffEditor: L(new p(47, "inDiffEditor", false)), letterSpacing: L(new g(48, "letterSpacing", k.letterSpacing, (e2) => g.clamp(e2, -5, 20), {description: i.a("letterSpacing", "Controls the letter spacing in pixels.")})), lightbulb: L(new class extends d {
    constructor() {
      const e2 = {enabled: true};
      super(49, "lightbulb", e2, {"editor.lightbulb.enabled": {type: "boolean", default: e2.enabled, description: i.a("codeActions", "Enables the code action lightbulb in the editor.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {enabled: p.boolean(t2.enabled, this.defaultValue.enabled)};
    }
  }()), lineDecorationsWidth: L(new u(50, "lineDecorationsWidth", 10)), lineHeight: L(new class extends m {
    constructor() {
      super(51, "lineHeight", k.lineHeight, 0, 150, {description: i.a("lineHeight", "Controls the line height. Use 0 to compute the line height from the font size.")});
    }
    compute(e2, t2, n2) {
      return e2.fontInfo.lineHeight;
    }
  }()), lineNumbers: L(new class extends d {
    constructor() {
      super(52, "lineNumbers", {renderType: 1, renderFn: null}, {type: "string", enum: ["off", "on", "relative", "interval"], enumDescriptions: [i.a("lineNumbers.off", "Line numbers are not rendered."), i.a("lineNumbers.on", "Line numbers are rendered as absolute number."), i.a("lineNumbers.relative", "Line numbers are rendered as distance in lines to cursor position."), i.a("lineNumbers.interval", "Line numbers are rendered every 10 lines.")], default: "on", description: i.a("lineNumbers", "Controls the display of line numbers.")});
    }
    validate(e2) {
      let t2 = this.defaultValue.renderType, n2 = this.defaultValue.renderFn;
      return e2 !== void 0 && (typeof e2 == "function" ? (t2 = 4, n2 = e2) : t2 = e2 === "interval" ? 3 : e2 === "relative" ? 2 : e2 === "on" ? 1 : 0), {renderType: t2, renderFn: n2};
    }
  }()), lineNumbersMinChars: L(new m(53, "lineNumbersMinChars", 5, 1, 300)), links: L(new p(54, "links", true, {description: i.a("links", "Controls whether the editor should detect links and make them clickable.")})), matchBrackets: L(new b(55, "matchBrackets", "always", ["always", "near", "never"], {description: i.a("matchBrackets", "Highlight matching brackets.")})), minimap: L(new class extends d {
    constructor() {
      const e2 = {enabled: true, size: "proportional", side: "right", showSlider: "mouseover", renderCharacters: true, maxColumn: 120, scale: 1};
      super(56, "minimap", e2, {"editor.minimap.enabled": {type: "boolean", default: e2.enabled, description: i.a("minimap.enabled", "Controls whether the minimap is shown.")}, "editor.minimap.size": {type: "string", enum: ["proportional", "fill", "fit"], enumDescriptions: [i.a("minimap.size.proportional", "The minimap has the same size as the editor contents (and might scroll)."), i.a("minimap.size.fill", "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling)."), i.a("minimap.size.fit", "The minimap will shrink as necessary to never be larger than the editor (no scrolling).")], default: e2.size, description: i.a("minimap.size", "Controls the size of the minimap.")}, "editor.minimap.side": {type: "string", enum: ["left", "right"], default: e2.side, description: i.a("minimap.side", "Controls the side where to render the minimap.")}, "editor.minimap.showSlider": {type: "string", enum: ["always", "mouseover"], default: e2.showSlider, description: i.a("minimap.showSlider", "Controls when the minimap slider is shown.")}, "editor.minimap.scale": {type: "number", default: e2.scale, minimum: 1, maximum: 3, enum: [1, 2, 3], description: i.a("minimap.scale", "Scale of content drawn in the minimap: 1, 2 or 3.")}, "editor.minimap.renderCharacters": {type: "boolean", default: e2.renderCharacters, description: i.a("minimap.renderCharacters", "Render the actual characters on a line as opposed to color blocks.")}, "editor.minimap.maxColumn": {type: "number", default: e2.maxColumn, description: i.a("minimap.maxColumn", "Limit the width of the minimap to render at most a certain number of columns.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {enabled: p.boolean(t2.enabled, this.defaultValue.enabled), size: b.stringSet(t2.size, this.defaultValue.size, ["proportional", "fill", "fit"]), side: b.stringSet(t2.side, this.defaultValue.side, ["right", "left"]), showSlider: b.stringSet(t2.showSlider, this.defaultValue.showSlider, ["always", "mouseover"]), renderCharacters: p.boolean(t2.renderCharacters, this.defaultValue.renderCharacters), scale: m.clampedInt(t2.scale, 1, 1, 3), maxColumn: m.clampedInt(t2.maxColumn, this.defaultValue.maxColumn, 1, 1e4)};
    }
  }()), mouseStyle: L(new b(57, "mouseStyle", "text", ["text", "default", "copy"])), mouseWheelScrollSensitivity: L(new g(58, "mouseWheelScrollSensitivity", 1, (e2) => e2 === 0 ? 1 : e2, {markdownDescription: i.a("mouseWheelScrollSensitivity", "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.")})), mouseWheelZoom: L(new p(59, "mouseWheelZoom", false, {markdownDescription: i.a("mouseWheelZoom", "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.")})), multiCursorMergeOverlapping: L(new p(60, "multiCursorMergeOverlapping", true, {description: i.a("multiCursorMergeOverlapping", "Merge multiple cursors when they are overlapping.")})), multiCursorModifier: L(new _(61, "multiCursorModifier", "altKey", "alt", ["ctrlCmd", "alt"], function(e2) {
    return e2 === "ctrlCmd" ? r.f ? "metaKey" : "ctrlKey" : "altKey";
  }, {markdownEnumDescriptions: [i.a("multiCursorModifier.ctrlCmd", "Maps to `Control` on Windows and Linux and to `Command` on macOS."), i.a("multiCursorModifier.alt", "Maps to `Alt` on Windows and Linux and to `Option` on macOS.")], markdownDescription: i.a({key: "multiCursorModifier", comment: ["- `ctrlCmd` refers to a value the setting can take and should not be localized.", "- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."]}, "The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).")})), multiCursorPaste: L(new b(62, "multiCursorPaste", "spread", ["spread", "full"], {markdownEnumDescriptions: [i.a("multiCursorPaste.spread", "Each cursor pastes a single line of the text."), i.a("multiCursorPaste.full", "Each cursor pastes the full text.")], markdownDescription: i.a("multiCursorPaste", "Controls pasting when the line count of the pasted text matches the cursor count.")})), occurrencesHighlight: L(new p(63, "occurrencesHighlight", true, {description: i.a("occurrencesHighlight", "Controls whether the editor should highlight semantic symbol occurrences.")})), overviewRulerBorder: L(new p(64, "overviewRulerBorder", true, {description: i.a("overviewRulerBorder", "Controls whether a border should be drawn around the overview ruler.")})), overviewRulerLanes: L(new m(65, "overviewRulerLanes", 3, 0, 3)), padding: L(new class extends d {
    constructor() {
      super(66, "padding", {top: 0, bottom: 0}, {"editor.padding.top": {type: "number", default: 0, minimum: 0, maximum: 1e3, description: i.a("padding.top", "Controls the amount of space between the top edge of the editor and the first line.")}, "editor.padding.bottom": {type: "number", default: 0, minimum: 0, maximum: 1e3, description: i.a("padding.bottom", "Controls the amount of space between the bottom edge of the editor and the last line.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {top: m.clampedInt(t2.top, 0, 0, 1e3), bottom: m.clampedInt(t2.bottom, 0, 0, 1e3)};
    }
  }()), parameterHints: L(new class extends d {
    constructor() {
      const e2 = {enabled: true, cycle: false};
      super(67, "parameterHints", e2, {"editor.parameterHints.enabled": {type: "boolean", default: e2.enabled, description: i.a("parameterHints.enabled", "Enables a pop-up that shows parameter documentation and type information as you type.")}, "editor.parameterHints.cycle": {type: "boolean", default: e2.cycle, description: i.a("parameterHints.cycle", "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.")}});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2;
      return {enabled: p.boolean(t2.enabled, this.defaultValue.enabled), cycle: p.boolean(t2.cycle, this.defaultValue.cycle)};
    }
  }()), peekWidgetDefaultFocus: L(new b(68, "peekWidgetDefaultFocus", "tree", ["tree", "editor"], {enumDescriptions: [i.a("peekWidgetDefaultFocus.tree", "Focus the tree when opening peek"), i.a("peekWidgetDefaultFocus.editor", "Focus the editor when opening peek")], description: i.a("peekWidgetDefaultFocus", "Controls whether to focus the inline editor or the tree in the peek widget.")})), definitionLinkOpensInPeek: L(new p(69, "definitionLinkOpensInPeek", false, {description: i.a("definitionLinkOpensInPeek", "Controls whether the Go to Definition mouse gesture always opens the peek widget.")})), quickSuggestions: L(new class extends d {
    constructor() {
      const e2 = {other: true, comments: false, strings: false};
      super(70, "quickSuggestions", e2, {anyOf: [{type: "boolean"}, {type: "object", properties: {strings: {type: "boolean", default: e2.strings, description: i.a("quickSuggestions.strings", "Enable quick suggestions inside strings.")}, comments: {type: "boolean", default: e2.comments, description: i.a("quickSuggestions.comments", "Enable quick suggestions inside comments.")}, other: {type: "boolean", default: e2.other, description: i.a("quickSuggestions.other", "Enable quick suggestions outside of strings and comments.")}}}], default: e2, description: i.a("quickSuggestions", "Controls whether suggestions should automatically show up while typing.")}), this.defaultValue = e2;
    }
    validate(e2) {
      if (typeof e2 == "boolean")
        return e2;
      if (e2 && typeof e2 == "object") {
        const t2 = e2, n2 = {other: p.boolean(t2.other, this.defaultValue.other), comments: p.boolean(t2.comments, this.defaultValue.comments), strings: p.boolean(t2.strings, this.defaultValue.strings)};
        return !!(n2.other && n2.comments && n2.strings) || !!(n2.other || n2.comments || n2.strings) && n2;
      }
      return this.defaultValue;
    }
  }()), quickSuggestionsDelay: L(new m(71, "quickSuggestionsDelay", 10, 0, 1073741824, {description: i.a("quickSuggestionsDelay", "Controls the delay in milliseconds after which quick suggestions will show up.")})), readOnly: L(new p(72, "readOnly", false)), renameOnType: L(new p(73, "renameOnType", false, {description: i.a("renameOnType", "Controls whether the editor auto renames on type.")})), renderControlCharacters: L(new p(74, "renderControlCharacters", false, {description: i.a("renderControlCharacters", "Controls whether the editor should render control characters.")})), renderIndentGuides: L(new p(75, "renderIndentGuides", true, {description: i.a("renderIndentGuides", "Controls whether the editor should render indent guides.")})), renderFinalNewline: L(new p(76, "renderFinalNewline", true, {description: i.a("renderFinalNewline", "Render last line number when the file ends with a newline.")})), renderLineHighlight: L(new b(77, "renderLineHighlight", "line", ["none", "gutter", "line", "all"], {enumDescriptions: ["", "", "", i.a("renderLineHighlight.all", "Highlights both the gutter and the current line.")], description: i.a("renderLineHighlight", "Controls how the editor should render the current line highlight.")})), renderLineHighlightOnlyWhenFocus: L(new p(78, "renderLineHighlightOnlyWhenFocus", false, {description: i.a("renderLineHighlightOnlyWhenFocus", "Controls if the editor should render the current line highlight only when the editor is focused")})), renderValidationDecorations: L(new b(79, "renderValidationDecorations", "editable", ["editable", "on", "off"])), renderWhitespace: L(new b(80, "renderWhitespace", "selection", ["none", "boundary", "selection", "trailing", "all"], {enumDescriptions: ["", i.a("renderWhitespace.boundary", "Render whitespace characters except for single spaces between words."), i.a("renderWhitespace.selection", "Render whitespace characters only on selected text."), i.a("renderWhitespace.trailing", "Render only trailing whitespace characters"), ""], description: i.a("renderWhitespace", "Controls how the editor should render whitespace characters.")})), revealHorizontalRightPadding: L(new m(81, "revealHorizontalRightPadding", 30, 0, 1e3)), roundedSelection: L(new p(82, "roundedSelection", true, {description: i.a("roundedSelection", "Controls whether selections should have rounded corners.")})), rulers: L(new class extends d {
    constructor() {
      const e2 = [], t2 = {type: "number", description: i.a("rulers.size", "Number of monospace characters at which this editor ruler will render.")};
      super(83, "rulers", e2, {type: "array", items: {anyOf: [t2, {type: ["object"], properties: {column: t2, color: {type: "string", description: i.a("rulers.color", "Color of this editor ruler."), format: "color-hex"}}}]}, default: e2, description: i.a("rulers", "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.")});
    }
    validate(e2) {
      if (Array.isArray(e2)) {
        let t2 = [];
        for (let n2 of e2)
          if (typeof n2 == "number")
            t2.push({column: m.clampedInt(n2, 0, 0, 1e4), color: null});
          else if (n2 && typeof n2 == "object") {
            const e3 = n2;
            t2.push({column: m.clampedInt(e3.column, 0, 0, 1e4), color: e3.color});
          }
        return t2.sort((e3, t3) => e3.column - t3.column), t2;
      }
      return this.defaultValue;
    }
  }()), scrollbar: L(new class extends d {
    constructor() {
      super(84, "scrollbar", {vertical: 1, horizontal: 1, arrowSize: 11, useShadows: true, verticalHasArrows: false, horizontalHasArrows: false, horizontalScrollbarSize: 12, horizontalSliderSize: 12, verticalScrollbarSize: 14, verticalSliderSize: 14, handleMouseWheel: true, alwaysConsumeMouseWheel: true});
    }
    validate(e2) {
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const t2 = e2, n2 = m.clampedInt(t2.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1e3), i2 = m.clampedInt(t2.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1e3);
      return {arrowSize: m.clampedInt(t2.arrowSize, this.defaultValue.arrowSize, 0, 1e3), vertical: S(t2.vertical, this.defaultValue.vertical), horizontal: S(t2.horizontal, this.defaultValue.horizontal), useShadows: p.boolean(t2.useShadows, this.defaultValue.useShadows), verticalHasArrows: p.boolean(t2.verticalHasArrows, this.defaultValue.verticalHasArrows), horizontalHasArrows: p.boolean(t2.horizontalHasArrows, this.defaultValue.horizontalHasArrows), handleMouseWheel: p.boolean(t2.handleMouseWheel, this.defaultValue.handleMouseWheel), alwaysConsumeMouseWheel: p.boolean(t2.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel), horizontalScrollbarSize: n2, horizontalSliderSize: m.clampedInt(t2.horizontalSliderSize, n2, 0, 1e3), verticalScrollbarSize: i2, verticalSliderSize: m.clampedInt(t2.verticalSliderSize, i2, 0, 1e3)};
    }
  }()), scrollBeyondLastColumn: L(new m(85, "scrollBeyondLastColumn", 5, 0, 1073741824, {description: i.a("scrollBeyondLastColumn", "Controls the number of extra characters beyond which the editor will scroll horizontally.")})), scrollBeyondLastLine: L(new p(86, "scrollBeyondLastLine", true, {description: i.a("scrollBeyondLastLine", "Controls whether the editor will scroll beyond the last line.")})), scrollPredominantAxis: L(new p(87, "scrollPredominantAxis", true, {description: i.a("scrollPredominantAxis", "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.")})), selectionClipboard: L(new p(88, "selectionClipboard", true, {description: i.a("selectionClipboard", "Controls whether the Linux primary clipboard should be supported."), included: r.d})), selectionHighlight: L(new p(89, "selectionHighlight", true, {description: i.a("selectionHighlight", "Controls whether the editor should highlight matches similar to the selection.")})), selectOnLineNumbers: L(new p(90, "selectOnLineNumbers", true)), showFoldingControls: L(new b(91, "showFoldingControls", "mouseover", ["always", "mouseover"], {enumDescriptions: [i.a("showFoldingControls.always", "Always show the folding controls."), i.a("showFoldingControls.mouseover", "Only show the folding controls when the mouse is over the gutter.")], description: i.a("showFoldingControls", "Controls when the folding controls on the gutter are shown.")})), showUnused: L(new p(92, "showUnused", true, {description: i.a("showUnused", "Controls fading out of unused code.")})), showDeprecated: L(new p(113, "showDeprecated", true, {description: i.a("showDeprecated", "Controls strikethrough deprecated variables.")})), snippetSuggestions: L(new b(93, "snippetSuggestions", "inline", ["top", "bottom", "inline", "none"], {enumDescriptions: [i.a("snippetSuggestions.top", "Show snippet suggestions on top of other suggestions."), i.a("snippetSuggestions.bottom", "Show snippet suggestions below other suggestions."), i.a("snippetSuggestions.inline", "Show snippets suggestions with other suggestions."), i.a("snippetSuggestions.none", "Do not show snippet suggestions.")], description: i.a("snippetSuggestions", "Controls whether snippets are shown with other suggestions and how they are sorted.")})), smoothScrolling: L(new p(94, "smoothScrolling", false, {description: i.a("smoothScrolling", "Controls whether the editor will scroll using an animation.")})), stopRenderingLineAfter: L(new m(95, "stopRenderingLineAfter", 1e4, -1, 1073741824)), suggest: L(new class extends d {
    constructor() {
      const e2 = {insertMode: "insert", filterGraceful: true, snippetsPreventQuickSuggestions: true, localityBonus: false, shareSuggestSelections: false, showIcons: true, maxVisibleSuggestions: 12, showMethods: true, showFunctions: true, showConstructors: true, showFields: true, showVariables: true, showClasses: true, showStructs: true, showInterfaces: true, showModules: true, showProperties: true, showEvents: true, showOperators: true, showUnits: true, showValues: true, showConstants: true, showEnums: true, showEnumMembers: true, showKeywords: true, showWords: true, showColors: true, showFiles: true, showReferences: true, showFolders: true, showTypeParameters: true, showSnippets: true, showUsers: true, showIssues: true, statusBar: {visible: false}};
      super(96, "suggest", e2, {"editor.suggest.insertMode": {type: "string", enum: ["insert", "replace"], enumDescriptions: [i.a("suggest.insertMode.insert", "Insert suggestion without overwriting text right of the cursor."), i.a("suggest.insertMode.replace", "Insert suggestion and overwrite text right of the cursor.")], default: e2.insertMode, description: i.a("suggest.insertMode", "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.")}, "editor.suggest.filterGraceful": {type: "boolean", default: e2.filterGraceful, description: i.a("suggest.filterGraceful", "Controls whether filtering and sorting suggestions accounts for small typos.")}, "editor.suggest.localityBonus": {type: "boolean", default: e2.localityBonus, description: i.a("suggest.localityBonus", "Controls whether sorting favours words that appear close to the cursor.")}, "editor.suggest.shareSuggestSelections": {type: "boolean", default: e2.shareSuggestSelections, markdownDescription: i.a("suggest.shareSuggestSelections", "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).")}, "editor.suggest.snippetsPreventQuickSuggestions": {type: "boolean", default: e2.snippetsPreventQuickSuggestions, description: i.a("suggest.snippetsPreventQuickSuggestions", "Controls whether an active snippet prevents quick suggestions.")}, "editor.suggest.showIcons": {type: "boolean", default: e2.showIcons, description: i.a("suggest.showIcons", "Controls whether to show or hide icons in suggestions.")}, "editor.suggest.maxVisibleSuggestions": {type: "number", default: e2.maxVisibleSuggestions, minimum: 1, maximum: 15, description: i.a("suggest.maxVisibleSuggestions", "Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).")}, "editor.suggest.filteredTypes": {type: "object", deprecationMessage: i.a("deprecated", "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.")}, "editor.suggest.showMethods": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showMethods", "When enabled IntelliSense shows `method`-suggestions.")}, "editor.suggest.showFunctions": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showFunctions", "When enabled IntelliSense shows `function`-suggestions.")}, "editor.suggest.showConstructors": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showConstructors", "When enabled IntelliSense shows `constructor`-suggestions.")}, "editor.suggest.showFields": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showFields", "When enabled IntelliSense shows `field`-suggestions.")}, "editor.suggest.showVariables": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showVariables", "When enabled IntelliSense shows `variable`-suggestions.")}, "editor.suggest.showClasses": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showClasss", "When enabled IntelliSense shows `class`-suggestions.")}, "editor.suggest.showStructs": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showStructs", "When enabled IntelliSense shows `struct`-suggestions.")}, "editor.suggest.showInterfaces": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showInterfaces", "When enabled IntelliSense shows `interface`-suggestions.")}, "editor.suggest.showModules": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showModules", "When enabled IntelliSense shows `module`-suggestions.")}, "editor.suggest.showProperties": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showPropertys", "When enabled IntelliSense shows `property`-suggestions.")}, "editor.suggest.showEvents": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showEvents", "When enabled IntelliSense shows `event`-suggestions.")}, "editor.suggest.showOperators": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showOperators", "When enabled IntelliSense shows `operator`-suggestions.")}, "editor.suggest.showUnits": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showUnits", "When enabled IntelliSense shows `unit`-suggestions.")}, "editor.suggest.showValues": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showValues", "When enabled IntelliSense shows `value`-suggestions.")}, "editor.suggest.showConstants": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showConstants", "When enabled IntelliSense shows `constant`-suggestions.")}, "editor.suggest.showEnums": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showEnums", "When enabled IntelliSense shows `enum`-suggestions.")}, "editor.suggest.showEnumMembers": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showEnumMembers", "When enabled IntelliSense shows `enumMember`-suggestions.")}, "editor.suggest.showKeywords": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showKeywords", "When enabled IntelliSense shows `keyword`-suggestions.")}, "editor.suggest.showWords": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showTexts", "When enabled IntelliSense shows `text`-suggestions.")}, "editor.suggest.showColors": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showColors", "When enabled IntelliSense shows `color`-suggestions.")}, "editor.suggest.showFiles": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showFiles", "When enabled IntelliSense shows `file`-suggestions.")}, "editor.suggest.showReferences": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showReferences", "When enabled IntelliSense shows `reference`-suggestions.")}, "editor.suggest.showCustomcolors": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showCustomcolors", "When enabled IntelliSense shows `customcolor`-suggestions.")}, "editor.suggest.showFolders": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showFolders", "When enabled IntelliSense shows `folder`-suggestions.")}, "editor.suggest.showTypeParameters": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showTypeParameters", "When enabled IntelliSense shows `typeParameter`-suggestions.")}, "editor.suggest.showSnippets": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showSnippets", "When enabled IntelliSense shows `snippet`-suggestions.")}, "editor.suggest.showUsers": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showUsers", "When enabled IntelliSense shows `user`-suggestions.")}, "editor.suggest.showIssues": {type: "boolean", default: true, markdownDescription: i.a("editor.suggest.showIssues", "When enabled IntelliSense shows `issues`-suggestions.")}, "editor.suggest.statusBar.visible": {type: "boolean", default: false, markdownDescription: i.a("editor.suggest.statusBar.visible", "Controls the visibility of the status bar at the bottom of the suggest widget.")}});
    }
    validate(e2) {
      var t2;
      if (!e2 || typeof e2 != "object")
        return this.defaultValue;
      const n2 = e2;
      return {insertMode: b.stringSet(n2.insertMode, this.defaultValue.insertMode, ["insert", "replace"]), filterGraceful: p.boolean(n2.filterGraceful, this.defaultValue.filterGraceful), snippetsPreventQuickSuggestions: p.boolean(n2.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful), localityBonus: p.boolean(n2.localityBonus, this.defaultValue.localityBonus), shareSuggestSelections: p.boolean(n2.shareSuggestSelections, this.defaultValue.shareSuggestSelections), showIcons: p.boolean(n2.showIcons, this.defaultValue.showIcons), maxVisibleSuggestions: m.clampedInt(n2.maxVisibleSuggestions, this.defaultValue.maxVisibleSuggestions, 1, 15), showMethods: p.boolean(n2.showMethods, this.defaultValue.showMethods), showFunctions: p.boolean(n2.showFunctions, this.defaultValue.showFunctions), showConstructors: p.boolean(n2.showConstructors, this.defaultValue.showConstructors), showFields: p.boolean(n2.showFields, this.defaultValue.showFields), showVariables: p.boolean(n2.showVariables, this.defaultValue.showVariables), showClasses: p.boolean(n2.showClasses, this.defaultValue.showClasses), showStructs: p.boolean(n2.showStructs, this.defaultValue.showStructs), showInterfaces: p.boolean(n2.showInterfaces, this.defaultValue.showInterfaces), showModules: p.boolean(n2.showModules, this.defaultValue.showModules), showProperties: p.boolean(n2.showProperties, this.defaultValue.showProperties), showEvents: p.boolean(n2.showEvents, this.defaultValue.showEvents), showOperators: p.boolean(n2.showOperators, this.defaultValue.showOperators), showUnits: p.boolean(n2.showUnits, this.defaultValue.showUnits), showValues: p.boolean(n2.showValues, this.defaultValue.showValues), showConstants: p.boolean(n2.showConstants, this.defaultValue.showConstants), showEnums: p.boolean(n2.showEnums, this.defaultValue.showEnums), showEnumMembers: p.boolean(n2.showEnumMembers, this.defaultValue.showEnumMembers), showKeywords: p.boolean(n2.showKeywords, this.defaultValue.showKeywords), showWords: p.boolean(n2.showWords, this.defaultValue.showWords), showColors: p.boolean(n2.showColors, this.defaultValue.showColors), showFiles: p.boolean(n2.showFiles, this.defaultValue.showFiles), showReferences: p.boolean(n2.showReferences, this.defaultValue.showReferences), showFolders: p.boolean(n2.showFolders, this.defaultValue.showFolders), showTypeParameters: p.boolean(n2.showTypeParameters, this.defaultValue.showTypeParameters), showSnippets: p.boolean(n2.showSnippets, this.defaultValue.showSnippets), showUsers: p.boolean(n2.showUsers, this.defaultValue.showUsers), showIssues: p.boolean(n2.showIssues, this.defaultValue.showIssues), statusBar: {visible: p.boolean((t2 = n2.statusBar) === null || t2 === void 0 ? void 0 : t2.visible, !!this.defaultValue.statusBar.visible)}};
    }
  }()), suggestFontSize: L(new m(97, "suggestFontSize", 0, 0, 1e3, {markdownDescription: i.a("suggestFontSize", "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.")})), suggestLineHeight: L(new m(98, "suggestLineHeight", 0, 0, 1e3, {markdownDescription: i.a("suggestLineHeight", "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.")})), suggestOnTriggerCharacters: L(new p(99, "suggestOnTriggerCharacters", true, {description: i.a("suggestOnTriggerCharacters", "Controls whether suggestions should automatically show up when typing trigger characters.")})), suggestSelection: L(new b(100, "suggestSelection", "recentlyUsed", ["first", "recentlyUsed", "recentlyUsedByPrefix"], {markdownEnumDescriptions: [i.a("suggestSelection.first", "Always select the first suggestion."), i.a("suggestSelection.recentlyUsed", "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently."), i.a("suggestSelection.recentlyUsedByPrefix", "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.")], description: i.a("suggestSelection", "Controls how suggestions are pre-selected when showing the suggest list.")})), tabCompletion: L(new b(101, "tabCompletion", "off", ["on", "off", "onlySnippets"], {enumDescriptions: [i.a("tabCompletion.on", "Tab complete will insert the best matching suggestion when pressing tab."), i.a("tabCompletion.off", "Disable tab completions."), i.a("tabCompletion.onlySnippets", "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.")], description: i.a("tabCompletion", "Enables tab completions.")})), tabIndex: L(new m(102, "tabIndex", 0, -1, 1073741824)), unusualLineTerminators: L(new b(103, "unusualLineTerminators", "prompt", ["off", "prompt", "auto"], {enumDescriptions: [i.a("unusualLineTerminators.off", "Unusual line terminators are ignored."), i.a("unusualLineTerminators.prompt", "Unusual line terminators prompt to be removed."), i.a("unusualLineTerminators.auto", "Unusual line terminators are automatically removed.")], description: i.a("unusualLineTerminators", "Remove unusual line terminators that might cause problems.")})), useTabStops: L(new p(104, "useTabStops", true, {description: i.a("useTabStops", "Inserting and deleting whitespace follows tab stops.")})), wordSeparators: L(new f(105, "wordSeparators", o.b, {description: i.a("wordSeparators", "Characters that will be used as word separators when doing word related navigations or operations.")})), wordWrap: L(new b(106, "wordWrap", "off", ["off", "on", "wordWrapColumn", "bounded"], {markdownEnumDescriptions: [i.a("wordWrap.off", "Lines will never wrap."), i.a("wordWrap.on", "Lines will wrap at the viewport width."), i.a({key: "wordWrap.wordWrapColumn", comment: ["- `editor.wordWrapColumn` refers to a different setting and should not be localized."]}, "Lines will wrap at `#editor.wordWrapColumn#`."), i.a({key: "wordWrap.bounded", comment: ["- viewport means the edge of the visible window size.", "- `editor.wordWrapColumn` refers to a different setting and should not be localized."]}, "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.")], description: i.a({key: "wordWrap", comment: ["- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.", "- `editor.wordWrapColumn` refers to a different setting and should not be localized."]}, "Controls how lines should wrap.")})), wordWrapBreakAfterCharacters: L(new f(107, "wordWrapBreakAfterCharacters", " 	})]?|/&.,;\xA2\xB0\u2032\u2033\u2030\u2103\u3001\u3002\uFF61\uFF64\uFFE0\uFF0C\uFF0E\uFF1A\uFF1B\uFF1F\uFF01\uFF05\u30FB\uFF65\u309D\u309E\u30FD\u30FE\u30FC\u30A1\u30A3\u30A5\u30A7\u30A9\u30C3\u30E3\u30E5\u30E7\u30EE\u30F5\u30F6\u3041\u3043\u3045\u3047\u3049\u3063\u3083\u3085\u3087\u308E\u3095\u3096\u31F0\u31F1\u31F2\u31F3\u31F4\u31F5\u31F6\u31F7\u31F8\u31F9\u31FA\u31FB\u31FC\u31FD\u31FE\u31FF\u3005\u303B\uFF67\uFF68\uFF69\uFF6A\uFF6B\uFF6C\uFF6D\uFF6E\uFF6F\uFF70\u201D\u3009\u300B\u300D\u300F\u3011\u3015\uFF09\uFF3D\uFF5D\uFF63")), wordWrapBreakBeforeCharacters: L(new f(108, "wordWrapBreakBeforeCharacters", "([{\u2018\u201C\u3008\u300A\u300C\u300E\u3010\u3014\uFF08\uFF3B\uFF5B\uFF62\xA3\xA5\uFF04\uFFE1\uFFE5+\uFF0B")), wordWrapColumn: L(new m(109, "wordWrapColumn", 80, 1, 1073741824, {markdownDescription: i.a({key: "wordWrapColumn", comment: ["- `editor.wordWrap` refers to a different setting and should not be localized.", "- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."]}, "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.")})), wordWrapMinified: L(new p(110, "wordWrapMinified", true)), wrappingIndent: L(new _(111, "wrappingIndent", 1, "same", ["none", "same", "indent", "deepIndent"], function(e2) {
    switch (e2) {
      case "none":
        return 0;
      case "same":
        return 1;
      case "indent":
        return 2;
      case "deepIndent":
        return 3;
    }
  }, {enumDescriptions: [i.a("wrappingIndent.none", "No indentation. Wrapped lines begin at column 1."), i.a("wrappingIndent.same", "Wrapped lines get the same indentation as the parent."), i.a("wrappingIndent.indent", "Wrapped lines get +1 indentation toward the parent."), i.a("wrappingIndent.deepIndent", "Wrapped lines get +2 indentation toward the parent.")], description: i.a("wrappingIndent", "Controls the indentation of wrapped lines.")})), wrappingStrategy: L(new b(112, "wrappingStrategy", "simple", ["simple", "advanced"], {enumDescriptions: [i.a("wrappingStrategy.simple", "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width."), i.a("wrappingStrategy.advanced", "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.")], description: i.a("wrappingStrategy", "Controls the algorithm that computes wrapping points.")})), editorClassName: L(new class extends h {
    constructor() {
      super(114, [57, 27]);
    }
    compute(e2, t2, n2) {
      const i2 = ["monaco-editor"];
      return t2.get(27) && i2.push(t2.get(27)), e2.extraEditorClassName && i2.push(e2.extraEditorClassName), t2.get(57) === "default" ? i2.push("mouse-default") : t2.get(57) === "copy" && i2.push("mouse-copy"), t2.get(92) && i2.push("showUnused"), t2.get(113) && i2.push("showDeprecated"), i2.join(" ");
    }
  }()), pixelRatio: L(new class extends h {
    constructor() {
      super(115);
    }
    compute(e2, t2, n2) {
      return e2.pixelRatio;
    }
  }()), tabFocusMode: L(new class extends h {
    constructor() {
      super(116, [72]);
    }
    compute(e2, t2, n2) {
      return !!t2.get(72) || e2.tabFocusMode;
    }
  }()), layoutInfo: L(new C()), wrappingInfo: L(new class extends h {
    constructor() {
      super(118, [117]);
    }
    compute(e2, t2, n2) {
      const i2 = t2.get(117);
      return {isDominatedByLongLines: e2.isDominatedByLongLines, isWordWrapMinified: i2.isWordWrapMinified, isViewportWrapping: i2.isViewportWrapping, wrappingColumn: i2.wrappingColumn};
    }
  }())};
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return c;
  }), n.d(t, "a", function() {
    return d;
  });
  var i = n(2), r = n(14), o = n(18), s = n(6), a = n(53), l = n(37);
  const c = Object(o.c)("commandService"), d = new class {
    constructor() {
      this._commands = new Map(), this._onDidRegisterCommand = new s.a(), this.onDidRegisterCommand = this._onDidRegisterCommand.event;
    }
    registerCommand(e2, t2) {
      if (!e2)
        throw new Error("invalid command");
      if (typeof e2 == "string") {
        if (!t2)
          throw new Error("invalid command");
        return this.registerCommand({id: e2, handler: t2});
      }
      if (e2.description) {
        const t3 = [];
        for (let n4 of e2.description.args)
          t3.push(n4.constraint);
        const n3 = e2.handler;
        e2.handler = function(e3, ...i2) {
          return Object(r.m)(i2, t3), n3(e3, ...i2);
        };
      }
      const {id: n2} = e2;
      let o2 = this._commands.get(n2);
      o2 || (o2 = new a.a(), this._commands.set(n2, o2));
      let s2 = o2.unshift(e2), l2 = Object(i.h)(() => {
        s2();
        const e3 = this._commands.get(n2);
        (e3 == null ? void 0 : e3.isEmpty()) && this._commands.delete(n2);
      });
      return this._onDidRegisterCommand.fire(n2), l2;
    }
    registerCommandAlias(e2, t2) {
      return d.registerCommand(e2, (e3, ...n2) => e3.get(c).executeCommand(t2, ...n2));
    }
    getCommand(e2) {
      const t2 = this._commands.get(e2);
      if (t2 && !t2.isEmpty())
        return l.a.first(t2);
    }
    getCommands() {
      const e2 = new Map();
      for (const t2 of this._commands.keys()) {
        const n2 = this.getCommand(t2);
        n2 && e2.set(t2, n2);
      }
      return e2;
    }
  }();
}, function(e, t, n) {
  "use strict";
  (function(e2) {
    n.d(t, "a", function() {
      return o;
    }), n.d(t, "b", function() {
      return s;
    }), n.d(t, "c", function() {
      return a;
    });
    var i = n(11);
    const r = e2 === void 0 ? {cwd: () => "/", env: Object.create(null), get platform() {
      return i.i ? "win32" : i.f ? "darwin" : "linux";
    }, nextTick: (e3) => Object(i.j)(e3)} : e2, o = r.cwd, s = r.env, a = r.platform;
  }).call(this, n(86));
}, function(e, t, n) {
  "use strict";
  var i = n(108);
  n.d(t, "a", function() {
    return i.b;
  }), n.d(t, "b", function() {
    return i.e;
  }), n.d(t, "c", function() {
    return i.f;
  }), n.d(t, "d", function() {
    return i.h;
  }), n.d(t, "e", function() {
    return i.l;
  }), n.d(t, "f", function() {
    return i.m;
  }), n.d(t, "g", function() {
    return i.n;
  });
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return Ve;
  }), n.d(t, "a", function() {
    return Ge;
  });
  var i = n(13), r = n(6), o = n(2), s = n(8), a = n(23), l = n(26), c = n(9), d = n(3), h = n(21), u = n(58), p = n(175);
  class m {
    constructor() {
      this.spacesDiff = 0, this.looksLikeAlignment = false;
    }
  }
  function g(e2, t2, n2, i2, r2) {
    let o2;
    for (r2.spacesDiff = 0, r2.looksLikeAlignment = false, o2 = 0; o2 < t2 && o2 < i2; o2++) {
      if (e2.charCodeAt(o2) !== n2.charCodeAt(o2))
        break;
    }
    let s2 = 0, a2 = 0;
    for (let n3 = o2; n3 < t2; n3++) {
      e2.charCodeAt(n3) === 32 ? s2++ : a2++;
    }
    let l2 = 0, c2 = 0;
    for (let e3 = o2; e3 < i2; e3++) {
      n2.charCodeAt(e3) === 32 ? l2++ : c2++;
    }
    if (s2 > 0 && a2 > 0)
      return;
    if (l2 > 0 && c2 > 0)
      return;
    let d2 = Math.abs(a2 - c2), h2 = Math.abs(s2 - l2);
    if (d2 === 0)
      return r2.spacesDiff = h2, void (h2 > 0 && 0 <= l2 - 1 && l2 - 1 < e2.length && l2 < n2.length && n2.charCodeAt(l2) !== 32 && e2.charCodeAt(l2 - 1) === 32 && e2.charCodeAt(e2.length - 1) === 44 && (r2.looksLikeAlignment = true));
    h2 % d2 != 0 || (r2.spacesDiff = h2 / d2);
  }
  function f(e2, t2, n2) {
    const i2 = Math.min(e2.getLineCount(), 1e4);
    let r2 = 0, o2 = 0, s2 = "", a2 = 0;
    const l2 = [2, 4, 6, 8, 3, 5, 7];
    let c2 = [0, 0, 0, 0, 0, 0, 0, 0, 0], d2 = new m();
    for (let l3 = 1; l3 <= i2; l3++) {
      let i3 = e2.getLineLength(l3), h3 = e2.getLineContent(l3);
      const u3 = i3 <= 65536;
      let p2 = false, m2 = 0, f2 = 0, b2 = 0;
      for (let t3 = 0, n3 = i3; t3 < n3; t3++) {
        let n4 = u3 ? h3.charCodeAt(t3) : e2.getLineCharCode(l3, t3);
        if (n4 === 9)
          b2++;
        else {
          if (n4 !== 32) {
            p2 = true, m2 = t3;
            break;
          }
          f2++;
        }
      }
      if (!p2)
        continue;
      if (b2 > 0 ? r2++ : f2 > 1 && o2++, g(s2, a2, h3, m2, d2), d2.looksLikeAlignment && (!n2 || t2 !== d2.spacesDiff))
        continue;
      let _2 = d2.spacesDiff;
      _2 <= 8 && c2[_2]++, s2 = h3, a2 = m2;
    }
    let h2 = n2;
    r2 !== o2 && (h2 = r2 < o2);
    let u2 = t2;
    if (h2) {
      let e3 = h2 ? 0 : 0.1 * i2;
      l2.forEach((t3) => {
        let n3 = c2[t3];
        n3 > e3 && (e3 = n3, u2 = t3);
      }), u2 === 4 && c2[4] > 0 && c2[2] > 0 && c2[2] >= c2[4] / 2 && (u2 = 2);
    }
    return {insertSpaces: h2, tabSize: u2};
  }
  function b(e2) {
    return (1 & e2.metadata) >>> 0;
  }
  function _(e2, t2) {
    e2.metadata = 254 & e2.metadata | t2 << 0;
  }
  function v(e2) {
    return (2 & e2.metadata) >>> 1 == 1;
  }
  function w(e2, t2) {
    e2.metadata = 253 & e2.metadata | (t2 ? 1 : 0) << 1;
  }
  function y(e2) {
    return (4 & e2.metadata) >>> 2 == 1;
  }
  function C(e2, t2) {
    e2.metadata = 251 & e2.metadata | (t2 ? 1 : 0) << 2;
  }
  function x(e2) {
    return (8 & e2.metadata) >>> 3 == 1;
  }
  function S(e2, t2) {
    e2.metadata = 247 & e2.metadata | (t2 ? 1 : 0) << 3;
  }
  function k(e2, t2) {
    e2.metadata = 207 & e2.metadata | t2 << 4;
  }
  function E(e2, t2) {
    e2.metadata = 191 & e2.metadata | (t2 ? 1 : 0) << 6;
  }
  class T {
    constructor(e2, t2, n2) {
      this.metadata = 0, this.parent = this, this.left = this, this.right = this, _(this, 1), this.start = t2, this.end = n2, this.delta = 0, this.maxEnd = n2, this.id = e2, this.ownerId = 0, this.options = null, C(this, false), k(this, 1), S(this, false), E(this, false), this.cachedVersionId = 0, this.cachedAbsoluteStart = t2, this.cachedAbsoluteEnd = n2, this.range = null, w(this, false);
    }
    reset(e2, t2, n2, i2) {
      this.start = t2, this.end = n2, this.maxEnd = n2, this.cachedVersionId = e2, this.cachedAbsoluteStart = t2, this.cachedAbsoluteEnd = n2, this.range = i2;
    }
    setOptions(e2) {
      this.options = e2;
      let t2 = this.options.className;
      C(this, t2 === "squiggly-error" || t2 === "squiggly-warning" || t2 === "squiggly-info"), k(this, this.options.stickiness), S(this, !(!this.options.overviewRuler || !this.options.overviewRuler.color)), E(this, this.options.collapseOnReplaceEdit);
    }
    setCachedOffsets(e2, t2, n2) {
      this.cachedVersionId !== n2 && (this.range = null), this.cachedVersionId = n2, this.cachedAbsoluteStart = e2, this.cachedAbsoluteEnd = t2;
    }
    detach() {
      this.parent = null, this.left = null, this.right = null;
    }
  }
  const L = new T(null, 0, 0);
  L.parent = L, L.left = L, L.right = L, _(L, 0);
  class N {
    constructor() {
      this.root = L, this.requestNormalizeDelta = false;
    }
    intervalSearch(e2, t2, n2, i2, r2) {
      return this.root === L ? [] : function(e3, t3, n3, i3, r3, o2) {
        let s2 = e3.root, a2 = 0, l2 = 0, c2 = 0, d2 = 0, h2 = [], u2 = 0;
        for (; s2 !== L; )
          if (v(s2))
            w(s2.left, false), w(s2.right, false), s2 === s2.parent.right && (a2 -= s2.parent.delta), s2 = s2.parent;
          else {
            if (!v(s2.left)) {
              if (l2 = a2 + s2.maxEnd, l2 < t3) {
                w(s2, true);
                continue;
              }
              if (s2.left !== L) {
                s2 = s2.left;
                continue;
              }
            }
            if (c2 = a2 + s2.start, c2 > n3)
              w(s2, true);
            else {
              if (d2 = a2 + s2.end, d2 >= t3) {
                s2.setCachedOffsets(c2, d2, o2);
                let e4 = true;
                i3 && s2.ownerId && s2.ownerId !== i3 && (e4 = false), r3 && y(s2) && (e4 = false), e4 && (h2[u2++] = s2);
              }
              w(s2, true), s2.right === L || v(s2.right) || (a2 += s2.delta, s2 = s2.right);
            }
          }
        return w(e3.root, false), h2;
      }(this, e2, t2, n2, i2, r2);
    }
    search(e2, t2, n2) {
      return this.root === L ? [] : function(e3, t3, n3, i2) {
        let r2 = e3.root, o2 = 0, s2 = 0, a2 = 0, l2 = [], c2 = 0;
        for (; r2 !== L; ) {
          if (v(r2)) {
            w(r2.left, false), w(r2.right, false), r2 === r2.parent.right && (o2 -= r2.parent.delta), r2 = r2.parent;
            continue;
          }
          if (r2.left !== L && !v(r2.left)) {
            r2 = r2.left;
            continue;
          }
          s2 = o2 + r2.start, a2 = o2 + r2.end, r2.setCachedOffsets(s2, a2, i2);
          let e4 = true;
          t3 && r2.ownerId && r2.ownerId !== t3 && (e4 = false), n3 && y(r2) && (e4 = false), e4 && (l2[c2++] = r2), w(r2, true), r2.right === L || v(r2.right) || (o2 += r2.delta, r2 = r2.right);
        }
        return w(e3.root, false), l2;
      }(this, e2, t2, n2);
    }
    collectNodesFromOwner(e2) {
      return function(e3, t2) {
        let n2 = e3.root, i2 = [], r2 = 0;
        for (; n2 !== L; )
          v(n2) ? (w(n2.left, false), w(n2.right, false), n2 = n2.parent) : n2.left === L || v(n2.left) ? (n2.ownerId === t2 && (i2[r2++] = n2), w(n2, true), n2.right === L || v(n2.right) || (n2 = n2.right)) : n2 = n2.left;
        return w(e3.root, false), i2;
      }(this, e2);
    }
    collectNodesPostOrder() {
      return function(e2) {
        let t2 = e2.root, n2 = [], i2 = 0;
        for (; t2 !== L; )
          v(t2) ? (w(t2.left, false), w(t2.right, false), t2 = t2.parent) : t2.left === L || v(t2.left) ? t2.right === L || v(t2.right) ? (n2[i2++] = t2, w(t2, true)) : t2 = t2.right : t2 = t2.left;
        return w(e2.root, false), n2;
      }(this);
    }
    insert(e2) {
      O(this, e2), this._normalizeDeltaIfNecessary();
    }
    delete(e2) {
      A(this, e2), this._normalizeDeltaIfNecessary();
    }
    resolveNode(e2, t2) {
      const n2 = e2;
      let i2 = 0;
      for (; e2 !== this.root; )
        e2 === e2.parent.right && (i2 += e2.parent.delta), e2 = e2.parent;
      const r2 = n2.start + i2, o2 = n2.end + i2;
      n2.setCachedOffsets(r2, o2, t2);
    }
    acceptReplace(e2, t2, n2, i2) {
      const r2 = function(e3, t3, n3) {
        let i3 = e3.root, r3 = 0, o2 = 0, s2 = 0, a2 = 0, l2 = [], c2 = 0;
        for (; i3 !== L; )
          if (v(i3))
            w(i3.left, false), w(i3.right, false), i3 === i3.parent.right && (r3 -= i3.parent.delta), i3 = i3.parent;
          else {
            if (!v(i3.left)) {
              if (o2 = r3 + i3.maxEnd, o2 < t3) {
                w(i3, true);
                continue;
              }
              if (i3.left !== L) {
                i3 = i3.left;
                continue;
              }
            }
            s2 = r3 + i3.start, s2 > n3 ? w(i3, true) : (a2 = r3 + i3.end, a2 >= t3 && (i3.setCachedOffsets(s2, a2, 0), l2[c2++] = i3), w(i3, true), i3.right === L || v(i3.right) || (r3 += i3.delta, i3 = i3.right));
          }
        return w(e3.root, false), l2;
      }(this, e2, e2 + t2);
      for (let e3 = 0, t3 = r2.length; e3 < t3; e3++) {
        A(this, r2[e3]);
      }
      this._normalizeDeltaIfNecessary(), function(e3, t3, n3, i3) {
        let r3 = e3.root, o2 = 0, s2 = 0, a2 = 0;
        const l2 = i3 - (n3 - t3);
        for (; r3 !== L; )
          if (v(r3))
            w(r3.left, false), w(r3.right, false), r3 === r3.parent.right && (o2 -= r3.parent.delta), W(r3), r3 = r3.parent;
          else {
            if (!v(r3.left)) {
              if (s2 = o2 + r3.maxEnd, s2 < t3) {
                w(r3, true);
                continue;
              }
              if (r3.left !== L) {
                r3 = r3.left;
                continue;
              }
            }
            a2 = o2 + r3.start, a2 > n3 ? (r3.start += l2, r3.end += l2, r3.delta += l2, (r3.delta < -1073741824 || r3.delta > 1073741824) && (e3.requestNormalizeDelta = true), w(r3, true)) : (w(r3, true), r3.right === L || v(r3.right) || (o2 += r3.delta, r3 = r3.right));
          }
        w(e3.root, false);
      }(this, e2, e2 + t2, n2), this._normalizeDeltaIfNecessary();
      for (let o2 = 0, s2 = r2.length; o2 < s2; o2++) {
        const s3 = r2[o2];
        s3.start = s3.cachedAbsoluteStart, s3.end = s3.cachedAbsoluteEnd, D(s3, e2, e2 + t2, n2, i2), s3.maxEnd = s3.end, O(this, s3);
      }
      this._normalizeDeltaIfNecessary();
    }
    _normalizeDeltaIfNecessary() {
      this.requestNormalizeDelta && (this.requestNormalizeDelta = false, function(e2) {
        let t2 = e2.root, n2 = 0;
        for (; t2 !== L; )
          t2.left === L || v(t2.left) ? t2.right === L || v(t2.right) ? (t2.start = n2 + t2.start, t2.end = n2 + t2.end, t2.delta = 0, W(t2), w(t2, true), w(t2.left, false), w(t2.right, false), t2 === t2.parent.right && (n2 -= t2.parent.delta), t2 = t2.parent) : (n2 += t2.delta, t2 = t2.right) : t2 = t2.left;
        w(e2.root, false);
      }(this));
    }
  }
  function I(e2, t2, n2, i2) {
    return e2 < n2 || !(e2 > n2) && (i2 !== 1 && (i2 === 2 || t2));
  }
  function D(e2, t2, n2, i2, r2) {
    const o2 = function(e3) {
      return (48 & e3.metadata) >>> 4;
    }(e2), s2 = o2 === 0 || o2 === 2, a2 = o2 === 1 || o2 === 2, l2 = n2 - t2, c2 = i2, d2 = Math.min(l2, c2), h2 = e2.start;
    let u2 = false;
    const p2 = e2.end;
    let m2 = false;
    t2 <= h2 && p2 <= n2 && function(e3) {
      return (64 & e3.metadata) >>> 6 == 1;
    }(e2) && (e2.start = t2, u2 = true, e2.end = t2, m2 = true);
    {
      const e3 = r2 ? 1 : l2 > 0 ? 2 : 0;
      !u2 && I(h2, s2, t2, e3) && (u2 = true), !m2 && I(p2, a2, t2, e3) && (m2 = true);
    }
    if (d2 > 0 && !r2) {
      const e3 = l2 > c2 ? 2 : 0;
      !u2 && I(h2, s2, t2 + d2, e3) && (u2 = true), !m2 && I(p2, a2, t2 + d2, e3) && (m2 = true);
    }
    {
      const i3 = r2 ? 1 : 0;
      !u2 && I(h2, s2, n2, i3) && (e2.start = t2 + c2, u2 = true), !m2 && I(p2, a2, n2, i3) && (e2.end = t2 + c2, m2 = true);
    }
    const g2 = c2 - l2;
    u2 || (e2.start = Math.max(0, h2 + g2)), m2 || (e2.end = Math.max(0, p2 + g2)), e2.start > e2.end && (e2.end = e2.start);
  }
  function O(e2, t2) {
    if (e2.root === L)
      return t2.parent = L, t2.left = L, t2.right = L, _(t2, 0), e2.root = t2, e2.root;
    !function(e3, t3) {
      let n3 = 0, i2 = e3.root;
      const r2 = t3.start, o2 = t3.end;
      for (; ; ) {
        if (B(r2, o2, i2.start + n3, i2.end + n3) < 0) {
          if (i2.left === L) {
            t3.start -= n3, t3.end -= n3, t3.maxEnd -= n3, i2.left = t3;
            break;
          }
          i2 = i2.left;
        } else {
          if (i2.right === L) {
            t3.start -= n3 + i2.delta, t3.end -= n3 + i2.delta, t3.maxEnd -= n3 + i2.delta, i2.right = t3;
            break;
          }
          n3 += i2.delta, i2 = i2.right;
        }
      }
      t3.parent = i2, t3.left = L, t3.right = L, _(t3, 1);
    }(e2, t2), z(t2.parent);
    let n2 = t2;
    for (; n2 !== e2.root && b(n2.parent) === 1; )
      if (n2.parent === n2.parent.parent.left) {
        const t3 = n2.parent.parent.right;
        b(t3) === 1 ? (_(n2.parent, 0), _(t3, 0), _(n2.parent.parent, 1), n2 = n2.parent.parent) : (n2 === n2.parent.right && (n2 = n2.parent, M(e2, n2)), _(n2.parent, 0), _(n2.parent.parent, 1), P(e2, n2.parent.parent));
      } else {
        const t3 = n2.parent.parent.left;
        b(t3) === 1 ? (_(n2.parent, 0), _(t3, 0), _(n2.parent.parent, 1), n2 = n2.parent.parent) : (n2 === n2.parent.left && (n2 = n2.parent, P(e2, n2)), _(n2.parent, 0), _(n2.parent.parent, 1), M(e2, n2.parent.parent));
      }
    return _(e2.root, 0), t2;
  }
  function A(e2, t2) {
    let n2, i2;
    if (t2.left === L ? (n2 = t2.right, i2 = t2, n2.delta += t2.delta, (n2.delta < -1073741824 || n2.delta > 1073741824) && (e2.requestNormalizeDelta = true), n2.start += t2.delta, n2.end += t2.delta) : t2.right === L ? (n2 = t2.left, i2 = t2) : (i2 = function(e3) {
      for (; e3.left !== L; )
        e3 = e3.left;
      return e3;
    }(t2.right), n2 = i2.right, n2.start += i2.delta, n2.end += i2.delta, n2.delta += i2.delta, (n2.delta < -1073741824 || n2.delta > 1073741824) && (e2.requestNormalizeDelta = true), i2.start += t2.delta, i2.end += t2.delta, i2.delta = t2.delta, (i2.delta < -1073741824 || i2.delta > 1073741824) && (e2.requestNormalizeDelta = true)), i2 === e2.root)
      return e2.root = n2, _(n2, 0), t2.detach(), R(), W(n2), void (e2.root.parent = L);
    let r2, o2 = b(i2) === 1;
    if (i2 === i2.parent.left ? i2.parent.left = n2 : i2.parent.right = n2, i2 === t2 ? n2.parent = i2.parent : (i2.parent === t2 ? n2.parent = i2 : n2.parent = i2.parent, i2.left = t2.left, i2.right = t2.right, i2.parent = t2.parent, _(i2, b(t2)), t2 === e2.root ? e2.root = i2 : t2 === t2.parent.left ? t2.parent.left = i2 : t2.parent.right = i2, i2.left !== L && (i2.left.parent = i2), i2.right !== L && (i2.right.parent = i2)), t2.detach(), o2)
      return z(n2.parent), i2 !== t2 && (z(i2), z(i2.parent)), void R();
    for (z(n2), z(n2.parent), i2 !== t2 && (z(i2), z(i2.parent)); n2 !== e2.root && b(n2) === 0; )
      n2 === n2.parent.left ? (r2 = n2.parent.right, b(r2) === 1 && (_(r2, 0), _(n2.parent, 1), M(e2, n2.parent), r2 = n2.parent.right), b(r2.left) === 0 && b(r2.right) === 0 ? (_(r2, 1), n2 = n2.parent) : (b(r2.right) === 0 && (_(r2.left, 0), _(r2, 1), P(e2, r2), r2 = n2.parent.right), _(r2, b(n2.parent)), _(n2.parent, 0), _(r2.right, 0), M(e2, n2.parent), n2 = e2.root)) : (r2 = n2.parent.left, b(r2) === 1 && (_(r2, 0), _(n2.parent, 1), P(e2, n2.parent), r2 = n2.parent.left), b(r2.left) === 0 && b(r2.right) === 0 ? (_(r2, 1), n2 = n2.parent) : (b(r2.left) === 0 && (_(r2.right, 0), _(r2, 1), M(e2, r2), r2 = n2.parent.left), _(r2, b(n2.parent)), _(n2.parent, 0), _(r2.left, 0), P(e2, n2.parent), n2 = e2.root));
    _(n2, 0), R();
  }
  function R() {
    L.parent = L, L.delta = 0, L.start = 0, L.end = 0;
  }
  function M(e2, t2) {
    const n2 = t2.right;
    n2.delta += t2.delta, (n2.delta < -1073741824 || n2.delta > 1073741824) && (e2.requestNormalizeDelta = true), n2.start += t2.delta, n2.end += t2.delta, t2.right = n2.left, n2.left !== L && (n2.left.parent = t2), n2.parent = t2.parent, t2.parent === L ? e2.root = n2 : t2 === t2.parent.left ? t2.parent.left = n2 : t2.parent.right = n2, n2.left = t2, t2.parent = n2, W(t2), W(n2);
  }
  function P(e2, t2) {
    const n2 = t2.left;
    t2.delta -= n2.delta, (t2.delta < -1073741824 || t2.delta > 1073741824) && (e2.requestNormalizeDelta = true), t2.start -= n2.delta, t2.end -= n2.delta, t2.left = n2.right, n2.right !== L && (n2.right.parent = t2), n2.parent = t2.parent, t2.parent === L ? e2.root = n2 : t2 === t2.parent.right ? t2.parent.right = n2 : t2.parent.left = n2, n2.right = t2, t2.parent = n2, W(t2), W(n2);
  }
  function F(e2) {
    let t2 = e2.end;
    if (e2.left !== L) {
      const n2 = e2.left.maxEnd;
      n2 > t2 && (t2 = n2);
    }
    if (e2.right !== L) {
      const n2 = e2.right.maxEnd + e2.delta;
      n2 > t2 && (t2 = n2);
    }
    return t2;
  }
  function W(e2) {
    e2.maxEnd = F(e2);
  }
  function z(e2) {
    for (; e2 !== L; ) {
      const t2 = F(e2);
      if (e2.maxEnd === t2)
        return;
      e2.maxEnd = t2, e2 = e2.parent;
    }
  }
  function B(e2, t2, n2, i2) {
    return e2 === n2 ? t2 - i2 : e2 - n2;
  }
  class j {
    constructor(e2, t2) {
      this.piece = e2, this.color = t2, this.size_left = 0, this.lf_left = 0, this.parent = this, this.left = this, this.right = this;
    }
    next() {
      if (this.right !== V)
        return U(this.right);
      let e2 = this;
      for (; e2.parent !== V && e2.parent.left !== e2; )
        e2 = e2.parent;
      return e2.parent === V ? V : e2.parent;
    }
    prev() {
      if (this.left !== V)
        return H(this.left);
      let e2 = this;
      for (; e2.parent !== V && e2.parent.right !== e2; )
        e2 = e2.parent;
      return e2.parent === V ? V : e2.parent;
    }
    detach() {
      this.parent = null, this.left = null, this.right = null;
    }
  }
  const V = new j(null, 0);
  function U(e2) {
    for (; e2.left !== V; )
      e2 = e2.left;
    return e2;
  }
  function H(e2) {
    for (; e2.right !== V; )
      e2 = e2.right;
    return e2;
  }
  function q(e2) {
    return e2 === V ? 0 : e2.size_left + e2.piece.length + q(e2.right);
  }
  function $(e2) {
    return e2 === V ? 0 : e2.lf_left + e2.piece.lineFeedCnt + $(e2.right);
  }
  function K() {
    V.parent = V;
  }
  function G(e2, t2) {
    let n2 = t2.right;
    n2.size_left += t2.size_left + (t2.piece ? t2.piece.length : 0), n2.lf_left += t2.lf_left + (t2.piece ? t2.piece.lineFeedCnt : 0), t2.right = n2.left, n2.left !== V && (n2.left.parent = t2), n2.parent = t2.parent, t2.parent === V ? e2.root = n2 : t2.parent.left === t2 ? t2.parent.left = n2 : t2.parent.right = n2, n2.left = t2, t2.parent = n2;
  }
  function Y(e2, t2) {
    let n2 = t2.left;
    t2.left = n2.right, n2.right !== V && (n2.right.parent = t2), n2.parent = t2.parent, t2.size_left -= n2.size_left + (n2.piece ? n2.piece.length : 0), t2.lf_left -= n2.lf_left + (n2.piece ? n2.piece.lineFeedCnt : 0), t2.parent === V ? e2.root = n2 : t2 === t2.parent.right ? t2.parent.right = n2 : t2.parent.left = n2, n2.right = t2, t2.parent = n2;
  }
  function Z(e2, t2) {
    let n2, i2;
    if (t2.left === V ? (i2 = t2, n2 = i2.right) : t2.right === V ? (i2 = t2, n2 = i2.left) : (i2 = U(t2.right), n2 = i2.right), i2 === e2.root)
      return e2.root = n2, n2.color = 0, t2.detach(), K(), void (e2.root.parent = V);
    let r2, o2 = i2.color === 1;
    if (i2 === i2.parent.left ? i2.parent.left = n2 : i2.parent.right = n2, i2 === t2 ? (n2.parent = i2.parent, J(e2, n2)) : (i2.parent === t2 ? n2.parent = i2 : n2.parent = i2.parent, J(e2, n2), i2.left = t2.left, i2.right = t2.right, i2.parent = t2.parent, i2.color = t2.color, t2 === e2.root ? e2.root = i2 : t2 === t2.parent.left ? t2.parent.left = i2 : t2.parent.right = i2, i2.left !== V && (i2.left.parent = i2), i2.right !== V && (i2.right.parent = i2), i2.size_left = t2.size_left, i2.lf_left = t2.lf_left, J(e2, i2)), t2.detach(), n2.parent.left === n2) {
      let t3 = q(n2), i3 = $(n2);
      if (t3 !== n2.parent.size_left || i3 !== n2.parent.lf_left) {
        let r3 = t3 - n2.parent.size_left, o3 = i3 - n2.parent.lf_left;
        n2.parent.size_left = t3, n2.parent.lf_left = i3, Q(e2, n2.parent, r3, o3);
      }
    }
    if (J(e2, n2.parent), o2)
      K();
    else {
      for (; n2 !== e2.root && n2.color === 0; )
        n2 === n2.parent.left ? (r2 = n2.parent.right, r2.color === 1 && (r2.color = 0, n2.parent.color = 1, G(e2, n2.parent), r2 = n2.parent.right), r2.left.color === 0 && r2.right.color === 0 ? (r2.color = 1, n2 = n2.parent) : (r2.right.color === 0 && (r2.left.color = 0, r2.color = 1, Y(e2, r2), r2 = n2.parent.right), r2.color = n2.parent.color, n2.parent.color = 0, r2.right.color = 0, G(e2, n2.parent), n2 = e2.root)) : (r2 = n2.parent.left, r2.color === 1 && (r2.color = 0, n2.parent.color = 1, Y(e2, n2.parent), r2 = n2.parent.left), r2.left.color === 0 && r2.right.color === 0 ? (r2.color = 1, n2 = n2.parent) : (r2.left.color === 0 && (r2.right.color = 0, r2.color = 1, G(e2, r2), r2 = n2.parent.left), r2.color = n2.parent.color, n2.parent.color = 0, r2.left.color = 0, Y(e2, n2.parent), n2 = e2.root));
      n2.color = 0, K();
    }
  }
  function X(e2, t2) {
    for (J(e2, t2); t2 !== e2.root && t2.parent.color === 1; )
      if (t2.parent === t2.parent.parent.left) {
        const n2 = t2.parent.parent.right;
        n2.color === 1 ? (t2.parent.color = 0, n2.color = 0, t2.parent.parent.color = 1, t2 = t2.parent.parent) : (t2 === t2.parent.right && G(e2, t2 = t2.parent), t2.parent.color = 0, t2.parent.parent.color = 1, Y(e2, t2.parent.parent));
      } else {
        const n2 = t2.parent.parent.left;
        n2.color === 1 ? (t2.parent.color = 0, n2.color = 0, t2.parent.parent.color = 1, t2 = t2.parent.parent) : (t2 === t2.parent.left && Y(e2, t2 = t2.parent), t2.parent.color = 0, t2.parent.parent.color = 1, G(e2, t2.parent.parent));
      }
    e2.root.color = 0;
  }
  function Q(e2, t2, n2, i2) {
    for (; t2 !== e2.root && t2 !== V; )
      t2.parent.left === t2 && (t2.parent.size_left += n2, t2.parent.lf_left += i2), t2 = t2.parent;
  }
  function J(e2, t2) {
    let n2 = 0, i2 = 0;
    if (t2 !== e2.root) {
      if (n2 === 0) {
        for (; t2 !== e2.root && t2 === t2.parent.right; )
          t2 = t2.parent;
        if (t2 === e2.root)
          return;
        n2 = q((t2 = t2.parent).left) - t2.size_left, i2 = $(t2.left) - t2.lf_left, t2.size_left += n2, t2.lf_left += i2;
      }
      for (; t2 !== e2.root && (n2 !== 0 || i2 !== 0); )
        t2.parent.left === t2 && (t2.parent.size_left += n2, t2.parent.lf_left += i2), t2 = t2.parent;
    }
  }
  V.parent = V, V.left = V, V.right = V, V.color = 0;
  var ee = n(106);
  function te(e2) {
    let t2;
    return t2 = e2[e2.length - 1] < 65536 ? new Uint16Array(e2.length) : new Uint32Array(e2.length), t2.set(e2, 0), t2;
  }
  class ne {
    constructor(e2, t2, n2, i2, r2) {
      this.lineStarts = e2, this.cr = t2, this.lf = n2, this.crlf = i2, this.isBasicASCII = r2;
    }
  }
  function ie(e2, t2 = true) {
    let n2 = [0], i2 = 1;
    for (let t3 = 0, r2 = e2.length; t3 < r2; t3++) {
      const o2 = e2.charCodeAt(t3);
      o2 === 13 ? t3 + 1 < r2 && e2.charCodeAt(t3 + 1) === 10 ? (n2[i2++] = t3 + 2, t3++) : n2[i2++] = t3 + 1 : o2 === 10 && (n2[i2++] = t3 + 1);
    }
    return t2 ? te(n2) : n2;
  }
  class re {
    constructor(e2, t2, n2, i2, r2) {
      this.bufferIndex = e2, this.start = t2, this.end = n2, this.lineFeedCnt = i2, this.length = r2;
    }
  }
  class oe {
    constructor(e2, t2) {
      this.buffer = e2, this.lineStarts = t2;
    }
  }
  class se {
    constructor(e2, t2) {
      this._pieces = [], this._tree = e2, this._BOM = t2, this._index = 0, e2.root !== V && e2.iterate(e2.root, (e3) => (e3 !== V && this._pieces.push(e3.piece), true));
    }
    read() {
      return this._pieces.length === 0 ? this._index === 0 ? (this._index++, this._BOM) : null : this._index > this._pieces.length - 1 ? null : this._index === 0 ? this._BOM + this._tree.getPieceContent(this._pieces[this._index++]) : this._tree.getPieceContent(this._pieces[this._index++]);
    }
  }
  class ae {
    constructor(e2) {
      this._limit = e2, this._cache = [];
    }
    get(e2) {
      for (let t2 = this._cache.length - 1; t2 >= 0; t2--) {
        let n2 = this._cache[t2];
        if (n2.nodeStartOffset <= e2 && n2.nodeStartOffset + n2.node.piece.length >= e2)
          return n2;
      }
      return null;
    }
    get2(e2) {
      for (let t2 = this._cache.length - 1; t2 >= 0; t2--) {
        let n2 = this._cache[t2];
        if (n2.nodeStartLineNumber && n2.nodeStartLineNumber < e2 && n2.nodeStartLineNumber + n2.node.piece.lineFeedCnt >= e2)
          return n2;
      }
      return null;
    }
    set(e2) {
      this._cache.length >= this._limit && this._cache.shift(), this._cache.push(e2);
    }
    validate(e2) {
      let t2 = false, n2 = this._cache;
      for (let i2 = 0; i2 < n2.length; i2++) {
        let r2 = n2[i2];
        (r2.node.parent === null || r2.nodeStartOffset >= e2) && (n2[i2] = null, t2 = true);
      }
      if (t2) {
        let e3 = [];
        for (const t3 of n2)
          t3 !== null && e3.push(t3);
        this._cache = e3;
      }
    }
  }
  class le {
    constructor(e2, t2, n2) {
      this.create(e2, t2, n2);
    }
    create(e2, t2, n2) {
      this._buffers = [new oe("", [0])], this._lastChangeBufferPos = {line: 0, column: 0}, this.root = V, this._lineCnt = 1, this._length = 0, this._EOL = t2, this._EOLLength = t2.length, this._EOLNormalized = n2;
      let i2 = null;
      for (let t3 = 0, n3 = e2.length; t3 < n3; t3++)
        if (e2[t3].buffer.length > 0) {
          e2[t3].lineStarts || (e2[t3].lineStarts = ie(e2[t3].buffer));
          let n4 = new re(t3 + 1, {line: 0, column: 0}, {line: e2[t3].lineStarts.length - 1, column: e2[t3].buffer.length - e2[t3].lineStarts[e2[t3].lineStarts.length - 1]}, e2[t3].lineStarts.length - 1, e2[t3].buffer.length);
          this._buffers.push(e2[t3]), i2 = this.rbInsertRight(i2, n4);
        }
      this._searchCache = new ae(1), this._lastVisitedLine = {lineNumber: 0, value: ""}, this.computeBufferMetadata();
    }
    normalizeEOL(e2) {
      let t2 = 65535 - Math.floor(21845), n2 = 2 * t2, i2 = "", r2 = 0, o2 = [];
      if (this.iterate(this.root, (s2) => {
        let a2 = this.getNodeContent(s2), l2 = a2.length;
        if (r2 <= t2 || r2 + l2 < n2)
          return i2 += a2, r2 += l2, true;
        let c2 = i2.replace(/\r\n|\r|\n/g, e2);
        return o2.push(new oe(c2, ie(c2))), i2 = a2, r2 = l2, true;
      }), r2 > 0) {
        let t3 = i2.replace(/\r\n|\r|\n/g, e2);
        o2.push(new oe(t3, ie(t3)));
      }
      this.create(o2, e2, true);
    }
    getEOL() {
      return this._EOL;
    }
    setEOL(e2) {
      this._EOL = e2, this._EOLLength = this._EOL.length, this.normalizeEOL(e2);
    }
    createSnapshot(e2) {
      return new se(this, e2);
    }
    getOffsetAt(e2, t2) {
      let n2 = 0, i2 = this.root;
      for (; i2 !== V; )
        if (i2.left !== V && i2.lf_left + 1 >= e2)
          i2 = i2.left;
        else {
          if (i2.lf_left + i2.piece.lineFeedCnt + 1 >= e2) {
            return n2 += i2.size_left, n2 + (this.getAccumulatedValue(i2, e2 - i2.lf_left - 2) + t2 - 1);
          }
          e2 -= i2.lf_left + i2.piece.lineFeedCnt, n2 += i2.size_left + i2.piece.length, i2 = i2.right;
        }
      return n2;
    }
    getPositionAt(e2) {
      e2 = Math.floor(e2), e2 = Math.max(0, e2);
      let t2 = this.root, n2 = 0, i2 = e2;
      for (; t2 !== V; )
        if (t2.size_left !== 0 && t2.size_left >= e2)
          t2 = t2.left;
        else {
          if (t2.size_left + t2.piece.length >= e2) {
            let r2 = this.getIndexOf(t2, e2 - t2.size_left);
            if (n2 += t2.lf_left + r2.index, r2.index === 0) {
              let e3 = i2 - this.getOffsetAt(n2 + 1, 1);
              return new c.a(n2 + 1, e3 + 1);
            }
            return new c.a(n2 + 1, r2.remainder + 1);
          }
          if (e2 -= t2.size_left + t2.piece.length, n2 += t2.lf_left + t2.piece.lineFeedCnt, t2.right === V) {
            let t3 = i2 - e2 - this.getOffsetAt(n2 + 1, 1);
            return new c.a(n2 + 1, t3 + 1);
          }
          t2 = t2.right;
        }
      return new c.a(1, 1);
    }
    getValueInRange(e2, t2) {
      if (e2.startLineNumber === e2.endLineNumber && e2.startColumn === e2.endColumn)
        return "";
      let n2 = this.nodeAt2(e2.startLineNumber, e2.startColumn), i2 = this.nodeAt2(e2.endLineNumber, e2.endColumn), r2 = this.getValueInRange2(n2, i2);
      return t2 ? t2 === this._EOL && this._EOLNormalized && t2 === this.getEOL() && this._EOLNormalized ? r2 : r2.replace(/\r\n|\r|\n/g, t2) : r2;
    }
    getValueInRange2(e2, t2) {
      if (e2.node === t2.node) {
        let n3 = e2.node, i3 = this._buffers[n3.piece.bufferIndex].buffer, r3 = this.offsetInBuffer(n3.piece.bufferIndex, n3.piece.start);
        return i3.substring(r3 + e2.remainder, r3 + t2.remainder);
      }
      let n2 = e2.node, i2 = this._buffers[n2.piece.bufferIndex].buffer, r2 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start), o2 = i2.substring(r2 + e2.remainder, r2 + n2.piece.length);
      for (n2 = n2.next(); n2 !== V; ) {
        let e3 = this._buffers[n2.piece.bufferIndex].buffer, i3 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
        if (n2 === t2.node) {
          o2 += e3.substring(i3, i3 + t2.remainder);
          break;
        }
        o2 += e3.substr(i3, n2.piece.length), n2 = n2.next();
      }
      return o2;
    }
    getLinesContent() {
      let e2 = [], t2 = 0, n2 = "", i2 = false;
      return this.iterate(this.root, (r2) => {
        if (r2 === V)
          return true;
        const o2 = r2.piece;
        let s2 = o2.length;
        if (s2 === 0)
          return true;
        const a2 = this._buffers[o2.bufferIndex].buffer, l2 = this._buffers[o2.bufferIndex].lineStarts, c2 = o2.start.line, d2 = o2.end.line;
        let h2 = l2[c2] + o2.start.column;
        if (i2 && (a2.charCodeAt(h2) === 10 && (h2++, s2--), e2[t2++] = n2, n2 = "", i2 = false, s2 === 0))
          return true;
        if (c2 === d2)
          return this._EOLNormalized || a2.charCodeAt(h2 + s2 - 1) !== 13 ? n2 += a2.substr(h2, s2) : (i2 = true, n2 += a2.substr(h2, s2 - 1)), true;
        n2 += this._EOLNormalized ? a2.substring(h2, Math.max(h2, l2[c2 + 1] - this._EOLLength)) : a2.substring(h2, l2[c2 + 1]).replace(/(\r\n|\r|\n)$/, ""), e2[t2++] = n2;
        for (let i3 = c2 + 1; i3 < d2; i3++)
          n2 = this._EOLNormalized ? a2.substring(l2[i3], l2[i3 + 1] - this._EOLLength) : a2.substring(l2[i3], l2[i3 + 1]).replace(/(\r\n|\r|\n)$/, ""), e2[t2++] = n2;
        return this._EOLNormalized || a2.charCodeAt(l2[d2] + o2.end.column - 1) !== 13 ? n2 = a2.substr(l2[d2], o2.end.column) : (i2 = true, o2.end.column === 0 ? t2-- : n2 = a2.substr(l2[d2], o2.end.column - 1)), true;
      }), i2 && (e2[t2++] = n2, n2 = ""), e2[t2++] = n2, e2;
    }
    getLength() {
      return this._length;
    }
    getLineCount() {
      return this._lineCnt;
    }
    getLineContent(e2) {
      return this._lastVisitedLine.lineNumber === e2 || (this._lastVisitedLine.lineNumber = e2, e2 === this._lineCnt ? this._lastVisitedLine.value = this.getLineRawContent(e2) : this._EOLNormalized ? this._lastVisitedLine.value = this.getLineRawContent(e2, this._EOLLength) : this._lastVisitedLine.value = this.getLineRawContent(e2).replace(/(\r\n|\r|\n)$/, "")), this._lastVisitedLine.value;
    }
    _getCharCode(e2) {
      if (e2.remainder === e2.node.piece.length) {
        let t2 = e2.node.next();
        if (!t2)
          return 0;
        let n2 = this._buffers[t2.piece.bufferIndex], i2 = this.offsetInBuffer(t2.piece.bufferIndex, t2.piece.start);
        return n2.buffer.charCodeAt(i2);
      }
      {
        let t2 = this._buffers[e2.node.piece.bufferIndex], n2 = this.offsetInBuffer(e2.node.piece.bufferIndex, e2.node.piece.start) + e2.remainder;
        return t2.buffer.charCodeAt(n2);
      }
    }
    getLineCharCode(e2, t2) {
      let n2 = this.nodeAt2(e2, t2 + 1);
      return this._getCharCode(n2);
    }
    getLineLength(e2) {
      if (e2 === this.getLineCount()) {
        let t2 = this.getOffsetAt(e2, 1);
        return this.getLength() - t2;
      }
      return this.getOffsetAt(e2 + 1, 1) - this.getOffsetAt(e2, 1) - this._EOLLength;
    }
    findMatchesInNode(e2, t2, n2, i2, r2, o2, s2, a2, l2, c2, h2) {
      let u2, p2, m2, g2 = this._buffers[e2.piece.bufferIndex], f2 = this.offsetInBuffer(e2.piece.bufferIndex, e2.piece.start), b2 = this.offsetInBuffer(e2.piece.bufferIndex, r2), _2 = this.offsetInBuffer(e2.piece.bufferIndex, o2), v2 = {line: 0, column: 0};
      t2._wordSeparators ? (p2 = g2.buffer.substring(b2, _2), m2 = (e3) => e3 + b2, t2.reset(0)) : (p2 = g2.buffer, m2 = (e3) => e3, t2.reset(b2));
      do {
        if (u2 = t2.next(p2), u2) {
          if (m2(u2.index) >= _2)
            return c2;
          this.positionInBuffer(e2, m2(u2.index) - f2, v2);
          let t3 = this.getLineFeedCnt(e2.piece.bufferIndex, r2, v2), o3 = v2.line === r2.line ? v2.column - r2.column + i2 : v2.column + 1, s3 = o3 + u2[0].length;
          if (h2[c2++] = Object(ee.d)(new d.a(n2 + t3, o3, n2 + t3, s3), u2, a2), m2(u2.index) + u2[0].length >= _2)
            return c2;
          if (c2 >= l2)
            return c2;
        }
      } while (u2);
      return c2;
    }
    findMatchesLineByLine(e2, t2, n2, i2) {
      const r2 = [];
      let o2 = 0;
      const s2 = new ee.b(t2.wordSeparators, t2.regex);
      let a2 = this.nodeAt2(e2.startLineNumber, e2.startColumn);
      if (a2 === null)
        return [];
      let l2 = this.nodeAt2(e2.endLineNumber, e2.endColumn);
      if (l2 === null)
        return [];
      let c2 = this.positionInBuffer(a2.node, a2.remainder), d2 = this.positionInBuffer(l2.node, l2.remainder);
      if (a2.node === l2.node)
        return this.findMatchesInNode(a2.node, s2, e2.startLineNumber, e2.startColumn, c2, d2, t2, n2, i2, o2, r2), r2;
      let h2 = e2.startLineNumber, u2 = a2.node;
      for (; u2 !== l2.node; ) {
        let l3 = this.getLineFeedCnt(u2.piece.bufferIndex, c2, u2.piece.end);
        if (l3 >= 1) {
          let a3 = this._buffers[u2.piece.bufferIndex].lineStarts, d4 = this.offsetInBuffer(u2.piece.bufferIndex, u2.piece.start), p3 = a3[c2.line + l3], m2 = h2 === e2.startLineNumber ? e2.startColumn : 1;
          if (o2 = this.findMatchesInNode(u2, s2, h2, m2, c2, this.positionInBuffer(u2, p3 - d4), t2, n2, i2, o2, r2), o2 >= i2)
            return r2;
          h2 += l3;
        }
        let d3 = h2 === e2.startLineNumber ? e2.startColumn - 1 : 0;
        if (h2 === e2.endLineNumber) {
          const a3 = this.getLineContent(h2).substring(d3, e2.endColumn - 1);
          return o2 = this._findMatchesInLine(t2, s2, a3, e2.endLineNumber, d3, o2, r2, n2, i2), r2;
        }
        if (o2 = this._findMatchesInLine(t2, s2, this.getLineContent(h2).substr(d3), h2, d3, o2, r2, n2, i2), o2 >= i2)
          return r2;
        h2++, a2 = this.nodeAt2(h2, 1), u2 = a2.node, c2 = this.positionInBuffer(a2.node, a2.remainder);
      }
      if (h2 === e2.endLineNumber) {
        let a3 = h2 === e2.startLineNumber ? e2.startColumn - 1 : 0;
        const l3 = this.getLineContent(h2).substring(a3, e2.endColumn - 1);
        return o2 = this._findMatchesInLine(t2, s2, l3, e2.endLineNumber, a3, o2, r2, n2, i2), r2;
      }
      let p2 = h2 === e2.startLineNumber ? e2.startColumn : 1;
      return o2 = this.findMatchesInNode(l2.node, s2, h2, p2, c2, d2, t2, n2, i2, o2, r2), r2;
    }
    _findMatchesInLine(e2, t2, n2, i2, r2, o2, s2, a2, l2) {
      const c2 = e2.wordSeparators;
      if (!a2 && e2.simpleSearch) {
        const t3 = e2.simpleSearch, a3 = t3.length, h3 = n2.length;
        let p2 = -a3;
        for (; (p2 = n2.indexOf(t3, p2 + a3)) !== -1; )
          if ((!c2 || Object(ee.e)(c2, n2, h3, p2, a3)) && (s2[o2++] = new u.b(new d.a(i2, p2 + 1 + r2, i2, p2 + 1 + a3 + r2), null), o2 >= l2))
            return o2;
        return o2;
      }
      let h2;
      t2.reset(0);
      do {
        if (h2 = t2.next(n2), h2 && (s2[o2++] = Object(ee.d)(new d.a(i2, h2.index + 1 + r2, i2, h2.index + 1 + h2[0].length + r2), h2, a2), o2 >= l2))
          return o2;
      } while (h2);
      return o2;
    }
    insert(e2, t2, n2 = false) {
      if (this._EOLNormalized = this._EOLNormalized && n2, this._lastVisitedLine.lineNumber = 0, this._lastVisitedLine.value = "", this.root !== V) {
        let {node: n3, remainder: i2, nodeStartOffset: r2} = this.nodeAt(e2), o2 = n3.piece, s2 = o2.bufferIndex, a2 = this.positionInBuffer(n3, i2);
        if (n3.piece.bufferIndex === 0 && o2.end.line === this._lastChangeBufferPos.line && o2.end.column === this._lastChangeBufferPos.column && r2 + o2.length === e2 && t2.length < 65535)
          return this.appendToNode(n3, t2), void this.computeBufferMetadata();
        if (r2 === e2)
          this.insertContentToNodeLeft(t2, n3), this._searchCache.validate(e2);
        else if (r2 + n3.piece.length > e2) {
          let e3 = [], r3 = new re(o2.bufferIndex, a2, o2.end, this.getLineFeedCnt(o2.bufferIndex, a2, o2.end), this.offsetInBuffer(s2, o2.end) - this.offsetInBuffer(s2, a2));
          if (this.shouldCheckCRLF() && this.endWithCR(t2)) {
            if (this.nodeCharCodeAt(n3, i2) === 10) {
              let e4 = {line: r3.start.line + 1, column: 0};
              r3 = new re(r3.bufferIndex, e4, r3.end, this.getLineFeedCnt(r3.bufferIndex, e4, r3.end), r3.length - 1), t2 += "\n";
            }
          }
          if (this.shouldCheckCRLF() && this.startWithLF(t2)) {
            if (this.nodeCharCodeAt(n3, i2 - 1) === 13) {
              let r4 = this.positionInBuffer(n3, i2 - 1);
              this.deleteNodeTail(n3, r4), t2 = "\r" + t2, n3.piece.length === 0 && e3.push(n3);
            } else
              this.deleteNodeTail(n3, a2);
          } else
            this.deleteNodeTail(n3, a2);
          let l2 = this.createNewPieces(t2);
          r3.length > 0 && this.rbInsertRight(n3, r3);
          let c2 = n3;
          for (let e4 = 0; e4 < l2.length; e4++)
            c2 = this.rbInsertRight(c2, l2[e4]);
          this.deleteNodes(e3);
        } else
          this.insertContentToNodeRight(t2, n3);
      } else {
        let e3 = this.createNewPieces(t2), n3 = this.rbInsertLeft(null, e3[0]);
        for (let t3 = 1; t3 < e3.length; t3++)
          n3 = this.rbInsertRight(n3, e3[t3]);
      }
      this.computeBufferMetadata();
    }
    delete(e2, t2) {
      if (this._lastVisitedLine.lineNumber = 0, this._lastVisitedLine.value = "", t2 <= 0 || this.root === V)
        return;
      let n2 = this.nodeAt(e2), i2 = this.nodeAt(e2 + t2), r2 = n2.node, o2 = i2.node;
      if (r2 === o2) {
        let o3 = this.positionInBuffer(r2, n2.remainder), s3 = this.positionInBuffer(r2, i2.remainder);
        if (n2.nodeStartOffset === e2) {
          if (t2 === r2.piece.length) {
            let e3 = r2.next();
            return Z(this, r2), this.validateCRLFWithPrevNode(e3), void this.computeBufferMetadata();
          }
          return this.deleteNodeHead(r2, s3), this._searchCache.validate(e2), this.validateCRLFWithPrevNode(r2), void this.computeBufferMetadata();
        }
        return n2.nodeStartOffset + r2.piece.length === e2 + t2 ? (this.deleteNodeTail(r2, o3), this.validateCRLFWithNextNode(r2), void this.computeBufferMetadata()) : (this.shrinkNode(r2, o3, s3), void this.computeBufferMetadata());
      }
      let s2 = [], a2 = this.positionInBuffer(r2, n2.remainder);
      this.deleteNodeTail(r2, a2), this._searchCache.validate(e2), r2.piece.length === 0 && s2.push(r2);
      let l2 = this.positionInBuffer(o2, i2.remainder);
      this.deleteNodeHead(o2, l2), o2.piece.length === 0 && s2.push(o2);
      for (let e3 = r2.next(); e3 !== V && e3 !== o2; e3 = e3.next())
        s2.push(e3);
      let c2 = r2.piece.length === 0 ? r2.prev() : r2;
      this.deleteNodes(s2), this.validateCRLFWithNextNode(c2), this.computeBufferMetadata();
    }
    insertContentToNodeLeft(e2, t2) {
      let n2 = [];
      if (this.shouldCheckCRLF() && this.endWithCR(e2) && this.startWithLF(t2)) {
        let i3 = t2.piece, r3 = {line: i3.start.line + 1, column: 0}, o2 = new re(i3.bufferIndex, r3, i3.end, this.getLineFeedCnt(i3.bufferIndex, r3, i3.end), i3.length - 1);
        t2.piece = o2, e2 += "\n", Q(this, t2, -1, -1), t2.piece.length === 0 && n2.push(t2);
      }
      let i2 = this.createNewPieces(e2), r2 = this.rbInsertLeft(t2, i2[i2.length - 1]);
      for (let e3 = i2.length - 2; e3 >= 0; e3--)
        r2 = this.rbInsertLeft(r2, i2[e3]);
      this.validateCRLFWithPrevNode(r2), this.deleteNodes(n2);
    }
    insertContentToNodeRight(e2, t2) {
      this.adjustCarriageReturnFromNext(e2, t2) && (e2 += "\n");
      let n2 = this.createNewPieces(e2), i2 = this.rbInsertRight(t2, n2[0]), r2 = i2;
      for (let e3 = 1; e3 < n2.length; e3++)
        r2 = this.rbInsertRight(r2, n2[e3]);
      this.validateCRLFWithPrevNode(i2);
    }
    positionInBuffer(e2, t2, n2) {
      let i2 = e2.piece, r2 = e2.piece.bufferIndex, o2 = this._buffers[r2].lineStarts, s2 = o2[i2.start.line] + i2.start.column + t2, a2 = i2.start.line, l2 = i2.end.line, c2 = 0, d2 = 0, h2 = 0;
      for (; a2 <= l2 && (c2 = a2 + (l2 - a2) / 2 | 0, h2 = o2[c2], c2 !== l2); )
        if (d2 = o2[c2 + 1], s2 < h2)
          l2 = c2 - 1;
        else {
          if (!(s2 >= d2))
            break;
          a2 = c2 + 1;
        }
      return n2 ? (n2.line = c2, n2.column = s2 - h2, null) : {line: c2, column: s2 - h2};
    }
    getLineFeedCnt(e2, t2, n2) {
      if (n2.column === 0)
        return n2.line - t2.line;
      let i2 = this._buffers[e2].lineStarts;
      if (n2.line === i2.length - 1)
        return n2.line - t2.line;
      let r2 = i2[n2.line + 1], o2 = i2[n2.line] + n2.column;
      if (r2 > o2 + 1)
        return n2.line - t2.line;
      let s2 = o2 - 1;
      return this._buffers[e2].buffer.charCodeAt(s2) === 13 ? n2.line - t2.line + 1 : n2.line - t2.line;
    }
    offsetInBuffer(e2, t2) {
      return this._buffers[e2].lineStarts[t2.line] + t2.column;
    }
    deleteNodes(e2) {
      for (let t2 = 0; t2 < e2.length; t2++)
        Z(this, e2[t2]);
    }
    createNewPieces(e2) {
      if (e2.length > 65535) {
        let t3 = [];
        for (; e2.length > 65535; ) {
          const n4 = e2.charCodeAt(65534);
          let i3;
          n4 === 13 || n4 >= 55296 && n4 <= 56319 ? (i3 = e2.substring(0, 65534), e2 = e2.substring(65534)) : (i3 = e2.substring(0, 65535), e2 = e2.substring(65535));
          let r3 = ie(i3);
          t3.push(new re(this._buffers.length, {line: 0, column: 0}, {line: r3.length - 1, column: i3.length - r3[r3.length - 1]}, r3.length - 1, i3.length)), this._buffers.push(new oe(i3, r3));
        }
        let n3 = ie(e2);
        return t3.push(new re(this._buffers.length, {line: 0, column: 0}, {line: n3.length - 1, column: e2.length - n3[n3.length - 1]}, n3.length - 1, e2.length)), this._buffers.push(new oe(e2, n3)), t3;
      }
      let t2 = this._buffers[0].buffer.length;
      const n2 = ie(e2, false);
      let i2 = this._lastChangeBufferPos;
      if (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === t2 && t2 !== 0 && this.startWithLF(e2) && this.endWithCR(this._buffers[0].buffer)) {
        this._lastChangeBufferPos = {line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1}, i2 = this._lastChangeBufferPos;
        for (let e3 = 0; e3 < n2.length; e3++)
          n2[e3] += t2 + 1;
        this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(n2.slice(1)), this._buffers[0].buffer += "_" + e2, t2 += 1;
      } else {
        if (t2 !== 0)
          for (let e3 = 0; e3 < n2.length; e3++)
            n2[e3] += t2;
        this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(n2.slice(1)), this._buffers[0].buffer += e2;
      }
      const r2 = this._buffers[0].buffer.length;
      let o2 = this._buffers[0].lineStarts.length - 1, s2 = {line: o2, column: r2 - this._buffers[0].lineStarts[o2]}, a2 = new re(0, i2, s2, this.getLineFeedCnt(0, i2, s2), r2 - t2);
      return this._lastChangeBufferPos = s2, [a2];
    }
    getLineRawContent(e2, t2 = 0) {
      let n2 = this.root, i2 = "", r2 = this._searchCache.get2(e2);
      if (r2) {
        n2 = r2.node;
        let o2 = this.getAccumulatedValue(n2, e2 - r2.nodeStartLineNumber - 1), s2 = this._buffers[n2.piece.bufferIndex].buffer, a2 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
        if (r2.nodeStartLineNumber + n2.piece.lineFeedCnt !== e2) {
          let i3 = this.getAccumulatedValue(n2, e2 - r2.nodeStartLineNumber);
          return s2.substring(a2 + o2, a2 + i3 - t2);
        }
        i2 = s2.substring(a2 + o2, a2 + n2.piece.length);
      } else {
        let r3 = 0;
        const o2 = e2;
        for (; n2 !== V; )
          if (n2.left !== V && n2.lf_left >= e2 - 1)
            n2 = n2.left;
          else {
            if (n2.lf_left + n2.piece.lineFeedCnt > e2 - 1) {
              let i3 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 2), s2 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 1), a2 = this._buffers[n2.piece.bufferIndex].buffer, l2 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
              return r3 += n2.size_left, this._searchCache.set({node: n2, nodeStartOffset: r3, nodeStartLineNumber: o2 - (e2 - 1 - n2.lf_left)}), a2.substring(l2 + i3, l2 + s2 - t2);
            }
            if (n2.lf_left + n2.piece.lineFeedCnt === e2 - 1) {
              let t3 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 2), r4 = this._buffers[n2.piece.bufferIndex].buffer, o3 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
              i2 = r4.substring(o3 + t3, o3 + n2.piece.length);
              break;
            }
            e2 -= n2.lf_left + n2.piece.lineFeedCnt, r3 += n2.size_left + n2.piece.length, n2 = n2.right;
          }
      }
      for (n2 = n2.next(); n2 !== V; ) {
        let e3 = this._buffers[n2.piece.bufferIndex].buffer;
        if (n2.piece.lineFeedCnt > 0) {
          let r3 = this.getAccumulatedValue(n2, 0), o2 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
          return i2 += e3.substring(o2, o2 + r3 - t2), i2;
        }
        {
          let t3 = this.offsetInBuffer(n2.piece.bufferIndex, n2.piece.start);
          i2 += e3.substr(t3, n2.piece.length);
        }
        n2 = n2.next();
      }
      return i2;
    }
    computeBufferMetadata() {
      let e2 = this.root, t2 = 1, n2 = 0;
      for (; e2 !== V; )
        t2 += e2.lf_left + e2.piece.lineFeedCnt, n2 += e2.size_left + e2.piece.length, e2 = e2.right;
      this._lineCnt = t2, this._length = n2, this._searchCache.validate(this._length);
    }
    getIndexOf(e2, t2) {
      let n2 = e2.piece, i2 = this.positionInBuffer(e2, t2), r2 = i2.line - n2.start.line;
      if (this.offsetInBuffer(n2.bufferIndex, n2.end) - this.offsetInBuffer(n2.bufferIndex, n2.start) === t2) {
        let t3 = this.getLineFeedCnt(e2.piece.bufferIndex, n2.start, i2);
        if (t3 !== r2)
          return {index: t3, remainder: 0};
      }
      return {index: r2, remainder: i2.column};
    }
    getAccumulatedValue(e2, t2) {
      if (t2 < 0)
        return 0;
      let n2 = e2.piece, i2 = this._buffers[n2.bufferIndex].lineStarts, r2 = n2.start.line + t2 + 1;
      return r2 > n2.end.line ? i2[n2.end.line] + n2.end.column - i2[n2.start.line] - n2.start.column : i2[r2] - i2[n2.start.line] - n2.start.column;
    }
    deleteNodeTail(e2, t2) {
      const n2 = e2.piece, i2 = n2.lineFeedCnt, r2 = this.offsetInBuffer(n2.bufferIndex, n2.end), o2 = t2, s2 = this.offsetInBuffer(n2.bufferIndex, o2), a2 = this.getLineFeedCnt(n2.bufferIndex, n2.start, o2), l2 = a2 - i2, c2 = s2 - r2, d2 = n2.length + c2;
      e2.piece = new re(n2.bufferIndex, n2.start, o2, a2, d2), Q(this, e2, c2, l2);
    }
    deleteNodeHead(e2, t2) {
      const n2 = e2.piece, i2 = n2.lineFeedCnt, r2 = this.offsetInBuffer(n2.bufferIndex, n2.start), o2 = t2, s2 = this.getLineFeedCnt(n2.bufferIndex, o2, n2.end), a2 = s2 - i2, l2 = r2 - this.offsetInBuffer(n2.bufferIndex, o2), c2 = n2.length + l2;
      e2.piece = new re(n2.bufferIndex, o2, n2.end, s2, c2), Q(this, e2, l2, a2);
    }
    shrinkNode(e2, t2, n2) {
      const i2 = e2.piece, r2 = i2.start, o2 = i2.end, s2 = i2.length, a2 = i2.lineFeedCnt, l2 = t2, c2 = this.getLineFeedCnt(i2.bufferIndex, i2.start, l2), d2 = this.offsetInBuffer(i2.bufferIndex, t2) - this.offsetInBuffer(i2.bufferIndex, r2);
      e2.piece = new re(i2.bufferIndex, i2.start, l2, c2, d2), Q(this, e2, d2 - s2, c2 - a2);
      let h2 = new re(i2.bufferIndex, n2, o2, this.getLineFeedCnt(i2.bufferIndex, n2, o2), this.offsetInBuffer(i2.bufferIndex, o2) - this.offsetInBuffer(i2.bufferIndex, n2)), u2 = this.rbInsertRight(e2, h2);
      this.validateCRLFWithPrevNode(u2);
    }
    appendToNode(e2, t2) {
      this.adjustCarriageReturnFromNext(t2, e2) && (t2 += "\n");
      const n2 = this.shouldCheckCRLF() && this.startWithLF(t2) && this.endWithCR(e2), i2 = this._buffers[0].buffer.length;
      this._buffers[0].buffer += t2;
      const r2 = ie(t2, false);
      for (let e3 = 0; e3 < r2.length; e3++)
        r2[e3] += i2;
      if (n2) {
        let e3 = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];
        this._buffers[0].lineStarts.pop(), this._lastChangeBufferPos = {line: this._lastChangeBufferPos.line - 1, column: i2 - e3};
      }
      this._buffers[0].lineStarts = this._buffers[0].lineStarts.concat(r2.slice(1));
      const o2 = this._buffers[0].lineStarts.length - 1, s2 = {line: o2, column: this._buffers[0].buffer.length - this._buffers[0].lineStarts[o2]}, a2 = e2.piece.length + t2.length, l2 = e2.piece.lineFeedCnt, c2 = this.getLineFeedCnt(0, e2.piece.start, s2), d2 = c2 - l2;
      e2.piece = new re(e2.piece.bufferIndex, e2.piece.start, s2, c2, a2), this._lastChangeBufferPos = s2, Q(this, e2, t2.length, d2);
    }
    nodeAt(e2) {
      let t2 = this.root, n2 = this._searchCache.get(e2);
      if (n2)
        return {node: n2.node, nodeStartOffset: n2.nodeStartOffset, remainder: e2 - n2.nodeStartOffset};
      let i2 = 0;
      for (; t2 !== V; )
        if (t2.size_left > e2)
          t2 = t2.left;
        else {
          if (t2.size_left + t2.piece.length >= e2) {
            i2 += t2.size_left;
            let n3 = {node: t2, remainder: e2 - t2.size_left, nodeStartOffset: i2};
            return this._searchCache.set(n3), n3;
          }
          e2 -= t2.size_left + t2.piece.length, i2 += t2.size_left + t2.piece.length, t2 = t2.right;
        }
      return null;
    }
    nodeAt2(e2, t2) {
      let n2 = this.root, i2 = 0;
      for (; n2 !== V; )
        if (n2.left !== V && n2.lf_left >= e2 - 1)
          n2 = n2.left;
        else {
          if (n2.lf_left + n2.piece.lineFeedCnt > e2 - 1) {
            let r2 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 2), o2 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 1);
            return i2 += n2.size_left, {node: n2, remainder: Math.min(r2 + t2 - 1, o2), nodeStartOffset: i2};
          }
          if (n2.lf_left + n2.piece.lineFeedCnt === e2 - 1) {
            let r2 = this.getAccumulatedValue(n2, e2 - n2.lf_left - 2);
            if (r2 + t2 - 1 <= n2.piece.length)
              return {node: n2, remainder: r2 + t2 - 1, nodeStartOffset: i2};
            t2 -= n2.piece.length - r2;
            break;
          }
          e2 -= n2.lf_left + n2.piece.lineFeedCnt, i2 += n2.size_left + n2.piece.length, n2 = n2.right;
        }
      for (n2 = n2.next(); n2 !== V; ) {
        if (n2.piece.lineFeedCnt > 0) {
          let e3 = this.getAccumulatedValue(n2, 0), i3 = this.offsetOfNode(n2);
          return {node: n2, remainder: Math.min(t2 - 1, e3), nodeStartOffset: i3};
        }
        if (n2.piece.length >= t2 - 1) {
          return {node: n2, remainder: t2 - 1, nodeStartOffset: this.offsetOfNode(n2)};
        }
        t2 -= n2.piece.length, n2 = n2.next();
      }
      return null;
    }
    nodeCharCodeAt(e2, t2) {
      if (e2.piece.lineFeedCnt < 1)
        return -1;
      let n2 = this._buffers[e2.piece.bufferIndex], i2 = this.offsetInBuffer(e2.piece.bufferIndex, e2.piece.start) + t2;
      return n2.buffer.charCodeAt(i2);
    }
    offsetOfNode(e2) {
      if (!e2)
        return 0;
      let t2 = e2.size_left;
      for (; e2 !== this.root; )
        e2.parent.right === e2 && (t2 += e2.parent.size_left + e2.parent.piece.length), e2 = e2.parent;
      return t2;
    }
    shouldCheckCRLF() {
      return !(this._EOLNormalized && this._EOL === "\n");
    }
    startWithLF(e2) {
      if (typeof e2 == "string")
        return e2.charCodeAt(0) === 10;
      if (e2 === V || e2.piece.lineFeedCnt === 0)
        return false;
      let t2 = e2.piece, n2 = this._buffers[t2.bufferIndex].lineStarts, i2 = t2.start.line, r2 = n2[i2] + t2.start.column;
      return i2 !== n2.length - 1 && (!(n2[i2 + 1] > r2 + 1) && this._buffers[t2.bufferIndex].buffer.charCodeAt(r2) === 10);
    }
    endWithCR(e2) {
      return typeof e2 == "string" ? e2.charCodeAt(e2.length - 1) === 13 : e2 !== V && e2.piece.lineFeedCnt !== 0 && this.nodeCharCodeAt(e2, e2.piece.length - 1) === 13;
    }
    validateCRLFWithPrevNode(e2) {
      if (this.shouldCheckCRLF() && this.startWithLF(e2)) {
        let t2 = e2.prev();
        this.endWithCR(t2) && this.fixCRLF(t2, e2);
      }
    }
    validateCRLFWithNextNode(e2) {
      if (this.shouldCheckCRLF() && this.endWithCR(e2)) {
        let t2 = e2.next();
        this.startWithLF(t2) && this.fixCRLF(e2, t2);
      }
    }
    fixCRLF(e2, t2) {
      let n2, i2 = [], r2 = this._buffers[e2.piece.bufferIndex].lineStarts;
      n2 = e2.piece.end.column === 0 ? {line: e2.piece.end.line - 1, column: r2[e2.piece.end.line] - r2[e2.piece.end.line - 1] - 1} : {line: e2.piece.end.line, column: e2.piece.end.column - 1};
      const o2 = e2.piece.length - 1, s2 = e2.piece.lineFeedCnt - 1;
      e2.piece = new re(e2.piece.bufferIndex, e2.piece.start, n2, s2, o2), Q(this, e2, -1, -1), e2.piece.length === 0 && i2.push(e2);
      let a2 = {line: t2.piece.start.line + 1, column: 0};
      const l2 = t2.piece.length - 1, c2 = this.getLineFeedCnt(t2.piece.bufferIndex, a2, t2.piece.end);
      t2.piece = new re(t2.piece.bufferIndex, a2, t2.piece.end, c2, l2), Q(this, t2, -1, -1), t2.piece.length === 0 && i2.push(t2);
      let d2 = this.createNewPieces("\r\n");
      this.rbInsertRight(e2, d2[0]);
      for (let e3 = 0; e3 < i2.length; e3++)
        Z(this, i2[e3]);
    }
    adjustCarriageReturnFromNext(e2, t2) {
      if (this.shouldCheckCRLF() && this.endWithCR(e2)) {
        let n2 = t2.next();
        if (this.startWithLF(n2)) {
          if (e2 += "\n", n2.piece.length === 1)
            Z(this, n2);
          else {
            const e3 = n2.piece, t3 = {line: e3.start.line + 1, column: 0}, i2 = e3.length - 1, r2 = this.getLineFeedCnt(e3.bufferIndex, t3, e3.end);
            n2.piece = new re(e3.bufferIndex, t3, e3.end, r2, i2), Q(this, n2, -1, -1);
          }
          return true;
        }
      }
      return false;
    }
    iterate(e2, t2) {
      if (e2 === V)
        return t2(V);
      let n2 = this.iterate(e2.left, t2);
      return n2 ? t2(e2) && this.iterate(e2.right, t2) : n2;
    }
    getNodeContent(e2) {
      if (e2 === V)
        return "";
      let t2, n2 = this._buffers[e2.piece.bufferIndex], i2 = e2.piece, r2 = this.offsetInBuffer(i2.bufferIndex, i2.start), o2 = this.offsetInBuffer(i2.bufferIndex, i2.end);
      return t2 = n2.buffer.substring(r2, o2), t2;
    }
    getPieceContent(e2) {
      let t2 = this._buffers[e2.bufferIndex], n2 = this.offsetInBuffer(e2.bufferIndex, e2.start), i2 = this.offsetInBuffer(e2.bufferIndex, e2.end);
      return t2.buffer.substring(n2, i2);
    }
    rbInsertRight(e2, t2) {
      let n2 = new j(t2, 1);
      if (n2.left = V, n2.right = V, n2.parent = V, n2.size_left = 0, n2.lf_left = 0, this.root === V)
        this.root = n2, n2.color = 0;
      else if (e2.right === V)
        e2.right = n2, n2.parent = e2;
      else {
        let t3 = U(e2.right);
        t3.left = n2, n2.parent = t3;
      }
      return X(this, n2), n2;
    }
    rbInsertLeft(e2, t2) {
      let n2 = new j(t2, 1);
      if (n2.left = V, n2.right = V, n2.parent = V, n2.size_left = 0, n2.lf_left = 0, this.root === V)
        this.root = n2, n2.color = 0;
      else if (e2.left === V)
        e2.left = n2, n2.parent = e2;
      else {
        let t3 = H(e2.left);
        t3.right = n2, n2.parent = t3;
      }
      return X(this, n2), n2;
    }
  }
  var ce = n(124), de = n(180);
  class he {
    constructor(e2, t2, n2, i2, o2, s2, a2) {
      this._onDidChangeContent = new r.a(), this._BOM = t2, this._mightContainNonBasicASCII = !s2, this._mightContainRTL = i2, this._mightContainUnusualLineTerminators = o2, this._pieceTree = new le(e2, n2, a2);
    }
    dispose() {
      this._onDidChangeContent.dispose();
    }
    mightContainRTL() {
      return this._mightContainRTL;
    }
    mightContainUnusualLineTerminators() {
      return this._mightContainUnusualLineTerminators;
    }
    resetMightContainUnusualLineTerminators() {
      this._mightContainUnusualLineTerminators = false;
    }
    mightContainNonBasicASCII() {
      return this._mightContainNonBasicASCII;
    }
    getBOM() {
      return this._BOM;
    }
    getEOL() {
      return this._pieceTree.getEOL();
    }
    createSnapshot(e2) {
      return this._pieceTree.createSnapshot(e2 ? this._BOM : "");
    }
    getOffsetAt(e2, t2) {
      return this._pieceTree.getOffsetAt(e2, t2);
    }
    getPositionAt(e2) {
      return this._pieceTree.getPositionAt(e2);
    }
    getRangeAt(e2, t2) {
      let n2 = e2 + t2;
      const i2 = this.getPositionAt(e2), r2 = this.getPositionAt(n2);
      return new d.a(i2.lineNumber, i2.column, r2.lineNumber, r2.column);
    }
    getValueInRange(e2, t2 = 0) {
      if (e2.isEmpty())
        return "";
      const n2 = this._getEndOfLine(t2);
      return this._pieceTree.getValueInRange(e2, n2);
    }
    getValueLengthInRange(e2, t2 = 0) {
      if (e2.isEmpty())
        return 0;
      if (e2.startLineNumber === e2.endLineNumber)
        return e2.endColumn - e2.startColumn;
      let n2 = this.getOffsetAt(e2.startLineNumber, e2.startColumn);
      return this.getOffsetAt(e2.endLineNumber, e2.endColumn) - n2;
    }
    getCharacterCountInRange(e2, t2 = 0) {
      if (this._mightContainNonBasicASCII) {
        let n2 = 0;
        const i2 = e2.startLineNumber, r2 = e2.endLineNumber;
        for (let t3 = i2; t3 <= r2; t3++) {
          const o2 = this.getLineContent(t3), a2 = t3 === i2 ? e2.startColumn - 1 : 0, l2 = t3 === r2 ? e2.endColumn - 1 : o2.length;
          for (let e3 = a2; e3 < l2; e3++)
            s.F(o2.charCodeAt(e3)) ? (n2 += 1, e3 += 1) : n2 += 1;
        }
        return n2 += this._getEndOfLine(t2).length * (r2 - i2), n2;
      }
      return this.getValueLengthInRange(e2, t2);
    }
    getLength() {
      return this._pieceTree.getLength();
    }
    getLineCount() {
      return this._pieceTree.getLineCount();
    }
    getLinesContent() {
      return this._pieceTree.getLinesContent();
    }
    getLineContent(e2) {
      return this._pieceTree.getLineContent(e2);
    }
    getLineCharCode(e2, t2) {
      return this._pieceTree.getLineCharCode(e2, t2);
    }
    getLineLength(e2) {
      return this._pieceTree.getLineLength(e2);
    }
    getLineFirstNonWhitespaceColumn(e2) {
      const t2 = s.w(this.getLineContent(e2));
      return t2 === -1 ? 0 : t2 + 1;
    }
    getLineLastNonWhitespaceColumn(e2) {
      const t2 = s.J(this.getLineContent(e2));
      return t2 === -1 ? 0 : t2 + 2;
    }
    _getEndOfLine(e2) {
      switch (e2) {
        case 1:
          return "\n";
        case 2:
          return "\r\n";
        case 0:
          return this.getEOL();
        default:
          throw new Error("Unknown EOL preference");
      }
    }
    setEOL(e2) {
      this._pieceTree.setEOL(e2);
    }
    applyEdits(e2, t2, n2) {
      let i2 = this._mightContainRTL, r2 = this._mightContainUnusualLineTerminators, o2 = this._mightContainNonBasicASCII, a2 = true, l2 = [];
      for (let t3 = 0; t3 < e2.length; t3++) {
        let n3 = e2[t3];
        a2 && n3._isTracked && (a2 = false);
        let c3 = n3.range;
        if (n3.text) {
          let e3 = true;
          o2 || (e3 = !s.B(n3.text), o2 = e3), !i2 && e3 && (i2 = s.m(n3.text)), !r2 && e3 && (r2 = s.n(n3.text));
        }
        let d3 = "", h3 = 0, u2 = 0, p3 = 0;
        if (n3.text) {
          let e3;
          [h3, u2, p3, e3] = Object(ce.f)(n3.text);
          const t4 = this.getEOL(), i3 = t4 === "\r\n" ? 2 : 1;
          d3 = e3 === 0 || e3 === i3 ? n3.text : n3.text.replace(/\r\n|\r|\n/g, t4);
        }
        l2[t3] = {sortIndex: t3, identifier: n3.identifier || null, range: c3, rangeOffset: this.getOffsetAt(c3.startLineNumber, c3.startColumn), rangeLength: this.getValueLengthInRange(c3), text: d3, eolCount: h3, firstLineLength: u2, lastLineLength: p3, forceMoveMarkers: Boolean(n3.forceMoveMarkers), isAutoWhitespaceEdit: n3.isAutoWhitespaceEdit || false};
      }
      l2.sort(he._sortOpsAscending);
      let c2 = false;
      for (let e3 = 0, t3 = l2.length - 1; e3 < t3; e3++) {
        let t4 = l2[e3].range.getEndPosition(), n3 = l2[e3 + 1].range.getStartPosition();
        if (n3.isBeforeOrEqual(t4)) {
          if (n3.isBefore(t4))
            throw new Error("Overlapping ranges are not allowed!");
          c2 = true;
        }
      }
      a2 && (l2 = this._reduceOperations(l2));
      let d2 = n2 || t2 ? he._getInverseEditRanges(l2) : [], h2 = [];
      if (t2)
        for (let e3 = 0; e3 < l2.length; e3++) {
          let t3 = l2[e3], n3 = d2[e3];
          if (t3.isAutoWhitespaceEdit && t3.range.isEmpty())
            for (let e4 = n3.startLineNumber; e4 <= n3.endLineNumber; e4++) {
              let i3 = "";
              e4 === n3.startLineNumber && (i3 = this.getLineContent(t3.range.startLineNumber), s.w(i3) !== -1) || h2.push({lineNumber: e4, oldContent: i3});
            }
        }
      let p2 = null;
      if (n2) {
        let e3 = 0;
        p2 = [];
        for (let t3 = 0; t3 < l2.length; t3++) {
          const n3 = l2[t3], i3 = d2[t3], r3 = this.getValueInRange(n3.range), o3 = n3.rangeOffset + e3;
          e3 += n3.text.length - r3.length, p2[t3] = {sortIndex: n3.sortIndex, identifier: n3.identifier, range: i3, text: r3, textChange: new de.a(n3.rangeOffset, r3, o3, n3.text)};
        }
        c2 || p2.sort((e4, t3) => e4.sortIndex - t3.sortIndex);
      }
      this._mightContainRTL = i2, this._mightContainUnusualLineTerminators = r2, this._mightContainNonBasicASCII = o2;
      const m2 = this._doApplyEdits(l2);
      let g2 = null;
      if (t2 && h2.length > 0) {
        h2.sort((e3, t3) => t3.lineNumber - e3.lineNumber), g2 = [];
        for (let e3 = 0, t3 = h2.length; e3 < t3; e3++) {
          let t4 = h2[e3].lineNumber;
          if (e3 > 0 && h2[e3 - 1].lineNumber === t4)
            continue;
          let n3 = h2[e3].oldContent, i3 = this.getLineContent(t4);
          i3.length !== 0 && i3 !== n3 && s.w(i3) === -1 && g2.push(t4);
        }
      }
      return this._onDidChangeContent.fire(), new u.a(p2, m2, g2);
    }
    _reduceOperations(e2) {
      return e2.length < 1e3 ? e2 : [this._toSingleEditOperation(e2)];
    }
    _toSingleEditOperation(e2) {
      let t2 = false;
      const n2 = e2[0].range, i2 = e2[e2.length - 1].range, r2 = new d.a(n2.startLineNumber, n2.startColumn, i2.endLineNumber, i2.endColumn);
      let o2 = n2.startLineNumber, s2 = n2.startColumn;
      const a2 = [];
      for (let n3 = 0, i3 = e2.length; n3 < i3; n3++) {
        const i4 = e2[n3], r3 = i4.range;
        t2 = t2 || i4.forceMoveMarkers, a2.push(this.getValueInRange(new d.a(o2, s2, r3.startLineNumber, r3.startColumn))), i4.text.length > 0 && a2.push(i4.text), o2 = r3.endLineNumber, s2 = r3.endColumn;
      }
      const l2 = a2.join(""), [c2, h2, u2] = Object(ce.f)(l2);
      return {sortIndex: 0, identifier: e2[0].identifier, range: r2, rangeOffset: this.getOffsetAt(r2.startLineNumber, r2.startColumn), rangeLength: this.getValueLengthInRange(r2, 0), text: l2, eolCount: c2, firstLineLength: h2, lastLineLength: u2, forceMoveMarkers: t2, isAutoWhitespaceEdit: false};
    }
    _doApplyEdits(e2) {
      e2.sort(he._sortOpsDescending);
      let t2 = [];
      for (let n2 = 0; n2 < e2.length; n2++) {
        let i2 = e2[n2];
        const r2 = i2.range.startLineNumber, o2 = i2.range.startColumn, s2 = i2.range.endLineNumber, a2 = i2.range.endColumn;
        if (r2 === s2 && o2 === a2 && i2.text.length === 0)
          continue;
        i2.text ? (this._pieceTree.delete(i2.rangeOffset, i2.rangeLength), this._pieceTree.insert(i2.rangeOffset, i2.text, true)) : this._pieceTree.delete(i2.rangeOffset, i2.rangeLength);
        const l2 = new d.a(r2, o2, s2, a2);
        t2.push({range: l2, rangeLength: i2.rangeLength, text: i2.text, rangeOffset: i2.rangeOffset, forceMoveMarkers: i2.forceMoveMarkers});
      }
      return t2;
    }
    findMatchesLineByLine(e2, t2, n2, i2) {
      return this._pieceTree.findMatchesLineByLine(e2, t2, n2, i2);
    }
    static _getInverseEditRanges(e2) {
      let t2 = [], n2 = 0, i2 = 0, r2 = null;
      for (let o2 = 0, s2 = e2.length; o2 < s2; o2++) {
        let s3, a2, l2, c2 = e2[o2];
        if (r2 ? r2.range.endLineNumber === c2.range.startLineNumber ? (s3 = n2, a2 = i2 + (c2.range.startColumn - r2.range.endColumn)) : (s3 = n2 + (c2.range.startLineNumber - r2.range.endLineNumber), a2 = c2.range.startColumn) : (s3 = c2.range.startLineNumber, a2 = c2.range.startColumn), c2.text.length > 0) {
          const e3 = c2.eolCount + 1;
          l2 = e3 === 1 ? new d.a(s3, a2, s3, a2 + c2.firstLineLength) : new d.a(s3, a2, s3 + e3 - 1, c2.lastLineLength + 1);
        } else
          l2 = new d.a(s3, a2, s3, a2);
        n2 = l2.endLineNumber, i2 = l2.endColumn, t2.push(l2), r2 = c2;
      }
      return t2;
    }
    static _sortOpsAscending(e2, t2) {
      let n2 = d.a.compareRangesUsingEnds(e2.range, t2.range);
      return n2 === 0 ? e2.sortIndex - t2.sortIndex : n2;
    }
    static _sortOpsDescending(e2, t2) {
      let n2 = d.a.compareRangesUsingEnds(e2.range, t2.range);
      return n2 === 0 ? t2.sortIndex - e2.sortIndex : -n2;
    }
  }
  class ue {
    constructor(e2, t2, n2, i2, r2, o2, s2, a2, l2) {
      this._chunks = e2, this._bom = t2, this._cr = n2, this._lf = i2, this._crlf = r2, this._containsRTL = o2, this._containsUnusualLineTerminators = s2, this._isBasicASCII = a2, this._normalizeEOL = l2;
    }
    _getEOL(e2) {
      const t2 = this._cr + this._lf + this._crlf, n2 = this._cr + this._crlf;
      return t2 === 0 ? e2 === 1 ? "\n" : "\r\n" : n2 > t2 / 2 ? "\r\n" : "\n";
    }
    create(e2) {
      const t2 = this._getEOL(e2);
      let n2 = this._chunks;
      if (this._normalizeEOL && (t2 === "\r\n" && (this._cr > 0 || this._lf > 0) || t2 === "\n" && (this._cr > 0 || this._crlf > 0)))
        for (let e3 = 0, i2 = n2.length; e3 < i2; e3++) {
          let i3 = n2[e3].buffer.replace(/\r\n|\r|\n/g, t2), r2 = ie(i3);
          n2[e3] = new oe(i3, r2);
        }
      return new he(n2, this._bom, t2, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);
    }
  }
  class pe {
    constructor() {
      this.chunks = [], this.BOM = "", this._hasPreviousChar = false, this._previousChar = 0, this._tmpLineStarts = [], this.cr = 0, this.lf = 0, this.crlf = 0, this.containsRTL = false, this.containsUnusualLineTerminators = false, this.isBasicASCII = true;
    }
    acceptChunk(e2) {
      if (e2.length === 0)
        return;
      this.chunks.length === 0 && s.U(e2) && (this.BOM = s.b, e2 = e2.substr(1));
      const t2 = e2.charCodeAt(e2.length - 1);
      t2 === 13 || t2 >= 55296 && t2 <= 56319 ? (this._acceptChunk1(e2.substr(0, e2.length - 1), false), this._hasPreviousChar = true, this._previousChar = t2) : (this._acceptChunk1(e2, false), this._hasPreviousChar = false, this._previousChar = t2);
    }
    _acceptChunk1(e2, t2) {
      (t2 || e2.length !== 0) && (this._hasPreviousChar ? this._acceptChunk2(String.fromCharCode(this._previousChar) + e2) : this._acceptChunk2(e2));
    }
    _acceptChunk2(e2) {
      const t2 = function(e3, t3) {
        e3.length = 0, e3[0] = 0;
        let n2 = 1, i2 = 0, r2 = 0, o2 = 0, s2 = true;
        for (let a3 = 0, l2 = t3.length; a3 < l2; a3++) {
          const c2 = t3.charCodeAt(a3);
          c2 === 13 ? a3 + 1 < l2 && t3.charCodeAt(a3 + 1) === 10 ? (o2++, e3[n2++] = a3 + 2, a3++) : (i2++, e3[n2++] = a3 + 1) : c2 === 10 ? (r2++, e3[n2++] = a3 + 1) : s2 && c2 !== 9 && (c2 < 32 || c2 > 126) && (s2 = false);
        }
        const a2 = new ne(te(e3), i2, r2, o2, s2);
        return e3.length = 0, a2;
      }(this._tmpLineStarts, e2);
      this.chunks.push(new oe(e2, t2.lineStarts)), this.cr += t2.cr, this.lf += t2.lf, this.crlf += t2.crlf, this.isBasicASCII && (this.isBasicASCII = t2.isBasicASCII), this.isBasicASCII || this.containsRTL || (this.containsRTL = s.m(e2)), this.isBasicASCII || this.containsUnusualLineTerminators || (this.containsUnusualLineTerminators = s.n(e2));
    }
    finish(e2 = true) {
      return this._finish(), new ue(this.chunks, this.BOM, this.cr, this.lf, this.crlf, this.containsRTL, this.containsUnusualLineTerminators, this.isBasicASCII, e2);
    }
    _finish() {
      if (this.chunks.length === 0 && this._acceptChunk1("", true), this._hasPreviousChar) {
        this._hasPreviousChar = false;
        let e2 = this.chunks[this.chunks.length - 1];
        e2.buffer += String.fromCharCode(this._previousChar);
        let t2 = ie(e2.buffer);
        e2.lineStarts = t2, this._previousChar === 13 && this.cr++;
      }
    }
  }
  class me {
    constructor() {
      this.changeType = 1;
    }
  }
  class ge {
    constructor(e2, t2) {
      this.changeType = 2, this.lineNumber = e2, this.detail = t2;
    }
  }
  class fe {
    constructor(e2, t2) {
      this.changeType = 3, this.fromLineNumber = e2, this.toLineNumber = t2;
    }
  }
  class be {
    constructor(e2, t2, n2) {
      this.changeType = 4, this.fromLineNumber = e2, this.toLineNumber = t2, this.detail = n2;
    }
  }
  class _e {
    constructor() {
      this.changeType = 5;
    }
  }
  class ve {
    constructor(e2, t2, n2, i2) {
      this.changes = e2, this.versionId = t2, this.isUndoing = n2, this.isRedoing = i2, this.resultingSelection = null;
    }
    containsEvent(e2) {
      for (let t2 = 0, n2 = this.changes.length; t2 < n2; t2++) {
        if (this.changes[t2].changeType === e2)
          return true;
      }
      return false;
    }
    static merge(e2, t2) {
      const n2 = [].concat(e2.changes).concat(t2.changes), i2 = t2.versionId, r2 = e2.isUndoing || t2.isUndoing, o2 = e2.isRedoing || t2.isRedoing;
      return new ve(n2, i2, r2, o2);
    }
  }
  class we {
    constructor(e2, t2) {
      this.rawContentChangedEvent = e2, this.contentChangedEvent = t2;
    }
    merge(e2) {
      const t2 = ve.merge(this.rawContentChangedEvent, e2.rawContentChangedEvent), n2 = we._mergeChangeEvents(this.contentChangedEvent, e2.contentChangedEvent);
      return new we(t2, n2);
    }
    static _mergeChangeEvents(e2, t2) {
      return {changes: [].concat(e2.changes).concat(t2.changes), eol: t2.eol, versionId: t2.versionId, isUndoing: e2.isUndoing || t2.isUndoing, isRedoing: e2.isRedoing || t2.isRedoing, isFlush: e2.isFlush || t2.isFlush};
    }
  }
  var ye = n(16), Ce = n(111), xe = n(12), Se = n(90), ke = n(158), Ee = n(11);
  class Te {
    constructor() {
      this._beginState = [], this._valid = [], this._len = 0, this._invalidLineStartIndex = 0;
    }
    _reset(e2) {
      this._beginState = [], this._valid = [], this._len = 0, this._invalidLineStartIndex = 0, e2 && this._setBeginState(0, e2);
    }
    flush(e2) {
      this._reset(e2);
    }
    get invalidLineStartIndex() {
      return this._invalidLineStartIndex;
    }
    _invalidateLine(e2) {
      e2 < this._len && (this._valid[e2] = false), e2 < this._invalidLineStartIndex && (this._invalidLineStartIndex = e2);
    }
    _isValid(e2) {
      return e2 < this._len && this._valid[e2];
    }
    getBeginState(e2) {
      return e2 < this._len ? this._beginState[e2] : null;
    }
    _ensureLine(e2) {
      for (; e2 >= this._len; )
        this._beginState[this._len] = null, this._valid[this._len] = false, this._len++;
    }
    _deleteLines(e2, t2) {
      t2 !== 0 && (e2 + t2 > this._len && (t2 = this._len - e2), this._beginState.splice(e2, t2), this._valid.splice(e2, t2), this._len -= t2);
    }
    _insertLines(e2, t2) {
      if (t2 === 0)
        return;
      let n2 = [], i2 = [];
      for (let e3 = 0; e3 < t2; e3++)
        n2[e3] = null, i2[e3] = false;
      this._beginState = ye.a(this._beginState, e2, n2), this._valid = ye.a(this._valid, e2, i2), this._len += t2;
    }
    _setValid(e2, t2) {
      this._ensureLine(e2), this._valid[e2] = t2;
    }
    _setBeginState(e2, t2) {
      this._ensureLine(e2), this._beginState[e2] = t2;
    }
    setEndState(e2, t2, n2) {
      if (this._setValid(t2, true), this._invalidLineStartIndex = t2 + 1, t2 === e2 - 1)
        return;
      const i2 = this.getBeginState(t2 + 1);
      if (i2 === null || !n2.equals(i2))
        return this._setBeginState(t2 + 1, n2), void this._invalidateLine(t2 + 1);
      let r2 = t2 + 1;
      for (; r2 < e2 && this._isValid(r2); )
        r2++;
      this._invalidLineStartIndex = r2;
    }
    setFakeTokens(e2) {
      this._setValid(e2, false);
    }
    applyEdits(e2, t2) {
      const n2 = e2.endLineNumber - e2.startLineNumber, i2 = t2;
      for (let t3 = Math.min(n2, i2); t3 >= 0; t3--)
        this._invalidateLine(e2.startLineNumber + t3 - 1);
      this._acceptDeleteRange(e2), this._acceptInsertText(new c.a(e2.startLineNumber, e2.startColumn), t2);
    }
    _acceptDeleteRange(e2) {
      e2.startLineNumber - 1 >= this._len || this._deleteLines(e2.startLineNumber, e2.endLineNumber - e2.startLineNumber);
    }
    _acceptInsertText(e2, t2) {
      e2.lineNumber - 1 >= this._len || this._insertLines(e2.lineNumber, t2);
    }
  }
  class Le extends o.a {
    constructor(e2) {
      super(), this._isDisposed = false, this._textModel = e2, this._tokenizationStateStore = new Te(), this._tokenizationSupport = null, this._register(xe.C.onDidChange((e3) => {
        const t2 = this._textModel.getLanguageIdentifier();
        e3.changedLanguages.indexOf(t2.language) !== -1 && (this._resetTokenizationState(), this._textModel.clearTokens());
      })), this._register(this._textModel.onDidChangeRawContentFast((e3) => {
        e3.containsEvent(1) && this._resetTokenizationState();
      })), this._register(this._textModel.onDidChangeContentFast((e3) => {
        for (let t2 = 0, n2 = e3.changes.length; t2 < n2; t2++) {
          const n3 = e3.changes[t2], [i2] = Object(ce.f)(n3.text);
          this._tokenizationStateStore.applyEdits(n3.range, i2);
        }
        this._beginBackgroundTokenization();
      })), this._register(this._textModel.onDidChangeAttached(() => {
        this._beginBackgroundTokenization();
      })), this._register(this._textModel.onDidChangeLanguage(() => {
        this._resetTokenizationState(), this._textModel.clearTokens();
      })), this._resetTokenizationState();
    }
    dispose() {
      this._isDisposed = true, super.dispose();
    }
    _resetTokenizationState() {
      const [e2, t2] = function(e3) {
        const t3 = e3.getLanguageIdentifier();
        let n2 = e3.isTooLargeForTokenization() ? null : xe.C.get(t3.language), r2 = null;
        if (n2)
          try {
            r2 = n2.getInitialState();
          } catch (e4) {
            Object(i.e)(e4), n2 = null;
          }
        return [n2, r2];
      }(this._textModel);
      this._tokenizationSupport = e2, this._tokenizationStateStore.flush(t2), this._beginBackgroundTokenization();
    }
    _beginBackgroundTokenization() {
      this._textModel.isAttachedToEditor() && this._hasLinesToTokenize() && Ee.j(() => {
        this._isDisposed || this._revalidateTokensNow();
      });
    }
    _revalidateTokensNow(e2 = this._textModel.getLineCount()) {
      const t2 = new ce.b(), n2 = ke.a.create(false);
      for (; this._hasLinesToTokenize() && !(n2.elapsed() > 1); ) {
        if (this._tokenizeOneInvalidLine(t2) >= e2)
          break;
      }
      this._beginBackgroundTokenization(), this._textModel.setTokens(t2.tokens);
    }
    tokenizeViewport(e2, t2) {
      const n2 = new ce.b();
      this._tokenizeViewport(n2, e2, t2), this._textModel.setTokens(n2.tokens);
    }
    reset() {
      this._resetTokenizationState(), this._textModel.clearTokens();
    }
    forceTokenization(e2) {
      const t2 = new ce.b();
      this._updateTokensUntilLine(t2, e2), this._textModel.setTokens(t2.tokens);
    }
    isCheapToTokenize(e2) {
      if (!this._tokenizationSupport)
        return true;
      const t2 = this._tokenizationStateStore.invalidLineStartIndex + 1;
      return !(e2 > t2) && (e2 < t2 || this._textModel.getLineLength(e2) < 2048);
    }
    _hasLinesToTokenize() {
      return !!this._tokenizationSupport && this._tokenizationStateStore.invalidLineStartIndex < this._textModel.getLineCount();
    }
    _tokenizeOneInvalidLine(e2) {
      if (!this._hasLinesToTokenize())
        return this._textModel.getLineCount() + 1;
      const t2 = this._tokenizationStateStore.invalidLineStartIndex + 1;
      return this._updateTokensUntilLine(e2, t2), t2;
    }
    _updateTokensUntilLine(e2, t2) {
      if (!this._tokenizationSupport)
        return;
      const n2 = this._textModel.getLanguageIdentifier(), i2 = this._textModel.getLineCount(), r2 = t2 - 1;
      for (let t3 = this._tokenizationStateStore.invalidLineStartIndex; t3 <= r2; t3++) {
        const r3 = this._textModel.getLineContent(t3 + 1), o2 = this._tokenizationStateStore.getBeginState(t3), s2 = Ne(n2, this._tokenizationSupport, r3, o2);
        e2.add(t3 + 1, s2.tokens), this._tokenizationStateStore.setEndState(i2, t3, s2.endState), t3 = this._tokenizationStateStore.invalidLineStartIndex - 1;
      }
    }
    _tokenizeViewport(e2, t2, n2) {
      if (!this._tokenizationSupport)
        return;
      if (n2 <= this._tokenizationStateStore.invalidLineStartIndex)
        return;
      if (t2 <= this._tokenizationStateStore.invalidLineStartIndex)
        return void this._updateTokensUntilLine(e2, n2);
      let i2 = this._textModel.getLineFirstNonWhitespaceColumn(t2), r2 = [], o2 = null;
      for (let e3 = t2 - 1; i2 > 0 && e3 >= 1; e3--) {
        let t3 = this._textModel.getLineFirstNonWhitespaceColumn(e3);
        if (t3 !== 0 && t3 < i2) {
          if (o2 = this._tokenizationStateStore.getBeginState(e3 - 1), o2)
            break;
          r2.push(this._textModel.getLineContent(e3)), i2 = t3;
        }
      }
      o2 || (o2 = this._tokenizationSupport.getInitialState());
      const s2 = this._textModel.getLanguageIdentifier();
      let a2 = o2;
      for (let e3 = r2.length - 1; e3 >= 0; e3--) {
        a2 = Ne(s2, this._tokenizationSupport, r2[e3], a2).endState;
      }
      for (let i3 = t2; i3 <= n2; i3++) {
        let t3 = this._textModel.getLineContent(i3), n3 = Ne(s2, this._tokenizationSupport, t3, a2);
        e2.add(i3, n3.tokens), this._tokenizationStateStore.setFakeTokens(i3 - 1), a2 = n3.endState;
      }
    }
  }
  function Ne(e2, t2, n2, r2) {
    let o2 = null;
    if (t2)
      try {
        o2 = t2.tokenize2(n2, r2.clone(), 0);
      } catch (e3) {
        Object(i.e)(e3);
      }
    return o2 || (o2 = Object(Se.e)(e2.id, n2, r2, 0)), Ce.a.convertToEndOffset(o2.tokens, n2.length), o2;
  }
  var Ie = n(73), De = n(39), Oe = n(114), Ae = n(119), Re = n(15);
  function Me(e2) {
    const t2 = new pe();
    return t2.acceptChunk(e2), t2.finish();
  }
  function Pe(e2, t2) {
    return (typeof e2 == "string" ? Me(e2) : e2).create(t2);
  }
  let Fe = 0;
  class We {
    constructor(e2) {
      this._source = e2, this._eos = false;
    }
    read() {
      if (this._eos)
        return null;
      let e2 = [], t2 = 0, n2 = 0;
      for (; ; ) {
        let i2 = this._source.read();
        if (i2 === null)
          return this._eos = true, t2 === 0 ? null : e2.join("");
        if (i2.length > 0 && (e2[t2++] = i2, n2 += i2.length), n2 >= 65536)
          return e2.join("");
      }
    }
  }
  const ze = () => {
    throw new Error("Invalid change accessor");
  };
  class Be {
    constructor() {
      this._searchCanceledBrand = void 0;
    }
  }
  function je(e2) {
    return e2 instanceof Be ? null : e2;
  }
  Be.INSTANCE = new Be();
  class Ve extends o.a {
    constructor(e2, t2, n2, i2 = null, o2) {
      super(), this._onWillDispose = this._register(new r.a()), this.onWillDispose = this._onWillDispose.event, this._onDidChangeDecorations = this._register(new Xe()), this.onDidChangeDecorations = this._onDidChangeDecorations.event, this._onDidChangeLanguage = this._register(new r.a()), this.onDidChangeLanguage = this._onDidChangeLanguage.event, this._onDidChangeLanguageConfiguration = this._register(new r.a()), this.onDidChangeLanguageConfiguration = this._onDidChangeLanguageConfiguration.event, this._onDidChangeTokens = this._register(new r.a()), this.onDidChangeTokens = this._onDidChangeTokens.event, this._onDidChangeOptions = this._register(new r.a()), this.onDidChangeOptions = this._onDidChangeOptions.event, this._onDidChangeAttached = this._register(new r.a()), this.onDidChangeAttached = this._onDidChangeAttached.event, this._eventEmitter = this._register(new Qe()), Fe++, this.id = "$model" + Fe, this.isForSimpleWidget = t2.isForSimpleWidget, this._associatedResource = i2 == null ? a.a.parse("inmemory://model/" + Fe) : i2, this._undoRedoService = o2, this._attachedEditorCount = 0, this._buffer = Pe(e2, t2.defaultEOL), this._options = Ve.resolveOptions(this._buffer, t2);
      const l2 = this._buffer.getLineCount(), c2 = this._buffer.getValueLengthInRange(new d.a(1, 1, l2, this._buffer.getLineLength(l2) + 1), 0);
      t2.largeFileOptimizations ? this._isTooLargeForTokenization = c2 > Ve.LARGE_FILE_SIZE_THRESHOLD || l2 > Ve.LARGE_FILE_LINE_COUNT_THRESHOLD : this._isTooLargeForTokenization = false, this._isTooLargeForSyncing = c2 > Ve.MODEL_SYNC_LIMIT, this._versionId = 1, this._alternativeVersionId = 1, this._initialUndoRedoSnapshot = null, this._isDisposed = false, this._isDisposing = false, this._languageIdentifier = n2 || Se.a, this._languageRegistryListener = De.a.onDidChange((e3) => {
        e3.languageIdentifier.id === this._languageIdentifier.id && this._onDidChangeLanguageConfiguration.fire({});
      }), this._instanceId = s.R(Fe), this._lastDecorationId = 0, this._decorations = Object.create(null), this._decorationsTree = new Ue(), this._commandManager = new p.a(this, o2), this._isUndoing = false, this._isRedoing = false, this._trimAutoWhitespaceLines = null, this._tokens = new ce.d(), this._tokens2 = new ce.e(), this._tokenization = new Le(this);
    }
    static resolveOptions(e2, t2) {
      if (t2.detectIndentation) {
        const n2 = f(e2, t2.tabSize, t2.insertSpaces);
        return new u.e({tabSize: n2.tabSize, indentSize: n2.tabSize, insertSpaces: n2.insertSpaces, trimAutoWhitespace: t2.trimAutoWhitespace, defaultEOL: t2.defaultEOL});
      }
      return new u.e({tabSize: t2.tabSize, indentSize: t2.indentSize, insertSpaces: t2.insertSpaces, trimAutoWhitespace: t2.trimAutoWhitespace, defaultEOL: t2.defaultEOL});
    }
    onDidChangeRawContentFast(e2) {
      return this._eventEmitter.fastEvent((t2) => e2(t2.rawContentChangedEvent));
    }
    onDidChangeContentFast(e2) {
      return this._eventEmitter.fastEvent((t2) => e2(t2.contentChangedEvent));
    }
    onDidChangeContent(e2) {
      return this._eventEmitter.slowEvent((t2) => e2(t2.contentChangedEvent));
    }
    dispose() {
      this._isDisposing = true, this._onWillDispose.fire(), this._languageRegistryListener.dispose(), this._tokenization.dispose(), this._isDisposed = true, super.dispose(), this._isDisposing = false;
    }
    _assertNotDisposed() {
      if (this._isDisposed)
        throw new Error("Model is disposed!");
    }
    _emitContentChangedEvent(e2, t2) {
      this._isDisposing || this._eventEmitter.fire(new we(e2, t2));
    }
    setValue(e2) {
      if (this._assertNotDisposed(), e2 === null)
        return;
      const t2 = Pe(e2, this._options.defaultEOL);
      this.setValueFromTextBuffer(t2);
    }
    _createContentChanged2(e2, t2, n2, i2, r2, o2, s2) {
      return {changes: [{range: e2, rangeOffset: t2, rangeLength: n2, text: i2}], eol: this._buffer.getEOL(), versionId: this.getVersionId(), isUndoing: r2, isRedoing: o2, isFlush: s2};
    }
    setValueFromTextBuffer(e2) {
      if (this._assertNotDisposed(), e2 === null)
        return;
      const t2 = this.getFullModelRange(), n2 = this.getValueLengthInRange(t2), i2 = this.getLineCount(), r2 = this.getLineMaxColumn(i2);
      this._buffer = e2, this._increaseVersionId(), this._tokens.flush(), this._tokens2.flush(), this._decorations = Object.create(null), this._decorationsTree = new Ue(), this._commandManager.clear(), this._trimAutoWhitespaceLines = null, this._emitContentChangedEvent(new ve([new me()], this._versionId, false, false), this._createContentChanged2(new d.a(1, 1, i2, r2), 0, n2, this.getValue(), false, false, true));
    }
    setEOL(e2) {
      this._assertNotDisposed();
      const t2 = e2 === 1 ? "\r\n" : "\n";
      if (this._buffer.getEOL() === t2)
        return;
      const n2 = this.getFullModelRange(), i2 = this.getValueLengthInRange(n2), r2 = this.getLineCount(), o2 = this.getLineMaxColumn(r2);
      this._onBeforeEOLChange(), this._buffer.setEOL(t2), this._increaseVersionId(), this._onAfterEOLChange(), this._emitContentChangedEvent(new ve([new _e()], this._versionId, false, false), this._createContentChanged2(new d.a(1, 1, r2, o2), 0, i2, this.getValue(), false, false, false));
    }
    _onBeforeEOLChange() {
      const e2 = this.getVersionId(), t2 = this._decorationsTree.search(0, false, false, e2);
      this._ensureNodesHaveRanges(t2);
    }
    _onAfterEOLChange() {
      const e2 = this.getVersionId(), t2 = this._decorationsTree.collectNodesPostOrder();
      for (let n2 = 0, i2 = t2.length; n2 < i2; n2++) {
        const i3 = t2[n2], r2 = i3.cachedAbsoluteStart - i3.start, o2 = this._buffer.getOffsetAt(i3.range.startLineNumber, i3.range.startColumn), s2 = this._buffer.getOffsetAt(i3.range.endLineNumber, i3.range.endColumn);
        i3.cachedAbsoluteStart = o2, i3.cachedAbsoluteEnd = s2, i3.cachedVersionId = e2, i3.start = o2 - r2, i3.end = s2 - r2, W(i3);
      }
    }
    onBeforeAttached() {
      this._attachedEditorCount++, this._attachedEditorCount === 1 && this._onDidChangeAttached.fire(void 0);
    }
    onBeforeDetached() {
      this._attachedEditorCount--, this._attachedEditorCount === 0 && this._onDidChangeAttached.fire(void 0);
    }
    isAttachedToEditor() {
      return this._attachedEditorCount > 0;
    }
    getAttachedEditorCount() {
      return this._attachedEditorCount;
    }
    isTooLargeForSyncing() {
      return this._isTooLargeForSyncing;
    }
    isTooLargeForTokenization() {
      return this._isTooLargeForTokenization;
    }
    isDisposed() {
      return this._isDisposed;
    }
    isDominatedByLongLines() {
      if (this._assertNotDisposed(), this.isTooLargeForTokenization())
        return false;
      let e2 = 0, t2 = 0;
      const n2 = this._buffer.getLineCount();
      for (let i2 = 1; i2 <= n2; i2++) {
        const n3 = this._buffer.getLineLength(i2);
        n3 >= 1e4 ? t2 += n3 : e2 += n3;
      }
      return t2 > e2;
    }
    get uri() {
      return this._associatedResource;
    }
    getOptions() {
      return this._assertNotDisposed(), this._options;
    }
    getFormattingOptions() {
      return {tabSize: this._options.indentSize, insertSpaces: this._options.insertSpaces};
    }
    updateOptions(e2) {
      this._assertNotDisposed();
      let t2 = e2.tabSize !== void 0 ? e2.tabSize : this._options.tabSize, n2 = e2.indentSize !== void 0 ? e2.indentSize : this._options.indentSize, i2 = e2.insertSpaces !== void 0 ? e2.insertSpaces : this._options.insertSpaces, r2 = e2.trimAutoWhitespace !== void 0 ? e2.trimAutoWhitespace : this._options.trimAutoWhitespace, o2 = new u.e({tabSize: t2, indentSize: n2, insertSpaces: i2, defaultEOL: this._options.defaultEOL, trimAutoWhitespace: r2});
      if (this._options.equals(o2))
        return;
      let s2 = this._options.createChangeEvent(o2);
      this._options = o2, this._onDidChangeOptions.fire(s2);
    }
    detectIndentation(e2, t2) {
      this._assertNotDisposed();
      let n2 = f(this._buffer, t2, e2);
      this.updateOptions({insertSpaces: n2.insertSpaces, tabSize: n2.tabSize, indentSize: n2.tabSize});
    }
    static _normalizeIndentationFromWhitespace(e2, t2, n2) {
      let i2 = 0;
      for (let n3 = 0; n3 < e2.length; n3++)
        e2.charAt(n3) === "	" ? i2 += t2 : i2++;
      let r2 = "";
      if (!n2) {
        let e3 = Math.floor(i2 / t2);
        i2 %= t2;
        for (let t3 = 0; t3 < e3; t3++)
          r2 += "	";
      }
      for (let e3 = 0; e3 < i2; e3++)
        r2 += " ";
      return r2;
    }
    static normalizeIndentation(e2, t2, n2) {
      let i2 = s.w(e2);
      return i2 === -1 && (i2 = e2.length), Ve._normalizeIndentationFromWhitespace(e2.substring(0, i2), t2, n2) + e2.substring(i2);
    }
    normalizeIndentation(e2) {
      return this._assertNotDisposed(), Ve.normalizeIndentation(e2, this._options.indentSize, this._options.insertSpaces);
    }
    getVersionId() {
      return this._assertNotDisposed(), this._versionId;
    }
    mightContainRTL() {
      return this._buffer.mightContainRTL();
    }
    mightContainUnusualLineTerminators() {
      return this._buffer.mightContainUnusualLineTerminators();
    }
    removeUnusualLineTerminators(e2 = null) {
      const t2 = this.findMatches(s.a.source, false, true, false, null, false, 1073741824);
      this._buffer.resetMightContainUnusualLineTerminators(), this.pushEditOperations(e2, t2.map((e3) => ({range: e3.range, text: null})), () => null);
    }
    mightContainNonBasicASCII() {
      return this._buffer.mightContainNonBasicASCII();
    }
    getAlternativeVersionId() {
      return this._assertNotDisposed(), this._alternativeVersionId;
    }
    getOffsetAt(e2) {
      this._assertNotDisposed();
      let t2 = this._validatePosition(e2.lineNumber, e2.column, 0);
      return this._buffer.getOffsetAt(t2.lineNumber, t2.column);
    }
    getPositionAt(e2) {
      this._assertNotDisposed();
      let t2 = Math.min(this._buffer.getLength(), Math.max(0, e2));
      return this._buffer.getPositionAt(t2);
    }
    _increaseVersionId() {
      this._versionId = this._versionId + 1, this._alternativeVersionId = this._versionId;
    }
    _overwriteVersionId(e2) {
      this._versionId = e2;
    }
    _overwriteAlternativeVersionId(e2) {
      this._alternativeVersionId = e2;
    }
    _overwriteInitialUndoRedoSnapshot(e2) {
      this._initialUndoRedoSnapshot = e2;
    }
    getValue(e2, t2 = false) {
      this._assertNotDisposed();
      const n2 = this.getFullModelRange(), i2 = this.getValueInRange(n2, e2);
      return t2 ? this._buffer.getBOM() + i2 : i2;
    }
    createSnapshot(e2 = false) {
      return new We(this._buffer.createSnapshot(e2));
    }
    getValueLength(e2, t2 = false) {
      this._assertNotDisposed();
      const n2 = this.getFullModelRange(), i2 = this.getValueLengthInRange(n2, e2);
      return t2 ? this._buffer.getBOM().length + i2 : i2;
    }
    getValueInRange(e2, t2 = 0) {
      return this._assertNotDisposed(), this._buffer.getValueInRange(this.validateRange(e2), t2);
    }
    getValueLengthInRange(e2, t2 = 0) {
      return this._assertNotDisposed(), this._buffer.getValueLengthInRange(this.validateRange(e2), t2);
    }
    getCharacterCountInRange(e2, t2 = 0) {
      return this._assertNotDisposed(), this._buffer.getCharacterCountInRange(this.validateRange(e2), t2);
    }
    getLineCount() {
      return this._assertNotDisposed(), this._buffer.getLineCount();
    }
    getLineContent(e2) {
      if (this._assertNotDisposed(), e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._buffer.getLineContent(e2);
    }
    getLineLength(e2) {
      if (this._assertNotDisposed(), e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._buffer.getLineLength(e2);
    }
    getLinesContent() {
      return this._assertNotDisposed(), this._buffer.getLinesContent();
    }
    getEOL() {
      return this._assertNotDisposed(), this._buffer.getEOL();
    }
    getLineMinColumn(e2) {
      return this._assertNotDisposed(), 1;
    }
    getLineMaxColumn(e2) {
      if (this._assertNotDisposed(), e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._buffer.getLineLength(e2) + 1;
    }
    getLineFirstNonWhitespaceColumn(e2) {
      if (this._assertNotDisposed(), e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._buffer.getLineFirstNonWhitespaceColumn(e2);
    }
    getLineLastNonWhitespaceColumn(e2) {
      if (this._assertNotDisposed(), e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._buffer.getLineLastNonWhitespaceColumn(e2);
    }
    _validateRangeRelaxedNoAllocations(e2) {
      const t2 = this._buffer.getLineCount(), n2 = e2.startLineNumber, i2 = e2.startColumn;
      let r2, o2;
      if (n2 < 1)
        r2 = 1, o2 = 1;
      else if (n2 > t2)
        r2 = t2, o2 = this.getLineMaxColumn(r2);
      else if (r2 = 0 | n2, i2 <= 1)
        o2 = 1;
      else {
        const e3 = this.getLineMaxColumn(r2);
        o2 = i2 >= e3 ? e3 : 0 | i2;
      }
      const s2 = e2.endLineNumber, a2 = e2.endColumn;
      let l2, c2;
      if (s2 < 1)
        l2 = 1, c2 = 1;
      else if (s2 > t2)
        l2 = t2, c2 = this.getLineMaxColumn(l2);
      else if (l2 = 0 | s2, a2 <= 1)
        c2 = 1;
      else {
        const e3 = this.getLineMaxColumn(l2);
        c2 = a2 >= e3 ? e3 : 0 | a2;
      }
      return n2 === r2 && i2 === o2 && s2 === l2 && a2 === c2 && e2 instanceof d.a && !(e2 instanceof h.a) ? e2 : new d.a(r2, o2, l2, c2);
    }
    _isValidPosition(e2, t2, n2) {
      if (typeof e2 != "number" || typeof t2 != "number")
        return false;
      if (isNaN(e2) || isNaN(t2))
        return false;
      if (e2 < 1 || t2 < 1)
        return false;
      if ((0 | e2) !== e2 || (0 | t2) !== t2)
        return false;
      if (e2 > this._buffer.getLineCount())
        return false;
      if (t2 === 1)
        return true;
      if (t2 > this.getLineMaxColumn(e2))
        return false;
      if (n2 === 1) {
        const n3 = this._buffer.getLineCharCode(e2, t2 - 2);
        if (s.F(n3))
          return false;
      }
      return true;
    }
    _validatePosition(e2, t2, n2) {
      const i2 = Math.floor(typeof e2 != "number" || isNaN(e2) ? 1 : e2), r2 = Math.floor(typeof t2 != "number" || isNaN(t2) ? 1 : t2), o2 = this._buffer.getLineCount();
      if (i2 < 1)
        return new c.a(1, 1);
      if (i2 > o2)
        return new c.a(o2, this.getLineMaxColumn(o2));
      if (r2 <= 1)
        return new c.a(i2, 1);
      const a2 = this.getLineMaxColumn(i2);
      if (r2 >= a2)
        return new c.a(i2, a2);
      if (n2 === 1) {
        const e3 = this._buffer.getLineCharCode(i2, r2 - 2);
        if (s.F(e3))
          return new c.a(i2, r2 - 1);
      }
      return new c.a(i2, r2);
    }
    validatePosition(e2) {
      return this._assertNotDisposed(), e2 instanceof c.a && this._isValidPosition(e2.lineNumber, e2.column, 1) ? e2 : this._validatePosition(e2.lineNumber, e2.column, 1);
    }
    _isValidRange(e2, t2) {
      const n2 = e2.startLineNumber, i2 = e2.startColumn, r2 = e2.endLineNumber, o2 = e2.endColumn;
      if (!this._isValidPosition(n2, i2, 0))
        return false;
      if (!this._isValidPosition(r2, o2, 0))
        return false;
      if (t2 === 1) {
        const e3 = i2 > 1 ? this._buffer.getLineCharCode(n2, i2 - 2) : 0, t3 = o2 > 1 && o2 <= this._buffer.getLineLength(r2) ? this._buffer.getLineCharCode(r2, o2 - 2) : 0, a2 = s.F(e3), l2 = s.F(t3);
        return !a2 && !l2;
      }
      return true;
    }
    validateRange(e2) {
      if (this._assertNotDisposed(), e2 instanceof d.a && !(e2 instanceof h.a) && this._isValidRange(e2, 1))
        return e2;
      const t2 = this._validatePosition(e2.startLineNumber, e2.startColumn, 0), n2 = this._validatePosition(e2.endLineNumber, e2.endColumn, 0), i2 = t2.lineNumber, r2 = t2.column, o2 = n2.lineNumber, a2 = n2.column;
      {
        const e3 = r2 > 1 ? this._buffer.getLineCharCode(i2, r2 - 2) : 0, t3 = a2 > 1 && a2 <= this._buffer.getLineLength(o2) ? this._buffer.getLineCharCode(o2, a2 - 2) : 0, n3 = s.F(e3), l2 = s.F(t3);
        return n3 || l2 ? i2 === o2 && r2 === a2 ? new d.a(i2, r2 - 1, o2, a2 - 1) : n3 && l2 ? new d.a(i2, r2 - 1, o2, a2 + 1) : n3 ? new d.a(i2, r2 - 1, o2, a2) : new d.a(i2, r2, o2, a2 + 1) : new d.a(i2, r2, o2, a2);
      }
    }
    modifyPosition(e2, t2) {
      this._assertNotDisposed();
      let n2 = this.getOffsetAt(e2) + t2;
      return this.getPositionAt(Math.min(this._buffer.getLength(), Math.max(0, n2)));
    }
    getFullModelRange() {
      this._assertNotDisposed();
      const e2 = this.getLineCount();
      return new d.a(1, 1, e2, this.getLineMaxColumn(e2));
    }
    findMatchesLineByLine(e2, t2, n2, i2) {
      return this._buffer.findMatchesLineByLine(e2, t2, n2, i2);
    }
    findMatches(e2, t2, n2, i2, r2, o2, s2 = 999) {
      this._assertNotDisposed();
      let a2 = null;
      t2 !== null && (Array.isArray(t2) || (t2 = [t2]), t2.every((e3) => d.a.isIRange(e3)) && (a2 = t2.map((e3) => this.validateRange(e3)))), a2 === null && (a2 = [this.getFullModelRange()]), a2 = a2.sort((e3, t3) => e3.startLineNumber - t3.startLineNumber || e3.startColumn - t3.startColumn);
      const l2 = [];
      let c2;
      if (l2.push(a2.reduce((e3, t3) => d.a.areIntersecting(e3, t3) ? e3.plusRange(t3) : (l2.push(e3), t3))), !n2 && e2.indexOf("\n") < 0) {
        const t3 = new ee.a(e2, n2, i2, r2).parseSearchRequest();
        if (!t3)
          return [];
        c2 = (e3) => this.findMatchesLineByLine(e3, t3, o2, s2);
      } else
        c2 = (t3) => ee.c.findMatches(this, new ee.a(e2, n2, i2, r2), t3, o2, s2);
      return l2.map(c2).reduce((e3, t3) => e3.concat(t3), []);
    }
    findNextMatch(e2, t2, n2, i2, r2, o2) {
      this._assertNotDisposed();
      const s2 = this.validatePosition(t2);
      if (!n2 && e2.indexOf("\n") < 0) {
        const t3 = new ee.a(e2, n2, i2, r2).parseSearchRequest();
        if (!t3)
          return null;
        const a2 = this.getLineCount();
        let l2 = new d.a(s2.lineNumber, s2.column, a2, this.getLineMaxColumn(a2)), c2 = this.findMatchesLineByLine(l2, t3, o2, 1);
        return ee.c.findNextMatch(this, new ee.a(e2, n2, i2, r2), s2, o2), c2.length > 0 ? c2[0] : (l2 = new d.a(1, 1, s2.lineNumber, this.getLineMaxColumn(s2.lineNumber)), c2 = this.findMatchesLineByLine(l2, t3, o2, 1), c2.length > 0 ? c2[0] : null);
      }
      return ee.c.findNextMatch(this, new ee.a(e2, n2, i2, r2), s2, o2);
    }
    findPreviousMatch(e2, t2, n2, i2, r2, o2) {
      this._assertNotDisposed();
      const s2 = this.validatePosition(t2);
      return ee.c.findPreviousMatch(this, new ee.a(e2, n2, i2, r2), s2, o2);
    }
    pushStackElement() {
      this._commandManager.pushStackElement();
    }
    pushEOL(e2) {
      if ((this.getEOL() === "\n" ? 0 : 1) !== e2)
        try {
          this._onDidChangeDecorations.beginDeferredEmit(), this._eventEmitter.beginDeferredEmit(), this._initialUndoRedoSnapshot === null && (this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri)), this._commandManager.pushEOL(e2);
        } finally {
          this._eventEmitter.endDeferredEmit(), this._onDidChangeDecorations.endDeferredEmit();
        }
    }
    _validateEditOperation(e2) {
      return e2 instanceof u.f ? e2 : new u.f(e2.identifier || null, this.validateRange(e2.range), e2.text, e2.forceMoveMarkers || false, e2.isAutoWhitespaceEdit || false, e2._isTracked || false);
    }
    _validateEditOperations(e2) {
      const t2 = [];
      for (let n2 = 0, i2 = e2.length; n2 < i2; n2++)
        t2[n2] = this._validateEditOperation(e2[n2]);
      return t2;
    }
    pushEditOperations(e2, t2, n2) {
      try {
        return this._onDidChangeDecorations.beginDeferredEmit(), this._eventEmitter.beginDeferredEmit(), this._pushEditOperations(e2, this._validateEditOperations(t2), n2);
      } finally {
        this._eventEmitter.endDeferredEmit(), this._onDidChangeDecorations.endDeferredEmit();
      }
    }
    _pushEditOperations(e2, t2, n2) {
      if (this._options.trimAutoWhitespace && this._trimAutoWhitespaceLines) {
        let n3 = t2.map((e3) => ({range: this.validateRange(e3.range), text: e3.text})), i2 = true;
        if (e2)
          for (let t3 = 0, r2 = e2.length; t3 < r2; t3++) {
            let r3 = e2[t3], o2 = false;
            for (let e3 = 0, t4 = n3.length; e3 < t4; e3++) {
              let t5 = n3[e3].range, i3 = t5.startLineNumber > r3.endLineNumber, s2 = r3.startLineNumber > t5.endLineNumber;
              if (!i3 && !s2) {
                o2 = true;
                break;
              }
            }
            if (!o2) {
              i2 = false;
              break;
            }
          }
        if (i2)
          for (let e3 = 0, i3 = this._trimAutoWhitespaceLines.length; e3 < i3; e3++) {
            let i4 = this._trimAutoWhitespaceLines[e3], r2 = this.getLineMaxColumn(i4), o2 = true;
            for (let e4 = 0, t3 = n3.length; e4 < t3; e4++) {
              let t4 = n3[e4].range, s2 = n3[e4].text;
              if (!(i4 < t4.startLineNumber || i4 > t4.endLineNumber) && !(i4 === t4.startLineNumber && t4.startColumn === r2 && t4.isEmpty() && s2 && s2.length > 0 && s2.charAt(0) === "\n" || i4 === t4.startLineNumber && t4.startColumn === 1 && t4.isEmpty() && s2 && s2.length > 0 && s2.charAt(s2.length - 1) === "\n")) {
                o2 = false;
                break;
              }
            }
            if (o2) {
              const e4 = new d.a(i4, 1, i4, r2);
              t2.push(new u.f(null, e4, null, false, false, false));
            }
          }
        this._trimAutoWhitespaceLines = null;
      }
      return this._initialUndoRedoSnapshot === null && (this._initialUndoRedoSnapshot = this._undoRedoService.createSnapshot(this.uri)), this._commandManager.pushEditOperation(e2, t2, n2);
    }
    _applyUndo(e2, t2, n2, i2) {
      const r2 = e2.map((e3) => {
        const t3 = this.getPositionAt(e3.newPosition), n3 = this.getPositionAt(e3.newEnd);
        return {range: new d.a(t3.lineNumber, t3.column, n3.lineNumber, n3.column), text: e3.oldText};
      });
      this._applyUndoRedoEdits(r2, t2, true, false, n2, i2);
    }
    _applyRedo(e2, t2, n2, i2) {
      const r2 = e2.map((e3) => {
        const t3 = this.getPositionAt(e3.oldPosition), n3 = this.getPositionAt(e3.oldEnd);
        return {range: new d.a(t3.lineNumber, t3.column, n3.lineNumber, n3.column), text: e3.newText};
      });
      this._applyUndoRedoEdits(r2, t2, false, true, n2, i2);
    }
    _applyUndoRedoEdits(e2, t2, n2, i2, r2, o2) {
      try {
        this._onDidChangeDecorations.beginDeferredEmit(), this._eventEmitter.beginDeferredEmit(), this._isUndoing = n2, this._isRedoing = i2, this.applyEdits(e2, false), this.setEOL(t2), this._overwriteAlternativeVersionId(r2);
      } finally {
        this._isUndoing = false, this._isRedoing = false, this._eventEmitter.endDeferredEmit(o2), this._onDidChangeDecorations.endDeferredEmit();
      }
    }
    applyEdits(e2, t2 = false) {
      try {
        this._onDidChangeDecorations.beginDeferredEmit(), this._eventEmitter.beginDeferredEmit();
        const n2 = this._validateEditOperations(e2);
        return this._doApplyEdits(n2, t2);
      } finally {
        this._eventEmitter.endDeferredEmit(), this._onDidChangeDecorations.endDeferredEmit();
      }
    }
    _doApplyEdits(e2, t2) {
      const n2 = this._buffer.getLineCount(), i2 = this._buffer.applyEdits(e2, this._options.trimAutoWhitespace, t2), r2 = this._buffer.getLineCount(), o2 = i2.changes;
      if (this._trimAutoWhitespaceLines = i2.trimAutoWhitespaceLineNumbers, o2.length !== 0) {
        let e3 = [], t3 = n2;
        for (let n3 = 0, i3 = o2.length; n3 < i3; n3++) {
          const i4 = o2[n3], [s2, a2, l2] = Object(ce.f)(i4.text);
          this._tokens.acceptEdit(i4.range, s2, a2), this._tokens2.acceptEdit(i4.range, s2, a2, l2, i4.text.length > 0 ? i4.text.charCodeAt(0) : 0), this._onDidChangeDecorations.fire(), this._decorationsTree.acceptReplace(i4.rangeOffset, i4.rangeLength, i4.text.length, i4.forceMoveMarkers);
          const c2 = i4.range.startLineNumber, d2 = i4.range.endLineNumber, h2 = d2 - c2, u2 = s2, p2 = Math.min(h2, u2), m2 = u2 - h2;
          for (let n4 = p2; n4 >= 0; n4--) {
            const i5 = c2 + n4, o3 = r2 - t3 - m2 + i5;
            e3.push(new ge(i5, this.getLineContent(o3)));
          }
          if (p2 < h2) {
            const t4 = c2 + p2;
            e3.push(new fe(t4 + 1, d2));
          }
          if (p2 < u2) {
            const n4 = c2 + p2, i5 = u2 - p2, o3 = r2 - t3 - i5 + n4 + 1;
            let s3 = [];
            for (let e4 = 0; e4 < i5; e4++) {
              let t4 = o3 + e4;
              s3[t4 - o3] = this.getLineContent(t4);
            }
            e3.push(new be(n4 + 1, c2 + u2, s3));
          }
          t3 += m2;
        }
        this._increaseVersionId(), this._emitContentChangedEvent(new ve(e3, this.getVersionId(), this._isUndoing, this._isRedoing), {changes: o2, eol: this._buffer.getEOL(), versionId: this.getVersionId(), isUndoing: this._isUndoing, isRedoing: this._isRedoing, isFlush: false});
      }
      return i2.reverseEdits === null ? void 0 : i2.reverseEdits;
    }
    undo() {
      this._undoRedoService.undo(this.uri);
    }
    canUndo() {
      return this._undoRedoService.canUndo(this.uri);
    }
    redo() {
      this._undoRedoService.redo(this.uri);
    }
    canRedo() {
      return this._undoRedoService.canRedo(this.uri);
    }
    changeDecorations(e2, t2 = 0) {
      this._assertNotDisposed();
      try {
        return this._onDidChangeDecorations.beginDeferredEmit(), this._changeDecorations(t2, e2);
      } finally {
        this._onDidChangeDecorations.endDeferredEmit();
      }
    }
    _changeDecorations(e2, t2) {
      let n2 = {addDecoration: (t3, n3) => this._deltaDecorationsImpl(e2, [], [{range: t3, options: n3}])[0], changeDecoration: (e3, t3) => {
        this._changeDecorationImpl(e3, t3);
      }, changeDecorationOptions: (e3, t3) => {
        this._changeDecorationOptionsImpl(e3, Ze(t3));
      }, removeDecoration: (t3) => {
        this._deltaDecorationsImpl(e2, [t3], []);
      }, deltaDecorations: (t3, n3) => t3.length === 0 && n3.length === 0 ? [] : this._deltaDecorationsImpl(e2, t3, n3)}, r2 = null;
      try {
        r2 = t2(n2);
      } catch (e3) {
        Object(i.e)(e3);
      }
      return n2.addDecoration = ze, n2.changeDecoration = ze, n2.changeDecorationOptions = ze, n2.removeDecoration = ze, n2.deltaDecorations = ze, r2;
    }
    deltaDecorations(e2, t2, n2 = 0) {
      if (this._assertNotDisposed(), e2 || (e2 = []), e2.length === 0 && t2.length === 0)
        return [];
      try {
        return this._onDidChangeDecorations.beginDeferredEmit(), this._deltaDecorationsImpl(n2, e2, t2);
      } finally {
        this._onDidChangeDecorations.endDeferredEmit();
      }
    }
    _getTrackedRange(e2) {
      return this.getDecorationRange(e2);
    }
    _setTrackedRange(e2, t2, n2) {
      const i2 = e2 ? this._decorations[e2] : null;
      if (!i2)
        return t2 ? this._deltaDecorationsImpl(0, [], [{range: t2, options: Ye[n2]}])[0] : null;
      if (!t2)
        return this._decorationsTree.delete(i2), delete this._decorations[i2.id], null;
      const r2 = this._validateRangeRelaxedNoAllocations(t2), o2 = this._buffer.getOffsetAt(r2.startLineNumber, r2.startColumn), s2 = this._buffer.getOffsetAt(r2.endLineNumber, r2.endColumn);
      return this._decorationsTree.delete(i2), i2.reset(this.getVersionId(), o2, s2, r2), i2.setOptions(Ye[n2]), this._decorationsTree.insert(i2), i2.id;
    }
    removeAllDecorationsWithOwnerId(e2) {
      if (this._isDisposed)
        return;
      const t2 = this._decorationsTree.collectNodesFromOwner(e2);
      for (let e3 = 0, n2 = t2.length; e3 < n2; e3++) {
        const n3 = t2[e3];
        this._decorationsTree.delete(n3), delete this._decorations[n3.id];
      }
    }
    getDecorationOptions(e2) {
      const t2 = this._decorations[e2];
      return t2 ? t2.options : null;
    }
    getDecorationRange(e2) {
      const t2 = this._decorations[e2];
      if (!t2)
        return null;
      const n2 = this.getVersionId();
      return t2.cachedVersionId !== n2 && this._decorationsTree.resolveNode(t2, n2), t2.range === null && (t2.range = this._getRangeAt(t2.cachedAbsoluteStart, t2.cachedAbsoluteEnd)), t2.range;
    }
    getLineDecorations(e2, t2 = 0, n2 = false) {
      return e2 < 1 || e2 > this.getLineCount() ? [] : this.getLinesDecorations(e2, e2, t2, n2);
    }
    getLinesDecorations(e2, t2, n2 = 0, i2 = false) {
      let r2 = this.getLineCount(), o2 = Math.min(r2, Math.max(1, e2)), s2 = Math.min(r2, Math.max(1, t2)), a2 = this.getLineMaxColumn(s2);
      return this._getDecorationsInRange(new d.a(o2, 1, s2, a2), n2, i2);
    }
    getDecorationsInRange(e2, t2 = 0, n2 = false) {
      let i2 = this.validateRange(e2);
      return this._getDecorationsInRange(i2, t2, n2);
    }
    getOverviewRulerDecorations(e2 = 0, t2 = false) {
      const n2 = this.getVersionId(), i2 = this._decorationsTree.search(e2, t2, true, n2);
      return this._ensureNodesHaveRanges(i2);
    }
    getAllDecorations(e2 = 0, t2 = false) {
      const n2 = this.getVersionId(), i2 = this._decorationsTree.search(e2, t2, false, n2);
      return this._ensureNodesHaveRanges(i2);
    }
    _getDecorationsInRange(e2, t2, n2) {
      const i2 = this._buffer.getOffsetAt(e2.startLineNumber, e2.startColumn), r2 = this._buffer.getOffsetAt(e2.endLineNumber, e2.endColumn), o2 = this.getVersionId(), s2 = this._decorationsTree.intervalSearch(i2, r2, t2, n2, o2);
      return this._ensureNodesHaveRanges(s2);
    }
    _ensureNodesHaveRanges(e2) {
      for (let t2 = 0, n2 = e2.length; t2 < n2; t2++) {
        const n3 = e2[t2];
        n3.range === null && (n3.range = this._getRangeAt(n3.cachedAbsoluteStart, n3.cachedAbsoluteEnd));
      }
      return e2;
    }
    _getRangeAt(e2, t2) {
      return this._buffer.getRangeAt(e2, t2 - e2);
    }
    _changeDecorationImpl(e2, t2) {
      const n2 = this._decorations[e2];
      if (!n2)
        return;
      const i2 = this._validateRangeRelaxedNoAllocations(t2), r2 = this._buffer.getOffsetAt(i2.startLineNumber, i2.startColumn), o2 = this._buffer.getOffsetAt(i2.endLineNumber, i2.endColumn);
      this._decorationsTree.delete(n2), n2.reset(this.getVersionId(), r2, o2, i2), this._decorationsTree.insert(n2), this._onDidChangeDecorations.checkAffectedAndFire(n2.options);
    }
    _changeDecorationOptionsImpl(e2, t2) {
      const n2 = this._decorations[e2];
      if (!n2)
        return;
      const i2 = !(!n2.options.overviewRuler || !n2.options.overviewRuler.color), r2 = !(!t2.overviewRuler || !t2.overviewRuler.color);
      this._onDidChangeDecorations.checkAffectedAndFire(n2.options), this._onDidChangeDecorations.checkAffectedAndFire(t2), i2 !== r2 ? (this._decorationsTree.delete(n2), n2.setOptions(t2), this._decorationsTree.insert(n2)) : n2.setOptions(t2);
    }
    _deltaDecorationsImpl(e2, t2, n2) {
      const i2 = this.getVersionId(), r2 = t2.length;
      let o2 = 0;
      const s2 = n2.length;
      let a2 = 0, l2 = new Array(s2);
      for (; o2 < r2 || a2 < s2; ) {
        let c2 = null;
        if (o2 < r2) {
          do {
            c2 = this._decorations[t2[o2++]];
          } while (!c2 && o2 < r2);
          c2 && (this._decorationsTree.delete(c2), this._onDidChangeDecorations.checkAffectedAndFire(c2.options));
        }
        if (a2 < s2) {
          if (!c2) {
            const e3 = ++this._lastDecorationId, t4 = `${this._instanceId};${e3}`;
            c2 = new T(t4, 0, 0), this._decorations[t4] = c2;
          }
          const t3 = n2[a2], r3 = this._validateRangeRelaxedNoAllocations(t3.range), o3 = Ze(t3.options), s3 = this._buffer.getOffsetAt(r3.startLineNumber, r3.startColumn), d2 = this._buffer.getOffsetAt(r3.endLineNumber, r3.endColumn);
          c2.ownerId = e2, c2.reset(i2, s3, d2, r3), c2.setOptions(o3), this._onDidChangeDecorations.checkAffectedAndFire(o3), this._decorationsTree.insert(c2), l2[a2] = c2.id, a2++;
        } else
          c2 && delete this._decorations[c2.id];
      }
      return l2;
    }
    setTokens(e2) {
      if (e2.length === 0)
        return;
      let t2 = [];
      for (let n2 = 0, i2 = e2.length; n2 < i2; n2++) {
        const i3 = e2[n2];
        let r2 = 0, o2 = 0, s2 = false;
        for (let e3 = 0, t3 = i3.tokens.length; e3 < t3; e3++) {
          const t4 = i3.startLineNumber + e3;
          if (s2)
            this._tokens.setTokens(this._languageIdentifier.id, t4 - 1, this._buffer.getLineLength(t4), i3.tokens[e3], false), o2 = t4;
          else {
            this._tokens.setTokens(this._languageIdentifier.id, t4 - 1, this._buffer.getLineLength(t4), i3.tokens[e3], true) && (s2 = true, r2 = t4, o2 = t4);
          }
        }
        s2 && t2.push({fromLineNumber: r2, toLineNumber: o2});
      }
      t2.length > 0 && this._emitModelTokensChangedEvent({tokenizationSupportChanged: false, semanticTokensApplied: false, ranges: t2});
    }
    setSemanticTokens(e2, t2) {
      this._tokens2.set(e2, t2), this._emitModelTokensChangedEvent({tokenizationSupportChanged: false, semanticTokensApplied: e2 !== null, ranges: [{fromLineNumber: 1, toLineNumber: this.getLineCount()}]});
    }
    hasSemanticTokens() {
      return this._tokens2.isComplete();
    }
    setPartialSemanticTokens(e2, t2) {
      if (this.hasSemanticTokens())
        return;
      const n2 = this._tokens2.setPartial(e2, t2);
      this._emitModelTokensChangedEvent({tokenizationSupportChanged: false, semanticTokensApplied: true, ranges: [{fromLineNumber: n2.startLineNumber, toLineNumber: n2.endLineNumber}]});
    }
    tokenizeViewport(e2, t2) {
      e2 = Math.max(1, e2), t2 = Math.min(this._buffer.getLineCount(), t2), this._tokenization.tokenizeViewport(e2, t2);
    }
    clearTokens() {
      this._tokens.flush(), this._emitModelTokensChangedEvent({tokenizationSupportChanged: true, semanticTokensApplied: false, ranges: [{fromLineNumber: 1, toLineNumber: this._buffer.getLineCount()}]});
    }
    _emitModelTokensChangedEvent(e2) {
      this._isDisposing || this._onDidChangeTokens.fire(e2);
    }
    resetTokenization() {
      this._tokenization.reset();
    }
    forceTokenization(e2) {
      if (e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      this._tokenization.forceTokenization(e2);
    }
    isCheapToTokenize(e2) {
      return this._tokenization.isCheapToTokenize(e2);
    }
    tokenizeIfCheap(e2) {
      this.isCheapToTokenize(e2) && this.forceTokenization(e2);
    }
    getLineTokens(e2) {
      if (e2 < 1 || e2 > this.getLineCount())
        throw new Error("Illegal value for lineNumber");
      return this._getLineTokens(e2);
    }
    _getLineTokens(e2) {
      const t2 = this.getLineContent(e2), n2 = this._tokens.getTokens(this._languageIdentifier.id, e2 - 1, t2);
      return this._tokens2.addSemanticTokens(e2, n2);
    }
    getLanguageIdentifier() {
      return this._languageIdentifier;
    }
    getModeId() {
      return this._languageIdentifier.language;
    }
    setMode(e2) {
      if (this._languageIdentifier.id === e2.id)
        return;
      let t2 = {oldLanguage: this._languageIdentifier.language, newLanguage: e2.language};
      this._languageIdentifier = e2, this._onDidChangeLanguage.fire(t2), this._onDidChangeLanguageConfiguration.fire({});
    }
    getLanguageIdAtPosition(e2, t2) {
      const n2 = this.validatePosition(new c.a(e2, t2)), i2 = this.getLineTokens(n2.lineNumber);
      return i2.getLanguageId(i2.findTokenIndexAtOffset(n2.column - 1));
    }
    getWordAtPosition(e2) {
      this._assertNotDisposed();
      const t2 = this.validatePosition(e2), n2 = this.getLineContent(t2.lineNumber), i2 = this._getLineTokens(t2.lineNumber), r2 = i2.findTokenIndexAtOffset(t2.column - 1), [o2, s2] = Ve._findLanguageBoundaries(i2, r2), a2 = Object(Ie.d)(t2.column, De.a.getWordDefinition(i2.getLanguageId(r2)), n2.substring(o2, s2), o2);
      if (a2 && a2.startColumn <= e2.column && e2.column <= a2.endColumn)
        return a2;
      if (r2 > 0 && o2 === t2.column - 1) {
        const [o3, s3] = Ve._findLanguageBoundaries(i2, r2 - 1), a3 = Object(Ie.d)(t2.column, De.a.getWordDefinition(i2.getLanguageId(r2 - 1)), n2.substring(o3, s3), o3);
        if (a3 && a3.startColumn <= e2.column && e2.column <= a3.endColumn)
          return a3;
      }
      return null;
    }
    static _findLanguageBoundaries(e2, t2) {
      const n2 = e2.getLanguageId(t2);
      let i2 = 0;
      for (let r3 = t2; r3 >= 0 && e2.getLanguageId(r3) === n2; r3--)
        i2 = e2.getStartOffset(r3);
      let r2 = e2.getLineContent().length;
      for (let i3 = t2, o2 = e2.getCount(); i3 < o2 && e2.getLanguageId(i3) === n2; i3++)
        r2 = e2.getEndOffset(i3);
      return [i2, r2];
    }
    getWordUntilPosition(e2) {
      const t2 = this.getWordAtPosition(e2);
      return t2 ? {word: t2.word.substr(0, e2.column - t2.startColumn), startColumn: t2.startColumn, endColumn: e2.column} : {word: "", startColumn: e2.column, endColumn: e2.column};
    }
    findMatchingBracketUp(e2, t2) {
      let n2 = e2.toLowerCase(), i2 = this.validatePosition(t2), r2 = this._getLineTokens(i2.lineNumber), o2 = r2.getLanguageId(r2.findTokenIndexAtOffset(i2.column - 1)), s2 = De.a.getBracketsSupport(o2);
      if (!s2)
        return null;
      let a2 = s2.textIsBracket[n2];
      return a2 ? je(this._findMatchingBracketUp(a2, i2, null)) : null;
    }
    matchBracket(e2) {
      return this._matchBracket(this.validatePosition(e2));
    }
    _matchBracket(e2) {
      const t2 = e2.lineNumber, n2 = this._getLineTokens(t2), i2 = n2.getCount(), r2 = this._buffer.getLineContent(t2), o2 = n2.findTokenIndexAtOffset(e2.column - 1);
      if (o2 < 0)
        return null;
      const s2 = De.a.getBracketsSupport(n2.getLanguageId(o2));
      if (s2 && !Object(Oe.b)(n2.getStandardTokenType(o2))) {
        let i3 = Math.max(0, e2.column - 1 - s2.maxBracketLength);
        for (let e3 = o2 - 1; e3 >= 0; e3--) {
          const t3 = n2.getEndOffset(e3);
          if (t3 <= i3)
            break;
          Object(Oe.b)(n2.getStandardTokenType(e3)) && (i3 = t3);
        }
        const a2 = Math.min(r2.length, e2.column - 1 + s2.maxBracketLength);
        let l2 = null;
        for (; ; ) {
          const n3 = Ae.a.findNextBracketInRange(s2.forwardRegex, t2, r2, i3, a2);
          if (!n3)
            break;
          if (n3.startColumn <= e2.column && e2.column <= n3.endColumn) {
            const e3 = r2.substring(n3.startColumn - 1, n3.endColumn - 1).toLowerCase(), t3 = this._matchFoundBracket(n3, s2.textIsBracket[e3], s2.textIsOpenBracket[e3], null);
            if (t3) {
              if (t3 instanceof Be)
                return null;
              l2 = t3;
            }
          }
          i3 = n3.endColumn - 1;
        }
        if (l2)
          return l2;
      }
      if (o2 > 0 && n2.getStartOffset(o2) === e2.column - 1) {
        const s3 = o2 - 1, a2 = De.a.getBracketsSupport(n2.getLanguageId(s3));
        if (a2 && !Object(Oe.b)(n2.getStandardTokenType(s3))) {
          const o3 = Math.max(0, e2.column - 1 - a2.maxBracketLength);
          let l2 = Math.min(r2.length, e2.column - 1 + a2.maxBracketLength);
          for (let e3 = s3 + 1; e3 < i2; e3++) {
            const t3 = n2.getStartOffset(e3);
            if (t3 >= l2)
              break;
            Object(Oe.b)(n2.getStandardTokenType(e3)) && (l2 = t3);
          }
          const c2 = Ae.a.findPrevBracketInRange(a2.reversedRegex, t2, r2, o3, l2);
          if (c2 && c2.startColumn <= e2.column && e2.column <= c2.endColumn) {
            const e3 = r2.substring(c2.startColumn - 1, c2.endColumn - 1).toLowerCase(), t3 = this._matchFoundBracket(c2, a2.textIsBracket[e3], a2.textIsOpenBracket[e3], null);
            if (t3)
              return t3 instanceof Be ? null : t3;
          }
        }
      }
      return null;
    }
    _matchFoundBracket(e2, t2, n2, i2) {
      if (!t2)
        return null;
      const r2 = n2 ? this._findMatchingBracketDown(t2, e2.getEndPosition(), i2) : this._findMatchingBracketUp(t2, e2.getStartPosition(), i2);
      return r2 ? r2 instanceof Be ? r2 : [e2, r2] : null;
    }
    _findMatchingBracketUp(e2, t2, n2) {
      const i2 = e2.languageIdentifier.id, r2 = e2.reversedRegex;
      let o2 = -1, s2 = 0;
      const a2 = (t3, i3, a3, l2) => {
        for (; ; ) {
          if (n2 && ++s2 % 100 == 0 && !n2())
            return Be.INSTANCE;
          const c2 = Ae.a.findPrevBracketInRange(r2, t3, i3, a3, l2);
          if (!c2)
            break;
          const d2 = i3.substring(c2.startColumn - 1, c2.endColumn - 1).toLowerCase();
          if (e2.isOpen(d2) ? o2++ : e2.isClose(d2) && o2--, o2 === 0)
            return c2;
          l2 = c2.startColumn - 1;
        }
        return null;
      };
      for (let e3 = t2.lineNumber; e3 >= 1; e3--) {
        const n3 = this._getLineTokens(e3), r3 = n3.getCount(), o3 = this._buffer.getLineContent(e3);
        let s3 = r3 - 1, l2 = o3.length, c2 = o3.length;
        e3 === t2.lineNumber && (s3 = n3.findTokenIndexAtOffset(t2.column - 1), l2 = t2.column - 1, c2 = t2.column - 1);
        let d2 = true;
        for (; s3 >= 0; s3--) {
          const t3 = n3.getLanguageId(s3) === i2 && !Object(Oe.b)(n3.getStandardTokenType(s3));
          if (t3)
            d2 ? l2 = n3.getStartOffset(s3) : (l2 = n3.getStartOffset(s3), c2 = n3.getEndOffset(s3));
          else if (d2 && l2 !== c2) {
            const t4 = a2(e3, o3, l2, c2);
            if (t4)
              return t4;
          }
          d2 = t3;
        }
        if (d2 && l2 !== c2) {
          const t3 = a2(e3, o3, l2, c2);
          if (t3)
            return t3;
        }
      }
      return null;
    }
    _findMatchingBracketDown(e2, t2, n2) {
      const i2 = e2.languageIdentifier.id, r2 = e2.forwardRegex;
      let o2 = 1, s2 = 0;
      const a2 = (t3, i3, a3, l3) => {
        for (; ; ) {
          if (n2 && ++s2 % 100 == 0 && !n2())
            return Be.INSTANCE;
          const c2 = Ae.a.findNextBracketInRange(r2, t3, i3, a3, l3);
          if (!c2)
            break;
          const d2 = i3.substring(c2.startColumn - 1, c2.endColumn - 1).toLowerCase();
          if (e2.isOpen(d2) ? o2++ : e2.isClose(d2) && o2--, o2 === 0)
            return c2;
          a3 = c2.endColumn - 1;
        }
        return null;
      }, l2 = this.getLineCount();
      for (let e3 = t2.lineNumber; e3 <= l2; e3++) {
        const n3 = this._getLineTokens(e3), r3 = n3.getCount(), o3 = this._buffer.getLineContent(e3);
        let s3 = 0, l3 = 0, c2 = 0;
        e3 === t2.lineNumber && (s3 = n3.findTokenIndexAtOffset(t2.column - 1), l3 = t2.column - 1, c2 = t2.column - 1);
        let d2 = true;
        for (; s3 < r3; s3++) {
          const t3 = n3.getLanguageId(s3) === i2 && !Object(Oe.b)(n3.getStandardTokenType(s3));
          if (t3)
            d2 || (l3 = n3.getStartOffset(s3)), c2 = n3.getEndOffset(s3);
          else if (d2 && l3 !== c2) {
            const t4 = a2(e3, o3, l3, c2);
            if (t4)
              return t4;
          }
          d2 = t3;
        }
        if (d2 && l3 !== c2) {
          const t3 = a2(e3, o3, l3, c2);
          if (t3)
            return t3;
        }
      }
      return null;
    }
    findPrevBracket(e2) {
      const t2 = this.validatePosition(e2);
      let n2 = -1, i2 = null;
      for (let e3 = t2.lineNumber; e3 >= 1; e3--) {
        const r2 = this._getLineTokens(e3), o2 = r2.getCount(), s2 = this._buffer.getLineContent(e3);
        let a2 = o2 - 1, l2 = s2.length, c2 = s2.length;
        if (e3 === t2.lineNumber) {
          a2 = r2.findTokenIndexAtOffset(t2.column - 1), l2 = t2.column - 1, c2 = t2.column - 1;
          const e4 = r2.getLanguageId(a2);
          n2 !== e4 && (n2 = e4, i2 = De.a.getBracketsSupport(n2));
        }
        let d2 = true;
        for (; a2 >= 0; a2--) {
          const t3 = r2.getLanguageId(a2);
          if (n2 !== t3) {
            if (i2 && d2 && l2 !== c2) {
              const t4 = Ae.a.findPrevBracketInRange(i2.reversedRegex, e3, s2, l2, c2);
              if (t4)
                return this._toFoundBracket(i2, t4);
              d2 = false;
            }
            n2 = t3, i2 = De.a.getBracketsSupport(n2);
          }
          const o3 = !!i2 && !Object(Oe.b)(r2.getStandardTokenType(a2));
          if (o3)
            d2 ? l2 = r2.getStartOffset(a2) : (l2 = r2.getStartOffset(a2), c2 = r2.getEndOffset(a2));
          else if (i2 && d2 && l2 !== c2) {
            const t4 = Ae.a.findPrevBracketInRange(i2.reversedRegex, e3, s2, l2, c2);
            if (t4)
              return this._toFoundBracket(i2, t4);
          }
          d2 = o3;
        }
        if (i2 && d2 && l2 !== c2) {
          const t3 = Ae.a.findPrevBracketInRange(i2.reversedRegex, e3, s2, l2, c2);
          if (t3)
            return this._toFoundBracket(i2, t3);
        }
      }
      return null;
    }
    findNextBracket(e2) {
      const t2 = this.validatePosition(e2), n2 = this.getLineCount();
      let i2 = -1, r2 = null;
      for (let e3 = t2.lineNumber; e3 <= n2; e3++) {
        const n3 = this._getLineTokens(e3), o2 = n3.getCount(), s2 = this._buffer.getLineContent(e3);
        let a2 = 0, l2 = 0, c2 = 0;
        if (e3 === t2.lineNumber) {
          a2 = n3.findTokenIndexAtOffset(t2.column - 1), l2 = t2.column - 1, c2 = t2.column - 1;
          const e4 = n3.getLanguageId(a2);
          i2 !== e4 && (i2 = e4, r2 = De.a.getBracketsSupport(i2));
        }
        let d2 = true;
        for (; a2 < o2; a2++) {
          const t3 = n3.getLanguageId(a2);
          if (i2 !== t3) {
            if (r2 && d2 && l2 !== c2) {
              const t4 = Ae.a.findNextBracketInRange(r2.forwardRegex, e3, s2, l2, c2);
              if (t4)
                return this._toFoundBracket(r2, t4);
              d2 = false;
            }
            i2 = t3, r2 = De.a.getBracketsSupport(i2);
          }
          const o3 = !!r2 && !Object(Oe.b)(n3.getStandardTokenType(a2));
          if (o3)
            d2 || (l2 = n3.getStartOffset(a2)), c2 = n3.getEndOffset(a2);
          else if (r2 && d2 && l2 !== c2) {
            const t4 = Ae.a.findNextBracketInRange(r2.forwardRegex, e3, s2, l2, c2);
            if (t4)
              return this._toFoundBracket(r2, t4);
          }
          d2 = o3;
        }
        if (r2 && d2 && l2 !== c2) {
          const t3 = Ae.a.findNextBracketInRange(r2.forwardRegex, e3, s2, l2, c2);
          if (t3)
            return this._toFoundBracket(r2, t3);
        }
      }
      return null;
    }
    findEnclosingBrackets(e2, t2) {
      let n2;
      if (t2 === void 0)
        n2 = null;
      else {
        const e3 = Date.now();
        n2 = () => Date.now() - e3 <= t2;
      }
      const i2 = this.validatePosition(e2), r2 = this.getLineCount(), o2 = new Map();
      let s2 = [];
      const a2 = (e3, t3) => {
        if (!o2.has(e3)) {
          let n3 = [];
          for (let e4 = 0, i3 = t3 ? t3.brackets.length : 0; e4 < i3; e4++)
            n3[e4] = 0;
          o2.set(e3, n3);
        }
        s2 = o2.get(e3);
      };
      let l2 = 0;
      const c2 = (e3, t3, i3, r3, o3) => {
        for (; ; ) {
          if (n2 && ++l2 % 100 == 0 && !n2())
            return Be.INSTANCE;
          const a3 = Ae.a.findNextBracketInRange(e3.forwardRegex, t3, i3, r3, o3);
          if (!a3)
            break;
          const c3 = i3.substring(a3.startColumn - 1, a3.endColumn - 1).toLowerCase(), d3 = e3.textIsBracket[c3];
          if (d3 && (d3.isOpen(c3) ? s2[d3.index]++ : d3.isClose(c3) && s2[d3.index]--, s2[d3.index] === -1))
            return this._matchFoundBracket(a3, d3, false, n2);
          r3 = a3.endColumn - 1;
        }
        return null;
      };
      let d2 = -1, h2 = null;
      for (let e3 = i2.lineNumber; e3 <= r2; e3++) {
        const t3 = this._getLineTokens(e3), n3 = t3.getCount(), r3 = this._buffer.getLineContent(e3);
        let o3 = 0, s3 = 0, l3 = 0;
        if (e3 === i2.lineNumber) {
          o3 = t3.findTokenIndexAtOffset(i2.column - 1), s3 = i2.column - 1, l3 = i2.column - 1;
          const e4 = t3.getLanguageId(o3);
          d2 !== e4 && (d2 = e4, h2 = De.a.getBracketsSupport(d2), a2(d2, h2));
        }
        let u2 = true;
        for (; o3 < n3; o3++) {
          const n4 = t3.getLanguageId(o3);
          if (d2 !== n4) {
            if (h2 && u2 && s3 !== l3) {
              const t4 = c2(h2, e3, r3, s3, l3);
              if (t4)
                return je(t4);
              u2 = false;
            }
            d2 = n4, h2 = De.a.getBracketsSupport(d2), a2(d2, h2);
          }
          const i3 = !!h2 && !Object(Oe.b)(t3.getStandardTokenType(o3));
          if (i3)
            u2 || (s3 = t3.getStartOffset(o3)), l3 = t3.getEndOffset(o3);
          else if (h2 && u2 && s3 !== l3) {
            const t4 = c2(h2, e3, r3, s3, l3);
            if (t4)
              return je(t4);
          }
          u2 = i3;
        }
        if (h2 && u2 && s3 !== l3) {
          const t4 = c2(h2, e3, r3, s3, l3);
          if (t4)
            return je(t4);
        }
      }
      return null;
    }
    _toFoundBracket(e2, t2) {
      if (!t2)
        return null;
      let n2 = this.getValueInRange(t2);
      n2 = n2.toLowerCase();
      let i2 = e2.textIsBracket[n2];
      return i2 ? {range: t2, open: i2.open, close: i2.close, isOpen: e2.textIsOpenBracket[n2]} : null;
    }
    static computeIndentLevel(e2, t2) {
      let n2 = 0, i2 = 0, r2 = e2.length;
      for (; i2 < r2; ) {
        let r3 = e2.charCodeAt(i2);
        if (r3 === 32)
          n2++;
        else {
          if (r3 !== 9)
            break;
          n2 = n2 - n2 % t2 + t2;
        }
        i2++;
      }
      return i2 === r2 ? -1 : n2;
    }
    _computeIndentLevel(e2) {
      return Ve.computeIndentLevel(this._buffer.getLineContent(e2 + 1), this._options.tabSize);
    }
    getActiveIndentGuide(e2, t2, n2) {
      this._assertNotDisposed();
      const i2 = this.getLineCount();
      if (e2 < 1 || e2 > i2)
        throw new Error("Illegal value for lineNumber");
      const r2 = De.a.getFoldingRules(this._languageIdentifier.id), o2 = Boolean(r2 && r2.offSide);
      let s2 = -2, a2 = -1, l2 = -2, c2 = -1;
      const d2 = (e3) => {
        if (s2 !== -1 && (s2 === -2 || s2 > e3 - 1)) {
          s2 = -1, a2 = -1;
          for (let t3 = e3 - 2; t3 >= 0; t3--) {
            let e4 = this._computeIndentLevel(t3);
            if (e4 >= 0) {
              s2 = t3, a2 = e4;
              break;
            }
          }
        }
        if (l2 === -2) {
          l2 = -1, c2 = -1;
          for (let t3 = e3; t3 < i2; t3++) {
            let e4 = this._computeIndentLevel(t3);
            if (e4 >= 0) {
              l2 = t3, c2 = e4;
              break;
            }
          }
        }
      };
      let h2 = -2, u2 = -1, p2 = -2, m2 = -1;
      const g2 = (e3) => {
        if (h2 === -2) {
          h2 = -1, u2 = -1;
          for (let t3 = e3 - 2; t3 >= 0; t3--) {
            let e4 = this._computeIndentLevel(t3);
            if (e4 >= 0) {
              h2 = t3, u2 = e4;
              break;
            }
          }
        }
        if (p2 !== -1 && (p2 === -2 || p2 < e3 - 1)) {
          p2 = -1, m2 = -1;
          for (let t3 = e3; t3 < i2; t3++) {
            let e4 = this._computeIndentLevel(t3);
            if (e4 >= 0) {
              p2 = t3, m2 = e4;
              break;
            }
          }
        }
      };
      let f2 = 0, b2 = true, _2 = 0, v2 = true, w2 = 0, y2 = 0;
      for (let r3 = 0; b2 || v2; r3++) {
        const s3 = e2 - r3, p3 = e2 + r3;
        r3 > 1 && (s3 < 1 || s3 < t2) && (b2 = false), r3 > 1 && (p3 > i2 || p3 > n2) && (v2 = false), r3 > 5e4 && (b2 = false, v2 = false);
        let C2 = -1;
        if (b2) {
          const e3 = this._computeIndentLevel(s3 - 1);
          e3 >= 0 ? (l2 = s3 - 1, c2 = e3, C2 = Math.ceil(e3 / this._options.indentSize)) : (d2(s3), C2 = this._getIndentLevelForWhitespaceLine(o2, a2, c2));
        }
        let x2 = -1;
        if (v2) {
          const e3 = this._computeIndentLevel(p3 - 1);
          e3 >= 0 ? (h2 = p3 - 1, u2 = e3, x2 = Math.ceil(e3 / this._options.indentSize)) : (g2(p3), x2 = this._getIndentLevelForWhitespaceLine(o2, u2, m2));
        }
        if (r3 !== 0) {
          if (r3 === 1) {
            if (p3 <= i2 && x2 >= 0 && y2 + 1 === x2) {
              b2 = false, f2 = p3, _2 = p3, w2 = x2;
              continue;
            }
            if (s3 >= 1 && C2 >= 0 && C2 - 1 === y2) {
              v2 = false, f2 = s3, _2 = s3, w2 = C2;
              continue;
            }
            if (f2 = e2, _2 = e2, w2 = y2, w2 === 0)
              return {startLineNumber: f2, endLineNumber: _2, indent: w2};
          }
          b2 && (C2 >= w2 ? f2 = s3 : b2 = false), v2 && (x2 >= w2 ? _2 = p3 : v2 = false);
        } else
          y2 = C2;
      }
      return {startLineNumber: f2, endLineNumber: _2, indent: w2};
    }
    getLinesIndentGuides(e2, t2) {
      this._assertNotDisposed();
      const n2 = this.getLineCount();
      if (e2 < 1 || e2 > n2)
        throw new Error("Illegal value for startLineNumber");
      if (t2 < 1 || t2 > n2)
        throw new Error("Illegal value for endLineNumber");
      const i2 = De.a.getFoldingRules(this._languageIdentifier.id), r2 = Boolean(i2 && i2.offSide);
      let o2 = new Array(t2 - e2 + 1), s2 = -2, a2 = -1, l2 = -2, c2 = -1;
      for (let i3 = e2; i3 <= t2; i3++) {
        let t3 = i3 - e2;
        const d2 = this._computeIndentLevel(i3 - 1);
        if (d2 >= 0)
          s2 = i3 - 1, a2 = d2, o2[t3] = Math.ceil(d2 / this._options.indentSize);
        else {
          if (s2 === -2) {
            s2 = -1, a2 = -1;
            for (let e3 = i3 - 2; e3 >= 0; e3--) {
              let t4 = this._computeIndentLevel(e3);
              if (t4 >= 0) {
                s2 = e3, a2 = t4;
                break;
              }
            }
          }
          if (l2 !== -1 && (l2 === -2 || l2 < i3 - 1)) {
            l2 = -1, c2 = -1;
            for (let e3 = i3; e3 < n2; e3++) {
              let t4 = this._computeIndentLevel(e3);
              if (t4 >= 0) {
                l2 = e3, c2 = t4;
                break;
              }
            }
          }
          o2[t3] = this._getIndentLevelForWhitespaceLine(r2, a2, c2);
        }
      }
      return o2;
    }
    _getIndentLevelForWhitespaceLine(e2, t2, n2) {
      return t2 === -1 || n2 === -1 ? 0 : t2 < n2 ? 1 + Math.floor(t2 / this._options.indentSize) : t2 === n2 || e2 ? Math.ceil(n2 / this._options.indentSize) : 1 + Math.floor(n2 / this._options.indentSize);
    }
  }
  Ve.MODEL_SYNC_LIMIT = 52428800, Ve.LARGE_FILE_SIZE_THRESHOLD = 20971520, Ve.LARGE_FILE_LINE_COUNT_THRESHOLD = 3e5, Ve.DEFAULT_CREATION_OPTIONS = {isForSimpleWidget: false, tabSize: l.d.tabSize, indentSize: l.d.indentSize, insertSpaces: l.d.insertSpaces, detectIndentation: false, defaultEOL: 1, trimAutoWhitespace: l.d.trimAutoWhitespace, largeFileOptimizations: l.d.largeFileOptimizations};
  class Ue {
    constructor() {
      this._decorationsTree0 = new N(), this._decorationsTree1 = new N();
    }
    intervalSearch(e2, t2, n2, i2, r2) {
      const o2 = this._decorationsTree0.intervalSearch(e2, t2, n2, i2, r2), s2 = this._decorationsTree1.intervalSearch(e2, t2, n2, i2, r2);
      return o2.concat(s2);
    }
    search(e2, t2, n2, i2) {
      if (n2)
        return this._decorationsTree1.search(e2, t2, i2);
      {
        const n3 = this._decorationsTree0.search(e2, t2, i2), r2 = this._decorationsTree1.search(e2, t2, i2);
        return n3.concat(r2);
      }
    }
    collectNodesFromOwner(e2) {
      const t2 = this._decorationsTree0.collectNodesFromOwner(e2), n2 = this._decorationsTree1.collectNodesFromOwner(e2);
      return t2.concat(n2);
    }
    collectNodesPostOrder() {
      const e2 = this._decorationsTree0.collectNodesPostOrder(), t2 = this._decorationsTree1.collectNodesPostOrder();
      return e2.concat(t2);
    }
    insert(e2) {
      x(e2) ? this._decorationsTree1.insert(e2) : this._decorationsTree0.insert(e2);
    }
    delete(e2) {
      x(e2) ? this._decorationsTree1.delete(e2) : this._decorationsTree0.delete(e2);
    }
    resolveNode(e2, t2) {
      x(e2) ? this._decorationsTree1.resolveNode(e2, t2) : this._decorationsTree0.resolveNode(e2, t2);
    }
    acceptReplace(e2, t2, n2, i2) {
      this._decorationsTree0.acceptReplace(e2, t2, n2, i2), this._decorationsTree1.acceptReplace(e2, t2, n2, i2);
    }
  }
  function He(e2) {
    return e2.replace(/[^a-z0-9\-_]/gi, " ");
  }
  class qe {
    constructor(e2) {
      this.color = e2.color || "", this.darkColor = e2.darkColor || "";
    }
  }
  class $e extends qe {
    constructor(e2) {
      super(e2), this._resolvedColor = null, this.position = typeof e2.position == "number" ? e2.position : u.d.Center;
    }
    getColor(e2) {
      return this._resolvedColor || (e2.type !== "light" && this.darkColor ? this._resolvedColor = this._resolveColor(this.darkColor, e2) : this._resolvedColor = this._resolveColor(this.color, e2)), this._resolvedColor;
    }
    invalidateCachedColor() {
      this._resolvedColor = null;
    }
    _resolveColor(e2, t2) {
      if (typeof e2 == "string")
        return e2;
      let n2 = e2 ? t2.getColor(e2.id) : null;
      return n2 ? n2.toString() : "";
    }
  }
  class Ke extends qe {
    constructor(e2) {
      super(e2), this.position = e2.position;
    }
    getColor(e2) {
      return this._resolvedColor || (e2.type !== "light" && this.darkColor ? this._resolvedColor = this._resolveColor(this.darkColor, e2) : this._resolvedColor = this._resolveColor(this.color, e2)), this._resolvedColor;
    }
    invalidateCachedColor() {
      this._resolvedColor = void 0;
    }
    _resolveColor(e2, t2) {
      return typeof e2 == "string" ? Re.a.fromHex(e2) : t2.getColor(e2.id);
    }
  }
  class Ge {
    constructor(e2) {
      this.stickiness = e2.stickiness || 0, this.zIndex = e2.zIndex || 0, this.className = e2.className ? He(e2.className) : null, this.hoverMessage = e2.hoverMessage || null, this.glyphMarginHoverMessage = e2.glyphMarginHoverMessage || null, this.isWholeLine = e2.isWholeLine || false, this.showIfCollapsed = e2.showIfCollapsed || false, this.collapseOnReplaceEdit = e2.collapseOnReplaceEdit || false, this.overviewRuler = e2.overviewRuler ? new $e(e2.overviewRuler) : null, this.minimap = e2.minimap ? new Ke(e2.minimap) : null, this.glyphMarginClassName = e2.glyphMarginClassName ? He(e2.glyphMarginClassName) : null, this.linesDecorationsClassName = e2.linesDecorationsClassName ? He(e2.linesDecorationsClassName) : null, this.firstLineDecorationClassName = e2.firstLineDecorationClassName ? He(e2.firstLineDecorationClassName) : null, this.marginClassName = e2.marginClassName ? He(e2.marginClassName) : null, this.inlineClassName = e2.inlineClassName ? He(e2.inlineClassName) : null, this.inlineClassNameAffectsLetterSpacing = e2.inlineClassNameAffectsLetterSpacing || false, this.beforeContentClassName = e2.beforeContentClassName ? He(e2.beforeContentClassName) : null, this.afterContentClassName = e2.afterContentClassName ? He(e2.afterContentClassName) : null;
    }
    static register(e2) {
      return new Ge(e2);
    }
    static createDynamic(e2) {
      return new Ge(e2);
    }
  }
  Ge.EMPTY = Ge.register({});
  const Ye = [Ge.register({stickiness: 0}), Ge.register({stickiness: 1}), Ge.register({stickiness: 2}), Ge.register({stickiness: 3})];
  function Ze(e2) {
    return e2 instanceof Ge ? e2 : Ge.createDynamic(e2);
  }
  class Xe extends o.a {
    constructor() {
      super(), this._actual = this._register(new r.a()), this.event = this._actual.event, this._deferredCnt = 0, this._shouldFire = false, this._affectsMinimap = false, this._affectsOverviewRuler = false;
    }
    beginDeferredEmit() {
      this._deferredCnt++;
    }
    endDeferredEmit() {
      if (this._deferredCnt--, this._deferredCnt === 0 && this._shouldFire) {
        const e2 = {affectsMinimap: this._affectsMinimap, affectsOverviewRuler: this._affectsOverviewRuler};
        this._shouldFire = false, this._affectsMinimap = false, this._affectsOverviewRuler = false, this._actual.fire(e2);
      }
    }
    checkAffectedAndFire(e2) {
      this._affectsMinimap || (this._affectsMinimap = !(!e2.minimap || !e2.minimap.position)), this._affectsOverviewRuler || (this._affectsOverviewRuler = !(!e2.overviewRuler || !e2.overviewRuler.color)), this._shouldFire = true;
    }
    fire() {
      this._affectsMinimap = true, this._affectsOverviewRuler = true, this._shouldFire = true;
    }
  }
  class Qe extends o.a {
    constructor() {
      super(), this._fastEmitter = this._register(new r.a()), this.fastEvent = this._fastEmitter.event, this._slowEmitter = this._register(new r.a()), this.slowEvent = this._slowEmitter.event, this._deferredCnt = 0, this._deferredEvent = null;
    }
    beginDeferredEmit() {
      this._deferredCnt++;
    }
    endDeferredEmit(e2 = null) {
      if (this._deferredCnt--, this._deferredCnt === 0 && this._deferredEvent !== null) {
        this._deferredEvent.rawContentChangedEvent.resultingSelection = e2;
        const t2 = this._deferredEvent;
        this._deferredEvent = null, this._fastEmitter.fire(t2), this._slowEmitter.fire(t2);
      }
    }
    fire(e2) {
      this._deferredCnt > 0 ? this._deferredEvent ? this._deferredEvent = this._deferredEvent.merge(e2) : this._deferredEvent = e2 : (this._fastEmitter.fire(e2), this._slowEmitter.fire(e2));
    }
  }
}, function(e, t, n) {
  "use strict";
  function i(e2, t2) {
    return t2.length === 0 ? e2 : e2.replace(/\{(\d+)\}/g, function(e3, n2) {
      var i2 = n2[0];
      return t2[i2] !== void 0 ? t2[i2] : e3;
    });
  }
  function r(e2, t2) {
    for (var n2 = [], r2 = 2; r2 < arguments.length; r2++)
      n2[r2 - 2] = arguments[r2];
    return i(t2, n2);
  }
  function o(e2) {
    return r;
  }
  var s, a, l, c, d, h, u, p, m, g, f, b, _, v, w, y, C, x, S, k, E;
  n.d(t, "g", function() {
    return oe;
  }), n.d(t, "d", function() {
    return p;
  }), n.d(t, "b", function() {
    return f;
  }), n.d(t, "a", function() {
    return O;
  }), n.d(t, "e", function() {
    return A;
  }), n.d(t, "c", function() {
    return V;
  }), n.d(t, "f", function() {
    return H;
  }), n.d(t, "h", function() {
    return Mt;
  }), function(e2) {
    e2.create = function(e3, t2) {
      return {line: e3, character: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && ie.number(t2.line) && ie.number(t2.character);
    };
  }(s || (s = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      if (ie.number(e3) && ie.number(t2) && ie.number(n2) && ie.number(i2))
        return {start: s.create(e3, t2), end: s.create(n2, i2)};
      if (s.is(e3) && s.is(t2))
        return {start: e3, end: t2};
      throw new Error("Range#create called with invalid arguments[" + e3 + ", " + t2 + ", " + n2 + ", " + i2 + "]");
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && s.is(t2.start) && s.is(t2.end);
    };
  }(a || (a = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, range: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && a.is(t2.range) && (ie.string(t2.uri) || ie.undefined(t2.uri));
    };
  }(l || (l = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {targetUri: e3, targetRange: t2, targetSelectionRange: n2, originSelectionRange: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && a.is(t2.targetRange) && ie.string(t2.targetUri) && (a.is(t2.targetSelectionRange) || ie.undefined(t2.targetSelectionRange)) && (a.is(t2.originSelectionRange) || ie.undefined(t2.originSelectionRange));
    };
  }(c || (c = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {red: e3, green: t2, blue: n2, alpha: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.number(t2.red) && ie.number(t2.green) && ie.number(t2.blue) && ie.number(t2.alpha);
    };
  }(d || (d = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, color: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return a.is(t2.range) && d.is(t2.color);
    };
  }(h || (h = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {label: e3, textEdit: t2, additionalTextEdits: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.string(t2.label) && (ie.undefined(t2.textEdit) || y.is(t2)) && (ie.undefined(t2.additionalTextEdits) || ie.typedArray(t2.additionalTextEdits, y.is));
    };
  }(u || (u = {})), function(e2) {
    e2.Comment = "comment", e2.Imports = "imports", e2.Region = "region";
  }(p || (p = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {startLine: e3, endLine: t2};
      return ie.defined(n2) && (o2.startCharacter = n2), ie.defined(i2) && (o2.endCharacter = i2), ie.defined(r2) && (o2.kind = r2), o2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.number(t2.startLine) && ie.number(t2.startLine) && (ie.undefined(t2.startCharacter) || ie.number(t2.startCharacter)) && (ie.undefined(t2.endCharacter) || ie.number(t2.endCharacter)) && (ie.undefined(t2.kind) || ie.string(t2.kind));
    };
  }(m || (m = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {location: e3, message: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && l.is(t2.location) && ie.string(t2.message);
    };
  }(g || (g = {})), function(e2) {
    e2.Error = 1, e2.Warning = 2, e2.Information = 3, e2.Hint = 4;
  }(f || (f = {})), function(e2) {
    e2.Unnecessary = 1, e2.Deprecated = 2;
  }(b || (b = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return t2 != null && (ie.number(t2.value) || ie.string(t2.value)) && ie.string(t2.target);
    };
  }(_ || (_ = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {range: e3, message: t2};
      return ie.defined(n2) && (s2.severity = n2), ie.defined(i2) && (s2.code = i2), ie.defined(r2) && (s2.source = r2), ie.defined(o2) && (s2.relatedInformation = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && a.is(t2.range) && ie.string(t2.message) && (ie.number(t2.severity) || ie.undefined(t2.severity)) && (ie.number(t2.code) || ie.string(t2.code) || ie.undefined(t2.code)) && (ie.string(t2.source) || ie.undefined(t2.source)) && (ie.undefined(t2.relatedInformation) || ie.typedArray(t2.relatedInformation, g.is));
    };
  }(v || (v = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {title: e3, command: t2};
      return ie.defined(n2) && n2.length > 0 && (r2.arguments = n2), r2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.title) && ie.string(t2.command);
    };
  }(w || (w = {})), function(e2) {
    e2.replace = function(e3, t2) {
      return {range: e3, newText: t2};
    }, e2.insert = function(e3, t2) {
      return {range: {start: e3, end: e3}, newText: t2};
    }, e2.del = function(e3) {
      return {range: e3, newText: ""};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && ie.string(t2.newText) && a.is(t2.range);
    };
  }(y || (y = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {textDocument: e3, edits: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && L.is(t2.textDocument) && Array.isArray(t2.edits);
    };
  }(C || (C = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "create", uri: e3};
      return t2 === void 0 || t2.overwrite === void 0 && t2.ignoreIfExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "create" && ie.string(t2.uri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || ie.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || ie.boolean(t2.options.ignoreIfExists)));
    };
  }(x || (x = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {kind: "rename", oldUri: e3, newUri: t2};
      return n2 === void 0 || n2.overwrite === void 0 && n2.ignoreIfExists === void 0 || (i2.options = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "rename" && ie.string(t2.oldUri) && ie.string(t2.newUri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || ie.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || ie.boolean(t2.options.ignoreIfExists)));
    };
  }(S || (S = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "delete", uri: e3};
      return t2 === void 0 || t2.recursive === void 0 && t2.ignoreIfNotExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "delete" && ie.string(t2.uri) && (t2.options === void 0 || (t2.options.recursive === void 0 || ie.boolean(t2.options.recursive)) && (t2.options.ignoreIfNotExists === void 0 || ie.boolean(t2.options.ignoreIfNotExists)));
    };
  }(k || (k = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return t2 && (t2.changes !== void 0 || t2.documentChanges !== void 0) && (t2.documentChanges === void 0 || t2.documentChanges.every(function(e4) {
        return ie.string(e4.kind) ? x.is(e4) || S.is(e4) || k.is(e4) : C.is(e4);
      }));
    };
  }(E || (E = {}));
  var T, L, N, I, D, O, A, R, M, P, F, W, z, B, j, V, U, H, q, $, K, G, Y, Z, X, Q, J, ee, te = function() {
    function e2(e3) {
      this.edits = e3;
    }
    return e2.prototype.insert = function(e3, t2) {
      this.edits.push(y.insert(e3, t2));
    }, e2.prototype.replace = function(e3, t2) {
      this.edits.push(y.replace(e3, t2));
    }, e2.prototype.delete = function(e3) {
      this.edits.push(y.del(e3));
    }, e2.prototype.add = function(e3) {
      this.edits.push(e3);
    }, e2.prototype.all = function() {
      return this.edits;
    }, e2.prototype.clear = function() {
      this.edits.splice(0, this.edits.length);
    }, e2;
  }();
  !function() {
    function e2(e3) {
      var t2 = this;
      this._textEditChanges = Object.create(null), e3 && (this._workspaceEdit = e3, e3.documentChanges ? e3.documentChanges.forEach(function(e4) {
        if (C.is(e4)) {
          var n2 = new te(e4.edits);
          t2._textEditChanges[e4.textDocument.uri] = n2;
        }
      }) : e3.changes && Object.keys(e3.changes).forEach(function(n2) {
        var i2 = new te(e3.changes[n2]);
        t2._textEditChanges[n2] = i2;
      }));
    }
    Object.defineProperty(e2.prototype, "edit", {get: function() {
      return this._workspaceEdit === void 0 ? {documentChanges: []} : this._workspaceEdit;
    }, enumerable: true, configurable: true}), e2.prototype.getTextEditChange = function(e3) {
      if (L.is(e3)) {
        if (this._workspaceEdit || (this._workspaceEdit = {documentChanges: []}), !this._workspaceEdit.documentChanges)
          throw new Error("Workspace edit is not configured for document changes.");
        var t2 = e3;
        if (!(i2 = this._textEditChanges[t2.uri])) {
          var n2 = {textDocument: t2, edits: r2 = []};
          this._workspaceEdit.documentChanges.push(n2), i2 = new te(r2), this._textEditChanges[t2.uri] = i2;
        }
        return i2;
      }
      if (this._workspaceEdit || (this._workspaceEdit = {changes: Object.create(null)}), !this._workspaceEdit.changes)
        throw new Error("Workspace edit is not configured for normal text edit changes.");
      var i2;
      if (!(i2 = this._textEditChanges[e3])) {
        var r2 = [];
        this._workspaceEdit.changes[e3] = r2, i2 = new te(r2), this._textEditChanges[e3] = i2;
      }
      return i2;
    }, e2.prototype.createFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(x.create(e3, t2));
    }, e2.prototype.renameFile = function(e3, t2, n2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(S.create(e3, t2, n2));
    }, e2.prototype.deleteFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(k.create(e3, t2));
    }, e2.prototype.checkDocumentChanges = function() {
      if (!this._workspaceEdit || !this._workspaceEdit.documentChanges)
        throw new Error("Workspace edit is not configured for document changes.");
    };
  }();
  !function(e2) {
    e2.create = function(e3) {
      return {uri: e3};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri);
    };
  }(T || (T = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, version: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri) && (t2.version === null || ie.number(t2.version));
    };
  }(L || (L = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {uri: e3, languageId: t2, version: n2, text: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri) && ie.string(t2.languageId) && ie.number(t2.version) && ie.string(t2.text);
    };
  }(N || (N = {})), function(e2) {
    e2.PlainText = "plaintext", e2.Markdown = "markdown";
  }(I || (I = {})), function(e2) {
    e2.is = function(t2) {
      var n2 = t2;
      return n2 === e2.PlainText || n2 === e2.Markdown;
    };
  }(I || (I = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(e3) && I.is(t2.kind) && ie.string(t2.value);
    };
  }(D || (D = {})), function(e2) {
    e2.Text = 1, e2.Method = 2, e2.Function = 3, e2.Constructor = 4, e2.Field = 5, e2.Variable = 6, e2.Class = 7, e2.Interface = 8, e2.Module = 9, e2.Property = 10, e2.Unit = 11, e2.Value = 12, e2.Enum = 13, e2.Keyword = 14, e2.Snippet = 15, e2.Color = 16, e2.File = 17, e2.Reference = 18, e2.Folder = 19, e2.EnumMember = 20, e2.Constant = 21, e2.Struct = 22, e2.Event = 23, e2.Operator = 24, e2.TypeParameter = 25;
  }(O || (O = {})), function(e2) {
    e2.PlainText = 1, e2.Snippet = 2;
  }(A || (A = {})), function(e2) {
    e2.Deprecated = 1;
  }(R || (R = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {newText: e3, insert: t2, replace: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && ie.string(t2.newText) && a.is(t2.insert) && a.is(t2.replace);
    };
  }(M || (M = {})), function(e2) {
    e2.create = function(e3) {
      return {label: e3};
    };
  }(P || (P = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {items: e3 || [], isIncomplete: !!t2};
    };
  }(F || (F = {})), function(e2) {
    e2.fromPlainText = function(e3) {
      return e3.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.string(t2) || ie.objectLiteral(t2) && ie.string(t2.language) && ie.string(t2.value);
    };
  }(W || (W = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return !!t2 && ie.objectLiteral(t2) && (D.is(t2.contents) || W.is(t2.contents) || ie.typedArray(t2.contents, W.is)) && (e3.range === void 0 || a.is(e3.range));
    };
  }(z || (z = {})), function(e2) {
    e2.create = function(e3, t2) {
      return t2 ? {label: e3, documentation: t2} : {label: e3};
    };
  }(B || (B = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {label: e3};
      return ie.defined(t2) && (r2.documentation = t2), ie.defined(n2) ? r2.parameters = n2 : r2.parameters = [], r2;
    };
  }(j || (j = {})), function(e2) {
    e2.Text = 1, e2.Read = 2, e2.Write = 3;
  }(V || (V = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return ie.number(t2) && (n2.kind = t2), n2;
    };
  }(U || (U = {})), function(e2) {
    e2.File = 1, e2.Module = 2, e2.Namespace = 3, e2.Package = 4, e2.Class = 5, e2.Method = 6, e2.Property = 7, e2.Field = 8, e2.Constructor = 9, e2.Enum = 10, e2.Interface = 11, e2.Function = 12, e2.Variable = 13, e2.Constant = 14, e2.String = 15, e2.Number = 16, e2.Boolean = 17, e2.Array = 18, e2.Object = 19, e2.Key = 20, e2.Null = 21, e2.EnumMember = 22, e2.Struct = 23, e2.Event = 24, e2.Operator = 25, e2.TypeParameter = 26;
  }(H || (H = {})), function(e2) {
    e2.Deprecated = 1;
  }(q || (q = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {name: e3, kind: t2, location: {uri: i2, range: n2}};
      return r2 && (o2.containerName = r2), o2;
    };
  }($ || ($ = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {name: e3, detail: t2, kind: n2, range: i2, selectionRange: r2};
      return o2 !== void 0 && (s2.children = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && ie.string(t2.name) && ie.number(t2.kind) && a.is(t2.range) && a.is(t2.selectionRange) && (t2.detail === void 0 || ie.string(t2.detail)) && (t2.deprecated === void 0 || ie.boolean(t2.deprecated)) && (t2.children === void 0 || Array.isArray(t2.children)) && (t2.tags === void 0 || Array.isArray(t2.tags));
    };
  }(K || (K = {})), function(e2) {
    e2.Empty = "", e2.QuickFix = "quickfix", e2.Refactor = "refactor", e2.RefactorExtract = "refactor.extract", e2.RefactorInline = "refactor.inline", e2.RefactorRewrite = "refactor.rewrite", e2.Source = "source", e2.SourceOrganizeImports = "source.organizeImports", e2.SourceFixAll = "source.fixAll";
  }(G || (G = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {diagnostics: e3};
      return t2 != null && (n2.only = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.typedArray(t2.diagnostics, v.is) && (t2.only === void 0 || ie.typedArray(t2.only, ie.string));
    };
  }(Y || (Y = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {title: e3};
      return w.is(t2) ? i2.command = t2 : i2.edit = t2, n2 !== void 0 && (i2.kind = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && ie.string(t2.title) && (t2.diagnostics === void 0 || ie.typedArray(t2.diagnostics, v.is)) && (t2.kind === void 0 || ie.string(t2.kind)) && (t2.edit !== void 0 || t2.command !== void 0) && (t2.command === void 0 || w.is(t2.command)) && (t2.isPreferred === void 0 || ie.boolean(t2.isPreferred)) && (t2.edit === void 0 || E.is(t2.edit));
    };
  }(Z || (Z = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return ie.defined(t2) && (n2.data = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && a.is(t2.range) && (ie.undefined(t2.command) || w.is(t2.command));
    };
  }(X || (X = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {tabSize: e3, insertSpaces: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.number(t2.tabSize) && ie.boolean(t2.insertSpaces);
    };
  }(Q || (Q = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {range: e3, target: t2, data: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && a.is(t2.range) && (ie.undefined(t2.target) || ie.string(t2.target));
    };
  }(J || (J = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, parent: t2};
    }, e2.is = function(t2) {
      var n2 = t2;
      return n2 !== void 0 && a.is(n2.range) && (n2.parent === void 0 || e2.is(n2.parent));
    };
  }(ee || (ee = {}));
  var ne;
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new re(e3, t2, n2, i2);
    }, e2.is = function(e3) {
      var t2 = e3;
      return !!(ie.defined(t2) && ie.string(t2.uri) && (ie.undefined(t2.languageId) || ie.string(t2.languageId)) && ie.number(t2.lineCount) && ie.func(t2.getText) && ie.func(t2.positionAt) && ie.func(t2.offsetAt));
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2, function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }), r2 = n2.length, o2 = i2.length - 1; o2 >= 0; o2--) {
        var s2 = i2[o2], a2 = e3.offsetAt(s2.range.start), l2 = e3.offsetAt(s2.range.end);
        if (!(l2 <= r2))
          throw new Error("Overlapping edit");
        n2 = n2.substring(0, a2) + s2.newText + n2.substring(l2, n2.length), r2 = a2;
      }
      return n2;
    };
  }(ne || (ne = {}));
  var ie, re = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(e3, t2) {
      this._content = e3.text, this._version = t2, this._lineOffsets = void 0;
    }, e2.prototype.getLineOffsets = function() {
      if (this._lineOffsets === void 0) {
        for (var e3 = [], t2 = this._content, n2 = true, i2 = 0; i2 < t2.length; i2++) {
          n2 && (e3.push(i2), n2 = false);
          var r2 = t2.charAt(i2);
          n2 = r2 === "\r" || r2 === "\n", r2 === "\r" && i2 + 1 < t2.length && t2.charAt(i2 + 1) === "\n" && i2++;
        }
        n2 && t2.length > 0 && e3.push(t2.length), this._lineOffsets = e3;
      }
      return this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, i2 = t2.length;
      if (i2 === 0)
        return s.create(0, e3);
      for (; n2 < i2; ) {
        var r2 = Math.floor((n2 + i2) / 2);
        t2[r2] > e3 ? i2 = r2 : n2 = r2 + 1;
      }
      var o2 = n2 - 1;
      return s.create(o2, e3 - t2[o2]);
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2;
  }();
  !function(e2) {
    var t2 = Object.prototype.toString;
    e2.defined = function(e3) {
      return e3 !== void 0;
    }, e2.undefined = function(e3) {
      return e3 === void 0;
    }, e2.boolean = function(e3) {
      return e3 === true || e3 === false;
    }, e2.string = function(e3) {
      return t2.call(e3) === "[object String]";
    }, e2.number = function(e3) {
      return t2.call(e3) === "[object Number]";
    }, e2.func = function(e3) {
      return t2.call(e3) === "[object Function]";
    }, e2.objectLiteral = function(e3) {
      return e3 !== null && typeof e3 == "object";
    }, e2.typedArray = function(e3, t3) {
      return Array.isArray(e3) && e3.every(t3);
    };
  }(ie || (ie = {}));
  var oe, se, ae, le, ce, de = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(t2, n2) {
      for (var i2 = 0, r2 = t2; i2 < r2.length; i2++) {
        var o2 = r2[i2];
        if (e2.isIncremental(o2)) {
          var s2 = ue(o2.range), a2 = this.offsetAt(s2.start), l2 = this.offsetAt(s2.end);
          this._content = this._content.substring(0, a2) + o2.text + this._content.substring(l2, this._content.length);
          var c2 = Math.max(s2.start.line, 0), d2 = Math.max(s2.end.line, 0), h2 = this._lineOffsets, u2 = he(o2.text, false, a2);
          if (d2 - c2 === u2.length)
            for (var p2 = 0, m2 = u2.length; p2 < m2; p2++)
              h2[p2 + c2 + 1] = u2[p2];
          else
            u2.length < 1e4 ? h2.splice.apply(h2, [c2 + 1, d2 - c2].concat(u2)) : this._lineOffsets = h2 = h2.slice(0, c2 + 1).concat(u2, h2.slice(d2 + 1));
          var g2 = o2.text.length - (l2 - a2);
          if (g2 !== 0)
            for (p2 = c2 + 1 + u2.length, m2 = h2.length; p2 < m2; p2++)
              h2[p2] = h2[p2] + g2;
        } else {
          if (!e2.isFull(o2))
            throw new Error("Unknown change event received");
          this._content = o2.text, this._lineOffsets = void 0;
        }
      }
      this._version = n2;
    }, e2.prototype.getLineOffsets = function() {
      return this._lineOffsets === void 0 && (this._lineOffsets = he(this._content, true)), this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, i2 = t2.length;
      if (i2 === 0)
        return {line: 0, character: e3};
      for (; n2 < i2; ) {
        var r2 = Math.floor((n2 + i2) / 2);
        t2[r2] > e3 ? i2 = r2 : n2 = r2 + 1;
      }
      var o2 = n2 - 1;
      return {line: o2, character: e3 - t2[o2]};
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2.isIncremental = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range !== void 0 && (t2.rangeLength === void 0 || typeof t2.rangeLength == "number");
    }, e2.isFull = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range === void 0 && t2.rangeLength === void 0;
    }, e2;
  }();
  function he(e2, t2, n2) {
    n2 === void 0 && (n2 = 0);
    for (var i2 = t2 ? [n2] : [], r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charCodeAt(r2);
      o2 !== 13 && o2 !== 10 || (o2 === 13 && r2 + 1 < e2.length && e2.charCodeAt(r2 + 1) === 10 && r2++, i2.push(n2 + r2 + 1));
    }
    return i2;
  }
  function ue(e2) {
    var t2 = e2.start, n2 = e2.end;
    return t2.line > n2.line || t2.line === n2.line && t2.character > n2.character ? {start: n2, end: t2} : e2;
  }
  function pe(e2) {
    var t2 = ue(e2.range);
    return t2 !== e2.range ? {newText: e2.newText, range: t2} : e2;
  }
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new de(e3, t2, n2, i2);
    }, e2.update = function(e3, t2, n2) {
      if (e3 instanceof de)
        return e3.update(t2, n2), e3;
      throw new Error("TextDocument.update: document must be created by TextDocument.create");
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = 0, r2 = [], o2 = 0, s2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2.map(pe), function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }); o2 < s2.length; o2++) {
        var a2 = s2[o2], l2 = e3.offsetAt(a2.range.start);
        if (l2 < i2)
          throw new Error("Overlapping edit");
        l2 > i2 && r2.push(n2.substring(i2, l2)), a2.newText.length && r2.push(a2.newText), i2 = e3.offsetAt(a2.range.end);
      }
      return r2.push(n2.substr(i2)), r2.join("");
    };
  }(oe || (oe = {})), function(e2) {
    e2[e2.StartCommentTag = 0] = "StartCommentTag", e2[e2.Comment = 1] = "Comment", e2[e2.EndCommentTag = 2] = "EndCommentTag", e2[e2.StartTagOpen = 3] = "StartTagOpen", e2[e2.StartTagClose = 4] = "StartTagClose", e2[e2.StartTagSelfClose = 5] = "StartTagSelfClose", e2[e2.StartTag = 6] = "StartTag", e2[e2.EndTagOpen = 7] = "EndTagOpen", e2[e2.EndTagClose = 8] = "EndTagClose", e2[e2.EndTag = 9] = "EndTag", e2[e2.DelimiterAssign = 10] = "DelimiterAssign", e2[e2.AttributeName = 11] = "AttributeName", e2[e2.AttributeValue = 12] = "AttributeValue", e2[e2.StartDoctypeTag = 13] = "StartDoctypeTag", e2[e2.Doctype = 14] = "Doctype", e2[e2.EndDoctypeTag = 15] = "EndDoctypeTag", e2[e2.Content = 16] = "Content", e2[e2.Whitespace = 17] = "Whitespace", e2[e2.Unknown = 18] = "Unknown", e2[e2.Script = 19] = "Script", e2[e2.Styles = 20] = "Styles", e2[e2.EOS = 21] = "EOS";
  }(se || (se = {})), function(e2) {
    e2[e2.WithinContent = 0] = "WithinContent", e2[e2.AfterOpeningStartTag = 1] = "AfterOpeningStartTag", e2[e2.AfterOpeningEndTag = 2] = "AfterOpeningEndTag", e2[e2.WithinDoctype = 3] = "WithinDoctype", e2[e2.WithinTag = 4] = "WithinTag", e2[e2.WithinEndTag = 5] = "WithinEndTag", e2[e2.WithinComment = 6] = "WithinComment", e2[e2.WithinScriptContent = 7] = "WithinScriptContent", e2[e2.WithinStyleContent = 8] = "WithinStyleContent", e2[e2.AfterAttributeName = 9] = "AfterAttributeName", e2[e2.BeforeAttributeValue = 10] = "BeforeAttributeValue";
  }(ae || (ae = {})), (le || (le = {})).LATEST = {textDocument: {completion: {completionItem: {documentationFormat: [I.Markdown, I.PlainText]}}, hover: {contentFormat: [I.Markdown, I.PlainText]}}}, function(e2) {
    e2[e2.Unknown = 0] = "Unknown", e2[e2.File = 1] = "File", e2[e2.Directory = 2] = "Directory", e2[e2.SymbolicLink = 64] = "SymbolicLink";
  }(ce || (ce = {}));
  var me = o(), ge = function() {
    function e2(e3, t2) {
      this.source = e3, this.len = e3.length, this.position = t2;
    }
    return e2.prototype.eos = function() {
      return this.len <= this.position;
    }, e2.prototype.getSource = function() {
      return this.source;
    }, e2.prototype.pos = function() {
      return this.position;
    }, e2.prototype.goBackTo = function(e3) {
      this.position = e3;
    }, e2.prototype.goBack = function(e3) {
      this.position -= e3;
    }, e2.prototype.advance = function(e3) {
      this.position += e3;
    }, e2.prototype.goToEnd = function() {
      this.position = this.source.length;
    }, e2.prototype.nextChar = function() {
      return this.source.charCodeAt(this.position++) || 0;
    }, e2.prototype.peekChar = function(e3) {
      return e3 === void 0 && (e3 = 0), this.source.charCodeAt(this.position + e3) || 0;
    }, e2.prototype.advanceIfChar = function(e3) {
      return e3 === this.source.charCodeAt(this.position) && (this.position++, true);
    }, e2.prototype.advanceIfChars = function(e3) {
      var t2;
      if (this.position + e3.length > this.source.length)
        return false;
      for (t2 = 0; t2 < e3.length; t2++)
        if (this.source.charCodeAt(this.position + t2) !== e3[t2])
          return false;
      return this.advance(t2), true;
    }, e2.prototype.advanceIfRegExp = function(e3) {
      var t2 = this.source.substr(this.position).match(e3);
      return t2 ? (this.position = this.position + t2.index + t2[0].length, t2[0]) : "";
    }, e2.prototype.advanceUntilRegExp = function(e3) {
      var t2 = this.source.substr(this.position).match(e3);
      return t2 ? (this.position = this.position + t2.index, t2[0]) : (this.goToEnd(), "");
    }, e2.prototype.advanceUntilChar = function(e3) {
      for (; this.position < this.source.length; ) {
        if (this.source.charCodeAt(this.position) === e3)
          return true;
        this.advance(1);
      }
      return false;
    }, e2.prototype.advanceUntilChars = function(e3) {
      for (; this.position + e3.length <= this.source.length; ) {
        for (var t2 = 0; t2 < e3.length && this.source.charCodeAt(this.position + t2) === e3[t2]; t2++)
          ;
        if (t2 === e3.length)
          return true;
        this.advance(1);
      }
      return this.goToEnd(), false;
    }, e2.prototype.skipWhitespace = function() {
      return this.advanceWhileChar(function(e3) {
        return e3 === Te || e3 === Le || e3 === Se || e3 === Ee || e3 === ke;
      }) > 0;
    }, e2.prototype.advanceWhileChar = function(e3) {
      for (var t2 = this.position; this.position < this.len && e3(this.source.charCodeAt(this.position)); )
        this.position++;
      return this.position - t2;
    }, e2;
  }(), fe = "!".charCodeAt(0), be = "-".charCodeAt(0), _e = "<".charCodeAt(0), ve = ">".charCodeAt(0), we = "/".charCodeAt(0), ye = "=".charCodeAt(0), Ce = '"'.charCodeAt(0), xe = "'".charCodeAt(0), Se = "\n".charCodeAt(0), ke = "\r".charCodeAt(0), Ee = "\f".charCodeAt(0), Te = " ".charCodeAt(0), Le = "	".charCodeAt(0), Ne = {"text/x-handlebars-template": true};
  function Ie(e2, t2, n2, i2) {
    t2 === void 0 && (t2 = 0), n2 === void 0 && (n2 = ae.WithinContent), i2 === void 0 && (i2 = false);
    var r2, o2, s2, a2, l2, c2 = new ge(e2, t2), d2 = n2, h2 = 0, u2 = se.Unknown;
    function p2() {
      return c2.advanceIfRegExp(/^[_:\w][_:\w-.\d]*/).toLowerCase();
    }
    function m2(e3, t3, n3) {
      return u2 = t3, h2 = e3, r2 = n3, t3;
    }
    return {scan: function() {
      var e3 = c2.pos(), t3 = d2, n3 = function e4() {
        var t4, n4 = c2.pos();
        if (c2.eos())
          return m2(n4, se.EOS);
        switch (d2) {
          case ae.WithinComment:
            return c2.advanceIfChars([be, be, ve]) ? (d2 = ae.WithinContent, m2(n4, se.EndCommentTag)) : (c2.advanceUntilChars([be, be, ve]), m2(n4, se.Comment));
          case ae.WithinDoctype:
            return c2.advanceIfChar(ve) ? (d2 = ae.WithinContent, m2(n4, se.EndDoctypeTag)) : (c2.advanceUntilChar(ve), m2(n4, se.Doctype));
          case ae.WithinContent:
            if (c2.advanceIfChar(_e)) {
              if (!c2.eos() && c2.peekChar() === fe) {
                if (c2.advanceIfChars([fe, be, be]))
                  return d2 = ae.WithinComment, m2(n4, se.StartCommentTag);
                if (c2.advanceIfRegExp(/^!doctype/i))
                  return d2 = ae.WithinDoctype, m2(n4, se.StartDoctypeTag);
              }
              return c2.advanceIfChar(we) ? (d2 = ae.AfterOpeningEndTag, m2(n4, se.EndTagOpen)) : (d2 = ae.AfterOpeningStartTag, m2(n4, se.StartTagOpen));
            }
            return c2.advanceUntilChar(_e), m2(n4, se.Content);
          case ae.AfterOpeningEndTag:
            return p2().length > 0 ? (d2 = ae.WithinEndTag, m2(n4, se.EndTag)) : c2.skipWhitespace() ? m2(n4, se.Whitespace, me("error.unexpectedWhitespace", "Tag name must directly follow the open bracket.")) : (d2 = ae.WithinEndTag, c2.advanceUntilChar(ve), n4 < c2.pos() ? m2(n4, se.Unknown, me("error.endTagNameExpected", "End tag name expected.")) : e4());
          case ae.WithinEndTag:
            if (c2.skipWhitespace())
              return m2(n4, se.Whitespace);
            if (c2.advanceIfChar(ve))
              return d2 = ae.WithinContent, m2(n4, se.EndTagClose);
            if (i2 && c2.peekChar() === _e)
              return d2 = ae.WithinContent, m2(n4, se.EndTagClose, me("error.closingBracketMissing", "Closing bracket missing."));
            t4 = me("error.closingBracketExpected", "Closing bracket expected.");
            break;
          case ae.AfterOpeningStartTag:
            return s2 = p2(), l2 = void 0, a2 = void 0, s2.length > 0 ? (o2 = false, d2 = ae.WithinTag, m2(n4, se.StartTag)) : c2.skipWhitespace() ? m2(n4, se.Whitespace, me("error.unexpectedWhitespace", "Tag name must directly follow the open bracket.")) : (d2 = ae.WithinTag, c2.advanceUntilChar(ve), n4 < c2.pos() ? m2(n4, se.Unknown, me("error.startTagNameExpected", "Start tag name expected.")) : e4());
          case ae.WithinTag:
            return c2.skipWhitespace() ? (o2 = true, m2(n4, se.Whitespace)) : o2 && (a2 = c2.advanceIfRegExp(/^[^\s"'></=\x00-\x0F\x7F\x80-\x9F]*/).toLowerCase()).length > 0 ? (d2 = ae.AfterAttributeName, o2 = false, m2(n4, se.AttributeName)) : c2.advanceIfChars([we, ve]) ? (d2 = ae.WithinContent, m2(n4, se.StartTagSelfClose)) : c2.advanceIfChar(ve) ? (d2 = s2 === "script" ? l2 && Ne[l2] ? ae.WithinContent : ae.WithinScriptContent : s2 === "style" ? ae.WithinStyleContent : ae.WithinContent, m2(n4, se.StartTagClose)) : i2 && c2.peekChar() === _e ? (d2 = ae.WithinContent, m2(n4, se.StartTagClose, me("error.closingBracketMissing", "Closing bracket missing."))) : (c2.advance(1), m2(n4, se.Unknown, me("error.unexpectedCharacterInTag", "Unexpected character in tag.")));
          case ae.AfterAttributeName:
            return c2.skipWhitespace() ? (o2 = true, m2(n4, se.Whitespace)) : c2.advanceIfChar(ye) ? (d2 = ae.BeforeAttributeValue, m2(n4, se.DelimiterAssign)) : (d2 = ae.WithinTag, e4());
          case ae.BeforeAttributeValue:
            if (c2.skipWhitespace())
              return m2(n4, se.Whitespace);
            var r3 = c2.advanceIfRegExp(/^[^\s"'`=<>]+/);
            if (r3.length > 0)
              return c2.peekChar() === ve && c2.peekChar(-1) === we && (c2.goBack(1), r3 = r3.substr(0, r3.length - 1)), a2 === "type" && (l2 = r3), d2 = ae.WithinTag, o2 = false, m2(n4, se.AttributeValue);
            var h3 = c2.peekChar();
            return h3 === xe || h3 === Ce ? (c2.advance(1), c2.advanceUntilChar(h3) && c2.advance(1), a2 === "type" && (l2 = c2.getSource().substring(n4 + 1, c2.pos() - 1)), d2 = ae.WithinTag, o2 = false, m2(n4, se.AttributeValue)) : (d2 = ae.WithinTag, o2 = false, e4());
          case ae.WithinScriptContent:
            for (var u3 = 1; !c2.eos(); ) {
              var g2 = c2.advanceIfRegExp(/<!--|-->|<\/?script\s*\/?>?/i);
              if (g2.length === 0)
                return c2.goToEnd(), m2(n4, se.Script);
              if (g2 === "<!--")
                u3 === 1 && (u3 = 2);
              else if (g2 === "-->")
                u3 = 1;
              else if (g2[1] !== "/")
                u3 === 2 && (u3 = 3);
              else {
                if (u3 !== 3) {
                  c2.goBack(g2.length);
                  break;
                }
                u3 = 2;
              }
            }
            return d2 = ae.WithinContent, n4 < c2.pos() ? m2(n4, se.Script) : e4();
          case ae.WithinStyleContent:
            return c2.advanceUntilRegExp(/<\/style/i), d2 = ae.WithinContent, n4 < c2.pos() ? m2(n4, se.Styles) : e4();
        }
        return c2.advance(1), d2 = ae.WithinContent, m2(n4, se.Unknown, t4);
      }();
      return n3 === se.EOS || e3 !== c2.pos() || i2 && (n3 === se.StartTagClose || n3 === se.EndTagClose) ? n3 : (console.log("Scanner.scan has not advanced at offset " + e3 + ", state before: " + t3 + " after: " + d2), c2.advance(1), m2(e3, se.Unknown));
    }, getTokenType: function() {
      return u2;
    }, getTokenOffset: function() {
      return h2;
    }, getTokenLength: function() {
      return c2.pos() - h2;
    }, getTokenEnd: function() {
      return c2.pos();
    }, getTokenText: function() {
      return c2.getSource().substring(h2, c2.pos());
    }, getScannerState: function() {
      return d2;
    }, getTokenError: function() {
      return r2;
    }};
  }
  function De(e2, t2) {
    var n2 = 0, i2 = e2.length;
    if (i2 === 0)
      return 0;
    for (; n2 < i2; ) {
      var r2 = Math.floor((n2 + i2) / 2);
      t2(e2[r2]) ? i2 = r2 : n2 = r2 + 1;
    }
    return n2;
  }
  var Oe = ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr"];
  function Ae(e2) {
    return !!e2 && function(e3, t2, n2) {
      for (var i2 = 0, r2 = e3.length - 1; i2 <= r2; ) {
        var o2 = (i2 + r2) / 2 | 0, s2 = n2(e3[o2], t2);
        if (s2 < 0)
          i2 = o2 + 1;
        else {
          if (!(s2 > 0))
            return o2;
          r2 = o2 - 1;
        }
      }
      return -(i2 + 1);
    }(Oe, e2.toLowerCase(), function(e3, t2) {
      return e3.localeCompare(t2);
    }) >= 0;
  }
  var Re = function() {
    function e2(e3, t2, n2, i2) {
      this.start = e3, this.end = t2, this.children = n2, this.parent = i2, this.closed = false;
    }
    return Object.defineProperty(e2.prototype, "attributeNames", {get: function() {
      return this.attributes ? Object.keys(this.attributes) : [];
    }, enumerable: false, configurable: true}), e2.prototype.isSameTag = function(e3) {
      return this.tag === void 0 ? e3 === void 0 : e3 !== void 0 && this.tag.length === e3.length && this.tag.toLowerCase() === e3;
    }, Object.defineProperty(e2.prototype, "firstChild", {get: function() {
      return this.children[0];
    }, enumerable: false, configurable: true}), Object.defineProperty(e2.prototype, "lastChild", {get: function() {
      return this.children.length ? this.children[this.children.length - 1] : void 0;
    }, enumerable: false, configurable: true}), e2.prototype.findNodeBefore = function(e3) {
      var t2 = De(this.children, function(t3) {
        return e3 <= t3.start;
      }) - 1;
      if (t2 >= 0) {
        var n2 = this.children[t2];
        if (e3 > n2.start) {
          if (e3 < n2.end)
            return n2.findNodeBefore(e3);
          var i2 = n2.lastChild;
          return i2 && i2.end === n2.end ? n2.findNodeBefore(e3) : n2;
        }
      }
      return this;
    }, e2.prototype.findNodeAt = function(e3) {
      var t2 = De(this.children, function(t3) {
        return e3 <= t3.start;
      }) - 1;
      if (t2 >= 0) {
        var n2 = this.children[t2];
        if (e3 > n2.start && e3 <= n2.end)
          return n2.findNodeAt(e3);
      }
      return this;
    }, e2;
  }();
  function Me(e2) {
    for (var t2 = Ie(e2, void 0, void 0, true), n2 = new Re(0, e2.length, [], void 0), i2 = n2, r2 = -1, o2 = void 0, s2 = null, a2 = t2.scan(); a2 !== se.EOS; ) {
      switch (a2) {
        case se.StartTagOpen:
          var l2 = new Re(t2.getTokenOffset(), e2.length, [], i2);
          i2.children.push(l2), i2 = l2;
          break;
        case se.StartTag:
          i2.tag = t2.getTokenText();
          break;
        case se.StartTagClose:
          i2.parent && (i2.end = t2.getTokenEnd(), t2.getTokenLength() ? (i2.startTagEnd = t2.getTokenEnd(), i2.tag && Ae(i2.tag) && (i2.closed = true, i2 = i2.parent)) : i2 = i2.parent);
          break;
        case se.StartTagSelfClose:
          i2.parent && (i2.closed = true, i2.end = t2.getTokenEnd(), i2.startTagEnd = t2.getTokenEnd(), i2 = i2.parent);
          break;
        case se.EndTagOpen:
          r2 = t2.getTokenOffset(), o2 = void 0;
          break;
        case se.EndTag:
          o2 = t2.getTokenText().toLowerCase();
          break;
        case se.EndTagClose:
          for (var c2 = i2; !c2.isSameTag(o2) && c2.parent; )
            c2 = c2.parent;
          if (c2.parent) {
            for (; i2 !== c2; )
              i2.end = r2, i2.closed = false, i2 = i2.parent;
            i2.closed = true, i2.endTagStart = r2, i2.end = t2.getTokenEnd(), i2 = i2.parent;
          }
          break;
        case se.AttributeName:
          s2 = t2.getTokenText(), (d2 = i2.attributes) || (i2.attributes = d2 = {}), d2[s2] = null;
          break;
        case se.AttributeValue:
          var d2, h2 = t2.getTokenText();
          (d2 = i2.attributes) && s2 && (d2[s2] = h2, s2 = null);
      }
      a2 = t2.scan();
    }
    for (; i2.parent; )
      i2.end = e2.length, i2.closed = false, i2 = i2.parent;
    return {roots: n2.children, findNodeBefore: n2.findNodeBefore.bind(n2), findNodeAt: n2.findNodeAt.bind(n2)};
  }
  var Pe = {"Aacute;": "\xC1", Aacute: "\xC1", "aacute;": "\xE1", aacute: "\xE1", "Abreve;": "\u0102", "abreve;": "\u0103", "ac;": "\u223E", "acd;": "\u223F", "acE;": "\u223E\u0333", "Acirc;": "\xC2", Acirc: "\xC2", "acirc;": "\xE2", acirc: "\xE2", "acute;": "\xB4", acute: "\xB4", "Acy;": "\u0410", "acy;": "\u0430", "AElig;": "\xC6", AElig: "\xC6", "aelig;": "\xE6", aelig: "\xE6", "af;": "\u2061", "Afr;": "\u{1D504}", "afr;": "\u{1D51E}", "Agrave;": "\xC0", Agrave: "\xC0", "agrave;": "\xE0", agrave: "\xE0", "alefsym;": "\u2135", "aleph;": "\u2135", "Alpha;": "\u0391", "alpha;": "\u03B1", "Amacr;": "\u0100", "amacr;": "\u0101", "amalg;": "\u2A3F", "AMP;": "&", AMP: "&", "amp;": "&", amp: "&", "And;": "\u2A53", "and;": "\u2227", "andand;": "\u2A55", "andd;": "\u2A5C", "andslope;": "\u2A58", "andv;": "\u2A5A", "ang;": "\u2220", "ange;": "\u29A4", "angle;": "\u2220", "angmsd;": "\u2221", "angmsdaa;": "\u29A8", "angmsdab;": "\u29A9", "angmsdac;": "\u29AA", "angmsdad;": "\u29AB", "angmsdae;": "\u29AC", "angmsdaf;": "\u29AD", "angmsdag;": "\u29AE", "angmsdah;": "\u29AF", "angrt;": "\u221F", "angrtvb;": "\u22BE", "angrtvbd;": "\u299D", "angsph;": "\u2222", "angst;": "\xC5", "angzarr;": "\u237C", "Aogon;": "\u0104", "aogon;": "\u0105", "Aopf;": "\u{1D538}", "aopf;": "\u{1D552}", "ap;": "\u2248", "apacir;": "\u2A6F", "apE;": "\u2A70", "ape;": "\u224A", "apid;": "\u224B", "apos;": "'", "ApplyFunction;": "\u2061", "approx;": "\u2248", "approxeq;": "\u224A", "Aring;": "\xC5", Aring: "\xC5", "aring;": "\xE5", aring: "\xE5", "Ascr;": "\u{1D49C}", "ascr;": "\u{1D4B6}", "Assign;": "\u2254", "ast;": "*", "asymp;": "\u2248", "asympeq;": "\u224D", "Atilde;": "\xC3", Atilde: "\xC3", "atilde;": "\xE3", atilde: "\xE3", "Auml;": "\xC4", Auml: "\xC4", "auml;": "\xE4", auml: "\xE4", "awconint;": "\u2233", "awint;": "\u2A11", "backcong;": "\u224C", "backepsilon;": "\u03F6", "backprime;": "\u2035", "backsim;": "\u223D", "backsimeq;": "\u22CD", "Backslash;": "\u2216", "Barv;": "\u2AE7", "barvee;": "\u22BD", "Barwed;": "\u2306", "barwed;": "\u2305", "barwedge;": "\u2305", "bbrk;": "\u23B5", "bbrktbrk;": "\u23B6", "bcong;": "\u224C", "Bcy;": "\u0411", "bcy;": "\u0431", "bdquo;": "\u201E", "becaus;": "\u2235", "Because;": "\u2235", "because;": "\u2235", "bemptyv;": "\u29B0", "bepsi;": "\u03F6", "bernou;": "\u212C", "Bernoullis;": "\u212C", "Beta;": "\u0392", "beta;": "\u03B2", "beth;": "\u2136", "between;": "\u226C", "Bfr;": "\u{1D505}", "bfr;": "\u{1D51F}", "bigcap;": "\u22C2", "bigcirc;": "\u25EF", "bigcup;": "\u22C3", "bigodot;": "\u2A00", "bigoplus;": "\u2A01", "bigotimes;": "\u2A02", "bigsqcup;": "\u2A06", "bigstar;": "\u2605", "bigtriangledown;": "\u25BD", "bigtriangleup;": "\u25B3", "biguplus;": "\u2A04", "bigvee;": "\u22C1", "bigwedge;": "\u22C0", "bkarow;": "\u290D", "blacklozenge;": "\u29EB", "blacksquare;": "\u25AA", "blacktriangle;": "\u25B4", "blacktriangledown;": "\u25BE", "blacktriangleleft;": "\u25C2", "blacktriangleright;": "\u25B8", "blank;": "\u2423", "blk12;": "\u2592", "blk14;": "\u2591", "blk34;": "\u2593", "block;": "\u2588", "bne;": "=\u20E5", "bnequiv;": "\u2261\u20E5", "bNot;": "\u2AED", "bnot;": "\u2310", "Bopf;": "\u{1D539}", "bopf;": "\u{1D553}", "bot;": "\u22A5", "bottom;": "\u22A5", "bowtie;": "\u22C8", "boxbox;": "\u29C9", "boxDL;": "\u2557", "boxDl;": "\u2556", "boxdL;": "\u2555", "boxdl;": "\u2510", "boxDR;": "\u2554", "boxDr;": "\u2553", "boxdR;": "\u2552", "boxdr;": "\u250C", "boxH;": "\u2550", "boxh;": "\u2500", "boxHD;": "\u2566", "boxHd;": "\u2564", "boxhD;": "\u2565", "boxhd;": "\u252C", "boxHU;": "\u2569", "boxHu;": "\u2567", "boxhU;": "\u2568", "boxhu;": "\u2534", "boxminus;": "\u229F", "boxplus;": "\u229E", "boxtimes;": "\u22A0", "boxUL;": "\u255D", "boxUl;": "\u255C", "boxuL;": "\u255B", "boxul;": "\u2518", "boxUR;": "\u255A", "boxUr;": "\u2559", "boxuR;": "\u2558", "boxur;": "\u2514", "boxV;": "\u2551", "boxv;": "\u2502", "boxVH;": "\u256C", "boxVh;": "\u256B", "boxvH;": "\u256A", "boxvh;": "\u253C", "boxVL;": "\u2563", "boxVl;": "\u2562", "boxvL;": "\u2561", "boxvl;": "\u2524", "boxVR;": "\u2560", "boxVr;": "\u255F", "boxvR;": "\u255E", "boxvr;": "\u251C", "bprime;": "\u2035", "Breve;": "\u02D8", "breve;": "\u02D8", "brvbar;": "\xA6", brvbar: "\xA6", "Bscr;": "\u212C", "bscr;": "\u{1D4B7}", "bsemi;": "\u204F", "bsim;": "\u223D", "bsime;": "\u22CD", "bsol;": "\\", "bsolb;": "\u29C5", "bsolhsub;": "\u27C8", "bull;": "\u2022", "bullet;": "\u2022", "bump;": "\u224E", "bumpE;": "\u2AAE", "bumpe;": "\u224F", "Bumpeq;": "\u224E", "bumpeq;": "\u224F", "Cacute;": "\u0106", "cacute;": "\u0107", "Cap;": "\u22D2", "cap;": "\u2229", "capand;": "\u2A44", "capbrcup;": "\u2A49", "capcap;": "\u2A4B", "capcup;": "\u2A47", "capdot;": "\u2A40", "CapitalDifferentialD;": "\u2145", "caps;": "\u2229\uFE00", "caret;": "\u2041", "caron;": "\u02C7", "Cayleys;": "\u212D", "ccaps;": "\u2A4D", "Ccaron;": "\u010C", "ccaron;": "\u010D", "Ccedil;": "\xC7", Ccedil: "\xC7", "ccedil;": "\xE7", ccedil: "\xE7", "Ccirc;": "\u0108", "ccirc;": "\u0109", "Cconint;": "\u2230", "ccups;": "\u2A4C", "ccupssm;": "\u2A50", "Cdot;": "\u010A", "cdot;": "\u010B", "cedil;": "\xB8", cedil: "\xB8", "Cedilla;": "\xB8", "cemptyv;": "\u29B2", "cent;": "\xA2", cent: "\xA2", "CenterDot;": "\xB7", "centerdot;": "\xB7", "Cfr;": "\u212D", "cfr;": "\u{1D520}", "CHcy;": "\u0427", "chcy;": "\u0447", "check;": "\u2713", "checkmark;": "\u2713", "Chi;": "\u03A7", "chi;": "\u03C7", "cir;": "\u25CB", "circ;": "\u02C6", "circeq;": "\u2257", "circlearrowleft;": "\u21BA", "circlearrowright;": "\u21BB", "circledast;": "\u229B", "circledcirc;": "\u229A", "circleddash;": "\u229D", "CircleDot;": "\u2299", "circledR;": "\xAE", "circledS;": "\u24C8", "CircleMinus;": "\u2296", "CirclePlus;": "\u2295", "CircleTimes;": "\u2297", "cirE;": "\u29C3", "cire;": "\u2257", "cirfnint;": "\u2A10", "cirmid;": "\u2AEF", "cirscir;": "\u29C2", "ClockwiseContourIntegral;": "\u2232", "CloseCurlyDoubleQuote;": "\u201D", "CloseCurlyQuote;": "\u2019", "clubs;": "\u2663", "clubsuit;": "\u2663", "Colon;": "\u2237", "colon;": ":", "Colone;": "\u2A74", "colone;": "\u2254", "coloneq;": "\u2254", "comma;": ",", "commat;": "@", "comp;": "\u2201", "compfn;": "\u2218", "complement;": "\u2201", "complexes;": "\u2102", "cong;": "\u2245", "congdot;": "\u2A6D", "Congruent;": "\u2261", "Conint;": "\u222F", "conint;": "\u222E", "ContourIntegral;": "\u222E", "Copf;": "\u2102", "copf;": "\u{1D554}", "coprod;": "\u2210", "Coproduct;": "\u2210", "COPY;": "\xA9", COPY: "\xA9", "copy;": "\xA9", copy: "\xA9", "copysr;": "\u2117", "CounterClockwiseContourIntegral;": "\u2233", "crarr;": "\u21B5", "Cross;": "\u2A2F", "cross;": "\u2717", "Cscr;": "\u{1D49E}", "cscr;": "\u{1D4B8}", "csub;": "\u2ACF", "csube;": "\u2AD1", "csup;": "\u2AD0", "csupe;": "\u2AD2", "ctdot;": "\u22EF", "cudarrl;": "\u2938", "cudarrr;": "\u2935", "cuepr;": "\u22DE", "cuesc;": "\u22DF", "cularr;": "\u21B6", "cularrp;": "\u293D", "Cup;": "\u22D3", "cup;": "\u222A", "cupbrcap;": "\u2A48", "CupCap;": "\u224D", "cupcap;": "\u2A46", "cupcup;": "\u2A4A", "cupdot;": "\u228D", "cupor;": "\u2A45", "cups;": "\u222A\uFE00", "curarr;": "\u21B7", "curarrm;": "\u293C", "curlyeqprec;": "\u22DE", "curlyeqsucc;": "\u22DF", "curlyvee;": "\u22CE", "curlywedge;": "\u22CF", "curren;": "\xA4", curren: "\xA4", "curvearrowleft;": "\u21B6", "curvearrowright;": "\u21B7", "cuvee;": "\u22CE", "cuwed;": "\u22CF", "cwconint;": "\u2232", "cwint;": "\u2231", "cylcty;": "\u232D", "Dagger;": "\u2021", "dagger;": "\u2020", "daleth;": "\u2138", "Darr;": "\u21A1", "dArr;": "\u21D3", "darr;": "\u2193", "dash;": "\u2010", "Dashv;": "\u2AE4", "dashv;": "\u22A3", "dbkarow;": "\u290F", "dblac;": "\u02DD", "Dcaron;": "\u010E", "dcaron;": "\u010F", "Dcy;": "\u0414", "dcy;": "\u0434", "DD;": "\u2145", "dd;": "\u2146", "ddagger;": "\u2021", "ddarr;": "\u21CA", "DDotrahd;": "\u2911", "ddotseq;": "\u2A77", "deg;": "\xB0", deg: "\xB0", "Del;": "\u2207", "Delta;": "\u0394", "delta;": "\u03B4", "demptyv;": "\u29B1", "dfisht;": "\u297F", "Dfr;": "\u{1D507}", "dfr;": "\u{1D521}", "dHar;": "\u2965", "dharl;": "\u21C3", "dharr;": "\u21C2", "DiacriticalAcute;": "\xB4", "DiacriticalDot;": "\u02D9", "DiacriticalDoubleAcute;": "\u02DD", "DiacriticalGrave;": "`", "DiacriticalTilde;": "\u02DC", "diam;": "\u22C4", "Diamond;": "\u22C4", "diamond;": "\u22C4", "diamondsuit;": "\u2666", "diams;": "\u2666", "die;": "\xA8", "DifferentialD;": "\u2146", "digamma;": "\u03DD", "disin;": "\u22F2", "div;": "\xF7", "divide;": "\xF7", divide: "\xF7", "divideontimes;": "\u22C7", "divonx;": "\u22C7", "DJcy;": "\u0402", "djcy;": "\u0452", "dlcorn;": "\u231E", "dlcrop;": "\u230D", "dollar;": "$", "Dopf;": "\u{1D53B}", "dopf;": "\u{1D555}", "Dot;": "\xA8", "dot;": "\u02D9", "DotDot;": "\u20DC", "doteq;": "\u2250", "doteqdot;": "\u2251", "DotEqual;": "\u2250", "dotminus;": "\u2238", "dotplus;": "\u2214", "dotsquare;": "\u22A1", "doublebarwedge;": "\u2306", "DoubleContourIntegral;": "\u222F", "DoubleDot;": "\xA8", "DoubleDownArrow;": "\u21D3", "DoubleLeftArrow;": "\u21D0", "DoubleLeftRightArrow;": "\u21D4", "DoubleLeftTee;": "\u2AE4", "DoubleLongLeftArrow;": "\u27F8", "DoubleLongLeftRightArrow;": "\u27FA", "DoubleLongRightArrow;": "\u27F9", "DoubleRightArrow;": "\u21D2", "DoubleRightTee;": "\u22A8", "DoubleUpArrow;": "\u21D1", "DoubleUpDownArrow;": "\u21D5", "DoubleVerticalBar;": "\u2225", "DownArrow;": "\u2193", "Downarrow;": "\u21D3", "downarrow;": "\u2193", "DownArrowBar;": "\u2913", "DownArrowUpArrow;": "\u21F5", "DownBreve;": "\u0311", "downdownarrows;": "\u21CA", "downharpoonleft;": "\u21C3", "downharpoonright;": "\u21C2", "DownLeftRightVector;": "\u2950", "DownLeftTeeVector;": "\u295E", "DownLeftVector;": "\u21BD", "DownLeftVectorBar;": "\u2956", "DownRightTeeVector;": "\u295F", "DownRightVector;": "\u21C1", "DownRightVectorBar;": "\u2957", "DownTee;": "\u22A4", "DownTeeArrow;": "\u21A7", "drbkarow;": "\u2910", "drcorn;": "\u231F", "drcrop;": "\u230C", "Dscr;": "\u{1D49F}", "dscr;": "\u{1D4B9}", "DScy;": "\u0405", "dscy;": "\u0455", "dsol;": "\u29F6", "Dstrok;": "\u0110", "dstrok;": "\u0111", "dtdot;": "\u22F1", "dtri;": "\u25BF", "dtrif;": "\u25BE", "duarr;": "\u21F5", "duhar;": "\u296F", "dwangle;": "\u29A6", "DZcy;": "\u040F", "dzcy;": "\u045F", "dzigrarr;": "\u27FF", "Eacute;": "\xC9", Eacute: "\xC9", "eacute;": "\xE9", eacute: "\xE9", "easter;": "\u2A6E", "Ecaron;": "\u011A", "ecaron;": "\u011B", "ecir;": "\u2256", "Ecirc;": "\xCA", Ecirc: "\xCA", "ecirc;": "\xEA", ecirc: "\xEA", "ecolon;": "\u2255", "Ecy;": "\u042D", "ecy;": "\u044D", "eDDot;": "\u2A77", "Edot;": "\u0116", "eDot;": "\u2251", "edot;": "\u0117", "ee;": "\u2147", "efDot;": "\u2252", "Efr;": "\u{1D508}", "efr;": "\u{1D522}", "eg;": "\u2A9A", "Egrave;": "\xC8", Egrave: "\xC8", "egrave;": "\xE8", egrave: "\xE8", "egs;": "\u2A96", "egsdot;": "\u2A98", "el;": "\u2A99", "Element;": "\u2208", "elinters;": "\u23E7", "ell;": "\u2113", "els;": "\u2A95", "elsdot;": "\u2A97", "Emacr;": "\u0112", "emacr;": "\u0113", "empty;": "\u2205", "emptyset;": "\u2205", "EmptySmallSquare;": "\u25FB", "emptyv;": "\u2205", "EmptyVerySmallSquare;": "\u25AB", "emsp;": "\u2003", "emsp13;": "\u2004", "emsp14;": "\u2005", "ENG;": "\u014A", "eng;": "\u014B", "ensp;": "\u2002", "Eogon;": "\u0118", "eogon;": "\u0119", "Eopf;": "\u{1D53C}", "eopf;": "\u{1D556}", "epar;": "\u22D5", "eparsl;": "\u29E3", "eplus;": "\u2A71", "epsi;": "\u03B5", "Epsilon;": "\u0395", "epsilon;": "\u03B5", "epsiv;": "\u03F5", "eqcirc;": "\u2256", "eqcolon;": "\u2255", "eqsim;": "\u2242", "eqslantgtr;": "\u2A96", "eqslantless;": "\u2A95", "Equal;": "\u2A75", "equals;": "=", "EqualTilde;": "\u2242", "equest;": "\u225F", "Equilibrium;": "\u21CC", "equiv;": "\u2261", "equivDD;": "\u2A78", "eqvparsl;": "\u29E5", "erarr;": "\u2971", "erDot;": "\u2253", "Escr;": "\u2130", "escr;": "\u212F", "esdot;": "\u2250", "Esim;": "\u2A73", "esim;": "\u2242", "Eta;": "\u0397", "eta;": "\u03B7", "ETH;": "\xD0", ETH: "\xD0", "eth;": "\xF0", eth: "\xF0", "Euml;": "\xCB", Euml: "\xCB", "euml;": "\xEB", euml: "\xEB", "euro;": "\u20AC", "excl;": "!", "exist;": "\u2203", "Exists;": "\u2203", "expectation;": "\u2130", "ExponentialE;": "\u2147", "exponentiale;": "\u2147", "fallingdotseq;": "\u2252", "Fcy;": "\u0424", "fcy;": "\u0444", "female;": "\u2640", "ffilig;": "\uFB03", "fflig;": "\uFB00", "ffllig;": "\uFB04", "Ffr;": "\u{1D509}", "ffr;": "\u{1D523}", "filig;": "\uFB01", "FilledSmallSquare;": "\u25FC", "FilledVerySmallSquare;": "\u25AA", "fjlig;": "fj", "flat;": "\u266D", "fllig;": "\uFB02", "fltns;": "\u25B1", "fnof;": "\u0192", "Fopf;": "\u{1D53D}", "fopf;": "\u{1D557}", "ForAll;": "\u2200", "forall;": "\u2200", "fork;": "\u22D4", "forkv;": "\u2AD9", "Fouriertrf;": "\u2131", "fpartint;": "\u2A0D", "frac12;": "\xBD", frac12: "\xBD", "frac13;": "\u2153", "frac14;": "\xBC", frac14: "\xBC", "frac15;": "\u2155", "frac16;": "\u2159", "frac18;": "\u215B", "frac23;": "\u2154", "frac25;": "\u2156", "frac34;": "\xBE", frac34: "\xBE", "frac35;": "\u2157", "frac38;": "\u215C", "frac45;": "\u2158", "frac56;": "\u215A", "frac58;": "\u215D", "frac78;": "\u215E", "frasl;": "\u2044", "frown;": "\u2322", "Fscr;": "\u2131", "fscr;": "\u{1D4BB}", "gacute;": "\u01F5", "Gamma;": "\u0393", "gamma;": "\u03B3", "Gammad;": "\u03DC", "gammad;": "\u03DD", "gap;": "\u2A86", "Gbreve;": "\u011E", "gbreve;": "\u011F", "Gcedil;": "\u0122", "Gcirc;": "\u011C", "gcirc;": "\u011D", "Gcy;": "\u0413", "gcy;": "\u0433", "Gdot;": "\u0120", "gdot;": "\u0121", "gE;": "\u2267", "ge;": "\u2265", "gEl;": "\u2A8C", "gel;": "\u22DB", "geq;": "\u2265", "geqq;": "\u2267", "geqslant;": "\u2A7E", "ges;": "\u2A7E", "gescc;": "\u2AA9", "gesdot;": "\u2A80", "gesdoto;": "\u2A82", "gesdotol;": "\u2A84", "gesl;": "\u22DB\uFE00", "gesles;": "\u2A94", "Gfr;": "\u{1D50A}", "gfr;": "\u{1D524}", "Gg;": "\u22D9", "gg;": "\u226B", "ggg;": "\u22D9", "gimel;": "\u2137", "GJcy;": "\u0403", "gjcy;": "\u0453", "gl;": "\u2277", "gla;": "\u2AA5", "glE;": "\u2A92", "glj;": "\u2AA4", "gnap;": "\u2A8A", "gnapprox;": "\u2A8A", "gnE;": "\u2269", "gne;": "\u2A88", "gneq;": "\u2A88", "gneqq;": "\u2269", "gnsim;": "\u22E7", "Gopf;": "\u{1D53E}", "gopf;": "\u{1D558}", "grave;": "`", "GreaterEqual;": "\u2265", "GreaterEqualLess;": "\u22DB", "GreaterFullEqual;": "\u2267", "GreaterGreater;": "\u2AA2", "GreaterLess;": "\u2277", "GreaterSlantEqual;": "\u2A7E", "GreaterTilde;": "\u2273", "Gscr;": "\u{1D4A2}", "gscr;": "\u210A", "gsim;": "\u2273", "gsime;": "\u2A8E", "gsiml;": "\u2A90", "GT;": ">", GT: ">", "Gt;": "\u226B", "gt;": ">", gt: ">", "gtcc;": "\u2AA7", "gtcir;": "\u2A7A", "gtdot;": "\u22D7", "gtlPar;": "\u2995", "gtquest;": "\u2A7C", "gtrapprox;": "\u2A86", "gtrarr;": "\u2978", "gtrdot;": "\u22D7", "gtreqless;": "\u22DB", "gtreqqless;": "\u2A8C", "gtrless;": "\u2277", "gtrsim;": "\u2273", "gvertneqq;": "\u2269\uFE00", "gvnE;": "\u2269\uFE00", "Hacek;": "\u02C7", "hairsp;": "\u200A", "half;": "\xBD", "hamilt;": "\u210B", "HARDcy;": "\u042A", "hardcy;": "\u044A", "hArr;": "\u21D4", "harr;": "\u2194", "harrcir;": "\u2948", "harrw;": "\u21AD", "Hat;": "^", "hbar;": "\u210F", "Hcirc;": "\u0124", "hcirc;": "\u0125", "hearts;": "\u2665", "heartsuit;": "\u2665", "hellip;": "\u2026", "hercon;": "\u22B9", "Hfr;": "\u210C", "hfr;": "\u{1D525}", "HilbertSpace;": "\u210B", "hksearow;": "\u2925", "hkswarow;": "\u2926", "hoarr;": "\u21FF", "homtht;": "\u223B", "hookleftarrow;": "\u21A9", "hookrightarrow;": "\u21AA", "Hopf;": "\u210D", "hopf;": "\u{1D559}", "horbar;": "\u2015", "HorizontalLine;": "\u2500", "Hscr;": "\u210B", "hscr;": "\u{1D4BD}", "hslash;": "\u210F", "Hstrok;": "\u0126", "hstrok;": "\u0127", "HumpDownHump;": "\u224E", "HumpEqual;": "\u224F", "hybull;": "\u2043", "hyphen;": "\u2010", "Iacute;": "\xCD", Iacute: "\xCD", "iacute;": "\xED", iacute: "\xED", "ic;": "\u2063", "Icirc;": "\xCE", Icirc: "\xCE", "icirc;": "\xEE", icirc: "\xEE", "Icy;": "\u0418", "icy;": "\u0438", "Idot;": "\u0130", "IEcy;": "\u0415", "iecy;": "\u0435", "iexcl;": "\xA1", iexcl: "\xA1", "iff;": "\u21D4", "Ifr;": "\u2111", "ifr;": "\u{1D526}", "Igrave;": "\xCC", Igrave: "\xCC", "igrave;": "\xEC", igrave: "\xEC", "ii;": "\u2148", "iiiint;": "\u2A0C", "iiint;": "\u222D", "iinfin;": "\u29DC", "iiota;": "\u2129", "IJlig;": "\u0132", "ijlig;": "\u0133", "Im;": "\u2111", "Imacr;": "\u012A", "imacr;": "\u012B", "image;": "\u2111", "ImaginaryI;": "\u2148", "imagline;": "\u2110", "imagpart;": "\u2111", "imath;": "\u0131", "imof;": "\u22B7", "imped;": "\u01B5", "Implies;": "\u21D2", "in;": "\u2208", "incare;": "\u2105", "infin;": "\u221E", "infintie;": "\u29DD", "inodot;": "\u0131", "Int;": "\u222C", "int;": "\u222B", "intcal;": "\u22BA", "integers;": "\u2124", "Integral;": "\u222B", "intercal;": "\u22BA", "Intersection;": "\u22C2", "intlarhk;": "\u2A17", "intprod;": "\u2A3C", "InvisibleComma;": "\u2063", "InvisibleTimes;": "\u2062", "IOcy;": "\u0401", "iocy;": "\u0451", "Iogon;": "\u012E", "iogon;": "\u012F", "Iopf;": "\u{1D540}", "iopf;": "\u{1D55A}", "Iota;": "\u0399", "iota;": "\u03B9", "iprod;": "\u2A3C", "iquest;": "\xBF", iquest: "\xBF", "Iscr;": "\u2110", "iscr;": "\u{1D4BE}", "isin;": "\u2208", "isindot;": "\u22F5", "isinE;": "\u22F9", "isins;": "\u22F4", "isinsv;": "\u22F3", "isinv;": "\u2208", "it;": "\u2062", "Itilde;": "\u0128", "itilde;": "\u0129", "Iukcy;": "\u0406", "iukcy;": "\u0456", "Iuml;": "\xCF", Iuml: "\xCF", "iuml;": "\xEF", iuml: "\xEF", "Jcirc;": "\u0134", "jcirc;": "\u0135", "Jcy;": "\u0419", "jcy;": "\u0439", "Jfr;": "\u{1D50D}", "jfr;": "\u{1D527}", "jmath;": "\u0237", "Jopf;": "\u{1D541}", "jopf;": "\u{1D55B}", "Jscr;": "\u{1D4A5}", "jscr;": "\u{1D4BF}", "Jsercy;": "\u0408", "jsercy;": "\u0458", "Jukcy;": "\u0404", "jukcy;": "\u0454", "Kappa;": "\u039A", "kappa;": "\u03BA", "kappav;": "\u03F0", "Kcedil;": "\u0136", "kcedil;": "\u0137", "Kcy;": "\u041A", "kcy;": "\u043A", "Kfr;": "\u{1D50E}", "kfr;": "\u{1D528}", "kgreen;": "\u0138", "KHcy;": "\u0425", "khcy;": "\u0445", "KJcy;": "\u040C", "kjcy;": "\u045C", "Kopf;": "\u{1D542}", "kopf;": "\u{1D55C}", "Kscr;": "\u{1D4A6}", "kscr;": "\u{1D4C0}", "lAarr;": "\u21DA", "Lacute;": "\u0139", "lacute;": "\u013A", "laemptyv;": "\u29B4", "lagran;": "\u2112", "Lambda;": "\u039B", "lambda;": "\u03BB", "Lang;": "\u27EA", "lang;": "\u27E8", "langd;": "\u2991", "langle;": "\u27E8", "lap;": "\u2A85", "Laplacetrf;": "\u2112", "laquo;": "\xAB", laquo: "\xAB", "Larr;": "\u219E", "lArr;": "\u21D0", "larr;": "\u2190", "larrb;": "\u21E4", "larrbfs;": "\u291F", "larrfs;": "\u291D", "larrhk;": "\u21A9", "larrlp;": "\u21AB", "larrpl;": "\u2939", "larrsim;": "\u2973", "larrtl;": "\u21A2", "lat;": "\u2AAB", "lAtail;": "\u291B", "latail;": "\u2919", "late;": "\u2AAD", "lates;": "\u2AAD\uFE00", "lBarr;": "\u290E", "lbarr;": "\u290C", "lbbrk;": "\u2772", "lbrace;": "{", "lbrack;": "[", "lbrke;": "\u298B", "lbrksld;": "\u298F", "lbrkslu;": "\u298D", "Lcaron;": "\u013D", "lcaron;": "\u013E", "Lcedil;": "\u013B", "lcedil;": "\u013C", "lceil;": "\u2308", "lcub;": "{", "Lcy;": "\u041B", "lcy;": "\u043B", "ldca;": "\u2936", "ldquo;": "\u201C", "ldquor;": "\u201E", "ldrdhar;": "\u2967", "ldrushar;": "\u294B", "ldsh;": "\u21B2", "lE;": "\u2266", "le;": "\u2264", "LeftAngleBracket;": "\u27E8", "LeftArrow;": "\u2190", "Leftarrow;": "\u21D0", "leftarrow;": "\u2190", "LeftArrowBar;": "\u21E4", "LeftArrowRightArrow;": "\u21C6", "leftarrowtail;": "\u21A2", "LeftCeiling;": "\u2308", "LeftDoubleBracket;": "\u27E6", "LeftDownTeeVector;": "\u2961", "LeftDownVector;": "\u21C3", "LeftDownVectorBar;": "\u2959", "LeftFloor;": "\u230A", "leftharpoondown;": "\u21BD", "leftharpoonup;": "\u21BC", "leftleftarrows;": "\u21C7", "LeftRightArrow;": "\u2194", "Leftrightarrow;": "\u21D4", "leftrightarrow;": "\u2194", "leftrightarrows;": "\u21C6", "leftrightharpoons;": "\u21CB", "leftrightsquigarrow;": "\u21AD", "LeftRightVector;": "\u294E", "LeftTee;": "\u22A3", "LeftTeeArrow;": "\u21A4", "LeftTeeVector;": "\u295A", "leftthreetimes;": "\u22CB", "LeftTriangle;": "\u22B2", "LeftTriangleBar;": "\u29CF", "LeftTriangleEqual;": "\u22B4", "LeftUpDownVector;": "\u2951", "LeftUpTeeVector;": "\u2960", "LeftUpVector;": "\u21BF", "LeftUpVectorBar;": "\u2958", "LeftVector;": "\u21BC", "LeftVectorBar;": "\u2952", "lEg;": "\u2A8B", "leg;": "\u22DA", "leq;": "\u2264", "leqq;": "\u2266", "leqslant;": "\u2A7D", "les;": "\u2A7D", "lescc;": "\u2AA8", "lesdot;": "\u2A7F", "lesdoto;": "\u2A81", "lesdotor;": "\u2A83", "lesg;": "\u22DA\uFE00", "lesges;": "\u2A93", "lessapprox;": "\u2A85", "lessdot;": "\u22D6", "lesseqgtr;": "\u22DA", "lesseqqgtr;": "\u2A8B", "LessEqualGreater;": "\u22DA", "LessFullEqual;": "\u2266", "LessGreater;": "\u2276", "lessgtr;": "\u2276", "LessLess;": "\u2AA1", "lesssim;": "\u2272", "LessSlantEqual;": "\u2A7D", "LessTilde;": "\u2272", "lfisht;": "\u297C", "lfloor;": "\u230A", "Lfr;": "\u{1D50F}", "lfr;": "\u{1D529}", "lg;": "\u2276", "lgE;": "\u2A91", "lHar;": "\u2962", "lhard;": "\u21BD", "lharu;": "\u21BC", "lharul;": "\u296A", "lhblk;": "\u2584", "LJcy;": "\u0409", "ljcy;": "\u0459", "Ll;": "\u22D8", "ll;": "\u226A", "llarr;": "\u21C7", "llcorner;": "\u231E", "Lleftarrow;": "\u21DA", "llhard;": "\u296B", "lltri;": "\u25FA", "Lmidot;": "\u013F", "lmidot;": "\u0140", "lmoust;": "\u23B0", "lmoustache;": "\u23B0", "lnap;": "\u2A89", "lnapprox;": "\u2A89", "lnE;": "\u2268", "lne;": "\u2A87", "lneq;": "\u2A87", "lneqq;": "\u2268", "lnsim;": "\u22E6", "loang;": "\u27EC", "loarr;": "\u21FD", "lobrk;": "\u27E6", "LongLeftArrow;": "\u27F5", "Longleftarrow;": "\u27F8", "longleftarrow;": "\u27F5", "LongLeftRightArrow;": "\u27F7", "Longleftrightarrow;": "\u27FA", "longleftrightarrow;": "\u27F7", "longmapsto;": "\u27FC", "LongRightArrow;": "\u27F6", "Longrightarrow;": "\u27F9", "longrightarrow;": "\u27F6", "looparrowleft;": "\u21AB", "looparrowright;": "\u21AC", "lopar;": "\u2985", "Lopf;": "\u{1D543}", "lopf;": "\u{1D55D}", "loplus;": "\u2A2D", "lotimes;": "\u2A34", "lowast;": "\u2217", "lowbar;": "_", "LowerLeftArrow;": "\u2199", "LowerRightArrow;": "\u2198", "loz;": "\u25CA", "lozenge;": "\u25CA", "lozf;": "\u29EB", "lpar;": "(", "lparlt;": "\u2993", "lrarr;": "\u21C6", "lrcorner;": "\u231F", "lrhar;": "\u21CB", "lrhard;": "\u296D", "lrm;": "\u200E", "lrtri;": "\u22BF", "lsaquo;": "\u2039", "Lscr;": "\u2112", "lscr;": "\u{1D4C1}", "Lsh;": "\u21B0", "lsh;": "\u21B0", "lsim;": "\u2272", "lsime;": "\u2A8D", "lsimg;": "\u2A8F", "lsqb;": "[", "lsquo;": "\u2018", "lsquor;": "\u201A", "Lstrok;": "\u0141", "lstrok;": "\u0142", "LT;": "<", LT: "<", "Lt;": "\u226A", "lt;": "<", lt: "<", "ltcc;": "\u2AA6", "ltcir;": "\u2A79", "ltdot;": "\u22D6", "lthree;": "\u22CB", "ltimes;": "\u22C9", "ltlarr;": "\u2976", "ltquest;": "\u2A7B", "ltri;": "\u25C3", "ltrie;": "\u22B4", "ltrif;": "\u25C2", "ltrPar;": "\u2996", "lurdshar;": "\u294A", "luruhar;": "\u2966", "lvertneqq;": "\u2268\uFE00", "lvnE;": "\u2268\uFE00", "macr;": "\xAF", macr: "\xAF", "male;": "\u2642", "malt;": "\u2720", "maltese;": "\u2720", "Map;": "\u2905", "map;": "\u21A6", "mapsto;": "\u21A6", "mapstodown;": "\u21A7", "mapstoleft;": "\u21A4", "mapstoup;": "\u21A5", "marker;": "\u25AE", "mcomma;": "\u2A29", "Mcy;": "\u041C", "mcy;": "\u043C", "mdash;": "\u2014", "mDDot;": "\u223A", "measuredangle;": "\u2221", "MediumSpace;": "\u205F", "Mellintrf;": "\u2133", "Mfr;": "\u{1D510}", "mfr;": "\u{1D52A}", "mho;": "\u2127", "micro;": "\xB5", micro: "\xB5", "mid;": "\u2223", "midast;": "*", "midcir;": "\u2AF0", "middot;": "\xB7", middot: "\xB7", "minus;": "\u2212", "minusb;": "\u229F", "minusd;": "\u2238", "minusdu;": "\u2A2A", "MinusPlus;": "\u2213", "mlcp;": "\u2ADB", "mldr;": "\u2026", "mnplus;": "\u2213", "models;": "\u22A7", "Mopf;": "\u{1D544}", "mopf;": "\u{1D55E}", "mp;": "\u2213", "Mscr;": "\u2133", "mscr;": "\u{1D4C2}", "mstpos;": "\u223E", "Mu;": "\u039C", "mu;": "\u03BC", "multimap;": "\u22B8", "mumap;": "\u22B8", "nabla;": "\u2207", "Nacute;": "\u0143", "nacute;": "\u0144", "nang;": "\u2220\u20D2", "nap;": "\u2249", "napE;": "\u2A70\u0338", "napid;": "\u224B\u0338", "napos;": "\u0149", "napprox;": "\u2249", "natur;": "\u266E", "natural;": "\u266E", "naturals;": "\u2115", "nbsp;": "\xA0", nbsp: "\xA0", "nbump;": "\u224E\u0338", "nbumpe;": "\u224F\u0338", "ncap;": "\u2A43", "Ncaron;": "\u0147", "ncaron;": "\u0148", "Ncedil;": "\u0145", "ncedil;": "\u0146", "ncong;": "\u2247", "ncongdot;": "\u2A6D\u0338", "ncup;": "\u2A42", "Ncy;": "\u041D", "ncy;": "\u043D", "ndash;": "\u2013", "ne;": "\u2260", "nearhk;": "\u2924", "neArr;": "\u21D7", "nearr;": "\u2197", "nearrow;": "\u2197", "nedot;": "\u2250\u0338", "NegativeMediumSpace;": "\u200B", "NegativeThickSpace;": "\u200B", "NegativeThinSpace;": "\u200B", "NegativeVeryThinSpace;": "\u200B", "nequiv;": "\u2262", "nesear;": "\u2928", "nesim;": "\u2242\u0338", "NestedGreaterGreater;": "\u226B", "NestedLessLess;": "\u226A", "NewLine;": "\n", "nexist;": "\u2204", "nexists;": "\u2204", "Nfr;": "\u{1D511}", "nfr;": "\u{1D52B}", "ngE;": "\u2267\u0338", "nge;": "\u2271", "ngeq;": "\u2271", "ngeqq;": "\u2267\u0338", "ngeqslant;": "\u2A7E\u0338", "nges;": "\u2A7E\u0338", "nGg;": "\u22D9\u0338", "ngsim;": "\u2275", "nGt;": "\u226B\u20D2", "ngt;": "\u226F", "ngtr;": "\u226F", "nGtv;": "\u226B\u0338", "nhArr;": "\u21CE", "nharr;": "\u21AE", "nhpar;": "\u2AF2", "ni;": "\u220B", "nis;": "\u22FC", "nisd;": "\u22FA", "niv;": "\u220B", "NJcy;": "\u040A", "njcy;": "\u045A", "nlArr;": "\u21CD", "nlarr;": "\u219A", "nldr;": "\u2025", "nlE;": "\u2266\u0338", "nle;": "\u2270", "nLeftarrow;": "\u21CD", "nleftarrow;": "\u219A", "nLeftrightarrow;": "\u21CE", "nleftrightarrow;": "\u21AE", "nleq;": "\u2270", "nleqq;": "\u2266\u0338", "nleqslant;": "\u2A7D\u0338", "nles;": "\u2A7D\u0338", "nless;": "\u226E", "nLl;": "\u22D8\u0338", "nlsim;": "\u2274", "nLt;": "\u226A\u20D2", "nlt;": "\u226E", "nltri;": "\u22EA", "nltrie;": "\u22EC", "nLtv;": "\u226A\u0338", "nmid;": "\u2224", "NoBreak;": "\u2060", "NonBreakingSpace;": "\xA0", "Nopf;": "\u2115", "nopf;": "\u{1D55F}", "Not;": "\u2AEC", "not;": "\xAC", not: "\xAC", "NotCongruent;": "\u2262", "NotCupCap;": "\u226D", "NotDoubleVerticalBar;": "\u2226", "NotElement;": "\u2209", "NotEqual;": "\u2260", "NotEqualTilde;": "\u2242\u0338", "NotExists;": "\u2204", "NotGreater;": "\u226F", "NotGreaterEqual;": "\u2271", "NotGreaterFullEqual;": "\u2267\u0338", "NotGreaterGreater;": "\u226B\u0338", "NotGreaterLess;": "\u2279", "NotGreaterSlantEqual;": "\u2A7E\u0338", "NotGreaterTilde;": "\u2275", "NotHumpDownHump;": "\u224E\u0338", "NotHumpEqual;": "\u224F\u0338", "notin;": "\u2209", "notindot;": "\u22F5\u0338", "notinE;": "\u22F9\u0338", "notinva;": "\u2209", "notinvb;": "\u22F7", "notinvc;": "\u22F6", "NotLeftTriangle;": "\u22EA", "NotLeftTriangleBar;": "\u29CF\u0338", "NotLeftTriangleEqual;": "\u22EC", "NotLess;": "\u226E", "NotLessEqual;": "\u2270", "NotLessGreater;": "\u2278", "NotLessLess;": "\u226A\u0338", "NotLessSlantEqual;": "\u2A7D\u0338", "NotLessTilde;": "\u2274", "NotNestedGreaterGreater;": "\u2AA2\u0338", "NotNestedLessLess;": "\u2AA1\u0338", "notni;": "\u220C", "notniva;": "\u220C", "notnivb;": "\u22FE", "notnivc;": "\u22FD", "NotPrecedes;": "\u2280", "NotPrecedesEqual;": "\u2AAF\u0338", "NotPrecedesSlantEqual;": "\u22E0", "NotReverseElement;": "\u220C", "NotRightTriangle;": "\u22EB", "NotRightTriangleBar;": "\u29D0\u0338", "NotRightTriangleEqual;": "\u22ED", "NotSquareSubset;": "\u228F\u0338", "NotSquareSubsetEqual;": "\u22E2", "NotSquareSuperset;": "\u2290\u0338", "NotSquareSupersetEqual;": "\u22E3", "NotSubset;": "\u2282\u20D2", "NotSubsetEqual;": "\u2288", "NotSucceeds;": "\u2281", "NotSucceedsEqual;": "\u2AB0\u0338", "NotSucceedsSlantEqual;": "\u22E1", "NotSucceedsTilde;": "\u227F\u0338", "NotSuperset;": "\u2283\u20D2", "NotSupersetEqual;": "\u2289", "NotTilde;": "\u2241", "NotTildeEqual;": "\u2244", "NotTildeFullEqual;": "\u2247", "NotTildeTilde;": "\u2249", "NotVerticalBar;": "\u2224", "npar;": "\u2226", "nparallel;": "\u2226", "nparsl;": "\u2AFD\u20E5", "npart;": "\u2202\u0338", "npolint;": "\u2A14", "npr;": "\u2280", "nprcue;": "\u22E0", "npre;": "\u2AAF\u0338", "nprec;": "\u2280", "npreceq;": "\u2AAF\u0338", "nrArr;": "\u21CF", "nrarr;": "\u219B", "nrarrc;": "\u2933\u0338", "nrarrw;": "\u219D\u0338", "nRightarrow;": "\u21CF", "nrightarrow;": "\u219B", "nrtri;": "\u22EB", "nrtrie;": "\u22ED", "nsc;": "\u2281", "nsccue;": "\u22E1", "nsce;": "\u2AB0\u0338", "Nscr;": "\u{1D4A9}", "nscr;": "\u{1D4C3}", "nshortmid;": "\u2224", "nshortparallel;": "\u2226", "nsim;": "\u2241", "nsime;": "\u2244", "nsimeq;": "\u2244", "nsmid;": "\u2224", "nspar;": "\u2226", "nsqsube;": "\u22E2", "nsqsupe;": "\u22E3", "nsub;": "\u2284", "nsubE;": "\u2AC5\u0338", "nsube;": "\u2288", "nsubset;": "\u2282\u20D2", "nsubseteq;": "\u2288", "nsubseteqq;": "\u2AC5\u0338", "nsucc;": "\u2281", "nsucceq;": "\u2AB0\u0338", "nsup;": "\u2285", "nsupE;": "\u2AC6\u0338", "nsupe;": "\u2289", "nsupset;": "\u2283\u20D2", "nsupseteq;": "\u2289", "nsupseteqq;": "\u2AC6\u0338", "ntgl;": "\u2279", "Ntilde;": "\xD1", Ntilde: "\xD1", "ntilde;": "\xF1", ntilde: "\xF1", "ntlg;": "\u2278", "ntriangleleft;": "\u22EA", "ntrianglelefteq;": "\u22EC", "ntriangleright;": "\u22EB", "ntrianglerighteq;": "\u22ED", "Nu;": "\u039D", "nu;": "\u03BD", "num;": "#", "numero;": "\u2116", "numsp;": "\u2007", "nvap;": "\u224D\u20D2", "nVDash;": "\u22AF", "nVdash;": "\u22AE", "nvDash;": "\u22AD", "nvdash;": "\u22AC", "nvge;": "\u2265\u20D2", "nvgt;": ">\u20D2", "nvHarr;": "\u2904", "nvinfin;": "\u29DE", "nvlArr;": "\u2902", "nvle;": "\u2264\u20D2", "nvlt;": "<\u20D2", "nvltrie;": "\u22B4\u20D2", "nvrArr;": "\u2903", "nvrtrie;": "\u22B5\u20D2", "nvsim;": "\u223C\u20D2", "nwarhk;": "\u2923", "nwArr;": "\u21D6", "nwarr;": "\u2196", "nwarrow;": "\u2196", "nwnear;": "\u2927", "Oacute;": "\xD3", Oacute: "\xD3", "oacute;": "\xF3", oacute: "\xF3", "oast;": "\u229B", "ocir;": "\u229A", "Ocirc;": "\xD4", Ocirc: "\xD4", "ocirc;": "\xF4", ocirc: "\xF4", "Ocy;": "\u041E", "ocy;": "\u043E", "odash;": "\u229D", "Odblac;": "\u0150", "odblac;": "\u0151", "odiv;": "\u2A38", "odot;": "\u2299", "odsold;": "\u29BC", "OElig;": "\u0152", "oelig;": "\u0153", "ofcir;": "\u29BF", "Ofr;": "\u{1D512}", "ofr;": "\u{1D52C}", "ogon;": "\u02DB", "Ograve;": "\xD2", Ograve: "\xD2", "ograve;": "\xF2", ograve: "\xF2", "ogt;": "\u29C1", "ohbar;": "\u29B5", "ohm;": "\u03A9", "oint;": "\u222E", "olarr;": "\u21BA", "olcir;": "\u29BE", "olcross;": "\u29BB", "oline;": "\u203E", "olt;": "\u29C0", "Omacr;": "\u014C", "omacr;": "\u014D", "Omega;": "\u03A9", "omega;": "\u03C9", "Omicron;": "\u039F", "omicron;": "\u03BF", "omid;": "\u29B6", "ominus;": "\u2296", "Oopf;": "\u{1D546}", "oopf;": "\u{1D560}", "opar;": "\u29B7", "OpenCurlyDoubleQuote;": "\u201C", "OpenCurlyQuote;": "\u2018", "operp;": "\u29B9", "oplus;": "\u2295", "Or;": "\u2A54", "or;": "\u2228", "orarr;": "\u21BB", "ord;": "\u2A5D", "order;": "\u2134", "orderof;": "\u2134", "ordf;": "\xAA", ordf: "\xAA", "ordm;": "\xBA", ordm: "\xBA", "origof;": "\u22B6", "oror;": "\u2A56", "orslope;": "\u2A57", "orv;": "\u2A5B", "oS;": "\u24C8", "Oscr;": "\u{1D4AA}", "oscr;": "\u2134", "Oslash;": "\xD8", Oslash: "\xD8", "oslash;": "\xF8", oslash: "\xF8", "osol;": "\u2298", "Otilde;": "\xD5", Otilde: "\xD5", "otilde;": "\xF5", otilde: "\xF5", "Otimes;": "\u2A37", "otimes;": "\u2297", "otimesas;": "\u2A36", "Ouml;": "\xD6", Ouml: "\xD6", "ouml;": "\xF6", ouml: "\xF6", "ovbar;": "\u233D", "OverBar;": "\u203E", "OverBrace;": "\u23DE", "OverBracket;": "\u23B4", "OverParenthesis;": "\u23DC", "par;": "\u2225", "para;": "\xB6", para: "\xB6", "parallel;": "\u2225", "parsim;": "\u2AF3", "parsl;": "\u2AFD", "part;": "\u2202", "PartialD;": "\u2202", "Pcy;": "\u041F", "pcy;": "\u043F", "percnt;": "%", "period;": ".", "permil;": "\u2030", "perp;": "\u22A5", "pertenk;": "\u2031", "Pfr;": "\u{1D513}", "pfr;": "\u{1D52D}", "Phi;": "\u03A6", "phi;": "\u03C6", "phiv;": "\u03D5", "phmmat;": "\u2133", "phone;": "\u260E", "Pi;": "\u03A0", "pi;": "\u03C0", "pitchfork;": "\u22D4", "piv;": "\u03D6", "planck;": "\u210F", "planckh;": "\u210E", "plankv;": "\u210F", "plus;": "+", "plusacir;": "\u2A23", "plusb;": "\u229E", "pluscir;": "\u2A22", "plusdo;": "\u2214", "plusdu;": "\u2A25", "pluse;": "\u2A72", "PlusMinus;": "\xB1", "plusmn;": "\xB1", plusmn: "\xB1", "plussim;": "\u2A26", "plustwo;": "\u2A27", "pm;": "\xB1", "Poincareplane;": "\u210C", "pointint;": "\u2A15", "Popf;": "\u2119", "popf;": "\u{1D561}", "pound;": "\xA3", pound: "\xA3", "Pr;": "\u2ABB", "pr;": "\u227A", "prap;": "\u2AB7", "prcue;": "\u227C", "prE;": "\u2AB3", "pre;": "\u2AAF", "prec;": "\u227A", "precapprox;": "\u2AB7", "preccurlyeq;": "\u227C", "Precedes;": "\u227A", "PrecedesEqual;": "\u2AAF", "PrecedesSlantEqual;": "\u227C", "PrecedesTilde;": "\u227E", "preceq;": "\u2AAF", "precnapprox;": "\u2AB9", "precneqq;": "\u2AB5", "precnsim;": "\u22E8", "precsim;": "\u227E", "Prime;": "\u2033", "prime;": "\u2032", "primes;": "\u2119", "prnap;": "\u2AB9", "prnE;": "\u2AB5", "prnsim;": "\u22E8", "prod;": "\u220F", "Product;": "\u220F", "profalar;": "\u232E", "profline;": "\u2312", "profsurf;": "\u2313", "prop;": "\u221D", "Proportion;": "\u2237", "Proportional;": "\u221D", "propto;": "\u221D", "prsim;": "\u227E", "prurel;": "\u22B0", "Pscr;": "\u{1D4AB}", "pscr;": "\u{1D4C5}", "Psi;": "\u03A8", "psi;": "\u03C8", "puncsp;": "\u2008", "Qfr;": "\u{1D514}", "qfr;": "\u{1D52E}", "qint;": "\u2A0C", "Qopf;": "\u211A", "qopf;": "\u{1D562}", "qprime;": "\u2057", "Qscr;": "\u{1D4AC}", "qscr;": "\u{1D4C6}", "quaternions;": "\u210D", "quatint;": "\u2A16", "quest;": "?", "questeq;": "\u225F", "QUOT;": '"', QUOT: '"', "quot;": '"', quot: '"', "rAarr;": "\u21DB", "race;": "\u223D\u0331", "Racute;": "\u0154", "racute;": "\u0155", "radic;": "\u221A", "raemptyv;": "\u29B3", "Rang;": "\u27EB", "rang;": "\u27E9", "rangd;": "\u2992", "range;": "\u29A5", "rangle;": "\u27E9", "raquo;": "\xBB", raquo: "\xBB", "Rarr;": "\u21A0", "rArr;": "\u21D2", "rarr;": "\u2192", "rarrap;": "\u2975", "rarrb;": "\u21E5", "rarrbfs;": "\u2920", "rarrc;": "\u2933", "rarrfs;": "\u291E", "rarrhk;": "\u21AA", "rarrlp;": "\u21AC", "rarrpl;": "\u2945", "rarrsim;": "\u2974", "Rarrtl;": "\u2916", "rarrtl;": "\u21A3", "rarrw;": "\u219D", "rAtail;": "\u291C", "ratail;": "\u291A", "ratio;": "\u2236", "rationals;": "\u211A", "RBarr;": "\u2910", "rBarr;": "\u290F", "rbarr;": "\u290D", "rbbrk;": "\u2773", "rbrace;": "}", "rbrack;": "]", "rbrke;": "\u298C", "rbrksld;": "\u298E", "rbrkslu;": "\u2990", "Rcaron;": "\u0158", "rcaron;": "\u0159", "Rcedil;": "\u0156", "rcedil;": "\u0157", "rceil;": "\u2309", "rcub;": "}", "Rcy;": "\u0420", "rcy;": "\u0440", "rdca;": "\u2937", "rdldhar;": "\u2969", "rdquo;": "\u201D", "rdquor;": "\u201D", "rdsh;": "\u21B3", "Re;": "\u211C", "real;": "\u211C", "realine;": "\u211B", "realpart;": "\u211C", "reals;": "\u211D", "rect;": "\u25AD", "REG;": "\xAE", REG: "\xAE", "reg;": "\xAE", reg: "\xAE", "ReverseElement;": "\u220B", "ReverseEquilibrium;": "\u21CB", "ReverseUpEquilibrium;": "\u296F", "rfisht;": "\u297D", "rfloor;": "\u230B", "Rfr;": "\u211C", "rfr;": "\u{1D52F}", "rHar;": "\u2964", "rhard;": "\u21C1", "rharu;": "\u21C0", "rharul;": "\u296C", "Rho;": "\u03A1", "rho;": "\u03C1", "rhov;": "\u03F1", "RightAngleBracket;": "\u27E9", "RightArrow;": "\u2192", "Rightarrow;": "\u21D2", "rightarrow;": "\u2192", "RightArrowBar;": "\u21E5", "RightArrowLeftArrow;": "\u21C4", "rightarrowtail;": "\u21A3", "RightCeiling;": "\u2309", "RightDoubleBracket;": "\u27E7", "RightDownTeeVector;": "\u295D", "RightDownVector;": "\u21C2", "RightDownVectorBar;": "\u2955", "RightFloor;": "\u230B", "rightharpoondown;": "\u21C1", "rightharpoonup;": "\u21C0", "rightleftarrows;": "\u21C4", "rightleftharpoons;": "\u21CC", "rightrightarrows;": "\u21C9", "rightsquigarrow;": "\u219D", "RightTee;": "\u22A2", "RightTeeArrow;": "\u21A6", "RightTeeVector;": "\u295B", "rightthreetimes;": "\u22CC", "RightTriangle;": "\u22B3", "RightTriangleBar;": "\u29D0", "RightTriangleEqual;": "\u22B5", "RightUpDownVector;": "\u294F", "RightUpTeeVector;": "\u295C", "RightUpVector;": "\u21BE", "RightUpVectorBar;": "\u2954", "RightVector;": "\u21C0", "RightVectorBar;": "\u2953", "ring;": "\u02DA", "risingdotseq;": "\u2253", "rlarr;": "\u21C4", "rlhar;": "\u21CC", "rlm;": "\u200F", "rmoust;": "\u23B1", "rmoustache;": "\u23B1", "rnmid;": "\u2AEE", "roang;": "\u27ED", "roarr;": "\u21FE", "robrk;": "\u27E7", "ropar;": "\u2986", "Ropf;": "\u211D", "ropf;": "\u{1D563}", "roplus;": "\u2A2E", "rotimes;": "\u2A35", "RoundImplies;": "\u2970", "rpar;": ")", "rpargt;": "\u2994", "rppolint;": "\u2A12", "rrarr;": "\u21C9", "Rrightarrow;": "\u21DB", "rsaquo;": "\u203A", "Rscr;": "\u211B", "rscr;": "\u{1D4C7}", "Rsh;": "\u21B1", "rsh;": "\u21B1", "rsqb;": "]", "rsquo;": "\u2019", "rsquor;": "\u2019", "rthree;": "\u22CC", "rtimes;": "\u22CA", "rtri;": "\u25B9", "rtrie;": "\u22B5", "rtrif;": "\u25B8", "rtriltri;": "\u29CE", "RuleDelayed;": "\u29F4", "ruluhar;": "\u2968", "rx;": "\u211E", "Sacute;": "\u015A", "sacute;": "\u015B", "sbquo;": "\u201A", "Sc;": "\u2ABC", "sc;": "\u227B", "scap;": "\u2AB8", "Scaron;": "\u0160", "scaron;": "\u0161", "sccue;": "\u227D", "scE;": "\u2AB4", "sce;": "\u2AB0", "Scedil;": "\u015E", "scedil;": "\u015F", "Scirc;": "\u015C", "scirc;": "\u015D", "scnap;": "\u2ABA", "scnE;": "\u2AB6", "scnsim;": "\u22E9", "scpolint;": "\u2A13", "scsim;": "\u227F", "Scy;": "\u0421", "scy;": "\u0441", "sdot;": "\u22C5", "sdotb;": "\u22A1", "sdote;": "\u2A66", "searhk;": "\u2925", "seArr;": "\u21D8", "searr;": "\u2198", "searrow;": "\u2198", "sect;": "\xA7", sect: "\xA7", "semi;": ";", "seswar;": "\u2929", "setminus;": "\u2216", "setmn;": "\u2216", "sext;": "\u2736", "Sfr;": "\u{1D516}", "sfr;": "\u{1D530}", "sfrown;": "\u2322", "sharp;": "\u266F", "SHCHcy;": "\u0429", "shchcy;": "\u0449", "SHcy;": "\u0428", "shcy;": "\u0448", "ShortDownArrow;": "\u2193", "ShortLeftArrow;": "\u2190", "shortmid;": "\u2223", "shortparallel;": "\u2225", "ShortRightArrow;": "\u2192", "ShortUpArrow;": "\u2191", "shy;": "\xAD", shy: "\xAD", "Sigma;": "\u03A3", "sigma;": "\u03C3", "sigmaf;": "\u03C2", "sigmav;": "\u03C2", "sim;": "\u223C", "simdot;": "\u2A6A", "sime;": "\u2243", "simeq;": "\u2243", "simg;": "\u2A9E", "simgE;": "\u2AA0", "siml;": "\u2A9D", "simlE;": "\u2A9F", "simne;": "\u2246", "simplus;": "\u2A24", "simrarr;": "\u2972", "slarr;": "\u2190", "SmallCircle;": "\u2218", "smallsetminus;": "\u2216", "smashp;": "\u2A33", "smeparsl;": "\u29E4", "smid;": "\u2223", "smile;": "\u2323", "smt;": "\u2AAA", "smte;": "\u2AAC", "smtes;": "\u2AAC\uFE00", "SOFTcy;": "\u042C", "softcy;": "\u044C", "sol;": "/", "solb;": "\u29C4", "solbar;": "\u233F", "Sopf;": "\u{1D54A}", "sopf;": "\u{1D564}", "spades;": "\u2660", "spadesuit;": "\u2660", "spar;": "\u2225", "sqcap;": "\u2293", "sqcaps;": "\u2293\uFE00", "sqcup;": "\u2294", "sqcups;": "\u2294\uFE00", "Sqrt;": "\u221A", "sqsub;": "\u228F", "sqsube;": "\u2291", "sqsubset;": "\u228F", "sqsubseteq;": "\u2291", "sqsup;": "\u2290", "sqsupe;": "\u2292", "sqsupset;": "\u2290", "sqsupseteq;": "\u2292", "squ;": "\u25A1", "Square;": "\u25A1", "square;": "\u25A1", "SquareIntersection;": "\u2293", "SquareSubset;": "\u228F", "SquareSubsetEqual;": "\u2291", "SquareSuperset;": "\u2290", "SquareSupersetEqual;": "\u2292", "SquareUnion;": "\u2294", "squarf;": "\u25AA", "squf;": "\u25AA", "srarr;": "\u2192", "Sscr;": "\u{1D4AE}", "sscr;": "\u{1D4C8}", "ssetmn;": "\u2216", "ssmile;": "\u2323", "sstarf;": "\u22C6", "Star;": "\u22C6", "star;": "\u2606", "starf;": "\u2605", "straightepsilon;": "\u03F5", "straightphi;": "\u03D5", "strns;": "\xAF", "Sub;": "\u22D0", "sub;": "\u2282", "subdot;": "\u2ABD", "subE;": "\u2AC5", "sube;": "\u2286", "subedot;": "\u2AC3", "submult;": "\u2AC1", "subnE;": "\u2ACB", "subne;": "\u228A", "subplus;": "\u2ABF", "subrarr;": "\u2979", "Subset;": "\u22D0", "subset;": "\u2282", "subseteq;": "\u2286", "subseteqq;": "\u2AC5", "SubsetEqual;": "\u2286", "subsetneq;": "\u228A", "subsetneqq;": "\u2ACB", "subsim;": "\u2AC7", "subsub;": "\u2AD5", "subsup;": "\u2AD3", "succ;": "\u227B", "succapprox;": "\u2AB8", "succcurlyeq;": "\u227D", "Succeeds;": "\u227B", "SucceedsEqual;": "\u2AB0", "SucceedsSlantEqual;": "\u227D", "SucceedsTilde;": "\u227F", "succeq;": "\u2AB0", "succnapprox;": "\u2ABA", "succneqq;": "\u2AB6", "succnsim;": "\u22E9", "succsim;": "\u227F", "SuchThat;": "\u220B", "Sum;": "\u2211", "sum;": "\u2211", "sung;": "\u266A", "Sup;": "\u22D1", "sup;": "\u2283", "sup1;": "\xB9", sup1: "\xB9", "sup2;": "\xB2", sup2: "\xB2", "sup3;": "\xB3", sup3: "\xB3", "supdot;": "\u2ABE", "supdsub;": "\u2AD8", "supE;": "\u2AC6", "supe;": "\u2287", "supedot;": "\u2AC4", "Superset;": "\u2283", "SupersetEqual;": "\u2287", "suphsol;": "\u27C9", "suphsub;": "\u2AD7", "suplarr;": "\u297B", "supmult;": "\u2AC2", "supnE;": "\u2ACC", "supne;": "\u228B", "supplus;": "\u2AC0", "Supset;": "\u22D1", "supset;": "\u2283", "supseteq;": "\u2287", "supseteqq;": "\u2AC6", "supsetneq;": "\u228B", "supsetneqq;": "\u2ACC", "supsim;": "\u2AC8", "supsub;": "\u2AD4", "supsup;": "\u2AD6", "swarhk;": "\u2926", "swArr;": "\u21D9", "swarr;": "\u2199", "swarrow;": "\u2199", "swnwar;": "\u292A", "szlig;": "\xDF", szlig: "\xDF", "Tab;": "	", "target;": "\u2316", "Tau;": "\u03A4", "tau;": "\u03C4", "tbrk;": "\u23B4", "Tcaron;": "\u0164", "tcaron;": "\u0165", "Tcedil;": "\u0162", "tcedil;": "\u0163", "Tcy;": "\u0422", "tcy;": "\u0442", "tdot;": "\u20DB", "telrec;": "\u2315", "Tfr;": "\u{1D517}", "tfr;": "\u{1D531}", "there4;": "\u2234", "Therefore;": "\u2234", "therefore;": "\u2234", "Theta;": "\u0398", "theta;": "\u03B8", "thetasym;": "\u03D1", "thetav;": "\u03D1", "thickapprox;": "\u2248", "thicksim;": "\u223C", "ThickSpace;": "\u205F\u200A", "thinsp;": "\u2009", "ThinSpace;": "\u2009", "thkap;": "\u2248", "thksim;": "\u223C", "THORN;": "\xDE", THORN: "\xDE", "thorn;": "\xFE", thorn: "\xFE", "Tilde;": "\u223C", "tilde;": "\u02DC", "TildeEqual;": "\u2243", "TildeFullEqual;": "\u2245", "TildeTilde;": "\u2248", "times;": "\xD7", times: "\xD7", "timesb;": "\u22A0", "timesbar;": "\u2A31", "timesd;": "\u2A30", "tint;": "\u222D", "toea;": "\u2928", "top;": "\u22A4", "topbot;": "\u2336", "topcir;": "\u2AF1", "Topf;": "\u{1D54B}", "topf;": "\u{1D565}", "topfork;": "\u2ADA", "tosa;": "\u2929", "tprime;": "\u2034", "TRADE;": "\u2122", "trade;": "\u2122", "triangle;": "\u25B5", "triangledown;": "\u25BF", "triangleleft;": "\u25C3", "trianglelefteq;": "\u22B4", "triangleq;": "\u225C", "triangleright;": "\u25B9", "trianglerighteq;": "\u22B5", "tridot;": "\u25EC", "trie;": "\u225C", "triminus;": "\u2A3A", "TripleDot;": "\u20DB", "triplus;": "\u2A39", "trisb;": "\u29CD", "tritime;": "\u2A3B", "trpezium;": "\u23E2", "Tscr;": "\u{1D4AF}", "tscr;": "\u{1D4C9}", "TScy;": "\u0426", "tscy;": "\u0446", "TSHcy;": "\u040B", "tshcy;": "\u045B", "Tstrok;": "\u0166", "tstrok;": "\u0167", "twixt;": "\u226C", "twoheadleftarrow;": "\u219E", "twoheadrightarrow;": "\u21A0", "Uacute;": "\xDA", Uacute: "\xDA", "uacute;": "\xFA", uacute: "\xFA", "Uarr;": "\u219F", "uArr;": "\u21D1", "uarr;": "\u2191", "Uarrocir;": "\u2949", "Ubrcy;": "\u040E", "ubrcy;": "\u045E", "Ubreve;": "\u016C", "ubreve;": "\u016D", "Ucirc;": "\xDB", Ucirc: "\xDB", "ucirc;": "\xFB", ucirc: "\xFB", "Ucy;": "\u0423", "ucy;": "\u0443", "udarr;": "\u21C5", "Udblac;": "\u0170", "udblac;": "\u0171", "udhar;": "\u296E", "ufisht;": "\u297E", "Ufr;": "\u{1D518}", "ufr;": "\u{1D532}", "Ugrave;": "\xD9", Ugrave: "\xD9", "ugrave;": "\xF9", ugrave: "\xF9", "uHar;": "\u2963", "uharl;": "\u21BF", "uharr;": "\u21BE", "uhblk;": "\u2580", "ulcorn;": "\u231C", "ulcorner;": "\u231C", "ulcrop;": "\u230F", "ultri;": "\u25F8", "Umacr;": "\u016A", "umacr;": "\u016B", "uml;": "\xA8", uml: "\xA8", "UnderBar;": "_", "UnderBrace;": "\u23DF", "UnderBracket;": "\u23B5", "UnderParenthesis;": "\u23DD", "Union;": "\u22C3", "UnionPlus;": "\u228E", "Uogon;": "\u0172", "uogon;": "\u0173", "Uopf;": "\u{1D54C}", "uopf;": "\u{1D566}", "UpArrow;": "\u2191", "Uparrow;": "\u21D1", "uparrow;": "\u2191", "UpArrowBar;": "\u2912", "UpArrowDownArrow;": "\u21C5", "UpDownArrow;": "\u2195", "Updownarrow;": "\u21D5", "updownarrow;": "\u2195", "UpEquilibrium;": "\u296E", "upharpoonleft;": "\u21BF", "upharpoonright;": "\u21BE", "uplus;": "\u228E", "UpperLeftArrow;": "\u2196", "UpperRightArrow;": "\u2197", "Upsi;": "\u03D2", "upsi;": "\u03C5", "upsih;": "\u03D2", "Upsilon;": "\u03A5", "upsilon;": "\u03C5", "UpTee;": "\u22A5", "UpTeeArrow;": "\u21A5", "upuparrows;": "\u21C8", "urcorn;": "\u231D", "urcorner;": "\u231D", "urcrop;": "\u230E", "Uring;": "\u016E", "uring;": "\u016F", "urtri;": "\u25F9", "Uscr;": "\u{1D4B0}", "uscr;": "\u{1D4CA}", "utdot;": "\u22F0", "Utilde;": "\u0168", "utilde;": "\u0169", "utri;": "\u25B5", "utrif;": "\u25B4", "uuarr;": "\u21C8", "Uuml;": "\xDC", Uuml: "\xDC", "uuml;": "\xFC", uuml: "\xFC", "uwangle;": "\u29A7", "vangrt;": "\u299C", "varepsilon;": "\u03F5", "varkappa;": "\u03F0", "varnothing;": "\u2205", "varphi;": "\u03D5", "varpi;": "\u03D6", "varpropto;": "\u221D", "vArr;": "\u21D5", "varr;": "\u2195", "varrho;": "\u03F1", "varsigma;": "\u03C2", "varsubsetneq;": "\u228A\uFE00", "varsubsetneqq;": "\u2ACB\uFE00", "varsupsetneq;": "\u228B\uFE00", "varsupsetneqq;": "\u2ACC\uFE00", "vartheta;": "\u03D1", "vartriangleleft;": "\u22B2", "vartriangleright;": "\u22B3", "Vbar;": "\u2AEB", "vBar;": "\u2AE8", "vBarv;": "\u2AE9", "Vcy;": "\u0412", "vcy;": "\u0432", "VDash;": "\u22AB", "Vdash;": "\u22A9", "vDash;": "\u22A8", "vdash;": "\u22A2", "Vdashl;": "\u2AE6", "Vee;": "\u22C1", "vee;": "\u2228", "veebar;": "\u22BB", "veeeq;": "\u225A", "vellip;": "\u22EE", "Verbar;": "\u2016", "verbar;": "|", "Vert;": "\u2016", "vert;": "|", "VerticalBar;": "\u2223", "VerticalLine;": "|", "VerticalSeparator;": "\u2758", "VerticalTilde;": "\u2240", "VeryThinSpace;": "\u200A", "Vfr;": "\u{1D519}", "vfr;": "\u{1D533}", "vltri;": "\u22B2", "vnsub;": "\u2282\u20D2", "vnsup;": "\u2283\u20D2", "Vopf;": "\u{1D54D}", "vopf;": "\u{1D567}", "vprop;": "\u221D", "vrtri;": "\u22B3", "Vscr;": "\u{1D4B1}", "vscr;": "\u{1D4CB}", "vsubnE;": "\u2ACB\uFE00", "vsubne;": "\u228A\uFE00", "vsupnE;": "\u2ACC\uFE00", "vsupne;": "\u228B\uFE00", "Vvdash;": "\u22AA", "vzigzag;": "\u299A", "Wcirc;": "\u0174", "wcirc;": "\u0175", "wedbar;": "\u2A5F", "Wedge;": "\u22C0", "wedge;": "\u2227", "wedgeq;": "\u2259", "weierp;": "\u2118", "Wfr;": "\u{1D51A}", "wfr;": "\u{1D534}", "Wopf;": "\u{1D54E}", "wopf;": "\u{1D568}", "wp;": "\u2118", "wr;": "\u2240", "wreath;": "\u2240", "Wscr;": "\u{1D4B2}", "wscr;": "\u{1D4CC}", "xcap;": "\u22C2", "xcirc;": "\u25EF", "xcup;": "\u22C3", "xdtri;": "\u25BD", "Xfr;": "\u{1D51B}", "xfr;": "\u{1D535}", "xhArr;": "\u27FA", "xharr;": "\u27F7", "Xi;": "\u039E", "xi;": "\u03BE", "xlArr;": "\u27F8", "xlarr;": "\u27F5", "xmap;": "\u27FC", "xnis;": "\u22FB", "xodot;": "\u2A00", "Xopf;": "\u{1D54F}", "xopf;": "\u{1D569}", "xoplus;": "\u2A01", "xotime;": "\u2A02", "xrArr;": "\u27F9", "xrarr;": "\u27F6", "Xscr;": "\u{1D4B3}", "xscr;": "\u{1D4CD}", "xsqcup;": "\u2A06", "xuplus;": "\u2A04", "xutri;": "\u25B3", "xvee;": "\u22C1", "xwedge;": "\u22C0", "Yacute;": "\xDD", Yacute: "\xDD", "yacute;": "\xFD", yacute: "\xFD", "YAcy;": "\u042F", "yacy;": "\u044F", "Ycirc;": "\u0176", "ycirc;": "\u0177", "Ycy;": "\u042B", "ycy;": "\u044B", "yen;": "\xA5", yen: "\xA5", "Yfr;": "\u{1D51C}", "yfr;": "\u{1D536}", "YIcy;": "\u0407", "yicy;": "\u0457", "Yopf;": "\u{1D550}", "yopf;": "\u{1D56A}", "Yscr;": "\u{1D4B4}", "yscr;": "\u{1D4CE}", "YUcy;": "\u042E", "yucy;": "\u044E", "Yuml;": "\u0178", "yuml;": "\xFF", yuml: "\xFF", "Zacute;": "\u0179", "zacute;": "\u017A", "Zcaron;": "\u017D", "zcaron;": "\u017E", "Zcy;": "\u0417", "zcy;": "\u0437", "Zdot;": "\u017B", "zdot;": "\u017C", "zeetrf;": "\u2128", "ZeroWidthSpace;": "\u200B", "Zeta;": "\u0396", "zeta;": "\u03B6", "Zfr;": "\u2128", "zfr;": "\u{1D537}", "ZHcy;": "\u0416", "zhcy;": "\u0436", "zigrarr;": "\u21DD", "Zopf;": "\u2124", "zopf;": "\u{1D56B}", "Zscr;": "\u{1D4B5}", "zscr;": "\u{1D4CF}", "zwj;": "\u200D", "zwnj;": "\u200C"};
  function Fe(e2, t2) {
    if (e2.length < t2.length)
      return false;
    for (var n2 = 0; n2 < t2.length; n2++)
      if (e2[n2] !== t2[n2])
        return false;
    return true;
  }
  function We(e2, t2) {
    for (var n2 = ""; t2 > 0; )
      (1 & t2) == 1 && (n2 += e2), e2 += e2, t2 >>>= 1;
    return n2;
  }
  var ze = "a".charCodeAt(0), Be = "z".charCodeAt(0), je = "A".charCodeAt(0), Ve = "Z".charCodeAt(0), Ue = "0".charCodeAt(0), He = "9".charCodeAt(0);
  function qe(e2, t2) {
    var n2 = e2.charCodeAt(t2);
    return ze <= n2 && n2 <= Be || je <= n2 && n2 <= Ve || Ue <= n2 && n2 <= He;
  }
  function $e(e2) {
    return e2 !== void 0;
  }
  var Ke = function() {
    function e2(e3, t2) {
      var n2 = this;
      this.id = e3, this._tags = [], this._tagMap = {}, this._valueSetMap = {}, this._tags = t2.tags || [], this._globalAttributes = t2.globalAttributes || [], this._tags.forEach(function(e4) {
        n2._tagMap[e4.name.toLowerCase()] = e4;
      }), t2.valueSets && t2.valueSets.forEach(function(e4) {
        n2._valueSetMap[e4.name] = e4.values;
      });
    }
    return e2.prototype.isApplicable = function() {
      return true;
    }, e2.prototype.getId = function() {
      return this.id;
    }, e2.prototype.provideTags = function() {
      return this._tags;
    }, e2.prototype.provideAttributes = function(e3) {
      var t2 = [], n2 = function(e4) {
        t2.push(e4);
      }, i2 = this._tagMap[e3.toLowerCase()];
      return i2 && i2.attributes.forEach(n2), this._globalAttributes.forEach(n2), t2;
    }, e2.prototype.provideValues = function(e3, t2) {
      var n2 = this, i2 = [];
      t2 = t2.toLowerCase();
      var r2 = function(e4) {
        e4.forEach(function(e5) {
          e5.name.toLowerCase() === t2 && (e5.values && e5.values.forEach(function(e6) {
            i2.push(e6);
          }), e5.valueSet && n2._valueSetMap[e5.valueSet] && n2._valueSetMap[e5.valueSet].forEach(function(e6) {
            i2.push(e6);
          }));
        });
      }, o2 = this._tagMap[e3.toLowerCase()];
      return o2 ? (r2(o2.attributes), r2(this._globalAttributes), i2) : [];
    }, e2;
  }();
  function Ge(e2, t2) {
    var n2 = {kind: t2 ? "markdown" : "plaintext", value: ""};
    if (e2.description) {
      var i2 = function(e3) {
        if (e3)
          return typeof e3 == "string" ? {kind: "markdown", value: e3} : {kind: "markdown", value: e3.value};
      }(e2.description);
      i2 && (n2.value += i2.value);
    }
    if (e2.references && e2.references.length > 0 && (n2.value += "\n\n", n2.value += t2 ? e2.references.map(function(e3) {
      return "[" + e3.name + "](" + e3.url + ")";
    }).join(" | ") : e2.references.map(function(e3) {
      return e3.name + ": " + e3.url;
    }).join("\n")), n2.value !== "")
      return n2;
  }
  var Ye = function(e2, t2, n2, i2) {
    return new (n2 || (n2 = Promise))(function(r2, o2) {
      function s2(e3) {
        try {
          l2(i2.next(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function a2(e3) {
        try {
          l2(i2.throw(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function l2(e3) {
        var t3;
        e3.done ? r2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
          e4(t3);
        })).then(s2, a2);
      }
      l2((i2 = i2.apply(e2, t2 || [])).next());
    });
  }, Ze = function(e2, t2) {
    var n2, i2, r2, o2, s2 = {label: 0, sent: function() {
      if (1 & r2[0])
        throw r2[1];
      return r2[1];
    }, trys: [], ops: []};
    return o2 = {next: a2(0), throw: a2(1), return: a2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
      return this;
    }), o2;
    function a2(o3) {
      return function(a3) {
        return function(o4) {
          if (n2)
            throw new TypeError("Generator is already executing.");
          for (; s2; )
            try {
              if (n2 = 1, i2 && (r2 = 2 & o4[0] ? i2.return : o4[0] ? i2.throw || ((r2 = i2.return) && r2.call(i2), 0) : i2.next) && !(r2 = r2.call(i2, o4[1])).done)
                return r2;
              switch (i2 = 0, r2 && (o4 = [2 & o4[0], r2.value]), o4[0]) {
                case 0:
                case 1:
                  r2 = o4;
                  break;
                case 4:
                  return s2.label++, {value: o4[1], done: false};
                case 5:
                  s2.label++, i2 = o4[1], o4 = [0];
                  continue;
                case 7:
                  o4 = s2.ops.pop(), s2.trys.pop();
                  continue;
                default:
                  if (!(r2 = s2.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                    s2 = 0;
                    continue;
                  }
                  if (o4[0] === 3 && (!r2 || o4[1] > r2[0] && o4[1] < r2[3])) {
                    s2.label = o4[1];
                    break;
                  }
                  if (o4[0] === 6 && s2.label < r2[1]) {
                    s2.label = r2[1], r2 = o4;
                    break;
                  }
                  if (r2 && s2.label < r2[2]) {
                    s2.label = r2[2], s2.ops.push(o4);
                    break;
                  }
                  r2[2] && s2.ops.pop(), s2.trys.pop();
                  continue;
              }
              o4 = t2.call(e2, s2);
            } catch (e3) {
              o4 = [6, e3], i2 = 0;
            } finally {
              n2 = r2 = 0;
            }
          if (5 & o4[0])
            throw o4[1];
          return {value: o4[0] ? o4[1] : void 0, done: true};
        }([o3, a3]);
      };
    }
  }, Xe = function() {
    function e2(e3) {
      this.readDirectory = e3, this.atributeCompletions = [];
    }
    return e2.prototype.onHtmlAttributeValue = function(e3) {
      (function(e4, t2) {
        var n2 = tt[e4];
        if (n2)
          return typeof n2 == "string" ? n2 === t2 : n2.indexOf(t2) !== -1;
        return false;
      })(e3.tag, e3.attribute) && this.atributeCompletions.push(e3);
    }, e2.prototype.computeCompletions = function(e3, t2) {
      return Ye(this, void 0, void 0, function() {
        var n2, i2, r2, o2, s2, l2, c2, d2, h2, u2;
        return Ze(this, function(p2) {
          switch (p2.label) {
            case 0:
              n2 = {items: [], isIncomplete: false}, i2 = 0, r2 = this.atributeCompletions, p2.label = 1;
            case 1:
              return i2 < r2.length ? (o2 = r2[i2], function(e4) {
                if (Fe(e4, "http") || Fe(e4, "https") || Fe(e4, "//"))
                  return false;
                return true;
              }(s2 = function(e4) {
                return Fe(e4, "'") || Fe(e4, '"') ? e4.slice(1, -1) : e4;
              }(e3.getText(o2.range))) ? s2 !== "." && s2 !== ".." ? [3, 2] : (n2.isIncomplete = true, [3, 4]) : [3, 4]) : [3, 5];
            case 2:
              return l2 = function(e4, t3, n3) {
                var i3, r3 = e4.lastIndexOf("/");
                if (r3 === -1)
                  i3 = function(e5, t4, n4) {
                    var i4 = et(e5.start, t4), r4 = et(e5.end, n4);
                    return a.create(i4, r4);
                  }(n3, 1, -1);
                else {
                  var o3 = t3.slice(r3 + 1), s3 = et(n3.end, -1 - o3.length), l3 = o3.indexOf(" "), c3 = void 0;
                  c3 = l3 !== -1 ? et(s3, l3) : et(n3.end, -1), i3 = a.create(s3, c3);
                }
                return i3;
              }(o2.value, s2, o2.range), [4, this.providePathSuggestions(o2.value, l2, e3, t2)];
            case 3:
              for (c2 = p2.sent(), d2 = 0, h2 = c2; d2 < h2.length; d2++)
                u2 = h2[d2], n2.items.push(u2);
              p2.label = 4;
            case 4:
              return i2++, [3, 1];
            case 5:
              return [2, n2];
          }
        });
      });
    }, e2.prototype.providePathSuggestions = function(e3, t2, n2, i2) {
      return Ye(this, void 0, void 0, function() {
        var r2, o2, s2, a2, l2, c2, d2, h2, u2;
        return Ze(this, function(p2) {
          switch (p2.label) {
            case 0:
              if (r2 = e3.substring(0, e3.lastIndexOf("/") + 1), !(o2 = i2.resolveReference(r2 || ".", n2.uri)))
                return [3, 4];
              p2.label = 1;
            case 1:
              return p2.trys.push([1, 3, , 4]), s2 = [], [4, this.readDirectory(o2)];
            case 2:
              for (a2 = p2.sent(), l2 = 0, c2 = a2; l2 < c2.length; l2++)
                d2 = c2[l2], h2 = d2[0], u2 = d2[1], h2.charCodeAt(0) !== Qe && s2.push(Je(h2, u2 === ce.Directory, t2));
              return [2, s2];
            case 3:
              return p2.sent(), [3, 4];
            case 4:
              return [2, []];
          }
        });
      });
    }, e2;
  }(), Qe = ".".charCodeAt(0);
  function Je(e2, t2, n2) {
    return t2 ? {label: e2 += "/", kind: O.Folder, textEdit: y.replace(n2, e2), command: {title: "Suggest", command: "editor.action.triggerSuggest"}} : {label: e2, kind: O.File, textEdit: y.replace(n2, e2)};
  }
  function et(e2, t2) {
    return s.create(e2.line, e2.character + t2);
  }
  var tt = {a: "href", area: "href", body: "background", del: "cite", form: "action", frame: ["src", "longdesc"], img: ["src", "longdesc"], ins: "cite", link: "href", object: "data", q: "cite", script: "src", audio: "src", button: "formaction", command: "icon", embed: "src", html: "manifest", input: ["src", "formaction"], source: "src", track: "src", video: ["src", "poster"]}, nt = function(e2, t2, n2, i2) {
    return new (n2 || (n2 = Promise))(function(r2, o2) {
      function s2(e3) {
        try {
          l2(i2.next(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function a2(e3) {
        try {
          l2(i2.throw(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function l2(e3) {
        var t3;
        e3.done ? r2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
          e4(t3);
        })).then(s2, a2);
      }
      l2((i2 = i2.apply(e2, t2 || [])).next());
    });
  }, it = function(e2, t2) {
    var n2, i2, r2, o2, s2 = {label: 0, sent: function() {
      if (1 & r2[0])
        throw r2[1];
      return r2[1];
    }, trys: [], ops: []};
    return o2 = {next: a2(0), throw: a2(1), return: a2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
      return this;
    }), o2;
    function a2(o3) {
      return function(a3) {
        return function(o4) {
          if (n2)
            throw new TypeError("Generator is already executing.");
          for (; s2; )
            try {
              if (n2 = 1, i2 && (r2 = 2 & o4[0] ? i2.return : o4[0] ? i2.throw || ((r2 = i2.return) && r2.call(i2), 0) : i2.next) && !(r2 = r2.call(i2, o4[1])).done)
                return r2;
              switch (i2 = 0, r2 && (o4 = [2 & o4[0], r2.value]), o4[0]) {
                case 0:
                case 1:
                  r2 = o4;
                  break;
                case 4:
                  return s2.label++, {value: o4[1], done: false};
                case 5:
                  s2.label++, i2 = o4[1], o4 = [0];
                  continue;
                case 7:
                  o4 = s2.ops.pop(), s2.trys.pop();
                  continue;
                default:
                  if (!(r2 = s2.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                    s2 = 0;
                    continue;
                  }
                  if (o4[0] === 3 && (!r2 || o4[1] > r2[0] && o4[1] < r2[3])) {
                    s2.label = o4[1];
                    break;
                  }
                  if (o4[0] === 6 && s2.label < r2[1]) {
                    s2.label = r2[1], r2 = o4;
                    break;
                  }
                  if (r2 && s2.label < r2[2]) {
                    s2.label = r2[2], s2.ops.push(o4);
                    break;
                  }
                  r2[2] && s2.ops.pop(), s2.trys.pop();
                  continue;
              }
              o4 = t2.call(e2, s2);
            } catch (e3) {
              o4 = [6, e3], i2 = 0;
            } finally {
              n2 = r2 = 0;
            }
          if (5 & o4[0])
            throw o4[1];
          return {value: o4[0] ? o4[1] : void 0, done: true};
        }([o3, a3]);
      };
    }
  }, rt = o(), ot = function() {
    function e2(e3, t2) {
      this.lsOptions = e3, this.dataManager = t2, this.completionParticipants = [];
    }
    return e2.prototype.setCompletionParticipants = function(e3) {
      this.completionParticipants = e3 || [];
    }, e2.prototype.doComplete2 = function(e3, t2, n2, i2, r2) {
      return nt(this, void 0, void 0, function() {
        var o2, s2, a2, l2;
        return it(this, function(c2) {
          switch (c2.label) {
            case 0:
              if (!this.lsOptions.fileSystemProvider || !this.lsOptions.fileSystemProvider.readDirectory)
                return [2, this.doComplete(e3, t2, n2, r2)];
              o2 = new Xe(this.lsOptions.fileSystemProvider.readDirectory), s2 = this.completionParticipants, this.completionParticipants = [o2].concat(s2), a2 = this.doComplete(e3, t2, n2, r2), c2.label = 1;
            case 1:
              return c2.trys.push([1, , 3, 4]), [4, o2.computeCompletions(e3, i2)];
            case 2:
              return l2 = c2.sent(), [2, {isIncomplete: a2.isIncomplete || l2.isIncomplete, items: l2.items.concat(a2.items)}];
            case 3:
              return this.completionParticipants = s2, [7];
            case 4:
              return [2];
          }
        });
      });
    }, e2.prototype.doComplete = function(e3, t2, n2, i2) {
      var r2 = this._doComplete(e3, t2, n2, i2);
      return this.convertCompletionList(r2);
    }, e2.prototype._doComplete = function(e3, t2, n2, i2) {
      var r2 = {isIncomplete: false, items: []}, o2 = this.completionParticipants, l2 = this.dataManager.getDataProviders().filter(function(t3) {
        return t3.isApplicable(e3.languageId) && (!i2 || i2[t3.getId()] !== false);
      }), c2 = this.doesSupportMarkdown(), d2 = e3.getText(), h2 = e3.offsetAt(t2), u2 = n2.findNodeBefore(h2);
      if (!u2)
        return r2;
      var p2, m2 = Ie(d2, u2.start), g2 = "";
      function f2(t3, n3) {
        return n3 === void 0 && (n3 = h2), t3 > h2 && (t3 = h2), {start: e3.positionAt(t3), end: e3.positionAt(n3)};
      }
      function b2(e4, t3) {
        var n3 = f2(e4, t3);
        return l2.forEach(function(e5) {
          e5.provideTags().forEach(function(e6) {
            r2.items.push({label: e6.name, kind: O.Property, documentation: Ge(e6, c2), textEdit: y.replace(n3, e6.name), insertTextFormat: A.PlainText});
          });
        }), r2;
      }
      function _2(e4) {
        for (var t3 = e4; t3 > 0; ) {
          var n3 = d2.charAt(t3 - 1);
          if ("\n\r".indexOf(n3) >= 0)
            return d2.substring(t3, e4);
          if (!st(n3))
            return null;
          t3--;
        }
        return d2.substring(0, e4);
      }
      function v2(e4, t3, n3) {
        n3 === void 0 && (n3 = h2);
        var i3 = f2(e4, n3), o3 = at(d2, n3, ae.WithinEndTag, se.EndTagClose) ? "" : ">", s2 = u2;
        for (t3 && (s2 = s2.parent); s2; ) {
          var a2 = s2.tag;
          if (a2 && (!s2.closed || s2.endTagStart && s2.endTagStart > h2)) {
            var p3 = {label: "/" + a2, kind: O.Property, filterText: "/" + a2, textEdit: y.replace(i3, "/" + a2 + o3), insertTextFormat: A.PlainText}, m3 = _2(s2.start), g3 = _2(e4 - 1);
            if (m3 !== null && g3 !== null && m3 !== g3) {
              var b3 = m3 + "</" + a2 + o3;
              p3.textEdit = y.replace(f2(e4 - 1 - g3.length), b3), p3.filterText = g3 + "</" + a2;
            }
            return r2.items.push(p3), r2;
          }
          s2 = s2.parent;
        }
        return t3 || l2.forEach(function(e5) {
          e5.provideTags().forEach(function(e6) {
            r2.items.push({label: "/" + e6.name, kind: O.Property, documentation: Ge(e6, c2), filterText: "/" + e6 + o3, textEdit: y.replace(i3, "/" + e6 + o3), insertTextFormat: A.PlainText});
          });
        }), r2;
      }
      function w2(t3, n3) {
        if (i2 && i2.hideAutoCompleteProposals)
          return r2;
        if (!Ae(n3)) {
          var o3 = e3.positionAt(t3);
          r2.items.push({label: "</" + n3 + ">", kind: O.Property, filterText: "</" + n3 + ">", textEdit: y.insert(o3, "$0</" + n3 + ">"), insertTextFormat: A.Snippet});
        }
        return r2;
      }
      function C2(e4, t3) {
        return b2(e4, t3), v2(e4, true, t3), r2;
      }
      function x2(e4, t3) {
        t3 === void 0 && (t3 = h2);
        for (var i3 = h2; i3 < t3 && d2[i3] !== "<"; )
          i3++;
        var o3 = f2(e4, i3), s2 = at(d2, t3, ae.AfterAttributeName, se.DelimiterAssign) ? "" : '="$1"', a2 = Object.create(null);
        return l2.forEach(function(e5) {
          e5.provideAttributes(g2).forEach(function(e6) {
            if (!a2[e6.name]) {
              a2[e6.name] = true;
              var t4, n3 = e6.name;
              e6.valueSet !== "v" && s2.length && (n3 += s2, (e6.valueSet || e6.name === "style") && (t4 = {title: "Suggest", command: "editor.action.triggerSuggest"})), r2.items.push({label: e6.name, kind: e6.valueSet === "handler" ? O.Function : O.Value, documentation: Ge(e6, c2), textEdit: y.replace(o3, n3), insertTextFormat: A.Snippet, command: t4});
            }
          });
        }), function(e5, t4) {
          var i4 = {};
          i4["data-"] = 'data-$1="$2"', n2 && n2.roots.forEach(function(e6) {
            return function e7(n3) {
              n3.attributeNames.forEach(function(e8) {
                !Fe(e8, "data-") || i4[e8] || t4[e8] || (i4[e8] = e8 + '="$1"');
              }), n3.children.forEach(function(t5) {
                return e7(t5);
              });
            }(e6);
          });
          Object.keys(i4).forEach(function(t5) {
            return r2.items.push({label: t5, kind: O.Value, textEdit: y.replace(e5, i4[t5]), insertTextFormat: A.Snippet});
          });
        }(o3, a2), r2;
      }
      function S2(n3, i3) {
        var s2, a2, u3, m3;
        if (i3 === void 0 && (i3 = h2), h2 > n3 && h2 <= i3 && (m3 = d2[n3], /^["']*$/.test(m3))) {
          var b3 = n3 + 1, _3 = i3;
          i3 > n3 && d2[i3 - 1] === d2[n3] && _3--;
          var v3 = function(e4, t3, n4) {
            for (; t3 > n4 && !st(e4[t3 - 1]); )
              t3--;
            return t3;
          }(d2, h2, b3), w3 = function(e4, t3, n4) {
            for (; t3 < n4 && !st(e4[t3]); )
              t3++;
            return t3;
          }(d2, h2, _3);
          s2 = f2(v3, w3), u3 = h2 >= b3 && h2 <= _3 ? d2.substring(b3, h2) : "", a2 = false;
        } else
          s2 = f2(n3, i3), u3 = d2.substring(n3, h2), a2 = true;
        if (o2.length > 0)
          for (var C3 = g2.toLowerCase(), x3 = p2.toLowerCase(), S3 = f2(n3, i3), k3 = 0, E3 = o2; k3 < E3.length; k3++) {
            var L3 = E3[k3];
            L3.onHtmlAttributeValue && L3.onHtmlAttributeValue({document: e3, position: t2, tag: C3, attribute: x3, value: u3, range: S3});
          }
        return l2.forEach(function(e4) {
          e4.provideValues(g2, p2).forEach(function(e5) {
            var t3 = a2 ? '"' + e5.name + '"' : e5.name;
            r2.items.push({label: e5.name, filterText: t3, kind: O.Unit, documentation: Ge(e5, c2), textEdit: y.replace(s2, t3), insertTextFormat: A.PlainText});
          });
        }), T2(), r2;
      }
      function k2(e4) {
        return h2 === m2.getTokenEnd() && (N2 = m2.scan()) === e4 && m2.getTokenOffset() === h2 ? m2.getTokenEnd() : h2;
      }
      function E2() {
        for (var n3 = 0, i3 = o2; n3 < i3.length; n3++) {
          var r3 = i3[n3];
          r3.onHtmlContent && r3.onHtmlContent({document: e3, position: t2});
        }
        return T2();
      }
      function T2() {
        for (var e4, n3, i3, o3 = h2 - 1, l3 = t2.character; o3 >= 0 && qe(d2, o3); )
          o3--, l3--;
        if (o3 >= 0 && d2[o3] === "&") {
          var c3 = a.create(s.create(t2.line, l3 - 1), t2);
          for (var u3 in Pe)
            if (n3 = ";", i3 = void 0, (i3 = (e4 = u3).length - n3.length) > 0 ? e4.lastIndexOf(n3) === i3 : i3 === 0 && e4 === n3) {
              var p3 = "&" + u3;
              r2.items.push({label: p3, kind: O.Keyword, documentation: rt("entity.propose", "Character entity representing '" + Pe[u3] + "'"), textEdit: y.replace(c3, p3), insertTextFormat: A.PlainText});
            }
        }
        return r2;
      }
      for (var L2, N2 = m2.scan(); N2 !== se.EOS && m2.getTokenOffset() <= h2; ) {
        switch (N2) {
          case se.StartTagOpen:
            if (m2.getTokenEnd() === h2) {
              var I2 = k2(se.StartTag);
              return t2.line === 0 && (L2 = void 0, L2 = f2(h2, I2), r2.items.push({label: "!DOCTYPE", kind: O.Property, documentation: "A preamble for an HTML document.", textEdit: y.replace(L2, "!DOCTYPE html>"), insertTextFormat: A.PlainText})), C2(h2, I2);
            }
            break;
          case se.StartTag:
            if (m2.getTokenOffset() <= h2 && h2 <= m2.getTokenEnd())
              return b2(m2.getTokenOffset(), m2.getTokenEnd());
            g2 = m2.getTokenText();
            break;
          case se.AttributeName:
            if (m2.getTokenOffset() <= h2 && h2 <= m2.getTokenEnd())
              return x2(m2.getTokenOffset(), m2.getTokenEnd());
            p2 = m2.getTokenText();
            break;
          case se.DelimiterAssign:
            if (m2.getTokenEnd() === h2) {
              I2 = k2(se.AttributeValue);
              return S2(h2, I2);
            }
            break;
          case se.AttributeValue:
            if (m2.getTokenOffset() <= h2 && h2 <= m2.getTokenEnd())
              return S2(m2.getTokenOffset(), m2.getTokenEnd());
            break;
          case se.Whitespace:
            if (h2 <= m2.getTokenEnd())
              switch (m2.getScannerState()) {
                case ae.AfterOpeningStartTag:
                  return C2(m2.getTokenOffset(), k2(se.StartTag));
                case ae.WithinTag:
                case ae.AfterAttributeName:
                  return x2(m2.getTokenEnd());
                case ae.BeforeAttributeValue:
                  return S2(m2.getTokenEnd());
                case ae.AfterOpeningEndTag:
                  return v2(m2.getTokenOffset() - 1, false);
                case ae.WithinContent:
                  return E2();
              }
            break;
          case se.EndTagOpen:
            if (h2 <= m2.getTokenEnd())
              return v2(m2.getTokenOffset() + 1, false, k2(se.EndTag));
            break;
          case se.EndTag:
            if (h2 <= m2.getTokenEnd())
              for (var D2 = m2.getTokenOffset() - 1; D2 >= 0; ) {
                var R2 = d2.charAt(D2);
                if (R2 === "/")
                  return v2(D2, false, m2.getTokenEnd());
                if (!st(R2))
                  break;
                D2--;
              }
            break;
          case se.StartTagClose:
            if (h2 <= m2.getTokenEnd() && g2)
              return w2(m2.getTokenEnd(), g2);
            break;
          case se.Content:
            if (h2 <= m2.getTokenEnd())
              return E2();
            break;
          default:
            if (h2 <= m2.getTokenEnd())
              return r2;
        }
        N2 = m2.scan();
      }
      return r2;
    }, e2.prototype.doTagComplete = function(e3, t2, n2) {
      var i2 = e3.offsetAt(t2);
      if (i2 <= 0)
        return null;
      var r2 = e3.getText().charAt(i2 - 1);
      if (r2 === ">") {
        if ((s2 = n2.findNodeBefore(i2)) && s2.tag && !Ae(s2.tag) && s2.start < i2 && (!s2.endTagStart || s2.endTagStart > i2))
          for (var o2 = (a2 = Ie(e3.getText(), s2.start)).scan(); o2 !== se.EOS && a2.getTokenEnd() <= i2; ) {
            if (o2 === se.StartTagClose && a2.getTokenEnd() === i2)
              return "$0</" + s2.tag + ">";
            o2 = a2.scan();
          }
      } else if (r2 === "/") {
        for (var s2 = n2.findNodeBefore(i2); s2 && s2.closed; )
          s2 = s2.parent;
        if (s2 && s2.tag) {
          var a2;
          for (o2 = (a2 = Ie(e3.getText(), s2.start)).scan(); o2 !== se.EOS && a2.getTokenEnd() <= i2; ) {
            if (o2 === se.EndTagOpen && a2.getTokenEnd() === i2)
              return s2.tag + ">";
            o2 = a2.scan();
          }
        }
      }
      return null;
    }, e2.prototype.convertCompletionList = function(e3) {
      return this.doesSupportMarkdown() || e3.items.forEach(function(e4) {
        e4.documentation && typeof e4.documentation != "string" && (e4.documentation = {kind: "plaintext", value: e4.documentation.value});
      }), e3;
    }, e2.prototype.doesSupportMarkdown = function() {
      var e3, t2, n2;
      if (!$e(this.supportsMarkdown)) {
        if (!$e(this.lsOptions.clientCapabilities))
          return this.supportsMarkdown = true, this.supportsMarkdown;
        var i2 = (n2 = (t2 = (e3 = this.lsOptions.clientCapabilities.textDocument) === null || e3 === void 0 ? void 0 : e3.completion) === null || t2 === void 0 ? void 0 : t2.completionItem) === null || n2 === void 0 ? void 0 : n2.documentationFormat;
        this.supportsMarkdown = Array.isArray(i2) && i2.indexOf(I.Markdown) !== -1;
      }
      return this.supportsMarkdown;
    }, e2;
  }();
  function st(e2) {
    return /^\s*$/.test(e2);
  }
  function at(e2, t2, n2, i2) {
    for (var r2 = Ie(e2, t2, n2), o2 = r2.scan(); o2 === se.Whitespace; )
      o2 = r2.scan();
    return o2 === i2;
  }
  var lt = function() {
    function e2(e3, t2) {
      this.lsOptions = e3, this.dataManager = t2;
    }
    return e2.prototype.doHover = function(e3, t2, n2) {
      var i2 = this.convertContents.bind(this), r2 = this.doesSupportMarkdown(), o2 = e3.offsetAt(t2), s2 = n2.findNodeAt(o2);
      if (!s2 || !s2.tag)
        return null;
      var a2 = this.dataManager.getDataProviders().filter(function(t3) {
        return t3.isApplicable(e3.languageId);
      });
      function l2(e4, t3, n3) {
        for (var o3 = function(n4) {
          var o4 = null;
          if (n4.provideTags().forEach(function(n5) {
            if (n5.name.toLowerCase() === e4.toLowerCase()) {
              var i3 = Ge(n5, r2);
              i3 || (i3 = {kind: r2 ? "markdown" : "plaintext", value: ""}), o4 = {contents: i3, range: t3};
            }
          }), o4)
            return o4.contents = i2(o4.contents), {value: o4};
        }, s3 = 0, l3 = a2; s3 < l3.length; s3++) {
          var c3 = o3(l3[s3]);
          if (typeof c3 == "object")
            return c3.value;
        }
        return null;
      }
      function c2(t3, n3) {
        for (var i3 = Ie(e3.getText(), n3), r3 = i3.scan(); r3 !== se.EOS && (i3.getTokenEnd() < o2 || i3.getTokenEnd() === o2 && r3 !== t3); )
          r3 = i3.scan();
        return r3 === t3 && o2 <= i3.getTokenEnd() ? {start: e3.positionAt(i3.getTokenOffset()), end: e3.positionAt(i3.getTokenEnd())} : null;
      }
      if (s2.endTagStart && o2 >= s2.endTagStart) {
        var d2 = c2(se.EndTag, s2.endTagStart);
        return d2 ? l2(s2.tag, d2) : null;
      }
      var h2 = c2(se.StartTag, s2.start);
      if (h2)
        return l2(s2.tag, h2);
      var u2 = c2(se.AttributeName, s2.start);
      if (u2)
        return function(e4, t3, n3) {
          for (var o3 = function(o4) {
            var s4 = null;
            if (o4.provideAttributes(e4).forEach(function(e5) {
              if (t3 === e5.name && e5.description) {
                var i3 = Ge(e5, r2);
                s4 = i3 ? {contents: i3, range: n3} : null;
              }
            }), s4)
              return s4.contents = i2(s4.contents), {value: s4};
          }, s3 = 0, l3 = a2; s3 < l3.length; s3++) {
            var c3 = o3(l3[s3]);
            if (typeof c3 == "object")
              return c3.value;
          }
          return null;
        }(m2 = s2.tag, e3.getText(u2), u2);
      var p2 = c2(se.AttributeValue, s2.start);
      if (p2) {
        var m2 = s2.tag, g2 = function(e4) {
          if (e4.length <= 1)
            return e4.replace(/['"]/, "");
          e4[0] !== "'" && e4[0] !== '"' || (e4 = e4.slice(1));
          e4[e4.length - 1] !== "'" && e4[e4.length - 1] !== '"' || (e4 = e4.slice(0, -1));
          return e4;
        }(e3.getText(p2)), f2 = function(t3, n3) {
          for (var i3 = Ie(e3.getText(), t3), r3 = i3.scan(), o3 = void 0; r3 !== se.EOS && i3.getTokenEnd() <= n3; )
            (r3 = i3.scan()) === se.AttributeName && (o3 = i3.getTokenText());
          return o3;
        }(s2.start, e3.offsetAt(p2.start));
        if (f2)
          return function(e4, t3, n3, o3) {
            for (var s3 = function(s4) {
              var a3 = null;
              if (s4.provideValues(e4, t3).forEach(function(e5) {
                if (n3 === e5.name && e5.description) {
                  var t4 = Ge(e5, r2);
                  a3 = t4 ? {contents: t4, range: o3} : null;
                }
              }), a3)
                return a3.contents = i2(a3.contents), {value: a3};
            }, l3 = 0, c3 = a2; l3 < c3.length; l3++) {
              var d3 = s3(c3[l3]);
              if (typeof d3 == "object")
                return d3.value;
            }
            return null;
          }(m2, f2, g2, p2);
      }
      return null;
    }, e2.prototype.convertContents = function(e3) {
      if (!this.doesSupportMarkdown()) {
        if (typeof e3 == "string")
          return e3;
        if ("kind" in e3)
          return {kind: "plaintext", value: e3.value};
        if (!Array.isArray(e3))
          return e3.value;
        e3.map(function(e4) {
          return typeof e4 == "string" ? e4 : e4.value;
        });
      }
      return e3;
    }, e2.prototype.doesSupportMarkdown = function() {
      var e3, t2, n2;
      if (!$e(this.supportsMarkdown)) {
        if (!$e(this.lsOptions.clientCapabilities))
          return this.supportsMarkdown = true, this.supportsMarkdown;
        var i2 = (n2 = (t2 = (e3 = this.lsOptions.clientCapabilities) === null || e3 === void 0 ? void 0 : e3.textDocument) === null || t2 === void 0 ? void 0 : t2.hover) === null || n2 === void 0 ? void 0 : n2.contentFormat;
        this.supportsMarkdown = Array.isArray(i2) && i2.indexOf(I.Markdown) !== -1;
      }
      return this.supportsMarkdown;
    }, e2;
  }();
  function ct(e2, t2) {
    return e2;
  }
  var dt = function(e2) {
    var t2 = {};
    function n2(i2) {
      if (t2[i2])
        return t2[i2].exports;
      var r2 = t2[i2] = {i: i2, l: false, exports: {}};
      return e2[i2].call(r2.exports, r2, r2.exports, n2), r2.l = true, r2.exports;
    }
    return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, i2) {
      n2.o(e3, t3) || Object.defineProperty(e3, t3, {enumerable: true, get: i2});
    }, n2.r = function(e3) {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e3, "__esModule", {value: true});
    }, n2.t = function(e3, t3) {
      if (1 & t3 && (e3 = n2(e3)), 8 & t3)
        return e3;
      if (4 & t3 && typeof e3 == "object" && e3 && e3.__esModule)
        return e3;
      var i2 = Object.create(null);
      if (n2.r(i2), Object.defineProperty(i2, "default", {enumerable: true, value: e3}), 2 & t3 && typeof e3 != "string")
        for (var r2 in e3)
          n2.d(i2, r2, function(t4) {
            return e3[t4];
          }.bind(null, r2));
      return i2;
    }, n2.n = function(e3) {
      var t3 = e3 && e3.__esModule ? function() {
        return e3.default;
      } : function() {
        return e3;
      };
      return n2.d(t3, "a", t3), t3;
    }, n2.o = function(e3, t3) {
      return Object.prototype.hasOwnProperty.call(e3, t3);
    }, n2.p = "", n2(n2.s = 15);
  }([, , function(e2, t2, n2) {
    function i2(e3) {
      this.__parent = e3, this.__character_count = 0, this.__indent_count = -1, this.__alignment_count = 0, this.__wrap_point_index = 0, this.__wrap_point_character_count = 0, this.__wrap_point_indent_count = -1, this.__wrap_point_alignment_count = 0, this.__items = [];
    }
    function r2(e3, t3) {
      this.__cache = [""], this.__indent_size = e3.indent_size, this.__indent_string = e3.indent_char, e3.indent_with_tabs || (this.__indent_string = new Array(e3.indent_size + 1).join(e3.indent_char)), t3 = t3 || "", e3.indent_level > 0 && (t3 = new Array(e3.indent_level + 1).join(this.__indent_string)), this.__base_string = t3, this.__base_string_length = t3.length;
    }
    function o2(e3, t3) {
      this.__indent_cache = new r2(e3, t3), this.raw = false, this._end_with_newline = e3.end_with_newline, this.indent_size = e3.indent_size, this.wrap_line_length = e3.wrap_line_length, this.indent_empty_lines = e3.indent_empty_lines, this.__lines = [], this.previous_line = null, this.current_line = null, this.next_line = new i2(this), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = false, this.__add_outputline();
    }
    i2.prototype.clone_empty = function() {
      var e3 = new i2(this.__parent);
      return e3.set_indent(this.__indent_count, this.__alignment_count), e3;
    }, i2.prototype.item = function(e3) {
      return e3 < 0 ? this.__items[this.__items.length + e3] : this.__items[e3];
    }, i2.prototype.has_match = function(e3) {
      for (var t3 = this.__items.length - 1; t3 >= 0; t3--)
        if (this.__items[t3].match(e3))
          return true;
      return false;
    }, i2.prototype.set_indent = function(e3, t3) {
      this.is_empty() && (this.__indent_count = e3 || 0, this.__alignment_count = t3 || 0, this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count));
    }, i2.prototype._set_wrap_point = function() {
      this.__parent.wrap_line_length && (this.__wrap_point_index = this.__items.length, this.__wrap_point_character_count = this.__character_count, this.__wrap_point_indent_count = this.__parent.next_line.__indent_count, this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count);
    }, i2.prototype._should_wrap = function() {
      return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count;
    }, i2.prototype._allow_wrap = function() {
      if (this._should_wrap()) {
        this.__parent.add_new_line();
        var e3 = this.__parent.current_line;
        return e3.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count), e3.__items = this.__items.slice(this.__wrap_point_index), this.__items = this.__items.slice(0, this.__wrap_point_index), e3.__character_count += this.__character_count - this.__wrap_point_character_count, this.__character_count = this.__wrap_point_character_count, e3.__items[0] === " " && (e3.__items.splice(0, 1), e3.__character_count -= 1), true;
      }
      return false;
    }, i2.prototype.is_empty = function() {
      return this.__items.length === 0;
    }, i2.prototype.last = function() {
      return this.is_empty() ? null : this.__items[this.__items.length - 1];
    }, i2.prototype.push = function(e3) {
      this.__items.push(e3);
      var t3 = e3.lastIndexOf("\n");
      t3 !== -1 ? this.__character_count = e3.length - t3 : this.__character_count += e3.length;
    }, i2.prototype.pop = function() {
      var e3 = null;
      return this.is_empty() || (e3 = this.__items.pop(), this.__character_count -= e3.length), e3;
    }, i2.prototype._remove_indent = function() {
      this.__indent_count > 0 && (this.__indent_count -= 1, this.__character_count -= this.__parent.indent_size);
    }, i2.prototype._remove_wrap_indent = function() {
      this.__wrap_point_indent_count > 0 && (this.__wrap_point_indent_count -= 1);
    }, i2.prototype.trim = function() {
      for (; this.last() === " "; )
        this.__items.pop(), this.__character_count -= 1;
    }, i2.prototype.toString = function() {
      var e3 = "";
      return this.is_empty() ? this.__parent.indent_empty_lines && (e3 = this.__parent.get_indent_string(this.__indent_count)) : (e3 = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count), e3 += this.__items.join("")), e3;
    }, r2.prototype.get_indent_size = function(e3, t3) {
      var n3 = this.__base_string_length;
      return t3 = t3 || 0, e3 < 0 && (n3 = 0), n3 += e3 * this.__indent_size, n3 += t3;
    }, r2.prototype.get_indent_string = function(e3, t3) {
      var n3 = this.__base_string;
      return t3 = t3 || 0, e3 < 0 && (e3 = 0, n3 = ""), t3 += e3 * this.__indent_size, this.__ensure_cache(t3), n3 += this.__cache[t3];
    }, r2.prototype.__ensure_cache = function(e3) {
      for (; e3 >= this.__cache.length; )
        this.__add_column();
    }, r2.prototype.__add_column = function() {
      var e3 = this.__cache.length, t3 = 0, n3 = "";
      this.__indent_size && e3 >= this.__indent_size && (e3 -= (t3 = Math.floor(e3 / this.__indent_size)) * this.__indent_size, n3 = new Array(t3 + 1).join(this.__indent_string)), e3 && (n3 += new Array(e3 + 1).join(" ")), this.__cache.push(n3);
    }, o2.prototype.__add_outputline = function() {
      this.previous_line = this.current_line, this.current_line = this.next_line.clone_empty(), this.__lines.push(this.current_line);
    }, o2.prototype.get_line_number = function() {
      return this.__lines.length;
    }, o2.prototype.get_indent_string = function(e3, t3) {
      return this.__indent_cache.get_indent_string(e3, t3);
    }, o2.prototype.get_indent_size = function(e3, t3) {
      return this.__indent_cache.get_indent_size(e3, t3);
    }, o2.prototype.is_empty = function() {
      return !this.previous_line && this.current_line.is_empty();
    }, o2.prototype.add_new_line = function(e3) {
      return !(this.is_empty() || !e3 && this.just_added_newline()) && (this.raw || this.__add_outputline(), true);
    }, o2.prototype.get_code = function(e3) {
      this.trim(true);
      var t3 = this.current_line.pop();
      t3 && (t3[t3.length - 1] === "\n" && (t3 = t3.replace(/\n+$/g, "")), this.current_line.push(t3)), this._end_with_newline && this.__add_outputline();
      var n3 = this.__lines.join("\n");
      return e3 !== "\n" && (n3 = n3.replace(/[\n]/g, e3)), n3;
    }, o2.prototype.set_wrap_point = function() {
      this.current_line._set_wrap_point();
    }, o2.prototype.set_indent = function(e3, t3) {
      return e3 = e3 || 0, t3 = t3 || 0, this.next_line.set_indent(e3, t3), this.__lines.length > 1 ? (this.current_line.set_indent(e3, t3), true) : (this.current_line.set_indent(), false);
    }, o2.prototype.add_raw_token = function(e3) {
      for (var t3 = 0; t3 < e3.newlines; t3++)
        this.__add_outputline();
      this.current_line.set_indent(-1), this.current_line.push(e3.whitespace_before), this.current_line.push(e3.text), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = false;
    }, o2.prototype.add_token = function(e3) {
      this.__add_space_before_token(), this.current_line.push(e3), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = this.current_line._allow_wrap();
    }, o2.prototype.__add_space_before_token = function() {
      this.space_before_token && !this.just_added_newline() && (this.non_breaking_space || this.set_wrap_point(), this.current_line.push(" "));
    }, o2.prototype.remove_indent = function(e3) {
      for (var t3 = this.__lines.length; e3 < t3; )
        this.__lines[e3]._remove_indent(), e3++;
      this.current_line._remove_wrap_indent();
    }, o2.prototype.trim = function(e3) {
      for (e3 = e3 !== void 0 && e3, this.current_line.trim(); e3 && this.__lines.length > 1 && this.current_line.is_empty(); )
        this.__lines.pop(), this.current_line = this.__lines[this.__lines.length - 1], this.current_line.trim();
      this.previous_line = this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;
    }, o2.prototype.just_added_newline = function() {
      return this.current_line.is_empty();
    }, o2.prototype.just_added_blankline = function() {
      return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty();
    }, o2.prototype.ensure_empty_line_above = function(e3, t3) {
      for (var n3 = this.__lines.length - 2; n3 >= 0; ) {
        var r3 = this.__lines[n3];
        if (r3.is_empty())
          break;
        if (r3.item(0).indexOf(e3) !== 0 && r3.item(-1) !== t3) {
          this.__lines.splice(n3 + 1, 0, new i2(this)), this.previous_line = this.__lines[this.__lines.length - 2];
          break;
        }
        n3--;
      }
    }, e2.exports.Output = o2;
  }, , , , function(e2, t2, n2) {
    function i2(e3, t3) {
      this.raw_options = r2(e3, t3), this.disabled = this._get_boolean("disabled"), this.eol = this._get_characters("eol", "auto"), this.end_with_newline = this._get_boolean("end_with_newline"), this.indent_size = this._get_number("indent_size", 4), this.indent_char = this._get_characters("indent_char", " "), this.indent_level = this._get_number("indent_level"), this.preserve_newlines = this._get_boolean("preserve_newlines", true), this.max_preserve_newlines = this._get_number("max_preserve_newlines", 32786), this.preserve_newlines || (this.max_preserve_newlines = 0), this.indent_with_tabs = this._get_boolean("indent_with_tabs", this.indent_char === "	"), this.indent_with_tabs && (this.indent_char = "	", this.indent_size === 1 && (this.indent_size = 4)), this.wrap_line_length = this._get_number("wrap_line_length", this._get_number("max_char")), this.indent_empty_lines = this._get_boolean("indent_empty_lines"), this.templating = this._get_selection_list("templating", ["auto", "none", "django", "erb", "handlebars", "php"], ["auto"]);
    }
    function r2(e3, t3) {
      var n3, i3 = {};
      for (n3 in e3 = o2(e3))
        n3 !== t3 && (i3[n3] = e3[n3]);
      if (t3 && e3[t3])
        for (n3 in e3[t3])
          i3[n3] = e3[t3][n3];
      return i3;
    }
    function o2(e3) {
      var t3, n3 = {};
      for (t3 in e3) {
        n3[t3.replace(/-/g, "_")] = e3[t3];
      }
      return n3;
    }
    i2.prototype._get_array = function(e3, t3) {
      var n3 = this.raw_options[e3], i3 = t3 || [];
      return typeof n3 == "object" ? n3 !== null && typeof n3.concat == "function" && (i3 = n3.concat()) : typeof n3 == "string" && (i3 = n3.split(/[^a-zA-Z0-9_\/\-]+/)), i3;
    }, i2.prototype._get_boolean = function(e3, t3) {
      var n3 = this.raw_options[e3];
      return n3 === void 0 ? !!t3 : !!n3;
    }, i2.prototype._get_characters = function(e3, t3) {
      var n3 = this.raw_options[e3], i3 = t3 || "";
      return typeof n3 == "string" && (i3 = n3.replace(/\\r/, "\r").replace(/\\n/, "\n").replace(/\\t/, "	")), i3;
    }, i2.prototype._get_number = function(e3, t3) {
      var n3 = this.raw_options[e3];
      t3 = parseInt(t3, 10), isNaN(t3) && (t3 = 0);
      var i3 = parseInt(n3, 10);
      return isNaN(i3) && (i3 = t3), i3;
    }, i2.prototype._get_selection = function(e3, t3, n3) {
      var i3 = this._get_selection_list(e3, t3, n3);
      if (i3.length !== 1)
        throw new Error("Invalid Option Value: The option '" + e3 + "' can only be one of the following values:\n" + t3 + "\nYou passed in: '" + this.raw_options[e3] + "'");
      return i3[0];
    }, i2.prototype._get_selection_list = function(e3, t3, n3) {
      if (!t3 || t3.length === 0)
        throw new Error("Selection list cannot be empty.");
      if (n3 = n3 || [t3[0]], !this._is_valid_selection(n3, t3))
        throw new Error("Invalid Default Value!");
      var i3 = this._get_array(e3, n3);
      if (!this._is_valid_selection(i3, t3))
        throw new Error("Invalid Option Value: The option '" + e3 + "' can contain only the following values:\n" + t3 + "\nYou passed in: '" + this.raw_options[e3] + "'");
      return i3;
    }, i2.prototype._is_valid_selection = function(e3, t3) {
      return e3.length && t3.length && !e3.some(function(e4) {
        return t3.indexOf(e4) === -1;
      });
    }, e2.exports.Options = i2, e2.exports.normalizeOpts = o2, e2.exports.mergeOpts = r2;
  }, , function(e2, t2, n2) {
    var i2 = RegExp.prototype.hasOwnProperty("sticky");
    function r2(e3) {
      this.__input = e3 || "", this.__input_length = this.__input.length, this.__position = 0;
    }
    r2.prototype.restart = function() {
      this.__position = 0;
    }, r2.prototype.back = function() {
      this.__position > 0 && (this.__position -= 1);
    }, r2.prototype.hasNext = function() {
      return this.__position < this.__input_length;
    }, r2.prototype.next = function() {
      var e3 = null;
      return this.hasNext() && (e3 = this.__input.charAt(this.__position), this.__position += 1), e3;
    }, r2.prototype.peek = function(e3) {
      var t3 = null;
      return e3 = e3 || 0, (e3 += this.__position) >= 0 && e3 < this.__input_length && (t3 = this.__input.charAt(e3)), t3;
    }, r2.prototype.__match = function(e3, t3) {
      e3.lastIndex = t3;
      var n3 = e3.exec(this.__input);
      return !n3 || i2 && e3.sticky || n3.index !== t3 && (n3 = null), n3;
    }, r2.prototype.test = function(e3, t3) {
      return t3 = t3 || 0, (t3 += this.__position) >= 0 && t3 < this.__input_length && !!this.__match(e3, t3);
    }, r2.prototype.testChar = function(e3, t3) {
      var n3 = this.peek(t3);
      return e3.lastIndex = 0, n3 !== null && e3.test(n3);
    }, r2.prototype.match = function(e3) {
      var t3 = this.__match(e3, this.__position);
      return t3 ? this.__position += t3[0].length : t3 = null, t3;
    }, r2.prototype.read = function(e3, t3, n3) {
      var i3, r3 = "";
      return e3 && (i3 = this.match(e3)) && (r3 += i3[0]), !t3 || !i3 && e3 || (r3 += this.readUntil(t3, n3)), r3;
    }, r2.prototype.readUntil = function(e3, t3) {
      var n3, i3 = this.__position;
      e3.lastIndex = this.__position;
      var r3 = e3.exec(this.__input);
      return r3 ? (i3 = r3.index, t3 && (i3 += r3[0].length)) : i3 = this.__input_length, n3 = this.__input.substring(this.__position, i3), this.__position = i3, n3;
    }, r2.prototype.readUntilAfter = function(e3) {
      return this.readUntil(e3, true);
    }, r2.prototype.get_regexp = function(e3, t3) {
      var n3 = null, r3 = "g";
      return t3 && i2 && (r3 = "y"), typeof e3 == "string" && e3 !== "" ? n3 = new RegExp(e3, r3) : e3 && (n3 = new RegExp(e3.source, r3)), n3;
    }, r2.prototype.get_literal_regexp = function(e3) {
      return RegExp(e3.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
    }, r2.prototype.peekUntilAfter = function(e3) {
      var t3 = this.__position, n3 = this.readUntilAfter(e3);
      return this.__position = t3, n3;
    }, r2.prototype.lookBack = function(e3) {
      var t3 = this.__position - 1;
      return t3 >= e3.length && this.__input.substring(t3 - e3.length, t3).toLowerCase() === e3;
    }, e2.exports.InputScanner = r2;
  }, , , , , function(e2, t2, n2) {
    function i2(e3, t3) {
      e3 = typeof e3 == "string" ? e3 : e3.source, t3 = typeof t3 == "string" ? t3 : t3.source, this.__directives_block_pattern = new RegExp(e3 + / beautify( \w+[:]\w+)+ /.source + t3, "g"), this.__directive_pattern = / (\w+)[:](\w+)/g, this.__directives_end_ignore_pattern = new RegExp(e3 + /\sbeautify\signore:end\s/.source + t3, "g");
    }
    i2.prototype.get_directives = function(e3) {
      if (!e3.match(this.__directives_block_pattern))
        return null;
      var t3 = {};
      this.__directive_pattern.lastIndex = 0;
      for (var n3 = this.__directive_pattern.exec(e3); n3; )
        t3[n3[1]] = n3[2], n3 = this.__directive_pattern.exec(e3);
      return t3;
    }, i2.prototype.readIgnored = function(e3) {
      return e3.readUntilAfter(this.__directives_end_ignore_pattern);
    }, e2.exports.Directives = i2;
  }, , function(e2, t2, n2) {
    var i2 = n2(16).Beautifier, r2 = n2(17).Options;
    e2.exports = function(e3, t3) {
      return new i2(e3, t3).beautify();
    }, e2.exports.defaultOptions = function() {
      return new r2();
    };
  }, function(e2, t2, n2) {
    var i2 = n2(17).Options, r2 = n2(2).Output, o2 = n2(8).InputScanner, s2 = new (0, n2(13).Directives)(/\/\*/, /\*\//), a2 = /\r\n|[\r\n]/, l2 = /\r\n|[\r\n]/g, c2 = /\s/, d2 = /(?:\s|\n)+/g, h2 = /\/\*(?:[\s\S]*?)((?:\*\/)|$)/g, u2 = /\/\/(?:[^\n\r\u2028\u2029]*)/g;
    function p2(e3, t3) {
      this._source_text = e3 || "", this._options = new i2(t3), this._ch = null, this._input = null, this.NESTED_AT_RULE = {"@page": true, "@font-face": true, "@keyframes": true, "@media": true, "@supports": true, "@document": true}, this.CONDITIONAL_GROUP_RULE = {"@media": true, "@supports": true, "@document": true};
    }
    p2.prototype.eatString = function(e3) {
      var t3 = "";
      for (this._ch = this._input.next(); this._ch; ) {
        if (t3 += this._ch, this._ch === "\\")
          t3 += this._input.next();
        else if (e3.indexOf(this._ch) !== -1 || this._ch === "\n")
          break;
        this._ch = this._input.next();
      }
      return t3;
    }, p2.prototype.eatWhitespace = function(e3) {
      for (var t3 = c2.test(this._input.peek()), n3 = true; c2.test(this._input.peek()); )
        this._ch = this._input.next(), e3 && this._ch === "\n" && (this._options.preserve_newlines || n3) && (n3 = false, this._output.add_new_line(true));
      return t3;
    }, p2.prototype.foundNestedPseudoClass = function() {
      for (var e3 = 0, t3 = 1, n3 = this._input.peek(t3); n3; ) {
        if (n3 === "{")
          return true;
        if (n3 === "(")
          e3 += 1;
        else if (n3 === ")") {
          if (e3 === 0)
            return false;
          e3 -= 1;
        } else if (n3 === ";" || n3 === "}")
          return false;
        t3++, n3 = this._input.peek(t3);
      }
      return false;
    }, p2.prototype.print_string = function(e3) {
      this._output.set_indent(this._indentLevel), this._output.non_breaking_space = true, this._output.add_token(e3);
    }, p2.prototype.preserveSingleSpace = function(e3) {
      e3 && (this._output.space_before_token = true);
    }, p2.prototype.indent = function() {
      this._indentLevel++;
    }, p2.prototype.outdent = function() {
      this._indentLevel > 0 && this._indentLevel--;
    }, p2.prototype.beautify = function() {
      if (this._options.disabled)
        return this._source_text;
      var e3 = this._source_text, t3 = this._options.eol;
      t3 === "auto" && (t3 = "\n", e3 && a2.test(e3 || "") && (t3 = e3.match(a2)[0]));
      var n3 = (e3 = e3.replace(l2, "\n")).match(/^[\t ]*/)[0];
      this._output = new r2(this._options, n3), this._input = new o2(e3), this._indentLevel = 0, this._nestedLevel = 0, this._ch = null;
      for (var i3, p3, m2 = 0, g2 = false, f2 = false, b2 = false, _2 = false, v2 = false, w2 = this._ch; i3 = this._input.read(d2) !== "", p3 = w2, this._ch = this._input.next(), this._ch === "\\" && this._input.hasNext() && (this._ch += this._input.next()), w2 = this._ch, this._ch; )
        if (this._ch === "/" && this._input.peek() === "*") {
          this._output.add_new_line(), this._input.back();
          var y2 = this._input.read(h2), C2 = s2.get_directives(y2);
          C2 && C2.ignore === "start" && (y2 += s2.readIgnored(this._input)), this.print_string(y2), this.eatWhitespace(true), this._output.add_new_line();
        } else if (this._ch === "/" && this._input.peek() === "/")
          this._output.space_before_token = true, this._input.back(), this.print_string(this._input.read(u2)), this.eatWhitespace(true);
        else if (this._ch === "@")
          if (this.preserveSingleSpace(i3), this._input.peek() === "{")
            this.print_string(this._ch + this.eatString("}"));
          else {
            this.print_string(this._ch);
            var x2 = this._input.peekUntilAfter(/[: ,;{}()[\]\/='"]/g);
            x2.match(/[ :]$/) && (x2 = this.eatString(": ").replace(/\s$/, ""), this.print_string(x2), this._output.space_before_token = true), (x2 = x2.replace(/\s$/, "")) === "extend" ? _2 = true : x2 === "import" && (v2 = true), x2 in this.NESTED_AT_RULE ? (this._nestedLevel += 1, x2 in this.CONDITIONAL_GROUP_RULE && (b2 = true)) : g2 || m2 !== 0 || x2.indexOf(":") === -1 || (f2 = true, this.indent());
          }
        else
          this._ch === "#" && this._input.peek() === "{" ? (this.preserveSingleSpace(i3), this.print_string(this._ch + this.eatString("}"))) : this._ch === "{" ? (f2 && (f2 = false, this.outdent()), this.indent(), this._output.space_before_token = true, this.print_string(this._ch), b2 ? (b2 = false, g2 = this._indentLevel > this._nestedLevel) : g2 = this._indentLevel >= this._nestedLevel, this._options.newline_between_rules && g2 && this._output.previous_line && this._output.previous_line.item(-1) !== "{" && this._output.ensure_empty_line_above("/", ","), this.eatWhitespace(true), this._output.add_new_line()) : this._ch === "}" ? (this.outdent(), this._output.add_new_line(), p3 === "{" && this._output.trim(true), v2 = false, _2 = false, f2 && (this.outdent(), f2 = false), this.print_string(this._ch), g2 = false, this._nestedLevel && this._nestedLevel--, this.eatWhitespace(true), this._output.add_new_line(), this._options.newline_between_rules && !this._output.just_added_blankline() && this._input.peek() !== "}" && this._output.add_new_line(true)) : this._ch === ":" ? !g2 && !b2 || this._input.lookBack("&") || this.foundNestedPseudoClass() || this._input.lookBack("(") || _2 || m2 !== 0 ? (this._input.lookBack(" ") && (this._output.space_before_token = true), this._input.peek() === ":" ? (this._ch = this._input.next(), this.print_string("::")) : this.print_string(":")) : (this.print_string(":"), f2 || (f2 = true, this._output.space_before_token = true, this.eatWhitespace(true), this.indent())) : this._ch === '"' || this._ch === "'" ? (this.preserveSingleSpace(i3), this.print_string(this._ch + this.eatString(this._ch)), this.eatWhitespace(true)) : this._ch === ";" ? m2 === 0 ? (f2 && (this.outdent(), f2 = false), _2 = false, v2 = false, this.print_string(this._ch), this.eatWhitespace(true), this._input.peek() !== "/" && this._output.add_new_line()) : (this.print_string(this._ch), this.eatWhitespace(true), this._output.space_before_token = true) : this._ch === "(" ? this._input.lookBack("url") ? (this.print_string(this._ch), this.eatWhitespace(), m2++, this.indent(), this._ch = this._input.next(), this._ch === ")" || this._ch === '"' || this._ch === "'" ? this._input.back() : this._ch && (this.print_string(this._ch + this.eatString(")")), m2 && (m2--, this.outdent()))) : (this.preserveSingleSpace(i3), this.print_string(this._ch), this.eatWhitespace(), m2++, this.indent()) : this._ch === ")" ? (m2 && (m2--, this.outdent()), this.print_string(this._ch)) : this._ch === "," ? (this.print_string(this._ch), this.eatWhitespace(true), !this._options.selector_separator_newline || f2 || m2 !== 0 || v2 ? this._output.space_before_token = true : this._output.add_new_line()) : this._ch !== ">" && this._ch !== "+" && this._ch !== "~" || f2 || m2 !== 0 ? this._ch === "]" ? this.print_string(this._ch) : this._ch === "[" ? (this.preserveSingleSpace(i3), this.print_string(this._ch)) : this._ch === "=" ? (this.eatWhitespace(), this.print_string("="), c2.test(this._ch) && (this._ch = "")) : this._ch !== "!" || this._input.lookBack("\\") ? (this.preserveSingleSpace(i3), this.print_string(this._ch)) : (this.print_string(" "), this.print_string(this._ch)) : this._options.space_around_combinator ? (this._output.space_before_token = true, this.print_string(this._ch), this._output.space_before_token = true) : (this.print_string(this._ch), this.eatWhitespace(), this._ch && c2.test(this._ch) && (this._ch = ""));
      return this._output.get_code(t3);
    }, e2.exports.Beautifier = p2;
  }, function(e2, t2, n2) {
    var i2 = n2(6).Options;
    function r2(e3) {
      i2.call(this, e3, "css"), this.selector_separator_newline = this._get_boolean("selector_separator_newline", true), this.newline_between_rules = this._get_boolean("newline_between_rules", true);
      var t3 = this._get_boolean("space_around_selector_separator");
      this.space_around_combinator = this._get_boolean("space_around_combinator") || t3;
    }
    r2.prototype = new i2(), e2.exports.Options = r2;
  }]), ht = function(e2) {
    var t2 = {};
    function n2(i2) {
      if (t2[i2])
        return t2[i2].exports;
      var r2 = t2[i2] = {i: i2, l: false, exports: {}};
      return e2[i2].call(r2.exports, r2, r2.exports, n2), r2.l = true, r2.exports;
    }
    return n2.m = e2, n2.c = t2, n2.d = function(e3, t3, i2) {
      n2.o(e3, t3) || Object.defineProperty(e3, t3, {enumerable: true, get: i2});
    }, n2.r = function(e3) {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(e3, Symbol.toStringTag, {value: "Module"}), Object.defineProperty(e3, "__esModule", {value: true});
    }, n2.t = function(e3, t3) {
      if (1 & t3 && (e3 = n2(e3)), 8 & t3)
        return e3;
      if (4 & t3 && typeof e3 == "object" && e3 && e3.__esModule)
        return e3;
      var i2 = Object.create(null);
      if (n2.r(i2), Object.defineProperty(i2, "default", {enumerable: true, value: e3}), 2 & t3 && typeof e3 != "string")
        for (var r2 in e3)
          n2.d(i2, r2, function(t4) {
            return e3[t4];
          }.bind(null, r2));
      return i2;
    }, n2.n = function(e3) {
      var t3 = e3 && e3.__esModule ? function() {
        return e3.default;
      } : function() {
        return e3;
      };
      return n2.d(t3, "a", t3), t3;
    }, n2.o = function(e3, t3) {
      return Object.prototype.hasOwnProperty.call(e3, t3);
    }, n2.p = "", n2(n2.s = 18);
  }([, , function(e2, t2, n2) {
    function i2(e3) {
      this.__parent = e3, this.__character_count = 0, this.__indent_count = -1, this.__alignment_count = 0, this.__wrap_point_index = 0, this.__wrap_point_character_count = 0, this.__wrap_point_indent_count = -1, this.__wrap_point_alignment_count = 0, this.__items = [];
    }
    function r2(e3, t3) {
      this.__cache = [""], this.__indent_size = e3.indent_size, this.__indent_string = e3.indent_char, e3.indent_with_tabs || (this.__indent_string = new Array(e3.indent_size + 1).join(e3.indent_char)), t3 = t3 || "", e3.indent_level > 0 && (t3 = new Array(e3.indent_level + 1).join(this.__indent_string)), this.__base_string = t3, this.__base_string_length = t3.length;
    }
    function o2(e3, t3) {
      this.__indent_cache = new r2(e3, t3), this.raw = false, this._end_with_newline = e3.end_with_newline, this.indent_size = e3.indent_size, this.wrap_line_length = e3.wrap_line_length, this.indent_empty_lines = e3.indent_empty_lines, this.__lines = [], this.previous_line = null, this.current_line = null, this.next_line = new i2(this), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = false, this.__add_outputline();
    }
    i2.prototype.clone_empty = function() {
      var e3 = new i2(this.__parent);
      return e3.set_indent(this.__indent_count, this.__alignment_count), e3;
    }, i2.prototype.item = function(e3) {
      return e3 < 0 ? this.__items[this.__items.length + e3] : this.__items[e3];
    }, i2.prototype.has_match = function(e3) {
      for (var t3 = this.__items.length - 1; t3 >= 0; t3--)
        if (this.__items[t3].match(e3))
          return true;
      return false;
    }, i2.prototype.set_indent = function(e3, t3) {
      this.is_empty() && (this.__indent_count = e3 || 0, this.__alignment_count = t3 || 0, this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count));
    }, i2.prototype._set_wrap_point = function() {
      this.__parent.wrap_line_length && (this.__wrap_point_index = this.__items.length, this.__wrap_point_character_count = this.__character_count, this.__wrap_point_indent_count = this.__parent.next_line.__indent_count, this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count);
    }, i2.prototype._should_wrap = function() {
      return this.__wrap_point_index && this.__character_count > this.__parent.wrap_line_length && this.__wrap_point_character_count > this.__parent.next_line.__character_count;
    }, i2.prototype._allow_wrap = function() {
      if (this._should_wrap()) {
        this.__parent.add_new_line();
        var e3 = this.__parent.current_line;
        return e3.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count), e3.__items = this.__items.slice(this.__wrap_point_index), this.__items = this.__items.slice(0, this.__wrap_point_index), e3.__character_count += this.__character_count - this.__wrap_point_character_count, this.__character_count = this.__wrap_point_character_count, e3.__items[0] === " " && (e3.__items.splice(0, 1), e3.__character_count -= 1), true;
      }
      return false;
    }, i2.prototype.is_empty = function() {
      return this.__items.length === 0;
    }, i2.prototype.last = function() {
      return this.is_empty() ? null : this.__items[this.__items.length - 1];
    }, i2.prototype.push = function(e3) {
      this.__items.push(e3);
      var t3 = e3.lastIndexOf("\n");
      t3 !== -1 ? this.__character_count = e3.length - t3 : this.__character_count += e3.length;
    }, i2.prototype.pop = function() {
      var e3 = null;
      return this.is_empty() || (e3 = this.__items.pop(), this.__character_count -= e3.length), e3;
    }, i2.prototype._remove_indent = function() {
      this.__indent_count > 0 && (this.__indent_count -= 1, this.__character_count -= this.__parent.indent_size);
    }, i2.prototype._remove_wrap_indent = function() {
      this.__wrap_point_indent_count > 0 && (this.__wrap_point_indent_count -= 1);
    }, i2.prototype.trim = function() {
      for (; this.last() === " "; )
        this.__items.pop(), this.__character_count -= 1;
    }, i2.prototype.toString = function() {
      var e3 = "";
      return this.is_empty() ? this.__parent.indent_empty_lines && (e3 = this.__parent.get_indent_string(this.__indent_count)) : (e3 = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count), e3 += this.__items.join("")), e3;
    }, r2.prototype.get_indent_size = function(e3, t3) {
      var n3 = this.__base_string_length;
      return t3 = t3 || 0, e3 < 0 && (n3 = 0), n3 += e3 * this.__indent_size, n3 += t3;
    }, r2.prototype.get_indent_string = function(e3, t3) {
      var n3 = this.__base_string;
      return t3 = t3 || 0, e3 < 0 && (e3 = 0, n3 = ""), t3 += e3 * this.__indent_size, this.__ensure_cache(t3), n3 += this.__cache[t3];
    }, r2.prototype.__ensure_cache = function(e3) {
      for (; e3 >= this.__cache.length; )
        this.__add_column();
    }, r2.prototype.__add_column = function() {
      var e3 = this.__cache.length, t3 = 0, n3 = "";
      this.__indent_size && e3 >= this.__indent_size && (e3 -= (t3 = Math.floor(e3 / this.__indent_size)) * this.__indent_size, n3 = new Array(t3 + 1).join(this.__indent_string)), e3 && (n3 += new Array(e3 + 1).join(" ")), this.__cache.push(n3);
    }, o2.prototype.__add_outputline = function() {
      this.previous_line = this.current_line, this.current_line = this.next_line.clone_empty(), this.__lines.push(this.current_line);
    }, o2.prototype.get_line_number = function() {
      return this.__lines.length;
    }, o2.prototype.get_indent_string = function(e3, t3) {
      return this.__indent_cache.get_indent_string(e3, t3);
    }, o2.prototype.get_indent_size = function(e3, t3) {
      return this.__indent_cache.get_indent_size(e3, t3);
    }, o2.prototype.is_empty = function() {
      return !this.previous_line && this.current_line.is_empty();
    }, o2.prototype.add_new_line = function(e3) {
      return !(this.is_empty() || !e3 && this.just_added_newline()) && (this.raw || this.__add_outputline(), true);
    }, o2.prototype.get_code = function(e3) {
      this.trim(true);
      var t3 = this.current_line.pop();
      t3 && (t3[t3.length - 1] === "\n" && (t3 = t3.replace(/\n+$/g, "")), this.current_line.push(t3)), this._end_with_newline && this.__add_outputline();
      var n3 = this.__lines.join("\n");
      return e3 !== "\n" && (n3 = n3.replace(/[\n]/g, e3)), n3;
    }, o2.prototype.set_wrap_point = function() {
      this.current_line._set_wrap_point();
    }, o2.prototype.set_indent = function(e3, t3) {
      return e3 = e3 || 0, t3 = t3 || 0, this.next_line.set_indent(e3, t3), this.__lines.length > 1 ? (this.current_line.set_indent(e3, t3), true) : (this.current_line.set_indent(), false);
    }, o2.prototype.add_raw_token = function(e3) {
      for (var t3 = 0; t3 < e3.newlines; t3++)
        this.__add_outputline();
      this.current_line.set_indent(-1), this.current_line.push(e3.whitespace_before), this.current_line.push(e3.text), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = false;
    }, o2.prototype.add_token = function(e3) {
      this.__add_space_before_token(), this.current_line.push(e3), this.space_before_token = false, this.non_breaking_space = false, this.previous_token_wrapped = this.current_line._allow_wrap();
    }, o2.prototype.__add_space_before_token = function() {
      this.space_before_token && !this.just_added_newline() && (this.non_breaking_space || this.set_wrap_point(), this.current_line.push(" "));
    }, o2.prototype.remove_indent = function(e3) {
      for (var t3 = this.__lines.length; e3 < t3; )
        this.__lines[e3]._remove_indent(), e3++;
      this.current_line._remove_wrap_indent();
    }, o2.prototype.trim = function(e3) {
      for (e3 = e3 !== void 0 && e3, this.current_line.trim(); e3 && this.__lines.length > 1 && this.current_line.is_empty(); )
        this.__lines.pop(), this.current_line = this.__lines[this.__lines.length - 1], this.current_line.trim();
      this.previous_line = this.__lines.length > 1 ? this.__lines[this.__lines.length - 2] : null;
    }, o2.prototype.just_added_newline = function() {
      return this.current_line.is_empty();
    }, o2.prototype.just_added_blankline = function() {
      return this.is_empty() || this.current_line.is_empty() && this.previous_line.is_empty();
    }, o2.prototype.ensure_empty_line_above = function(e3, t3) {
      for (var n3 = this.__lines.length - 2; n3 >= 0; ) {
        var r3 = this.__lines[n3];
        if (r3.is_empty())
          break;
        if (r3.item(0).indexOf(e3) !== 0 && r3.item(-1) !== t3) {
          this.__lines.splice(n3 + 1, 0, new i2(this)), this.previous_line = this.__lines[this.__lines.length - 2];
          break;
        }
        n3--;
      }
    }, e2.exports.Output = o2;
  }, function(e2, t2, n2) {
    e2.exports.Token = function(e3, t3, n3, i2) {
      this.type = e3, this.text = t3, this.comments_before = null, this.newlines = n3 || 0, this.whitespace_before = i2 || "", this.parent = null, this.next = null, this.previous = null, this.opened = null, this.closed = null, this.directives = null;
    };
  }, , , function(e2, t2, n2) {
    function i2(e3, t3) {
      this.raw_options = r2(e3, t3), this.disabled = this._get_boolean("disabled"), this.eol = this._get_characters("eol", "auto"), this.end_with_newline = this._get_boolean("end_with_newline"), this.indent_size = this._get_number("indent_size", 4), this.indent_char = this._get_characters("indent_char", " "), this.indent_level = this._get_number("indent_level"), this.preserve_newlines = this._get_boolean("preserve_newlines", true), this.max_preserve_newlines = this._get_number("max_preserve_newlines", 32786), this.preserve_newlines || (this.max_preserve_newlines = 0), this.indent_with_tabs = this._get_boolean("indent_with_tabs", this.indent_char === "	"), this.indent_with_tabs && (this.indent_char = "	", this.indent_size === 1 && (this.indent_size = 4)), this.wrap_line_length = this._get_number("wrap_line_length", this._get_number("max_char")), this.indent_empty_lines = this._get_boolean("indent_empty_lines"), this.templating = this._get_selection_list("templating", ["auto", "none", "django", "erb", "handlebars", "php"], ["auto"]);
    }
    function r2(e3, t3) {
      var n3, i3 = {};
      for (n3 in e3 = o2(e3))
        n3 !== t3 && (i3[n3] = e3[n3]);
      if (t3 && e3[t3])
        for (n3 in e3[t3])
          i3[n3] = e3[t3][n3];
      return i3;
    }
    function o2(e3) {
      var t3, n3 = {};
      for (t3 in e3) {
        n3[t3.replace(/-/g, "_")] = e3[t3];
      }
      return n3;
    }
    i2.prototype._get_array = function(e3, t3) {
      var n3 = this.raw_options[e3], i3 = t3 || [];
      return typeof n3 == "object" ? n3 !== null && typeof n3.concat == "function" && (i3 = n3.concat()) : typeof n3 == "string" && (i3 = n3.split(/[^a-zA-Z0-9_\/\-]+/)), i3;
    }, i2.prototype._get_boolean = function(e3, t3) {
      var n3 = this.raw_options[e3];
      return n3 === void 0 ? !!t3 : !!n3;
    }, i2.prototype._get_characters = function(e3, t3) {
      var n3 = this.raw_options[e3], i3 = t3 || "";
      return typeof n3 == "string" && (i3 = n3.replace(/\\r/, "\r").replace(/\\n/, "\n").replace(/\\t/, "	")), i3;
    }, i2.prototype._get_number = function(e3, t3) {
      var n3 = this.raw_options[e3];
      t3 = parseInt(t3, 10), isNaN(t3) && (t3 = 0);
      var i3 = parseInt(n3, 10);
      return isNaN(i3) && (i3 = t3), i3;
    }, i2.prototype._get_selection = function(e3, t3, n3) {
      var i3 = this._get_selection_list(e3, t3, n3);
      if (i3.length !== 1)
        throw new Error("Invalid Option Value: The option '" + e3 + "' can only be one of the following values:\n" + t3 + "\nYou passed in: '" + this.raw_options[e3] + "'");
      return i3[0];
    }, i2.prototype._get_selection_list = function(e3, t3, n3) {
      if (!t3 || t3.length === 0)
        throw new Error("Selection list cannot be empty.");
      if (n3 = n3 || [t3[0]], !this._is_valid_selection(n3, t3))
        throw new Error("Invalid Default Value!");
      var i3 = this._get_array(e3, n3);
      if (!this._is_valid_selection(i3, t3))
        throw new Error("Invalid Option Value: The option '" + e3 + "' can contain only the following values:\n" + t3 + "\nYou passed in: '" + this.raw_options[e3] + "'");
      return i3;
    }, i2.prototype._is_valid_selection = function(e3, t3) {
      return e3.length && t3.length && !e3.some(function(e4) {
        return t3.indexOf(e4) === -1;
      });
    }, e2.exports.Options = i2, e2.exports.normalizeOpts = o2, e2.exports.mergeOpts = r2;
  }, , function(e2, t2, n2) {
    var i2 = RegExp.prototype.hasOwnProperty("sticky");
    function r2(e3) {
      this.__input = e3 || "", this.__input_length = this.__input.length, this.__position = 0;
    }
    r2.prototype.restart = function() {
      this.__position = 0;
    }, r2.prototype.back = function() {
      this.__position > 0 && (this.__position -= 1);
    }, r2.prototype.hasNext = function() {
      return this.__position < this.__input_length;
    }, r2.prototype.next = function() {
      var e3 = null;
      return this.hasNext() && (e3 = this.__input.charAt(this.__position), this.__position += 1), e3;
    }, r2.prototype.peek = function(e3) {
      var t3 = null;
      return e3 = e3 || 0, (e3 += this.__position) >= 0 && e3 < this.__input_length && (t3 = this.__input.charAt(e3)), t3;
    }, r2.prototype.__match = function(e3, t3) {
      e3.lastIndex = t3;
      var n3 = e3.exec(this.__input);
      return !n3 || i2 && e3.sticky || n3.index !== t3 && (n3 = null), n3;
    }, r2.prototype.test = function(e3, t3) {
      return t3 = t3 || 0, (t3 += this.__position) >= 0 && t3 < this.__input_length && !!this.__match(e3, t3);
    }, r2.prototype.testChar = function(e3, t3) {
      var n3 = this.peek(t3);
      return e3.lastIndex = 0, n3 !== null && e3.test(n3);
    }, r2.prototype.match = function(e3) {
      var t3 = this.__match(e3, this.__position);
      return t3 ? this.__position += t3[0].length : t3 = null, t3;
    }, r2.prototype.read = function(e3, t3, n3) {
      var i3, r3 = "";
      return e3 && (i3 = this.match(e3)) && (r3 += i3[0]), !t3 || !i3 && e3 || (r3 += this.readUntil(t3, n3)), r3;
    }, r2.prototype.readUntil = function(e3, t3) {
      var n3, i3 = this.__position;
      e3.lastIndex = this.__position;
      var r3 = e3.exec(this.__input);
      return r3 ? (i3 = r3.index, t3 && (i3 += r3[0].length)) : i3 = this.__input_length, n3 = this.__input.substring(this.__position, i3), this.__position = i3, n3;
    }, r2.prototype.readUntilAfter = function(e3) {
      return this.readUntil(e3, true);
    }, r2.prototype.get_regexp = function(e3, t3) {
      var n3 = null, r3 = "g";
      return t3 && i2 && (r3 = "y"), typeof e3 == "string" && e3 !== "" ? n3 = new RegExp(e3, r3) : e3 && (n3 = new RegExp(e3.source, r3)), n3;
    }, r2.prototype.get_literal_regexp = function(e3) {
      return RegExp(e3.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
    }, r2.prototype.peekUntilAfter = function(e3) {
      var t3 = this.__position, n3 = this.readUntilAfter(e3);
      return this.__position = t3, n3;
    }, r2.prototype.lookBack = function(e3) {
      var t3 = this.__position - 1;
      return t3 >= e3.length && this.__input.substring(t3 - e3.length, t3).toLowerCase() === e3;
    }, e2.exports.InputScanner = r2;
  }, function(e2, t2, n2) {
    var i2 = n2(8).InputScanner, r2 = n2(3).Token, o2 = n2(10).TokenStream, s2 = n2(11).WhitespacePattern, a2 = {START: "TK_START", RAW: "TK_RAW", EOF: "TK_EOF"}, l2 = function(e3, t3) {
      this._input = new i2(e3), this._options = t3 || {}, this.__tokens = null, this._patterns = {}, this._patterns.whitespace = new s2(this._input);
    };
    l2.prototype.tokenize = function() {
      var e3;
      this._input.restart(), this.__tokens = new o2(), this._reset();
      for (var t3 = new r2(a2.START, ""), n3 = null, i3 = [], s3 = new o2(); t3.type !== a2.EOF; ) {
        for (e3 = this._get_next_token(t3, n3); this._is_comment(e3); )
          s3.add(e3), e3 = this._get_next_token(t3, n3);
        s3.isEmpty() || (e3.comments_before = s3, s3 = new o2()), e3.parent = n3, this._is_opening(e3) ? (i3.push(n3), n3 = e3) : n3 && this._is_closing(e3, n3) && (e3.opened = n3, n3.closed = e3, n3 = i3.pop(), e3.parent = n3), e3.previous = t3, t3.next = e3, this.__tokens.add(e3), t3 = e3;
      }
      return this.__tokens;
    }, l2.prototype._is_first_token = function() {
      return this.__tokens.isEmpty();
    }, l2.prototype._reset = function() {
    }, l2.prototype._get_next_token = function(e3, t3) {
      this._readWhitespace();
      var n3 = this._input.read(/.+/g);
      return n3 ? this._create_token(a2.RAW, n3) : this._create_token(a2.EOF, "");
    }, l2.prototype._is_comment = function(e3) {
      return false;
    }, l2.prototype._is_opening = function(e3) {
      return false;
    }, l2.prototype._is_closing = function(e3, t3) {
      return false;
    }, l2.prototype._create_token = function(e3, t3) {
      return new r2(e3, t3, this._patterns.whitespace.newline_count, this._patterns.whitespace.whitespace_before_token);
    }, l2.prototype._readWhitespace = function() {
      return this._patterns.whitespace.read();
    }, e2.exports.Tokenizer = l2, e2.exports.TOKEN = a2;
  }, function(e2, t2, n2) {
    function i2(e3) {
      this.__tokens = [], this.__tokens_length = this.__tokens.length, this.__position = 0, this.__parent_token = e3;
    }
    i2.prototype.restart = function() {
      this.__position = 0;
    }, i2.prototype.isEmpty = function() {
      return this.__tokens_length === 0;
    }, i2.prototype.hasNext = function() {
      return this.__position < this.__tokens_length;
    }, i2.prototype.next = function() {
      var e3 = null;
      return this.hasNext() && (e3 = this.__tokens[this.__position], this.__position += 1), e3;
    }, i2.prototype.peek = function(e3) {
      var t3 = null;
      return e3 = e3 || 0, (e3 += this.__position) >= 0 && e3 < this.__tokens_length && (t3 = this.__tokens[e3]), t3;
    }, i2.prototype.add = function(e3) {
      this.__parent_token && (e3.parent = this.__parent_token), this.__tokens.push(e3), this.__tokens_length += 1;
    }, e2.exports.TokenStream = i2;
  }, function(e2, t2, n2) {
    var i2 = n2(12).Pattern;
    function r2(e3, t3) {
      i2.call(this, e3, t3), t3 ? this._line_regexp = this._input.get_regexp(t3._line_regexp) : this.__set_whitespace_patterns("", ""), this.newline_count = 0, this.whitespace_before_token = "";
    }
    r2.prototype = new i2(), r2.prototype.__set_whitespace_patterns = function(e3, t3) {
      e3 += "\\t ", t3 += "\\n\\r", this._match_pattern = this._input.get_regexp("[" + e3 + t3 + "]+", true), this._newline_regexp = this._input.get_regexp("\\r\\n|[" + t3 + "]");
    }, r2.prototype.read = function() {
      this.newline_count = 0, this.whitespace_before_token = "";
      var e3 = this._input.read(this._match_pattern);
      if (e3 === " ")
        this.whitespace_before_token = " ";
      else if (e3) {
        var t3 = this.__split(this._newline_regexp, e3);
        this.newline_count = t3.length - 1, this.whitespace_before_token = t3[this.newline_count];
      }
      return e3;
    }, r2.prototype.matching = function(e3, t3) {
      var n3 = this._create();
      return n3.__set_whitespace_patterns(e3, t3), n3._update(), n3;
    }, r2.prototype._create = function() {
      return new r2(this._input, this);
    }, r2.prototype.__split = function(e3, t3) {
      e3.lastIndex = 0;
      for (var n3 = 0, i3 = [], r3 = e3.exec(t3); r3; )
        i3.push(t3.substring(n3, r3.index)), n3 = r3.index + r3[0].length, r3 = e3.exec(t3);
      return n3 < t3.length ? i3.push(t3.substring(n3, t3.length)) : i3.push(""), i3;
    }, e2.exports.WhitespacePattern = r2;
  }, function(e2, t2, n2) {
    function i2(e3, t3) {
      this._input = e3, this._starting_pattern = null, this._match_pattern = null, this._until_pattern = null, this._until_after = false, t3 && (this._starting_pattern = this._input.get_regexp(t3._starting_pattern, true), this._match_pattern = this._input.get_regexp(t3._match_pattern, true), this._until_pattern = this._input.get_regexp(t3._until_pattern), this._until_after = t3._until_after);
    }
    i2.prototype.read = function() {
      var e3 = this._input.read(this._starting_pattern);
      return this._starting_pattern && !e3 || (e3 += this._input.read(this._match_pattern, this._until_pattern, this._until_after)), e3;
    }, i2.prototype.read_match = function() {
      return this._input.match(this._match_pattern);
    }, i2.prototype.until_after = function(e3) {
      var t3 = this._create();
      return t3._until_after = true, t3._until_pattern = this._input.get_regexp(e3), t3._update(), t3;
    }, i2.prototype.until = function(e3) {
      var t3 = this._create();
      return t3._until_after = false, t3._until_pattern = this._input.get_regexp(e3), t3._update(), t3;
    }, i2.prototype.starting_with = function(e3) {
      var t3 = this._create();
      return t3._starting_pattern = this._input.get_regexp(e3, true), t3._update(), t3;
    }, i2.prototype.matching = function(e3) {
      var t3 = this._create();
      return t3._match_pattern = this._input.get_regexp(e3, true), t3._update(), t3;
    }, i2.prototype._create = function() {
      return new i2(this._input, this);
    }, i2.prototype._update = function() {
    }, e2.exports.Pattern = i2;
  }, function(e2, t2, n2) {
    function i2(e3, t3) {
      e3 = typeof e3 == "string" ? e3 : e3.source, t3 = typeof t3 == "string" ? t3 : t3.source, this.__directives_block_pattern = new RegExp(e3 + / beautify( \w+[:]\w+)+ /.source + t3, "g"), this.__directive_pattern = / (\w+)[:](\w+)/g, this.__directives_end_ignore_pattern = new RegExp(e3 + /\sbeautify\signore:end\s/.source + t3, "g");
    }
    i2.prototype.get_directives = function(e3) {
      if (!e3.match(this.__directives_block_pattern))
        return null;
      var t3 = {};
      this.__directive_pattern.lastIndex = 0;
      for (var n3 = this.__directive_pattern.exec(e3); n3; )
        t3[n3[1]] = n3[2], n3 = this.__directive_pattern.exec(e3);
      return t3;
    }, i2.prototype.readIgnored = function(e3) {
      return e3.readUntilAfter(this.__directives_end_ignore_pattern);
    }, e2.exports.Directives = i2;
  }, function(e2, t2, n2) {
    var i2 = n2(12).Pattern, r2 = {django: false, erb: false, handlebars: false, php: false};
    function o2(e3, t3) {
      i2.call(this, e3, t3), this.__template_pattern = null, this._disabled = Object.assign({}, r2), this._excluded = Object.assign({}, r2), t3 && (this.__template_pattern = this._input.get_regexp(t3.__template_pattern), this._excluded = Object.assign(this._excluded, t3._excluded), this._disabled = Object.assign(this._disabled, t3._disabled));
      var n3 = new i2(e3);
      this.__patterns = {handlebars_comment: n3.starting_with(/{{!--/).until_after(/--}}/), handlebars_unescaped: n3.starting_with(/{{{/).until_after(/}}}/), handlebars: n3.starting_with(/{{/).until_after(/}}/), php: n3.starting_with(/<\?(?:[=]|php)/).until_after(/\?>/), erb: n3.starting_with(/<%[^%]/).until_after(/[^%]%>/), django: n3.starting_with(/{%/).until_after(/%}/), django_value: n3.starting_with(/{{/).until_after(/}}/), django_comment: n3.starting_with(/{#/).until_after(/#}/)};
    }
    o2.prototype = new i2(), o2.prototype._create = function() {
      return new o2(this._input, this);
    }, o2.prototype._update = function() {
      this.__set_templated_pattern();
    }, o2.prototype.disable = function(e3) {
      var t3 = this._create();
      return t3._disabled[e3] = true, t3._update(), t3;
    }, o2.prototype.read_options = function(e3) {
      var t3 = this._create();
      for (var n3 in r2)
        t3._disabled[n3] = e3.templating.indexOf(n3) === -1;
      return t3._update(), t3;
    }, o2.prototype.exclude = function(e3) {
      var t3 = this._create();
      return t3._excluded[e3] = true, t3._update(), t3;
    }, o2.prototype.read = function() {
      var e3 = "";
      e3 = this._match_pattern ? this._input.read(this._starting_pattern) : this._input.read(this._starting_pattern, this.__template_pattern);
      for (var t3 = this._read_template(); t3; )
        this._match_pattern ? t3 += this._input.read(this._match_pattern) : t3 += this._input.readUntil(this.__template_pattern), e3 += t3, t3 = this._read_template();
      return this._until_after && (e3 += this._input.readUntilAfter(this._until_pattern)), e3;
    }, o2.prototype.__set_templated_pattern = function() {
      var e3 = [];
      this._disabled.php || e3.push(this.__patterns.php._starting_pattern.source), this._disabled.handlebars || e3.push(this.__patterns.handlebars._starting_pattern.source), this._disabled.erb || e3.push(this.__patterns.erb._starting_pattern.source), this._disabled.django || (e3.push(this.__patterns.django._starting_pattern.source), e3.push(this.__patterns.django_value._starting_pattern.source), e3.push(this.__patterns.django_comment._starting_pattern.source)), this._until_pattern && e3.push(this._until_pattern.source), this.__template_pattern = this._input.get_regexp("(?:" + e3.join("|") + ")");
    }, o2.prototype._read_template = function() {
      var e3 = "", t3 = this._input.peek();
      if (t3 === "<") {
        var n3 = this._input.peek(1);
        this._disabled.php || this._excluded.php || n3 !== "?" || (e3 = e3 || this.__patterns.php.read()), this._disabled.erb || this._excluded.erb || n3 !== "%" || (e3 = e3 || this.__patterns.erb.read());
      } else
        t3 === "{" && (this._disabled.handlebars || this._excluded.handlebars || (e3 = (e3 = (e3 = e3 || this.__patterns.handlebars_comment.read()) || this.__patterns.handlebars_unescaped.read()) || this.__patterns.handlebars.read()), this._disabled.django || (this._excluded.django || this._excluded.handlebars || (e3 = e3 || this.__patterns.django_value.read()), this._excluded.django || (e3 = (e3 = e3 || this.__patterns.django_comment.read()) || this.__patterns.django.read())));
      return e3;
    }, e2.exports.TemplatablePattern = o2;
  }, , , , function(e2, t2, n2) {
    var i2 = n2(19).Beautifier, r2 = n2(20).Options;
    e2.exports = function(e3, t3, n3, r3) {
      return new i2(e3, t3, n3, r3).beautify();
    }, e2.exports.defaultOptions = function() {
      return new r2();
    };
  }, function(e2, t2, n2) {
    var i2 = n2(20).Options, r2 = n2(2).Output, o2 = n2(21).Tokenizer, s2 = n2(21).TOKEN, a2 = /\r\n|[\r\n]/, l2 = /\r\n|[\r\n]/g, c2 = function(e3, t3) {
      this.indent_level = 0, this.alignment_size = 0, this.max_preserve_newlines = e3.max_preserve_newlines, this.preserve_newlines = e3.preserve_newlines, this._output = new r2(e3, t3);
    };
    c2.prototype.current_line_has_match = function(e3) {
      return this._output.current_line.has_match(e3);
    }, c2.prototype.set_space_before_token = function(e3, t3) {
      this._output.space_before_token = e3, this._output.non_breaking_space = t3;
    }, c2.prototype.set_wrap_point = function() {
      this._output.set_indent(this.indent_level, this.alignment_size), this._output.set_wrap_point();
    }, c2.prototype.add_raw_token = function(e3) {
      this._output.add_raw_token(e3);
    }, c2.prototype.print_preserved_newlines = function(e3) {
      var t3 = 0;
      e3.type !== s2.TEXT && e3.previous.type !== s2.TEXT && (t3 = e3.newlines ? 1 : 0), this.preserve_newlines && (t3 = e3.newlines < this.max_preserve_newlines + 1 ? e3.newlines : this.max_preserve_newlines + 1);
      for (var n3 = 0; n3 < t3; n3++)
        this.print_newline(n3 > 0);
      return t3 !== 0;
    }, c2.prototype.traverse_whitespace = function(e3) {
      return !(!e3.whitespace_before && !e3.newlines) && (this.print_preserved_newlines(e3) || (this._output.space_before_token = true), true);
    }, c2.prototype.previous_token_wrapped = function() {
      return this._output.previous_token_wrapped;
    }, c2.prototype.print_newline = function(e3) {
      this._output.add_new_line(e3);
    }, c2.prototype.print_token = function(e3) {
      e3.text && (this._output.set_indent(this.indent_level, this.alignment_size), this._output.add_token(e3.text));
    }, c2.prototype.indent = function() {
      this.indent_level++;
    }, c2.prototype.get_full_indent = function(e3) {
      return (e3 = this.indent_level + (e3 || 0)) < 1 ? "" : this._output.get_indent_string(e3);
    };
    var d2 = function(e3, t3) {
      var n3 = null, i3 = null;
      return t3.closed ? (e3 === "script" ? n3 = "text/javascript" : e3 === "style" && (n3 = "text/css"), (n3 = function(e4) {
        for (var t4 = null, n4 = e4.next; n4.type !== s2.EOF && e4.closed !== n4; ) {
          if (n4.type === s2.ATTRIBUTE && n4.text === "type") {
            n4.next && n4.next.type === s2.EQUALS && n4.next.next && n4.next.next.type === s2.VALUE && (t4 = n4.next.next.text);
            break;
          }
          n4 = n4.next;
        }
        return t4;
      }(t3) || n3).search("text/css") > -1 ? i3 = "css" : n3.search(/module|((text|application|dojo)\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\+)?json|method|aspect))/) > -1 ? i3 = "javascript" : n3.search(/(text|application|dojo)\/(x-)?(html)/) > -1 ? i3 = "html" : n3.search(/test\/null/) > -1 && (i3 = "null"), i3) : null;
    };
    function h2(e3, t3) {
      return t3.indexOf(e3) !== -1;
    }
    function u2(e3, t3, n3) {
      this.parent = e3 || null, this.tag = t3 ? t3.tag_name : "", this.indent_level = n3 || 0, this.parser_token = t3 || null;
    }
    function p2(e3) {
      this._printer = e3, this._current_frame = null;
    }
    function m2(e3, t3, n3, r3) {
      this._source_text = e3 || "", t3 = t3 || {}, this._js_beautify = n3, this._css_beautify = r3, this._tag_stack = null;
      var o3 = new i2(t3, "html");
      this._options = o3, this._is_wrap_attributes_force = this._options.wrap_attributes.substr(0, "force".length) === "force", this._is_wrap_attributes_force_expand_multiline = this._options.wrap_attributes === "force-expand-multiline", this._is_wrap_attributes_force_aligned = this._options.wrap_attributes === "force-aligned", this._is_wrap_attributes_aligned_multiple = this._options.wrap_attributes === "aligned-multiple", this._is_wrap_attributes_preserve = this._options.wrap_attributes.substr(0, "preserve".length) === "preserve", this._is_wrap_attributes_preserve_aligned = this._options.wrap_attributes === "preserve-aligned";
    }
    p2.prototype.get_parser_token = function() {
      return this._current_frame ? this._current_frame.parser_token : null;
    }, p2.prototype.record_tag = function(e3) {
      var t3 = new u2(this._current_frame, e3, this._printer.indent_level);
      this._current_frame = t3;
    }, p2.prototype._try_pop_frame = function(e3) {
      var t3 = null;
      return e3 && (t3 = e3.parser_token, this._printer.indent_level = e3.indent_level, this._current_frame = e3.parent), t3;
    }, p2.prototype._get_frame = function(e3, t3) {
      for (var n3 = this._current_frame; n3 && e3.indexOf(n3.tag) === -1; ) {
        if (t3 && t3.indexOf(n3.tag) !== -1) {
          n3 = null;
          break;
        }
        n3 = n3.parent;
      }
      return n3;
    }, p2.prototype.try_pop = function(e3, t3) {
      var n3 = this._get_frame([e3], t3);
      return this._try_pop_frame(n3);
    }, p2.prototype.indent_to_tag = function(e3) {
      var t3 = this._get_frame(e3);
      t3 && (this._printer.indent_level = t3.indent_level);
    }, m2.prototype.beautify = function() {
      if (this._options.disabled)
        return this._source_text;
      var e3 = this._source_text, t3 = this._options.eol;
      this._options.eol === "auto" && (t3 = "\n", e3 && a2.test(e3) && (t3 = e3.match(a2)[0]));
      var n3 = (e3 = e3.replace(l2, "\n")).match(/^[\t ]*/)[0], i3 = {text: "", type: ""}, r3 = new g2(), d3 = new c2(this._options, n3), h3 = new o2(e3, this._options).tokenize();
      this._tag_stack = new p2(d3);
      for (var u3 = null, m3 = h3.next(); m3.type !== s2.EOF; )
        m3.type === s2.TAG_OPEN || m3.type === s2.COMMENT ? r3 = u3 = this._handle_tag_open(d3, m3, r3, i3) : m3.type === s2.ATTRIBUTE || m3.type === s2.EQUALS || m3.type === s2.VALUE || m3.type === s2.TEXT && !r3.tag_complete ? u3 = this._handle_inside_tag(d3, m3, r3, h3) : m3.type === s2.TAG_CLOSE ? u3 = this._handle_tag_close(d3, m3, r3) : m3.type === s2.TEXT ? u3 = this._handle_text(d3, m3, r3) : d3.add_raw_token(m3), i3 = u3, m3 = h3.next();
      return d3._output.get_code(t3);
    }, m2.prototype._handle_tag_close = function(e3, t3, n3) {
      var i3 = {text: t3.text, type: t3.type};
      return e3.alignment_size = 0, n3.tag_complete = true, e3.set_space_before_token(t3.newlines || t3.whitespace_before !== "", true), n3.is_unformatted ? e3.add_raw_token(t3) : (n3.tag_start_char === "<" && (e3.set_space_before_token(t3.text[0] === "/", true), this._is_wrap_attributes_force_expand_multiline && n3.has_wrapped_attrs && e3.print_newline(false)), e3.print_token(t3)), !n3.indent_content || n3.is_unformatted || n3.is_content_unformatted || (e3.indent(), n3.indent_content = false), n3.is_inline_element || n3.is_unformatted || n3.is_content_unformatted || e3.set_wrap_point(), i3;
    }, m2.prototype._handle_inside_tag = function(e3, t3, n3, i3) {
      var r3 = n3.has_wrapped_attrs, o3 = {text: t3.text, type: t3.type};
      if (e3.set_space_before_token(t3.newlines || t3.whitespace_before !== "", true), n3.is_unformatted)
        e3.add_raw_token(t3);
      else if (n3.tag_start_char === "{" && t3.type === s2.TEXT)
        e3.print_preserved_newlines(t3) ? (t3.newlines = 0, e3.add_raw_token(t3)) : e3.print_token(t3);
      else {
        if (t3.type === s2.ATTRIBUTE ? (e3.set_space_before_token(true), n3.attr_count += 1) : (t3.type === s2.EQUALS || t3.type === s2.VALUE && t3.previous.type === s2.EQUALS) && e3.set_space_before_token(false), t3.type === s2.ATTRIBUTE && n3.tag_start_char === "<" && ((this._is_wrap_attributes_preserve || this._is_wrap_attributes_preserve_aligned) && (e3.traverse_whitespace(t3), r3 = r3 || t3.newlines !== 0), this._is_wrap_attributes_force)) {
          var a3 = n3.attr_count > 1;
          if (this._is_wrap_attributes_force_expand_multiline && n3.attr_count === 1) {
            var l3, c3 = true, d3 = 0;
            do {
              if ((l3 = i3.peek(d3)).type === s2.ATTRIBUTE) {
                c3 = false;
                break;
              }
              d3 += 1;
            } while (d3 < 4 && l3.type !== s2.EOF && l3.type !== s2.TAG_CLOSE);
            a3 = !c3;
          }
          a3 && (e3.print_newline(false), r3 = true);
        }
        e3.print_token(t3), r3 = r3 || e3.previous_token_wrapped(), n3.has_wrapped_attrs = r3;
      }
      return o3;
    }, m2.prototype._handle_text = function(e3, t3, n3) {
      var i3 = {text: t3.text, type: "TK_CONTENT"};
      return n3.custom_beautifier_name ? this._print_custom_beatifier_text(e3, t3, n3) : n3.is_unformatted || n3.is_content_unformatted ? e3.add_raw_token(t3) : (e3.traverse_whitespace(t3), e3.print_token(t3)), i3;
    }, m2.prototype._print_custom_beatifier_text = function(e3, t3, n3) {
      var i3 = this;
      if (t3.text !== "") {
        var r3, o3 = t3.text, s3 = 1, a3 = "", l3 = "";
        n3.custom_beautifier_name === "javascript" && typeof this._js_beautify == "function" ? r3 = this._js_beautify : n3.custom_beautifier_name === "css" && typeof this._css_beautify == "function" ? r3 = this._css_beautify : n3.custom_beautifier_name === "html" && (r3 = function(e4, t4) {
          return new m2(e4, t4, i3._js_beautify, i3._css_beautify).beautify();
        }), this._options.indent_scripts === "keep" ? s3 = 0 : this._options.indent_scripts === "separate" && (s3 = -e3.indent_level);
        var c3 = e3.get_full_indent(s3);
        if (o3 = o3.replace(/\n[ \t]*$/, ""), n3.custom_beautifier_name !== "html" && o3[0] === "<" && o3.match(/^(<!--|<!\[CDATA\[)/)) {
          var d3 = /^(<!--[^\n]*|<!\[CDATA\[)(\n?)([ \t\n]*)([\s\S]*)(-->|]]>)$/.exec(o3);
          if (!d3)
            return void e3.add_raw_token(t3);
          a3 = c3 + d3[1] + "\n", o3 = d3[4], d3[5] && (l3 = c3 + d3[5]), o3 = o3.replace(/\n[ \t]*$/, ""), (d3[2] || d3[3].indexOf("\n") !== -1) && (d3 = d3[3].match(/[ \t]+$/)) && (t3.whitespace_before = d3[0]);
        }
        if (o3)
          if (r3) {
            var h3 = function() {
              this.eol = "\n";
            };
            h3.prototype = this._options.raw_options, o3 = r3(c3 + o3, new h3());
          } else {
            var u3 = t3.whitespace_before;
            u3 && (o3 = o3.replace(new RegExp("\n(" + u3 + ")?", "g"), "\n")), o3 = c3 + o3.replace(/\n/g, "\n" + c3);
          }
        a3 && (o3 = o3 ? a3 + o3 + "\n" + l3 : a3 + l3), e3.print_newline(false), o3 && (t3.text = o3, t3.whitespace_before = "", t3.newlines = 0, e3.add_raw_token(t3), e3.print_newline(true));
      }
    }, m2.prototype._handle_tag_open = function(e3, t3, n3, i3) {
      var r3 = this._get_tag_open_token(t3);
      return (n3.is_unformatted || n3.is_content_unformatted) && t3.type === s2.TAG_OPEN && t3.text.indexOf("</") === 0 ? (e3.add_raw_token(t3), r3.start_tag_token = this._tag_stack.try_pop(r3.tag_name)) : (e3.traverse_whitespace(t3), this._set_tag_position(e3, t3, r3, n3, i3), r3.is_inline_element || e3.set_wrap_point(), e3.print_token(t3)), (this._is_wrap_attributes_force_aligned || this._is_wrap_attributes_aligned_multiple || this._is_wrap_attributes_preserve_aligned) && (r3.alignment_size = t3.text.length + 1), r3.tag_complete || r3.is_unformatted || (e3.alignment_size = r3.alignment_size), r3;
    };
    var g2 = function(e3, t3) {
      var n3;
      (this.parent = e3 || null, this.text = "", this.type = "TK_TAG_OPEN", this.tag_name = "", this.is_inline_element = false, this.is_unformatted = false, this.is_content_unformatted = false, this.is_empty_element = false, this.is_start_tag = false, this.is_end_tag = false, this.indent_content = false, this.multiline_content = false, this.custom_beautifier_name = null, this.start_tag_token = null, this.attr_count = 0, this.has_wrapped_attrs = false, this.alignment_size = 0, this.tag_complete = false, this.tag_start_char = "", this.tag_check = "", t3) ? (this.tag_start_char = t3.text[0], this.text = t3.text, this.tag_start_char === "<" ? (n3 = t3.text.match(/^<([^\s>]*)/), this.tag_check = n3 ? n3[1] : "") : (n3 = t3.text.match(/^{{(?:[\^]|#\*?)?([^\s}]+)/), this.tag_check = n3 ? n3[1] : "", t3.text === "{{#>" && this.tag_check === ">" && t3.next !== null && (this.tag_check = t3.next.text)), this.tag_check = this.tag_check.toLowerCase(), t3.type === s2.COMMENT && (this.tag_complete = true), this.is_start_tag = this.tag_check.charAt(0) !== "/", this.tag_name = this.is_start_tag ? this.tag_check : this.tag_check.substr(1), this.is_end_tag = !this.is_start_tag || t3.closed && t3.closed.text === "/>", this.is_end_tag = this.is_end_tag || this.tag_start_char === "{" && (this.text.length < 3 || /[^#\^]/.test(this.text.charAt(2)))) : this.tag_complete = true;
    };
    m2.prototype._get_tag_open_token = function(e3) {
      var t3 = new g2(this._tag_stack.get_parser_token(), e3);
      return t3.alignment_size = this._options.wrap_attributes_indent_size, t3.is_end_tag = t3.is_end_tag || h2(t3.tag_check, this._options.void_elements), t3.is_empty_element = t3.tag_complete || t3.is_start_tag && t3.is_end_tag, t3.is_unformatted = !t3.tag_complete && h2(t3.tag_check, this._options.unformatted), t3.is_content_unformatted = !t3.is_empty_element && h2(t3.tag_check, this._options.content_unformatted), t3.is_inline_element = h2(t3.tag_name, this._options.inline) || t3.tag_start_char === "{", t3;
    }, m2.prototype._set_tag_position = function(e3, t3, n3, i3, r3) {
      if (n3.is_empty_element || (n3.is_end_tag ? n3.start_tag_token = this._tag_stack.try_pop(n3.tag_name) : (this._do_optional_end_element(n3) && (n3.is_inline_element || (n3.parent && (n3.parent.multiline_content = true), e3.print_newline(false))), this._tag_stack.record_tag(n3), n3.tag_name !== "script" && n3.tag_name !== "style" || n3.is_unformatted || n3.is_content_unformatted || (n3.custom_beautifier_name = d2(n3.tag_check, t3)))), h2(n3.tag_check, this._options.extra_liners) && (e3.print_newline(false), e3._output.just_added_blankline() || e3.print_newline(true)), n3.is_empty_element) {
        if (n3.tag_start_char === "{" && n3.tag_check === "else")
          this._tag_stack.indent_to_tag(["if", "unless", "each"]), n3.indent_content = true, e3.current_line_has_match(/{{#if/) || e3.print_newline(false);
        n3.tag_name === "!--" && r3.type === s2.TAG_CLOSE && i3.is_end_tag && n3.text.indexOf("\n") === -1 || n3.is_inline_element || n3.is_unformatted || e3.print_newline(false);
      } else
        n3.is_unformatted || n3.is_content_unformatted ? n3.is_inline_element || n3.is_unformatted || e3.print_newline(false) : n3.is_end_tag ? (n3.start_tag_token && n3.start_tag_token.multiline_content || !(n3.is_inline_element || i3.is_inline_element || r3.type === s2.TAG_CLOSE && n3.start_tag_token === i3 || r3.type === "TK_CONTENT")) && e3.print_newline(false) : (n3.indent_content = !n3.custom_beautifier_name, n3.tag_start_char === "<" && (n3.tag_name === "html" ? n3.indent_content = this._options.indent_inner_html : n3.tag_name === "head" ? n3.indent_content = this._options.indent_head_inner_html : n3.tag_name === "body" && (n3.indent_content = this._options.indent_body_inner_html)), n3.is_inline_element || r3.type === "TK_CONTENT" || (n3.parent && (n3.parent.multiline_content = true), e3.print_newline(false)));
    };
    var f2 = ["address", "article", "aside", "blockquote", "details", "div", "dl", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hr", "main", "nav", "ol", "p", "pre", "section", "table", "ul"], b2 = ["a", "audio", "del", "ins", "map", "noscript", "video"];
    m2.prototype._do_optional_end_element = function(e3) {
      var t3 = null;
      if (!e3.is_empty_element && e3.is_start_tag && e3.parent) {
        if (e3.tag_name === "body")
          t3 = t3 || this._tag_stack.try_pop("head");
        else if (e3.tag_name === "li")
          t3 = t3 || this._tag_stack.try_pop("li", ["ol", "ul"]);
        else if (e3.tag_name === "dd" || e3.tag_name === "dt")
          t3 = (t3 = t3 || this._tag_stack.try_pop("dt", ["dl"])) || this._tag_stack.try_pop("dd", ["dl"]);
        else if (e3.parent.tag_name === "p" && f2.indexOf(e3.tag_name) !== -1) {
          var n3 = e3.parent.parent;
          n3 && b2.indexOf(n3.tag_name) !== -1 || (t3 = t3 || this._tag_stack.try_pop("p"));
        } else
          e3.tag_name === "rp" || e3.tag_name === "rt" ? t3 = (t3 = t3 || this._tag_stack.try_pop("rt", ["ruby", "rtc"])) || this._tag_stack.try_pop("rp", ["ruby", "rtc"]) : e3.tag_name === "optgroup" ? t3 = t3 || this._tag_stack.try_pop("optgroup", ["select"]) : e3.tag_name === "option" ? t3 = t3 || this._tag_stack.try_pop("option", ["select", "datalist", "optgroup"]) : e3.tag_name === "colgroup" ? t3 = t3 || this._tag_stack.try_pop("caption", ["table"]) : e3.tag_name === "thead" ? t3 = (t3 = t3 || this._tag_stack.try_pop("caption", ["table"])) || this._tag_stack.try_pop("colgroup", ["table"]) : e3.tag_name === "tbody" || e3.tag_name === "tfoot" ? t3 = (t3 = (t3 = (t3 = t3 || this._tag_stack.try_pop("caption", ["table"])) || this._tag_stack.try_pop("colgroup", ["table"])) || this._tag_stack.try_pop("thead", ["table"])) || this._tag_stack.try_pop("tbody", ["table"]) : e3.tag_name === "tr" ? t3 = (t3 = (t3 = t3 || this._tag_stack.try_pop("caption", ["table"])) || this._tag_stack.try_pop("colgroup", ["table"])) || this._tag_stack.try_pop("tr", ["table", "thead", "tbody", "tfoot"]) : e3.tag_name !== "th" && e3.tag_name !== "td" || (t3 = (t3 = t3 || this._tag_stack.try_pop("td", ["table", "thead", "tbody", "tfoot", "tr"])) || this._tag_stack.try_pop("th", ["table", "thead", "tbody", "tfoot", "tr"]));
        return e3.parent = this._tag_stack.get_parser_token(), t3;
      }
    }, e2.exports.Beautifier = m2;
  }, function(e2, t2, n2) {
    var i2 = n2(6).Options;
    function r2(e3) {
      i2.call(this, e3, "html"), this.templating.length === 1 && this.templating[0] === "auto" && (this.templating = ["django", "erb", "handlebars", "php"]), this.indent_inner_html = this._get_boolean("indent_inner_html"), this.indent_body_inner_html = this._get_boolean("indent_body_inner_html", true), this.indent_head_inner_html = this._get_boolean("indent_head_inner_html", true), this.indent_handlebars = this._get_boolean("indent_handlebars", true), this.wrap_attributes = this._get_selection("wrap_attributes", ["auto", "force", "force-aligned", "force-expand-multiline", "aligned-multiple", "preserve", "preserve-aligned"]), this.wrap_attributes_indent_size = this._get_number("wrap_attributes_indent_size", this.indent_size), this.extra_liners = this._get_array("extra_liners", ["head", "body", "/html"]), this.inline = this._get_array("inline", ["a", "abbr", "area", "audio", "b", "bdi", "bdo", "br", "button", "canvas", "cite", "code", "data", "datalist", "del", "dfn", "em", "embed", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "map", "mark", "math", "meter", "noscript", "object", "output", "progress", "q", "ruby", "s", "samp", "select", "small", "span", "strong", "sub", "sup", "svg", "template", "textarea", "time", "u", "var", "video", "wbr", "text", "acronym", "big", "strike", "tt"]), this.void_elements = this._get_array("void_elements", ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr", "!doctype", "?xml", "basefont", "isindex"]), this.unformatted = this._get_array("unformatted", []), this.content_unformatted = this._get_array("content_unformatted", ["pre", "textarea"]), this.unformatted_content_delimiter = this._get_characters("unformatted_content_delimiter"), this.indent_scripts = this._get_selection("indent_scripts", ["normal", "keep", "separate"]);
    }
    r2.prototype = new i2(), e2.exports.Options = r2;
  }, function(e2, t2, n2) {
    var i2 = n2(9).Tokenizer, r2 = n2(9).TOKEN, o2 = n2(13).Directives, s2 = n2(14).TemplatablePattern, a2 = n2(12).Pattern, l2 = {TAG_OPEN: "TK_TAG_OPEN", TAG_CLOSE: "TK_TAG_CLOSE", ATTRIBUTE: "TK_ATTRIBUTE", EQUALS: "TK_EQUALS", VALUE: "TK_VALUE", COMMENT: "TK_COMMENT", TEXT: "TK_TEXT", UNKNOWN: "TK_UNKNOWN", START: r2.START, RAW: r2.RAW, EOF: r2.EOF}, c2 = new o2(/<\!--/, /-->/), d2 = function(e3, t3) {
      i2.call(this, e3, t3), this._current_tag_name = "";
      var n3 = new s2(this._input).read_options(this._options), r3 = new a2(this._input);
      if (this.__patterns = {word: n3.until(/[\n\r\t <]/), single_quote: n3.until_after(/'/), double_quote: n3.until_after(/"/), attribute: n3.until(/[\n\r\t =>]|\/>/), element_name: n3.until(/[\n\r\t >\/]/), handlebars_comment: r3.starting_with(/{{!--/).until_after(/--}}/), handlebars: r3.starting_with(/{{/).until_after(/}}/), handlebars_open: r3.until(/[\n\r\t }]/), handlebars_raw_close: r3.until(/}}/), comment: r3.starting_with(/<!--/).until_after(/-->/), cdata: r3.starting_with(/<!\[CDATA\[/).until_after(/]]>/), conditional_comment: r3.starting_with(/<!\[/).until_after(/]>/), processing: r3.starting_with(/<\?/).until_after(/\?>/)}, this._options.indent_handlebars && (this.__patterns.word = this.__patterns.word.exclude("handlebars")), this._unformatted_content_delimiter = null, this._options.unformatted_content_delimiter) {
        var o3 = this._input.get_literal_regexp(this._options.unformatted_content_delimiter);
        this.__patterns.unformatted_content_delimiter = r3.matching(o3).until_after(o3);
      }
    };
    (d2.prototype = new i2())._is_comment = function(e3) {
      return false;
    }, d2.prototype._is_opening = function(e3) {
      return e3.type === l2.TAG_OPEN;
    }, d2.prototype._is_closing = function(e3, t3) {
      return e3.type === l2.TAG_CLOSE && t3 && ((e3.text === ">" || e3.text === "/>") && t3.text[0] === "<" || e3.text === "}}" && t3.text[0] === "{" && t3.text[1] === "{");
    }, d2.prototype._reset = function() {
      this._current_tag_name = "";
    }, d2.prototype._get_next_token = function(e3, t3) {
      var n3 = null;
      this._readWhitespace();
      var i3 = this._input.peek();
      return i3 === null ? this._create_token(l2.EOF, "") : n3 = (n3 = (n3 = (n3 = (n3 = (n3 = (n3 = (n3 = (n3 = n3 || this._read_open_handlebars(i3, t3)) || this._read_attribute(i3, e3, t3)) || this._read_raw_content(i3, e3, t3)) || this._read_close(i3, t3)) || this._read_content_word(i3)) || this._read_comment_or_cdata(i3)) || this._read_processing(i3)) || this._read_open(i3, t3)) || this._create_token(l2.UNKNOWN, this._input.next());
    }, d2.prototype._read_comment_or_cdata = function(e3) {
      var t3 = null, n3 = null, i3 = null;
      e3 === "<" && (this._input.peek(1) === "!" && ((n3 = this.__patterns.comment.read()) ? (i3 = c2.get_directives(n3)) && i3.ignore === "start" && (n3 += c2.readIgnored(this._input)) : n3 = this.__patterns.cdata.read()), n3 && ((t3 = this._create_token(l2.COMMENT, n3)).directives = i3));
      return t3;
    }, d2.prototype._read_processing = function(e3) {
      var t3 = null, n3 = null;
      if (e3 === "<") {
        var i3 = this._input.peek(1);
        i3 !== "!" && i3 !== "?" || (n3 = (n3 = this.__patterns.conditional_comment.read()) || this.__patterns.processing.read()), n3 && ((t3 = this._create_token(l2.COMMENT, n3)).directives = null);
      }
      return t3;
    }, d2.prototype._read_open = function(e3, t3) {
      var n3 = null, i3 = null;
      return t3 || e3 === "<" && (n3 = this._input.next(), this._input.peek() === "/" && (n3 += this._input.next()), n3 += this.__patterns.element_name.read(), i3 = this._create_token(l2.TAG_OPEN, n3)), i3;
    }, d2.prototype._read_open_handlebars = function(e3, t3) {
      var n3 = null, i3 = null;
      return t3 || this._options.indent_handlebars && e3 === "{" && this._input.peek(1) === "{" && (this._input.peek(2) === "!" ? (n3 = (n3 = this.__patterns.handlebars_comment.read()) || this.__patterns.handlebars.read(), i3 = this._create_token(l2.COMMENT, n3)) : (n3 = this.__patterns.handlebars_open.read(), i3 = this._create_token(l2.TAG_OPEN, n3))), i3;
    }, d2.prototype._read_close = function(e3, t3) {
      var n3 = null, i3 = null;
      return t3 && (t3.text[0] === "<" && (e3 === ">" || e3 === "/" && this._input.peek(1) === ">") ? (n3 = this._input.next(), e3 === "/" && (n3 += this._input.next()), i3 = this._create_token(l2.TAG_CLOSE, n3)) : t3.text[0] === "{" && e3 === "}" && this._input.peek(1) === "}" && (this._input.next(), this._input.next(), i3 = this._create_token(l2.TAG_CLOSE, "}}"))), i3;
    }, d2.prototype._read_attribute = function(e3, t3, n3) {
      var i3 = null, r3 = "";
      if (n3 && n3.text[0] === "<")
        if (e3 === "=")
          i3 = this._create_token(l2.EQUALS, this._input.next());
        else if (e3 === '"' || e3 === "'") {
          var o3 = this._input.next();
          o3 += e3 === '"' ? this.__patterns.double_quote.read() : this.__patterns.single_quote.read(), i3 = this._create_token(l2.VALUE, o3);
        } else
          (r3 = this.__patterns.attribute.read()) && (i3 = t3.type === l2.EQUALS ? this._create_token(l2.VALUE, r3) : this._create_token(l2.ATTRIBUTE, r3));
      return i3;
    }, d2.prototype._is_content_unformatted = function(e3) {
      return this._options.void_elements.indexOf(e3) === -1 && (this._options.content_unformatted.indexOf(e3) !== -1 || this._options.unformatted.indexOf(e3) !== -1);
    }, d2.prototype._read_raw_content = function(e3, t3, n3) {
      var i3 = "";
      if (n3 && n3.text[0] === "{")
        i3 = this.__patterns.handlebars_raw_close.read();
      else if (t3.type === l2.TAG_CLOSE && t3.opened.text[0] === "<") {
        var r3 = t3.opened.text.substr(1).toLowerCase();
        if (r3 === "script" || r3 === "style") {
          var o3 = this._read_comment_or_cdata(e3);
          if (o3)
            return o3.type = l2.TEXT, o3;
          i3 = this._input.readUntil(new RegExp("</" + r3 + "[\\n\\r\\t ]*?>", "ig"));
        } else
          this._is_content_unformatted(r3) && (i3 = this._input.readUntil(new RegExp("</" + r3 + "[\\n\\r\\t ]*?>", "ig")));
      }
      return i3 ? this._create_token(l2.TEXT, i3) : null;
    }, d2.prototype._read_content_word = function(e3) {
      var t3 = "";
      if (this._options.unformatted_content_delimiter && e3 === this._options.unformatted_content_delimiter[0] && (t3 = this.__patterns.unformatted_content_delimiter.read()), t3 || (t3 = this.__patterns.word.read()), t3)
        return this._create_token(l2.TEXT, t3);
    }, e2.exports.Tokenizer = d2, e2.exports.TOKEN = l2;
  }]);
  function ut(e2, t2, n2) {
    var i2 = e2.getText(), r2 = true, o2 = 0, l2 = n2.tabSize || 4;
    if (t2) {
      for (var c2 = e2.offsetAt(t2.start), d2 = c2; d2 > 0 && ft(i2, d2 - 1); )
        d2--;
      d2 === 0 || gt(i2, d2 - 1) ? c2 = d2 : d2 < c2 && (c2 = d2 + 1);
      for (var h2 = e2.offsetAt(t2.end), u2 = h2; u2 < i2.length && ft(i2, u2); )
        u2++;
      (u2 === i2.length || gt(i2, u2)) && (h2 = u2), t2 = a.create(e2.positionAt(c2), e2.positionAt(h2));
      var p2 = i2.substring(0, c2);
      if (new RegExp(/.*[<][^>]*$/).test(p2))
        return [{range: t2, newText: i2 = i2.substring(c2, h2)}];
      if (r2 = h2 === i2.length, i2 = i2.substring(c2, h2), c2 !== 0) {
        var m2 = e2.offsetAt(s.create(t2.start.line, 0));
        o2 = function(e3, t3, n3) {
          var i3 = t3, r3 = 0, o3 = n3.tabSize || 4;
          for (; i3 < e3.length; ) {
            var s2 = e3.charAt(i3);
            if (s2 === " ")
              r3++;
            else {
              if (s2 !== "	")
                break;
              r3 += o3;
            }
            i3++;
          }
          return Math.floor(r3 / o3);
        }(e2.getText(), m2, n2);
      }
    } else
      t2 = a.create(s.create(0, 0), e2.positionAt(i2.length));
    var g2 = {indent_size: l2, indent_char: n2.insertSpaces ? " " : "	", indent_empty_lines: pt(n2, "indentEmptyLines", false), wrap_line_length: pt(n2, "wrapLineLength", 120), unformatted: mt(n2, "unformatted", void 0), content_unformatted: mt(n2, "contentUnformatted", void 0), indent_inner_html: pt(n2, "indentInnerHtml", false), preserve_newlines: pt(n2, "preserveNewLines", true), max_preserve_newlines: pt(n2, "maxPreserveNewLines", 32786), indent_handlebars: pt(n2, "indentHandlebars", false), end_with_newline: r2 && pt(n2, "endWithNewline", false), extra_liners: mt(n2, "extraLiners", void 0), wrap_attributes: pt(n2, "wrapAttributes", "auto"), wrap_attributes_indent_size: pt(n2, "wrapAttributesIndentSize", void 0), eol: "\n"}, f2 = function(e3, t3) {
      return ht(e3, t3, ct, dt);
    }(i2.replace(/^\s+/, ""), g2);
    if (o2 > 0) {
      var b2 = n2.insertSpaces ? We(" ", l2 * o2) : We("	", o2);
      f2 = f2.split("\n").join("\n" + b2), t2.start.character === 0 && (f2 = b2 + f2);
    }
    return [{range: t2, newText: f2}];
  }
  function pt(e2, t2, n2) {
    if (e2 && e2.hasOwnProperty(t2)) {
      var i2 = e2[t2];
      if (i2 !== null)
        return i2;
    }
    return n2;
  }
  function mt(e2, t2, n2) {
    var i2 = pt(e2, t2, null);
    return typeof i2 == "string" ? i2.length > 0 ? i2.split(",").map(function(e3) {
      return e3.trim().toLowerCase();
    }) : [] : n2;
  }
  function gt(e2, t2) {
    return "\r\n".indexOf(e2.charAt(t2)) !== -1;
  }
  function ft(e2, t2) {
    return " 	".indexOf(e2.charAt(t2)) !== -1;
  }
  var bt = n(176);
  function _t(e2) {
    var t2 = e2[0];
    return t2 !== e2[e2.length - 1] || t2 !== "'" && t2 !== '"' || (e2 = e2.substr(1, e2.length - 2)), e2;
  }
  function vt(e2, t2, n2, i2, r2, o2) {
    var s2 = _t(n2);
    if (l2 = s2, c2 = e2.languageId, l2.length && (c2 !== "handlebars" || !/{{.*}}/.test(l2)) && /\b(w[\w\d+.-]*:\/\/)?[^\s()<>]+(?:\([\w\d]+\)|([^[:punct:]\s]|\/?))/.test(l2)) {
      var l2, c2;
      s2.length < n2.length && (i2++, r2--);
      var d2 = function(e3, t3, n3, i3) {
        if (!/^\s*javascript\:/i.test(t3) && !/[\n\r]/.test(t3))
          return t3 = t3.replace(/^\s*/g, ""), /^https?:\/\//i.test(t3) || /^file:\/\//i.test(t3) ? t3 : /^\#/i.test(t3) ? e3 + t3 : /^\/\//i.test(t3) ? (Fe(e3, "https://") ? "https" : "http") + ":" + t3.replace(/^\s*/g, "") : n3 ? n3.resolveReference(t3, i3 || e3) : t3;
      }(e2.uri, s2, t2, o2);
      if (d2 && function(e3) {
        try {
          return bt.a.parse(e3), true;
        } catch (e4) {
          return false;
        }
      }(d2))
        return {range: a.create(e2.positionAt(i2), e2.positionAt(r2)), target: d2};
    }
  }
  function wt(e2, t2) {
    for (var n2 = [], i2 = Ie(e2.getText(), 0), r2 = i2.scan(), o2 = void 0, s2 = false, a2 = void 0, l2 = {}; r2 !== se.EOS; ) {
      switch (r2) {
        case se.StartTag:
          if (!a2)
            s2 = i2.getTokenText().toLowerCase() === "base";
          break;
        case se.AttributeName:
          o2 = i2.getTokenText().toLowerCase();
          break;
        case se.AttributeValue:
          if (o2 === "src" || o2 === "href") {
            var c2 = i2.getTokenText();
            if (!s2)
              (u2 = vt(e2, t2, c2, i2.getTokenOffset(), i2.getTokenEnd(), a2)) && n2.push(u2);
            s2 && a2 === void 0 && (a2 = _t(c2)) && t2 && (a2 = t2.resolveReference(a2, e2.uri)), s2 = false, o2 = void 0;
          } else if (o2 === "id") {
            l2[_t(i2.getTokenText())] = i2.getTokenOffset();
          }
      }
      r2 = i2.scan();
    }
    for (var d2 = 0, h2 = n2; d2 < h2.length; d2++) {
      var u2 = h2[d2], p2 = e2.uri + "#";
      if (u2.target && Fe(u2.target, p2)) {
        var m2 = l2[u2.target.substr(p2.length)];
        if (m2 !== void 0) {
          var g2 = e2.positionAt(m2);
          u2.target = "" + p2 + (g2.line + 1) + "," + (g2.character + 1);
        }
      }
    }
    return n2;
  }
  function yt(e2, t2, n2) {
    var i2 = e2.offsetAt(t2), r2 = n2.findNodeAt(i2);
    if (!r2.tag)
      return [];
    var o2 = [], s2 = St(se.StartTag, e2, r2.start), a2 = typeof r2.endTagStart == "number" && St(se.EndTag, e2, r2.endTagStart);
    return (s2 && xt(s2, t2) || a2 && xt(a2, t2)) && (s2 && o2.push({kind: V.Read, range: s2}), a2 && o2.push({kind: V.Read, range: a2})), o2;
  }
  function Ct(e2, t2) {
    return e2.line < t2.line || e2.line === t2.line && e2.character <= t2.character;
  }
  function xt(e2, t2) {
    return Ct(e2.start, t2) && Ct(t2, e2.end);
  }
  function St(e2, t2, n2) {
    for (var i2 = Ie(t2.getText(), n2), r2 = i2.scan(); r2 !== se.EOS && r2 !== e2; )
      r2 = i2.scan();
    return r2 !== se.EOS ? {start: t2.positionAt(i2.getTokenOffset()), end: t2.positionAt(i2.getTokenEnd())} : null;
  }
  function kt(e2, t2) {
    var n2 = [];
    return t2.roots.forEach(function(t3) {
      !function e3(t4, n3, i2, r2) {
        var o2 = function(e4) {
          var t5 = e4.tag;
          if (e4.attributes) {
            var n4 = e4.attributes.id, i3 = e4.attributes.class;
            n4 && (t5 += "#" + n4.replace(/[\"\']/g, "")), i3 && (t5 += i3.replace(/[\"\']/g, "").split(/\s+/).map(function(e5) {
              return "." + e5;
            }).join(""));
          }
          return t5 || "?";
        }(n3), s2 = l.create(t4.uri, a.create(t4.positionAt(n3.start), t4.positionAt(n3.end))), c2 = {name: o2, location: s2, containerName: i2, kind: H.Field};
        r2.push(c2), n3.children.forEach(function(n4) {
          e3(t4, n4, o2, r2);
        });
      }(e2, t3, "", n2);
    }), n2;
  }
  function Et(e2, t2, n2, i2) {
    var r2, o2 = e2.offsetAt(t2), s2 = i2.findNodeAt(o2);
    if (!s2.tag)
      return null;
    if (!function(e3, t3, n3) {
      if (e3.endTagStart && e3.endTagStart + "</".length <= t3 && t3 <= e3.endTagStart + "</".length + n3.length)
        return true;
      return e3.start + "<".length <= t3 && t3 <= e3.start + "<".length + n3.length;
    }(s2, o2, s2.tag))
      return null;
    var a2 = [], l2 = {start: e2.positionAt(s2.start + "<".length), end: e2.positionAt(s2.start + "<".length + s2.tag.length)};
    if (a2.push({range: l2, newText: n2}), s2.endTagStart) {
      var c2 = {start: e2.positionAt(s2.endTagStart + "</".length), end: e2.positionAt(s2.endTagStart + "</".length + s2.tag.length)};
      a2.push({range: c2, newText: n2});
    }
    return {changes: ((r2 = {})[e2.uri.toString()] = a2, r2)};
  }
  function Tt(e2, t2, n2) {
    var i2 = e2.offsetAt(t2), r2 = n2.findNodeAt(i2);
    if (!r2.tag)
      return null;
    if (!r2.endTagStart)
      return null;
    if (r2.start + "<".length <= i2 && i2 <= r2.start + "<".length + r2.tag.length) {
      var o2 = i2 - "<".length - r2.start + r2.endTagStart + "</".length;
      return e2.positionAt(o2);
    }
    if (r2.endTagStart + "</".length <= i2 && i2 <= r2.endTagStart + "</".length + r2.tag.length) {
      o2 = i2 - "</".length - r2.endTagStart + r2.start + "<".length;
      return e2.positionAt(o2);
    }
    return null;
  }
  function Lt(e2, t2, n2) {
    var i2 = e2.offsetAt(t2), r2 = n2.findNodeAt(i2), o2 = r2.tag ? r2.tag.length : 0;
    return r2.endTagStart && (r2.start + "<".length <= i2 && i2 <= r2.start + "<".length + o2 || r2.endTagStart + "</".length <= i2 && i2 <= r2.endTagStart + "</".length + o2) ? [a.create(e2.positionAt(r2.start + "<".length), e2.positionAt(r2.start + "<".length + o2)), a.create(e2.positionAt(r2.endTagStart + "</".length), e2.positionAt(r2.endTagStart + "</".length + o2))] : null;
  }
  function Nt(e2, t2) {
    var n2 = Ie(e2.getText()), i2 = n2.scan(), r2 = [], o2 = [], s2 = null, a2 = -1;
    function l2(e3) {
      r2.push(e3), a2 = e3.startLine;
    }
    for (; i2 !== se.EOS; ) {
      switch (i2) {
        case se.StartTag:
          var c2 = n2.getTokenText(), d2 = e2.positionAt(n2.getTokenOffset()).line;
          o2.push({startLine: d2, tagName: c2}), s2 = c2;
          break;
        case se.EndTag:
          s2 = n2.getTokenText();
          break;
        case se.StartTagClose:
          if (!s2 || !Ae(s2))
            break;
        case se.EndTagClose:
        case se.StartTagSelfClose:
          for (var h2 = o2.length - 1; h2 >= 0 && o2[h2].tagName !== s2; )
            h2--;
          if (h2 >= 0) {
            var u2 = o2[h2];
            o2.length = h2, (g2 = e2.positionAt(n2.getTokenOffset()).line - 1) > (d2 = u2.startLine) && a2 !== d2 && l2({startLine: d2, endLine: g2});
          }
          break;
        case se.Comment:
          d2 = e2.positionAt(n2.getTokenOffset()).line;
          var m2 = n2.getTokenText().match(/^\s*#(region\b)|(endregion\b)/);
          if (m2)
            if (m2[1])
              o2.push({startLine: d2, tagName: ""});
            else {
              for (h2 = o2.length - 1; h2 >= 0 && o2[h2].tagName.length; )
                h2--;
              if (h2 >= 0) {
                var g2;
                u2 = o2[h2];
                o2.length = h2, (g2 = d2) > (d2 = u2.startLine) && a2 !== d2 && l2({startLine: d2, endLine: g2, kind: p.Region});
              }
            }
          else
            d2 < (g2 = e2.positionAt(n2.getTokenOffset() + n2.getTokenLength()).line) && l2({startLine: d2, endLine: g2, kind: p.Comment});
      }
      i2 = n2.scan();
    }
    var f2 = t2 && t2.rangeLimit || Number.MAX_VALUE;
    return r2.length > f2 ? function(e3, t3) {
      e3 = e3.sort(function(e4, t4) {
        var n4 = e4.startLine - t4.startLine;
        return n4 === 0 && (n4 = e4.endLine - t4.endLine), n4;
      });
      for (var n3 = void 0, i3 = [], r3 = [], o3 = [], s3 = function(e4, t4) {
        r3[e4] = t4, t4 < 30 && (o3[t4] = (o3[t4] || 0) + 1);
      }, a3 = 0; a3 < e3.length; a3++) {
        var l3 = e3[a3];
        if (n3) {
          if (l3.startLine > n3.startLine) {
            if (l3.endLine <= n3.endLine)
              i3.push(n3), n3 = l3, s3(a3, i3.length);
            else if (l3.startLine > n3.endLine) {
              do {
                n3 = i3.pop();
              } while (n3 && l3.startLine > n3.endLine);
              n3 && i3.push(n3), n3 = l3, s3(a3, i3.length);
            }
          }
        } else
          n3 = l3, s3(a3, 0);
      }
      var c3 = 0, d3 = 0;
      for (a3 = 0; a3 < o3.length; a3++) {
        var h3 = o3[a3];
        if (h3) {
          if (h3 + c3 > t3) {
            d3 = a3;
            break;
          }
          c3 += h3;
        }
      }
      var u3 = [];
      for (a3 = 0; a3 < e3.length; a3++) {
        var p2 = r3[a3];
        typeof p2 == "number" && (p2 < d3 || p2 === d3 && c3++ < t3) && u3.push(e3[a3]);
      }
      return u3;
    }(r2, f2) : r2;
  }
  function It(e2, t2) {
    return t2.map(function(t3) {
      for (var n2 = function(e3, t4) {
        var n3 = Me(e3.getText()), i3 = e3.offsetAt(t4), r3 = n3.findNodeAt(i3), o3 = function(e4) {
          var t5 = e4, n4 = [];
          for (; t5.parent; )
            t5 = t5.parent, (i4 = t5, i4.startTagEnd && i4.endTagStart && i4.startTagEnd < i4.endTagStart ? [[i4.startTagEnd, i4.endTagStart], [i4.start, i4.end]] : [[i4.start, i4.end]]).forEach(function(e5) {
              return n4.push(e5);
            });
          var i4;
          return n4;
        }(r3);
        if (r3.startTagEnd && !r3.endTagStart) {
          if (r3.startTagEnd !== r3.end)
            return [[r3.start, r3.end]];
          var s3 = a.create(e3.positionAt(r3.startTagEnd - 2), e3.positionAt(r3.startTagEnd));
          e3.getText(s3) === "/>" ? o3.unshift([r3.start + 1, r3.startTagEnd - 2]) : o3.unshift([r3.start + 1, r3.startTagEnd - 1]);
          var l2 = Dt(e3, r3, i3);
          return o3 = l2.concat(o3);
        }
        if (!r3.startTagEnd || !r3.endTagStart)
          return o3;
        if (o3.unshift([r3.start, r3.end]), r3.start < i3 && i3 < r3.startTagEnd) {
          o3.unshift([r3.start + 1, r3.startTagEnd - 1]);
          l2 = Dt(e3, r3, i3);
          return o3 = l2.concat(o3);
        }
        return r3.startTagEnd <= i3 && i3 <= r3.endTagStart ? (o3.unshift([r3.startTagEnd, r3.endTagStart]), o3) : (i3 >= r3.endTagStart + 2 && o3.unshift([r3.endTagStart + 2, r3.end - 1]), o3);
      }(e2, t3), i2 = void 0, r2 = void 0, o2 = n2.length - 1; o2 >= 0; o2--) {
        var s2 = n2[o2];
        i2 && s2[0] === i2[0] && s2[1] === i2[1] || (r2 = ee.create(a.create(e2.positionAt(n2[o2][0]), e2.positionAt(n2[o2][1])), r2)), i2 = s2;
      }
      return r2 || (r2 = ee.create(a.create(t3, t3))), r2;
    });
  }
  function Dt(e2, t2, n2) {
    for (var i2 = a.create(e2.positionAt(t2.start), e2.positionAt(t2.end)), r2 = e2.getText(i2), o2 = n2 - t2.start, s2 = Ie(r2), l2 = s2.scan(), c2 = t2.start, d2 = [], h2 = false, u2 = -1; l2 !== se.EOS; ) {
      switch (l2) {
        case se.AttributeName:
          if (o2 < s2.getTokenOffset()) {
            h2 = false;
            break;
          }
          o2 <= s2.getTokenEnd() && d2.unshift([s2.getTokenOffset(), s2.getTokenEnd()]), h2 = true, u2 = s2.getTokenOffset();
          break;
        case se.AttributeValue:
          if (!h2)
            break;
          var p2 = s2.getTokenText();
          if (o2 < s2.getTokenOffset()) {
            d2.push([u2, s2.getTokenEnd()]);
            break;
          }
          o2 >= s2.getTokenOffset() && o2 <= s2.getTokenEnd() && (d2.unshift([s2.getTokenOffset(), s2.getTokenEnd()]), (p2[0] === '"' && p2[p2.length - 1] === '"' || p2[0] === "'" && p2[p2.length - 1] === "'") && o2 >= s2.getTokenOffset() + 1 && o2 <= s2.getTokenEnd() - 1 && d2.unshift([s2.getTokenOffset() + 1, s2.getTokenEnd() - 1]), d2.push([u2, s2.getTokenEnd()]));
      }
      l2 = s2.scan();
    }
    return d2.map(function(e3) {
      return [e3[0] + c2, e3[1] + c2];
    });
  }
  var Ot = {version: 1.1, tags: [{name: "html", description: {kind: "markdown", value: "The html element represents the root of an HTML document."}, attributes: [{name: "manifest", description: {kind: "markdown", value: "Specifies the URI of a resource manifest indicating resources that should be cached locally. See [Using the application cache](https://developer.mozilla.org/en-US/docs/Web/HTML/Using_the_application_cache) for details."}}, {name: "version", description: 'Specifies the version of the HTML [Document Type Definition](https://developer.mozilla.org/en-US/docs/Glossary/DTD "Document Type Definition: In HTML, the doctype is the required "<!DOCTYPE html>" preamble found at the top of all documents. Its sole purpose is to prevent a browser from switching into so-called \u201Cquirks mode\u201D when rendering a document; that is, the "<!DOCTYPE html>" doctype ensures that the browser makes a best-effort attempt at following the relevant specifications, rather than using a different rendering mode that is incompatible with some specifications.") that governs the current document. This attribute is not needed, because it is redundant with the version information in the document type declaration.'}, {name: "xmlns", description: 'Specifies the XML Namespace of the document. Default value is `"http://www.w3.org/1999/xhtml"`. This is required in documents parsed with XML parsers, and optional in text/html documents.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/html"}]}, {name: "head", description: {kind: "markdown", value: "The head element represents a collection of metadata for the Document."}, attributes: [{name: "profile", description: "The URIs of one or more metadata profiles, separated by white space."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/head"}]}, {name: "title", description: {kind: "markdown", value: "The title element represents the document's title or name. Authors should use titles that identify their documents even when they are used out of context, for example in a user's history or bookmarks, or in search results. The document's title is often different from its first heading, since the first heading does not have to stand alone when taken out of context."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/title"}]}, {name: "base", description: {kind: "markdown", value: "The base element allows authors to specify the document base URL for the purposes of resolving relative URLs, and the name of the default browsing context for the purposes of following hyperlinks. The element does not represent any content beyond this information."}, attributes: [{name: "href", description: {kind: "markdown", value: "The base URL to be used throughout the document for relative URL addresses. If this attribute is specified, this element must come before any other elements with attributes whose values are URLs. Absolute and relative URLs are allowed."}}, {name: "target", description: {kind: "markdown", value: "A name or keyword indicating the default location to display the result when hyperlinks or forms cause navigation, for elements that do not have an explicit target reference. It is a name of, or keyword for, a _browsing context_ (for example: tab, window, or inline frame). The following keywords have special meanings:\n\n*   `_self`: Load the result into the same browsing context as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the result into a new unnamed browsing context.\n*   `_parent`: Load the result into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: Load the result into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`.\n\nIf this attribute is specified, this element must come before any other elements with attributes whose values are URLs."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/base"}]}, {name: "link", description: {kind: "markdown", value: "The link element allows authors to link their document to other resources."}, attributes: [{name: "href", description: {kind: "markdown", value: 'This attribute specifies the [URL](https://developer.mozilla.org/en-US/docs/Glossary/URL "URL: Uniform Resource Locator (URL) is a text string specifying where a resource can be found on the Internet.") of the linked resource. A URL can be absolute or relative.'}}, {name: "crossorigin", valueSet: "xo", description: {kind: "markdown", value: 'This enumerated attribute indicates whether [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") must be used when fetching the resource. [CORS-enabled images](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being _tainted_. The allowed values are:\n\n`anonymous`\n\nA cross-origin request (i.e. with an [`Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin "The Origin request header indicates where a fetch originates from. It doesn\'t include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn\'t disclose the whole path.") HTTP header) is performed, but no credential is sent (i.e. no cookie, X.509 certificate, or HTTP Basic authentication). If the server does not give credentials to the origin site (by not setting the [`Access-Control-Allow-Origin`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin "The Access-Control-Allow-Origin response header indicates whether the response can be shared with requesting code from the given origin.") HTTP header) the image will be tainted and its usage restricted.\n\n`use-credentials`\n\nA cross-origin request (i.e. with an `Origin` HTTP header) is performed along with a credential sent (i.e. a cookie, certificate, and/or HTTP Basic authentication is performed). If the server does not give credentials to the origin site (through [`Access-Control-Allow-Credentials`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials "The Access-Control-Allow-Credentials response header tells browsers whether to expose the response to frontend JavaScript code when the request\'s credentials mode (Request.credentials) is "include".") HTTP header), the resource will be _tainted_ and its usage restricted.\n\nIf the attribute is not present, the resource is fetched without a [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") request (i.e. without sending the `Origin` HTTP header), preventing its non-tainted usage. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for additional information.'}}, {name: "rel", description: {kind: "markdown", value: "This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of the [link types values](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)."}}, {name: "media", description: {kind: "markdown", value: "This attribute specifies the media that the linked resource applies to. Its value must be a media type / [media query](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries). This attribute is mainly useful when linking to external stylesheets \u2014 it allows the user agent to pick the best adapted one for the device it runs on.\n\n**Notes:**\n\n*   In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., [media types and groups](https://developer.mozilla.org/en-US/docs/Web/CSS/@media), where defined and allowed as values for this attribute, such as `print`, `screen`, `aural`, `braille`. HTML5 extended this to any kind of [media queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries), which are a superset of the allowed values of HTML 4.\n*   Browsers not supporting [CSS3 Media Queries](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_queries) won't necessarily recognize the adequate link; do not forget to set fallback links, the restricted set of media queries defined in HTML 4."}}, {name: "hreflang", description: {kind: "markdown", value: "This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt). Use this attribute only if the [`href`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href) attribute is present."}}, {name: "type", description: {kind: "markdown", value: 'This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as **text/html**, **text/css**, and so on. The common use of this attribute is to define the type of stylesheet being referenced (such as **text/css**), but given that CSS is the only stylesheet language used on the web, not only is it possible to omit the `type` attribute, but is actually now recommended practice. It is also used on `rel="preload"` link types, to make sure the browser only downloads file types that it supports.'}}, {name: "sizes", description: {kind: "markdown", value: "This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the [`rel`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-rel) contains a value of `icon` or a non-standard type such as Apple's `apple-touch-icon`. It may have the following values:\n\n*   `any`, meaning that the icon can be scaled to any size as it is in a vector format, like `image/svg+xml`.\n*   a white-space separated list of sizes, each in the format `_<width in pixels>_x_<height in pixels>_` or `_<width in pixels>_X_<height in pixels>_`. Each of these sizes must be contained in the resource.\n\n**Note:** Most icon formats are only able to store one single icon; therefore most of the time the [`sizes`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-sizes) contains only one entry. MS's ICO format does, as well as Apple's ICNS. ICO is more ubiquitous; you should definitely use it."}}, {name: "as", description: 'This attribute is only used when `rel="preload"` or `rel="prefetch"` has been set on the `<link>` element. It specifies the type of content being loaded by the `<link>`, which is necessary for content prioritization, request matching, application of correct [content security policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP), and setting of correct [`Accept`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept "The Accept request HTTP header advertises which content types, expressed as MIME types, the client is able to understand. Using content negotiation, the server then selects one of the proposals, uses it and informs the client of its choice with the Content-Type response header. Browsers set adequate values for this header depending on\xA0the context where the request is done: when fetching a CSS stylesheet a different value is set for the request than when fetching an image,\xA0video or a script.") request header.'}, {name: "importance", description: "Indicates the relative importance of the resource. Priority hints are delegated using the values:"}, {name: "importance", description: '**`auto`**: Indicates\xA0**no\xA0preference**. The browser may use its own heuristics to decide the priority of the resource.\n\n**`high`**: Indicates to the\xA0browser\xA0that the resource is of\xA0**high** priority.\n\n**`low`**:\xA0Indicates to the\xA0browser\xA0that the resource is of\xA0**low** priority.\n\n**Note:** The `importance` attribute may only be used for the `<link>` element if `rel="preload"` or `rel="prefetch"` is present.'}, {name: "integrity", description: "Contains inline metadata \u2014 a base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch. The browser can use this to verify that the fetched resource has been delivered free of unexpected manipulation. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)."}, {name: "referrerpolicy", description: 'A string indicating which referrer to use when fetching the resource:\n\n*   `no-referrer` means that the [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` means that no [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent\u2019s default behavior, if no policy is otherwise specified.\n*   `origin` means that the referrer will be the origin of the page, which is roughly the scheme, the host, and the port.\n*   `origin-when-cross-origin` means that navigating to other origins will be limited to the scheme, the host, and the port, while navigating on the same origin will include the referrer\'s path.\n*   `unsafe-url` means that the referrer will include the origin and the path (but not the fragment, password, or username). This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins.'}, {name: "title", description: 'The `title` attribute has special semantics on the `<link>` element. When used on a `<link rel="stylesheet">` it defines a [preferred or an alternate stylesheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets). Incorrectly using it may [cause the stylesheet to be ignored](https://developer.mozilla.org/en-US/docs/Correctly_Using_Titles_With_External_Stylesheets).'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/link"}]}, {name: "meta", description: {kind: "markdown", value: "The meta element represents various kinds of metadata that cannot be expressed using the title, base, link, style, and script elements."}, attributes: [{name: "name", description: {kind: "markdown", value: 'This attribute defines the name of a piece of document-level metadata. It should not be set if one of the attributes [`itemprop`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-itemprop), [`http-equiv`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-http-equiv) or [`charset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) is also set.\n\nThis metadata name is associated with the value contained by the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute. The possible values for the name attribute are:\n\n*   `application-name` which defines the name of the application running in the web page.\n    \n    **Note:**\n    \n    *   Browsers may use this to identify the application. It is different from the [`<title>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title "The HTML Title element (<title>) defines the document\'s title that is shown in a browser\'s title bar or a page\'s tab.") element, which usually contain the application name, but may also contain information like the document name or a status.\n    *   Simple web pages shouldn\'t define an application-name.\n    \n*   `author` which defines the name of the document\'s author.\n*   `description` which contains a short and accurate summary of the content of the page. Several browsers, like Firefox and Opera, use this as the default description of bookmarked pages.\n*   `generator` which contains the identifier of the software that generated the page.\n*   `keywords` which contains words relevant to the page\'s content separated by commas.\n*   `referrer` which controls the [`Referer` HTTP header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) attached to requests sent from the document:\n    \n    Values for the `content` attribute of `<meta name="referrer">`\n    \n    `no-referrer`\n    \n    Do not send a HTTP `Referrer` header.\n    \n    `origin`\n    \n    Send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) of the document.\n    \n    `no-referrer-when-downgrade`\n    \n    Send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) as a referrer to URLs as secure as the current page, (https\u2192https), but does not send a referrer to less secure URLs (https\u2192http). This is the default behaviour.\n    \n    `origin-when-cross-origin`\n    \n    Send the full URL (stripped of parameters) for same-origin requests, but only send the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) for other cases.\n    \n    `same-origin`\n    \n    A referrer will be sent for [same-site origins](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy), but cross-origin requests will contain no referrer information.\n    \n    `strict-origin`\n    \n    Only send the origin of the document as the referrer to a-priori as-much-secure destination (HTTPS->HTTPS), but don\'t send it to a less secure destination (HTTPS->HTTP).\n    \n    `strict-origin-when-cross-origin`\n    \n    Send a full URL when performing a same-origin request, only send the origin of the document to a-priori as-much-secure destination (HTTPS->HTTPS), and send no header to a less secure destination (HTTPS->HTTP).\n    \n    `unsafe-URL`\n    \n    Send the full URL (stripped of parameters) for same-origin or cross-origin requests.\n    \n    **Notes:**\n    \n    *   Some browsers support the deprecated values of `always`, `default`, and `never` for referrer.\n    *   Dynamically inserting `<meta name="referrer">` (with [`document.write`](https://developer.mozilla.org/en-US/docs/Web/API/Document/write) or [`appendChild`](https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild)) makes the referrer behaviour unpredictable.\n    *   When several conflicting policies are defined, the no-referrer policy is applied.\n    \n\nThis attribute may also have a value taken from the extended list defined on [WHATWG Wiki MetaExtensions page](https://wiki.whatwg.org/wiki/MetaExtensions). Although none have been formally accepted yet, a few commonly used names are:\n\n*   `creator` which defines the name of the creator of the document, such as an organization or institution. If there are more than one, several [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") elements should be used.\n*   `googlebot`, a synonym of `robots`, is only followed by Googlebot (the indexing crawler for Google).\n*   `publisher` which defines the name of the document\'s publisher.\n*   `robots` which defines the behaviour that cooperative crawlers, or "robots", should use with the page. It is a comma-separated list of the values below:\n    \n    Values for the content of `<meta name="robots">`\n    \n    Value\n    \n    Description\n    \n    Used by\n    \n    `index`\n    \n    Allows the robot to index the page (default).\n    \n    All\n    \n    `noindex`\n    \n    Requests the robot to not index the page.\n    \n    All\n    \n    `follow`\n    \n    Allows the robot to follow the links on the page (default).\n    \n    All\n    \n    `nofollow`\n    \n    Requests the robot to not follow the links on the page.\n    \n    All\n    \n    `none`\n    \n    Equivalent to `noindex, nofollow`\n    \n    [Google](https://support.google.com/webmasters/answer/79812)\n    \n    `noodp`\n    \n    Prevents using the [Open Directory Project](https://www.dmoz.org/) description, if any, as the page description in search engine results.\n    \n    [Google](https://support.google.com/webmasters/answer/35624#nodmoz), [Yahoo](https://help.yahoo.com/kb/search-for-desktop/meta-tags-robotstxt-yahoo-search-sln2213.html#cont5), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)\n    \n    `noarchive`\n    \n    Requests the search engine not to cache the page content.\n    \n    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives), [Yahoo](https://help.yahoo.com/kb/search-for-desktop/SLN2213.html), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)\n    \n    `nosnippet`\n    \n    Prevents displaying any description of the page in search engine results.\n    \n    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives), [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)\n    \n    `noimageindex`\n    \n    Requests this page not to appear as the referring page of an indexed image.\n    \n    [Google](https://developers.google.com/webmasters/control-crawl-index/docs/robots_meta_tag#valid-indexing--serving-directives)\n    \n    `nocache`\n    \n    Synonym of `noarchive`.\n    \n    [Bing](https://www.bing.com/webmaster/help/which-robots-metatags-does-bing-support-5198d240)\n    \n    **Notes:**\n    \n    *   Only cooperative robots follow these rules. Do not expect to prevent e-mail harvesters with them.\n    *   The robot still needs to access the page in order to read these rules. To prevent bandwidth consumption, use a _[robots.txt](https://developer.mozilla.org/en-US/docs/Glossary/robots.txt "robots.txt: Robots.txt is a file which is usually placed in the root of any website. It decides whether\xA0crawlers are permitted or forbidden access to the web site.")_ file.\n    *   If you want to remove a page, `noindex` will work, but only after the robot visits the page again. Ensure that the `robots.txt` file is not preventing revisits.\n    *   Some values are mutually exclusive, like `index` and `noindex`, or `follow` and `nofollow`. In these cases the robot\'s behaviour is undefined and may vary between them.\n    *   Some crawler robots, like Google, Yahoo and Bing, support the same values for the HTTP header `X-Robots-Tag`; this allows non-HTML documents like images to use these rules.\n    \n*   `slurp`, is a synonym of `robots`, but only for Slurp - the crawler for Yahoo Search.\n*   `viewport`, which gives hints about the size of the initial size of the [viewport](https://developer.mozilla.org/en-US/docs/Glossary/viewport "viewport: A viewport represents a polygonal (normally rectangular) area in computer graphics that is currently being viewed. In web browser terms, it refers to the part of the document you\'re viewing which is currently visible in its window (or the screen, if the document is being viewed in full screen mode). Content outside the viewport is not visible onscreen until scrolled into view."). Used by mobile devices only.\n    \n    Values for the content of `<meta name="viewport">`\n    \n    Value\n    \n    Possible subvalues\n    \n    Description\n    \n    `width`\n    \n    A positive integer number, or the text `device-width`\n    \n    Defines the pixel width of the viewport that you want the web site to be rendered at.\n    \n    `height`\n    \n    A positive integer, or the text `device-height`\n    \n    Defines the height of the viewport. Not used by any browser.\n    \n    `initial-scale`\n    \n    A positive number between `0.0` and `10.0`\n    \n    Defines the ratio between the device width (`device-width` in portrait mode or `device-height` in landscape mode) and the viewport size.\n    \n    `maximum-scale`\n    \n    A positive number between `0.0` and `10.0`\n    \n    Defines the maximum amount to zoom in. It must be greater or equal to the `minimum-scale` or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default.\n    \n    `minimum-scale`\n    \n    A positive number between `0.0` and `10.0`\n    \n    Defines the minimum zoom level. It must be smaller or equal to the `maximum-scale` or the behaviour is undefined. Browser settings can ignore this rule and iOS10+ ignores it by default.\n    \n    `user-scalable`\n    \n    `yes` or `no`\n    \n    If set to `no`, the user is not able to zoom in the webpage. The default is `yes`. Browser settings can ignore this rule, and iOS10+ ignores it by default.\n    \n    Specification\n    \n    Status\n    \n    Comment\n    \n    [CSS Device Adaptation  \n    The definition of \'<meta name="viewport">\' in that specification.](https://drafts.csswg.org/css-device-adapt/#viewport-meta)\n    \n    Working Draft\n    \n    Non-normatively describes the Viewport META element\n    \n    See also: [`@viewport`](https://developer.mozilla.org/en-US/docs/Web/CSS/@viewport "The @viewport CSS at-rule lets you configure the viewport through which the document is viewed. It\'s primarily used for mobile devices, but is also used by desktop browsers that support features like "snap to edge" (such as Microsoft Edge).")\n    \n    **Notes:**\n    \n    *   Though unstandardized, this declaration is respected by most mobile browsers due to de-facto dominance.\n    *   The default values may vary between devices and browsers.\n    *   To learn about this declaration in Firefox for Mobile, see [this article](https://developer.mozilla.org/en-US/docs/Mobile/Viewport_meta_tag "Mobile/Viewport meta tag").'}}, {name: "http-equiv", description: {kind: "markdown", value: 'Defines a pragma directive. The attribute is named `**http-equiv**(alent)` because all the allowed values are names of particular HTTP headers:\n\n*   `"content-language"`  \n    Defines the default language of the page. It can be overridden by the [lang](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang) attribute on any element.\n    \n    **Warning:** Do not use this value, as it is obsolete. Prefer the `lang` attribute on the [`<html>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html "The HTML <html> element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.") element.\n    \n*   `"content-security-policy"`  \n    Allows page authors to define a [content policy](https://developer.mozilla.org/en-US/docs/Web/Security/CSP/CSP_policy_directives) for the current page. Content policies mostly specify allowed server origins and script endpoints which help guard against cross-site scripting attacks.\n*   `"content-type"`  \n    Defines the [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type) of the document, followed by its character encoding. It follows the same syntax as the HTTP `content-type` entity-header field, but as it is inside a HTML page, most values other than `text/html` are impossible. Therefore the valid syntax for its `content` is the string \'`text/html`\' followed by a character set with the following syntax: \'`; charset=_IANAcharset_`\', where `IANAcharset` is the _preferred MIME name_ for a character set as [defined by the IANA.](https://www.iana.org/assignments/character-sets)\n    \n    **Warning:** Do not use this value, as it is obsolete. Use the [`charset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) attribute on the [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element.\n    \n    **Note:** As [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") can\'t change documents\' types in XHTML or HTML5\'s XHTML serialization, never set the MIME type to an XHTML MIME type with `<meta>`.\n    \n*   `"refresh"`  \n    This instruction specifies:\n    *   The number of seconds until the page should be reloaded - only if the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute contains a positive integer.\n    *   The number of seconds until the page should redirect to another - only if the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) attribute contains a positive integer followed by the string \'`;url=`\', and a valid URL.\n*   `"set-cookie"`  \n    Defines a [cookie](https://developer.mozilla.org/en-US/docs/cookie) for the page. Its content must follow the syntax defined in the [IETF HTTP Cookie Specification](https://tools.ietf.org/html/draft-ietf-httpstate-cookie-14).\n    \n    **Warning:** Do not use this instruction, as it is obsolete. Use the HTTP header [`Set-Cookie`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie) instead.'}}, {name: "content", description: {kind: "markdown", value: "This attribute contains the value for the [`http-equiv`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-http-equiv) or [`name`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-name) attribute, depending on which is used."}}, {name: "charset", description: {kind: "markdown", value: 'This attribute declares the page\'s character encoding. It must contain a [standard IANA MIME name for character encodings](https://www.iana.org/assignments/character-sets). Although the standard doesn\'t request a specific encoding, it suggests:\n\n*   Authors are encouraged to use [`UTF-8`](https://developer.mozilla.org/en-US/docs/Glossary/UTF-8).\n*   Authors should not use ASCII-incompatible encodings to avoid security risk: browsers not supporting them may interpret harmful content as HTML. This happens with the `JIS_C6226-1983`, `JIS_X0212-1990`, `HZ-GB-2312`, `JOHAB`, the ISO-2022 family and the EBCDIC family.\n\n**Note:** ASCII-incompatible encodings are those that don\'t map the 8-bit code points `0x20` to `0x7E` to the `0x0020` to `0x007E` Unicode code points)\n\n*   Authors **must not** use `CESU-8`, `UTF-7`, `BOCU-1` and/or `SCSU` as [cross-site scripting](https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting) attacks with these encodings have been demonstrated.\n*   Authors should not use `UTF-32` because not all HTML5 encoding algorithms can distinguish it from `UTF-16`.\n\n**Notes:**\n\n*   The declared character encoding must match the one the page was saved with to avoid garbled characters and security holes.\n*   The [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element declaring the encoding must be inside the [`<head>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head "The HTML <head> element provides general information (metadata) about the document, including its title and links to its\xA0scripts and style sheets.") element and **within the first 1024 bytes** of the HTML as some browsers only look at those bytes before choosing an encoding.\n*   This [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element is only one part of the [algorithm to determine a page\'s character set](https://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#encoding-sniffing-algorithm "Algorithm charset page"). The [`Content-Type` header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) and any [Byte-Order Marks](https://developer.mozilla.org/en-US/docs/Glossary/Byte-Order_Mark "The definition of that term (Byte-Order Marks) has not been written yet; please consider contributing it!") override this element.\n*   It is strongly recommended to define the character encoding. If a page\'s encoding is undefined, cross-scripting techniques are possible, such as the [`UTF-7` fallback cross-scripting technique](https://code.google.com/p/doctype-mirror/wiki/ArticleUtf7).\n*   The [`<meta>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta "The HTML <meta> element represents metadata that cannot be represented by other HTML meta-related elements, like <base>, <link>, <script>, <style> or <title>.") element with a `charset` attribute is a synonym for the pre-HTML5 `<meta http-equiv="Content-Type" content="text/html; charset=_IANAcharset_">`, where _`IANAcharset`_ contains the value of the equivalent [`charset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-charset) attribute. This syntax is still allowed, although no longer recommended.'}}, {name: "scheme", description: "This attribute defines the scheme in which metadata is described. A scheme is a context leading to the correct interpretations of the [`content`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#attr-content) value, like a format.\n\n**Warning:** Do not use this value, as it is obsolete. There is no replacement as there was no real usage for it."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/meta"}]}, {name: "style", description: {kind: "markdown", value: "The style element allows authors to embed style information in their documents. The style element is one of several inputs to the styling processing model. The element does not represent content for the user."}, attributes: [{name: "media", description: {kind: "markdown", value: "This attribute defines which media the style should be applied to. Its value is a [media query](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries), which defaults to `all` if the attribute is missing."}}, {name: "nonce", description: {kind: "markdown", value: "A cryptographic nonce (number used once) used to whitelist inline styles in a [style-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource\u2019s policy is otherwise trivial."}}, {name: "type", description: {kind: "markdown", value: "This attribute defines the styling language as a MIME type (charset should not be specified). This attribute is optional and defaults to `text/css` if it is not specified \u2014 there is very little reason to include this in modern web documents."}}, {name: "scoped", valueSet: "v"}, {name: "title", description: "This attribute specifies [alternative style sheet](https://developer.mozilla.org/en-US/docs/Web/CSS/Alternative_style_sheets) sets."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/style"}]}, {name: "body", description: {kind: "markdown", value: "The body element represents the content of the document."}, attributes: [{name: "onafterprint", description: {kind: "markdown", value: "Function to call after the user has printed the document."}}, {name: "onbeforeprint", description: {kind: "markdown", value: "Function to call when the user requests printing of the document."}}, {name: "onbeforeunload", description: {kind: "markdown", value: "Function to call when the document is about to be unloaded."}}, {name: "onhashchange", description: {kind: "markdown", value: "Function to call when the fragment identifier part (starting with the hash (`'#'`) character) of the document's current address has changed."}}, {name: "onlanguagechange", description: {kind: "markdown", value: "Function to call when the preferred languages changed."}}, {name: "onmessage", description: {kind: "markdown", value: "Function to call when the document has received a message."}}, {name: "onoffline", description: {kind: "markdown", value: "Function to call when network communication has failed."}}, {name: "ononline", description: {kind: "markdown", value: "Function to call when network communication has been restored."}}, {name: "onpagehide"}, {name: "onpageshow"}, {name: "onpopstate", description: {kind: "markdown", value: "Function to call when the user has navigated session history."}}, {name: "onstorage", description: {kind: "markdown", value: "Function to call when the storage area has changed."}}, {name: "onunload", description: {kind: "markdown", value: "Function to call when the document is going away."}}, {name: "alink", description: 'Color of text for hyperlinks when selected. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:active`](https://developer.mozilla.org/en-US/docs/Web/CSS/:active "The :active CSS pseudo-class represents an element (such as a button) that is being activated by the user.") pseudo-class instead._'}, {name: "background", description: 'URI of a image to use as a background. _This method is non-conforming, use CSS [`background`](https://developer.mozilla.org/en-US/docs/Web/CSS/background "The background shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.") property on the element instead._'}, {name: "bgcolor", description: 'Background color for the document. _This method is non-conforming, use CSS [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property on the element instead._'}, {name: "bottommargin", description: 'The margin of the bottom of the body. _This method is non-conforming, use CSS [`margin-bottom`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-bottom "The margin-bottom CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'}, {name: "leftmargin", description: 'The margin of the left of the body. _This method is non-conforming, use CSS [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left "The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'}, {name: "link", description: 'Color of text for unvisited hypertext links. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:link`](https://developer.mozilla.org/en-US/docs/Web/CSS/:link "The :link CSS pseudo-class represents an element that has not yet been visited. It matches every unvisited <a>, <area>, or <link> element that has an href attribute.") pseudo-class instead._'}, {name: "onblur", description: "Function to call when the document loses focus."}, {name: "onerror", description: "Function to call when the document fails to load properly."}, {name: "onfocus", description: "Function to call when the document receives focus."}, {name: "onload", description: "Function to call when the document has finished loading."}, {name: "onredo", description: "Function to call when the user has moved forward in undo transaction history."}, {name: "onresize", description: "Function to call when the document has been resized."}, {name: "onundo", description: "Function to call when the user has moved backward in undo transaction history."}, {name: "rightmargin", description: 'The margin of the right of the body. _This method is non-conforming, use CSS [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right "The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'}, {name: "text", description: 'Foreground color of text. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property on the element instead._'}, {name: "topmargin", description: 'The margin of the top of the body. _This method is non-conforming, use CSS [`margin-top`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-top "The margin-top CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") property on the element instead._'}, {name: "vlink", description: 'Color of text for visited hypertext links. _This method is non-conforming, use CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color "The color CSS property sets the foreground color value of an element\'s text and text decorations, and sets the currentcolor value.") property in conjunction with the [`:visited`](https://developer.mozilla.org/en-US/docs/Web/CSS/:visited "The :visited CSS pseudo-class represents links that the user has already visited. For privacy reasons, the styles that can be modified using this selector are very limited.") pseudo-class instead._'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/body"}]}, {name: "article", description: {kind: "markdown", value: "The article element represents a complete, or self-contained, composition in a document, page, application, or site and that is, in principle, independently distributable or reusable, e.g. in syndication. This could be a forum post, a magazine or newspaper article, a blog entry, a user-submitted comment, an interactive widget or gadget, or any other independent item of content. Each article should be identified, typically by including a heading (h1\u2013h6 element) as a child of the article element."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/article"}]}, {name: "section", description: {kind: "markdown", value: "The section element represents a generic section of a document or application. A section, in this context, is a thematic grouping of content. Each section should be identified, typically by including a heading ( h1- h6 element) as a child of the section element."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/section"}]}, {name: "nav", description: {kind: "markdown", value: "The nav element represents a section of a page that links to other pages or to parts within the page: a section with navigation links."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/nav"}]}, {name: "aside", description: {kind: "markdown", value: "The aside element represents a section of a page that consists of content that is tangentially related to the content around the aside element, and which could be considered separate from that content. Such sections are often represented as sidebars in printed typography."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/aside"}]}, {name: "h1", description: {kind: "markdown", value: "The h1 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "h2", description: {kind: "markdown", value: "The h2 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "h3", description: {kind: "markdown", value: "The h3 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "h4", description: {kind: "markdown", value: "The h4 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "h5", description: {kind: "markdown", value: "The h5 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "h6", description: {kind: "markdown", value: "The h6 element represents a section heading."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/Heading_Elements"}]}, {name: "header", description: {kind: "markdown", value: "The header element represents introductory content for its nearest ancestor sectioning content or sectioning root element. A header typically contains a group of introductory or navigational aids. When the nearest ancestor sectioning content or sectioning root element is the body element, then it applies to the whole page."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/header"}]}, {name: "footer", description: {kind: "markdown", value: "The footer element represents a footer for its nearest ancestor sectioning content or sectioning root element. A footer typically contains information about its section such as who wrote it, links to related documents, copyright data, and the like."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/footer"}]}, {name: "address", description: {kind: "markdown", value: "The address element represents the contact information for its nearest article or body element ancestor. If that is the body element, then the contact information applies to the document as a whole."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/address"}]}, {name: "p", description: {kind: "markdown", value: "The p element represents a paragraph."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/p"}]}, {name: "hr", description: {kind: "markdown", value: "The hr element represents a paragraph-level thematic break, e.g. a scene change in a story, or a transition to another topic within a section of a reference book."}, attributes: [{name: "align", description: "Sets the alignment of the rule on the page. If no value is specified, the default value is `left`."}, {name: "color", description: "Sets the color of the rule through color name or hexadecimal value."}, {name: "noshade", description: "Sets the rule to have no shading."}, {name: "size", description: "Sets the height, in pixels, of the rule."}, {name: "width", description: "Sets the length of the rule on the page through a pixel or percentage value."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/hr"}]}, {name: "pre", description: {kind: "markdown", value: "The pre element represents a block of preformatted text, in which structure is represented by typographic conventions rather than by elements."}, attributes: [{name: "cols", description: 'Contains the _preferred_ count of characters that a line should have. It was a non-standard synonym of [`width`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre#attr-width). To achieve such an effect, use CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width "The width CSS property sets an element\'s width. By default it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area.") instead.'}, {name: "width", description: 'Contains the _preferred_ count of characters that a line should have. Though technically still implemented, this attribute has no visual effect; to achieve such an effect, use CSS [`width`](https://developer.mozilla.org/en-US/docs/Web/CSS/width "The width CSS property sets an element\'s width. By default it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area.") instead.'}, {name: "wrap", description: 'Is a _hint_ indicating how the overflow must happen. In modern browser this hint is ignored and no visual effect results in its present; to achieve such an effect, use CSS [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space "The white-space CSS property sets how white space inside an element is handled.") instead.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/pre"}]}, {name: "blockquote", description: {kind: "markdown", value: "The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations."}, attributes: [{name: "cite", description: {kind: "markdown", value: "A URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/blockquote"}]}, {name: "ol", description: {kind: "markdown", value: "The ol element represents a list of items, where the items have been intentionally ordered, such that changing the order would change the meaning of the document."}, attributes: [{name: "reversed", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute specifies that the items of the list are specified in reversed order."}}, {name: "start", description: {kind: "markdown", value: 'This integer attribute specifies the start value for numbering the individual list items. Although the ordering type of list elements might be Roman numerals, such as XXXI, or letters, the value of start is always represented as a number. To start numbering elements from the letter "C", use `<ol start="3">`.\n\n**Note**: This attribute was deprecated in HTML4, but reintroduced in HTML5.'}}, {name: "type", valueSet: "lt", description: {kind: "markdown", value: "Indicates the numbering type:\n\n*   `'a'` indicates lowercase letters,\n*   `'A'` indicates uppercase letters,\n*   `'i'` indicates lowercase Roman numerals,\n*   `'I'` indicates uppercase Roman numerals,\n*   and `'1'` indicates numbers (default).\n\nThe type set is used for the entire list unless a different [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li#attr-type) attribute is used within an enclosed [`<li>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li \"The HTML <li> element is used to represent an item in a list. It must be contained in a parent element: an ordered list (<ol>), an unordered list (<ul>), or a menu (<menu>). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.\") element.\n\n**Note:** This attribute was deprecated in HTML4, but reintroduced in HTML5.\n\nUnless the value of the list number matters (e.g. in legal or technical documents where items are to be referenced by their number/letter), the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type \"The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\") property should be used instead."}}, {name: "compact", description: 'This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn\'t work in all browsers.\n\n**Warning:** Do not use this attribute, as it has been deprecated: the [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To give an effect similar to the `compact` attribute, the [CSS](https://developer.mozilla.org/en-US/docs/CSS) property [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height "The line-height CSS property sets the amount of space used for lines, such as in text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.") can be used with a value of `80%`.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/ol"}]}, {name: "ul", description: {kind: "markdown", value: "The ul element represents a list of items, where the order of the items is not important \u2014 that is, where changing the order would not materially change the meaning of the document."}, attributes: [{name: "compact", description: 'This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn\'t work in all browsers.\n\n**Usage note:\xA0**Do not use this attribute, as it has been deprecated: the [`<ul>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul "The HTML <ul> element represents an unordered list of items, typically rendered as a bulleted list.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To give a similar effect as the `compact` attribute, the [CSS](https://developer.mozilla.org/en-US/docs/CSS) property [line-height](https://developer.mozilla.org/en-US/docs/CSS/line-height) can be used with a value of `80%`.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/ul"}]}, {name: "li", description: {kind: "markdown", value: "The li element represents a list item. If its parent element is an ol, ul, or menu element, then the element is an item of the parent element's list, as defined for those elements. Otherwise, the list item has no defined list-related relationship to any other li element."}, attributes: [{name: "value", description: {kind: "markdown", value: 'This integer attribute indicates the current ordinal value of the list item as defined by the [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The **value** attribute has no meaning for unordered lists ([`<ul>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul "The HTML <ul> element represents an unordered list of items, typically rendered as a bulleted list.")) or for menus ([`<menu>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu "The HTML <menu> element represents a group of commands that a user can perform or activate. This includes both list menus, which might appear across the top of a screen, as well as context menus, such as those that might appear underneath a button after it has been clicked.")).\n\n**Note**: This attribute was deprecated in HTML4, but reintroduced in HTML5.\n\n**Note:** Prior to Gecko\xA09.0, negative values were incorrectly converted to 0. Starting in Gecko\xA09.0 all integer values are correctly parsed.'}}, {name: "type", description: 'This character attribute indicates the numbering type:\n\n*   `a`: lowercase letters\n*   `A`: uppercase letters\n*   `i`: lowercase Roman numerals\n*   `I`: uppercase Roman numerals\n*   `1`: numbers\n\nThis type overrides the one used by its parent [`<ol>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol "The HTML <ol> element represents an ordered list of items, typically rendered as a numbered list.") element, if any.\n\n**Usage note:** This attribute has been deprecated: use the CSS [`list-style-type`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-type "The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.") property instead.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/li"}]}, {name: "dl", description: {kind: "markdown", value: "The dl element represents an association list consisting of zero or more name-value groups (a description list). A name-value group consists of one or more names (dt elements) followed by one or more values (dd elements), ignoring any nodes other than dt and dd elements. Within a single dl element, there should not be more than one dt element for each name."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/dl"}]}, {name: "dt", description: {kind: "markdown", value: "The dt element represents the term, or name, part of a term-description group in a description list (dl element)."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/dt"}]}, {name: "dd", description: {kind: "markdown", value: "The dd element represents the description, definition, or value, part of a term-description group in a description list (dl element)."}, attributes: [{name: "nowrap", description: "If the value of this attribute is set to `yes`, the definition text will not wrap. The default value is `no`."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/dd"}]}, {name: "figure", description: {kind: "markdown", value: "The figure element represents some flow content, optionally with a caption, that is self-contained (like a complete sentence) and is typically referenced as a single unit from the main flow of the document."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/figure"}]}, {name: "figcaption", description: {kind: "markdown", value: "The figcaption element represents a caption or legend for the rest of the contents of the figcaption element's parent figure element, if any."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/figcaption"}]}, {name: "main", description: {kind: "markdown", value: "The main element represents the main content of the body of a document or application. The main content area consists of content that is directly related to or expands upon the central topic of a document or central functionality of an application."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/main"}]}, {name: "div", description: {kind: "markdown", value: "The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/div"}]}, {name: "a", description: {kind: "markdown", value: "If the a element has an href attribute, then it represents a hyperlink (a hypertext anchor) labeled by its contents."}, attributes: [{name: "href", description: {kind: "markdown", value: "Contains a URL or a URL fragment that the hyperlink points to."}}, {name: "target", description: {kind: "markdown", value: 'Specifies where to display the linked URL. It is a name of, or keyword for, a _browsing context_: a tab, window, or `<iframe>`. The following keywords have special meanings:\n\n*   `_self`: Load the URL into the same browsing context as the current one. This is the default behavior.\n*   `_blank`: Load the URL into a new browsing context. This is usually a tab, but users can configure browsers to use new windows instead.\n*   `_parent`: Load the URL into the parent browsing context of the current one. If there is no parent, this behaves the same way as `_self`.\n*   `_top`: Load the URL into the top-level browsing context (that is, the "highest" browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this behaves the same way as `_self`.\n\n**Note:** When using `target`, consider adding `rel="noreferrer"` to avoid exploitation of the `window.opener` API.\n\n**Note:** Linking to another page using `target="_blank"` will run the new page on the same process as your page. If the new page is executing expensive JS, your page\'s performance may suffer. To avoid this use `rel="noopener"`.'}}, {name: "download", description: {kind: "markdown", value: "This attribute instructs browsers to download a URL instead of navigating to it, so the user will be prompted to save it as a local file. If the attribute has a value, it is used as the pre-filled file name in the Save prompt (the user can still change the file name if they want). There are no restrictions on allowed values, though `/` and `\\` are converted to underscores. Most file systems limit some punctuation in file names, and browsers will adjust the suggested name accordingly.\n\n**Notes:**\n\n*   This attribute only works for [same-origin URLs](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).\n*   Although HTTP(s) URLs need to be in the same-origin, [`blob:` URLs](https://developer.mozilla.org/en-US/docs/Web/API/URL.createObjectURL) and [`data:` URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs) are allowed so that content generated by JavaScript, such as pictures created in an image-editor Web app, can be downloaded.\n*   If the HTTP header [`Content-Disposition:`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition) gives a different filename than this attribute, the HTTP header takes priority over this attribute.\n*   If `Content-Disposition:` is set to `inline`, Firefox prioritizes `Content-Disposition`, like the filename case, while Chrome prioritizes the `download` attribute."}}, {name: "ping", description: {kind: "markdown", value: 'Contains a space-separated list of URLs to which, when the hyperlink is followed, [`POST`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST "The HTTP POST method sends data to the server. The type of the body of the request is indicated by the Content-Type header.") requests with the body `PING` will be sent by the browser (in the background). Typically used for tracking.'}}, {name: "rel", description: {kind: "markdown", value: "Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)."}}, {name: "hreflang", description: {kind: "markdown", value: 'This attribute indicates the human language of the linked resource. It is purely advisory, with no built-in functionality. Allowed values are determined by [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt "Tags for Identifying Languages").'}}, {name: "type", description: {kind: "markdown", value: 'Specifies the media type in the form of a [MIME type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type "MIME type: A\xA0MIME type\xA0(now properly called "media type", but\xA0also sometimes "content type") is a string sent along\xA0with a file indicating the type of the file (describing the content format, for example, a sound file might be labeled\xA0audio/ogg, or an image file\xA0image/png).") for the linked URL. It is purely advisory, with no built-in functionality.'}}, {name: "referrerpolicy", description: "Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer) to send when fetching the URL:\n\n*   `'no-referrer'` means the `Referer:` header will not be sent.\n*   `'no-referrer-when-downgrade'` means no `Referer:` header will be sent when navigating to an origin without HTTPS. This is the default behavior.\n*   `'origin'` means the referrer will be the [origin](https://developer.mozilla.org/en-US/docs/Glossary/Origin) of the page, not including information after the domain.\n*   `'origin-when-cross-origin'` meaning that navigations to other origins will be limited to the scheme, the host and the port, while navigations on the same origin will include the referrer's path.\n*   `'strict-origin-when-cross-origin'`\n*   `'unsafe-url'` means the referrer will include the origin and path, but not the fragment, password, or username. This is unsafe because it can leak data from secure URLs to insecure ones."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/a"}]}, {name: "em", description: {kind: "markdown", value: "The em element represents stress emphasis of its contents."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/em"}]}, {name: "strong", description: {kind: "markdown", value: "The strong element represents strong importance, seriousness, or urgency for its contents."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/strong"}]}, {name: "small", description: {kind: "markdown", value: "The small element represents side comments such as small print."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/small"}]}, {name: "s", description: {kind: "markdown", value: "The s element represents contents that are no longer accurate or no longer relevant."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/s"}]}, {name: "cite", description: {kind: "markdown", value: "The cite element represents a reference to a creative work. It must include the title of the work or the name of the author(person, people or organization) or an URL reference, or a reference in abbreviated form as per the conventions used for the addition of citation metadata."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/cite"}]}, {name: "q", description: {kind: "markdown", value: "The q element represents some phrasing content quoted from another source."}, attributes: [{name: "cite", description: {kind: "markdown", value: "The value of this attribute is a URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/q"}]}, {name: "dfn", description: {kind: "markdown", value: "The dfn element represents the defining instance of a term. The paragraph, description list group, or section that is the nearest ancestor of the dfn element must also contain the definition(s) for the term given by the dfn element."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/dfn"}]}, {name: "abbr", description: {kind: "markdown", value: "The abbr element represents an abbreviation or acronym, optionally with its expansion. The title attribute may be used to provide an expansion of the abbreviation. The attribute, if specified, must contain an expansion of the abbreviation, and nothing else."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/abbr"}]}, {name: "ruby", description: {kind: "markdown", value: "The ruby element allows one or more spans of phrasing content to be marked with ruby annotations. Ruby annotations are short runs of text presented alongside base text, primarily used in East Asian typography as a guide for pronunciation or to include other annotations. In Japanese, this form of typography is also known as furigana. Ruby text can appear on either side, and sometimes both sides, of the base text, and it is possible to control its position using CSS. A more complete introduction to ruby can be found in the Use Cases & Exploratory Approaches for Ruby Markup document as well as in CSS Ruby Module Level 1. [RUBY-UC] [CSSRUBY]"}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/ruby"}]}, {name: "rb", description: {kind: "markdown", value: "The rb element marks the base text component of a ruby annotation. When it is the child of a ruby element, it doesn't represent anything itself, but its parent ruby element uses it as part of determining what it represents."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/rb"}]}, {name: "rt", description: {kind: "markdown", value: "The rt element marks the ruby text component of a ruby annotation. When it is the child of a ruby element or of an rtc element that is itself the child of a ruby element, it doesn't represent anything itself, but its ancestor ruby element uses it as part of determining what it represents."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/rt"}]}, {name: "rp", description: {kind: "markdown", value: "The rp element is used to provide fallback text to be shown by user agents that don't support ruby annotations. One widespread convention is to provide parentheses around the ruby text component of a ruby annotation."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/rp"}]}, {name: "time", description: {kind: "markdown", value: "The time element represents its contents, along with a machine-readable form of those contents in the datetime attribute. The kind of content is limited to various kinds of dates, times, time-zone offsets, and durations, as described below."}, attributes: [{name: "datetime", description: {kind: "markdown", value: "This attribute indicates the time and/or date of the element and must be in one of the formats described below."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/time"}]}, {name: "code", description: {kind: "markdown", value: "The code element represents a fragment of computer code. This could be an XML element name, a file name, a computer program, or any other string that a computer would recognize."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/code"}]}, {name: "var", description: {kind: "markdown", value: "The var element represents a variable. This could be an actual variable in a mathematical expression or programming context, an identifier representing a constant, a symbol identifying a physical quantity, a function parameter, or just be a term used as a placeholder in prose."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/var"}]}, {name: "samp", description: {kind: "markdown", value: "The samp element represents sample or quoted output from another program or computing system."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/samp"}]}, {name: "kbd", description: {kind: "markdown", value: "The kbd element represents user input (typically keyboard input, although it may also be used to represent other input, such as voice commands)."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/kbd"}]}, {name: "sub", description: {kind: "markdown", value: "The sub element represents a subscript."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/sub"}]}, {name: "sup", description: {kind: "markdown", value: "The sup element represents a superscript."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/sup"}]}, {name: "i", description: {kind: "markdown", value: "The i element represents a span of text in an alternate voice or mood, or otherwise offset from the normal prose in a manner indicating a different quality of text, such as a taxonomic designation, a technical term, an idiomatic phrase from another language, transliteration, a thought, or a ship name in Western texts."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/i"}]}, {name: "b", description: {kind: "markdown", value: "The b element represents a span of text to which attention is being drawn for utilitarian purposes without conveying any extra importance and with no implication of an alternate voice or mood, such as key words in a document abstract, product names in a review, actionable words in interactive text-driven software, or an article lede."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/b"}]}, {name: "u", description: {kind: "markdown", value: "The u element represents a span of text with an unarticulated, though explicitly rendered, non-textual annotation, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelt."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/u"}]}, {name: "mark", description: {kind: "markdown", value: "The mark element represents a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context. When used in a quotation or other block of text referred to from the prose, it indicates a highlight that was not originally present but which has been added to bring the reader's attention to a part of the text that might not have been considered important by the original author when the block was originally written, but which is now under previously unexpected scrutiny. When used in the main prose of a document, it indicates a part of the document that has been highlighted due to its likely relevance to the user's current activity."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/mark"}]}, {name: "bdi", description: {kind: "markdown", value: "The bdi element represents a span of text that is to be isolated from its surroundings for the purposes of bidirectional text formatting. [BIDI]"}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/bdi"}]}, {name: "bdo", description: {kind: "markdown", value: "The bdo element represents explicit text directionality formatting control for its children. It allows authors to override the Unicode bidirectional algorithm by explicitly specifying a direction override. [BIDI]"}, attributes: [{name: "dir", description: "The direction in which text should be rendered in this element's contents. Possible values are:\n\n*   `ltr`: Indicates that the text should go in a left-to-right direction.\n*   `rtl`: Indicates that the text should go in a right-to-left direction."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/bdo"}]}, {name: "span", description: {kind: "markdown", value: "The span element doesn't mean anything on its own, but can be useful when used together with the global attributes, e.g. class, lang, or dir. It represents its children."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/span"}]}, {name: "br", description: {kind: "markdown", value: "The br element represents a line break."}, attributes: [{name: "clear", description: "Indicates where to begin the next line after the break."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/br"}]}, {name: "wbr", description: {kind: "markdown", value: "The wbr element represents a line break opportunity."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/wbr"}]}, {name: "ins", description: {kind: "markdown", value: "The ins element represents an addition to the document."}, attributes: [{name: "cite", description: "This attribute defines the URI of a resource that explains the change, such as a link to meeting minutes or a ticket in a troubleshooting system."}, {name: "datetime", description: 'This attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see [Format of a valid date string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_date_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article."). The format of the string if it includes both date and time is covered in [Format of a valid local date and time string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_local_date_and_time_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.").'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/ins"}]}, {name: "del", description: {kind: "markdown", value: "The del element represents a removal from the document."}, attributes: [{name: "cite", description: {kind: "markdown", value: "A URI for a resource that explains the change (for example, meeting minutes)."}}, {name: "datetime", description: {kind: "markdown", value: 'This attribute indicates the time and date of the change and must be a valid date string with an optional time. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see [Format of a valid date string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_date_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article."). The format of the string if it includes both date and time is covered in [Format of a valid local date and time string](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#Format_of_a_valid_local_date_and_time_string "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.") in [Date and time formats used in HTML](https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats "Certain HTML elements use date and/or time values. The formats of the strings that specify these are described in this article.").'}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/del"}]}, {name: "picture", description: {kind: "markdown", value: "The picture element is a container which provides multiple sources to its contained img element to allow authors to declaratively control or give hints to the user agent about which image resource to use, based on the screen pixel density, viewport size, image format, and other factors. It represents its children."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/picture"}]}, {name: "img", description: {kind: "markdown", value: "An img element represents an image."}, attributes: [{name: "alt", description: {kind: "markdown", value: 'This attribute defines an alternative text description of the image.\n\n**Note:** Browsers do not always display the image referenced by the element. This is the case for non-graphical browsers (including those used by people with visual impairments), if the user chooses not to display images, or if the browser cannot display the image because it is invalid or an [unsupported type](#Supported_image_formats). In these cases, the browser may replace the image with the text defined in this element\'s `alt` attribute. You should, for these reasons and others, provide a useful value for `alt` whenever possible.\n\n**Note:** Omitting this attribute altogether indicates that the image is a key part of the content, and no textual equivalent is available. Setting this attribute to an empty string (`alt=""`) indicates that this image is _not_ a key part of the content (decorative), and that non-visual browsers may omit it from rendering.'}}, {name: "src", description: {kind: "markdown", value: "The image URL. This attribute is mandatory for the `<img>` element. On browsers supporting `srcset`, `src` is treated like a candidate image with a pixel density descriptor `1x` unless an image with this pixel density descriptor is already defined in `srcset,` or unless `srcset` contains '`w`' descriptors."}}, {name: "srcset", description: {kind: "markdown", value: "A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use. Each string is composed of:\n\n1.  a URL to an image,\n2.  optionally, whitespace followed by one of:\n    *   A width descriptor, or a positive integer directly followed by '`w`'. The width descriptor is divided by the source size given in the `sizes` attribute to calculate the effective pixel density.\n    *   A pixel density descriptor, which is a positive floating point number directly followed by '`x`'.\n\nIf no descriptor is specified, the source is assigned the default descriptor: `1x`.\n\nIt is incorrect to mix width descriptors and pixel density descriptors in the same `srcset` attribute. Duplicate descriptors (for instance, two sources in the same `srcset` which are both described with '`2x`') are also invalid.\n\nThe user agent selects any one of the available sources at its discretion. This provides them with significant leeway to tailor their selection based on things like user preferences or bandwidth conditions. See our [Responsive images](https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images) tutorial for an example."}}, {name: "crossorigin", valueSet: "xo", description: {kind: "markdown", value: 'This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. [CORS-enabled images](https://developer.mozilla.org/en-US/docs/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being "[tainted](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image#What_is_a_tainted_canvas)." The allowed values are:'}}, {name: "usemap", description: {kind: "markdown", value: 'The partial URL (starting with \'#\') of an [image map](https://developer.mozilla.org/en-US/docs/HTML/Element/map) associated with the element.\n\n**Note:** You cannot use this attribute if the `<img>` element is a descendant of an [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.") or [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") element.'}}, {name: "ismap", valueSet: "v", description: {kind: "markdown", value: 'This Boolean attribute indicates that the image is part of a server-side map. If so, the precise coordinates of a click are sent to the server.\n\n**Note:** This attribute is allowed only if the `<img>` element is a descendant of an [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.") element with a valid [`href`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href) attribute.'}}, {name: "width", description: {kind: "markdown", value: "The intrinsic width of the image in pixels."}}, {name: "height", description: {kind: "markdown", value: "The intrinsic height of the image in pixels."}}, {name: "decoding", description: "Provides an image decoding hint to the browser. The allowed values are:"}, {name: "decoding", description: "`sync`\n\nDecode the image synchronously for atomic presentation with other content.\n\n`async`\n\nDecode the image asynchronously to reduce delay in presenting other content.\n\n`auto`\n\nDefault mode, which indicates no preference for the decoding mode. The browser decides what is best for the user."}, {name: "importance", description: "Indicates the relative importance of the resource. Priority hints are delegated using the values:"}, {name: "importance", description: "`auto`: Indicates\xA0**no\xA0preference**. The browser may use its own heuristics to decide the priority of the image.\n\n`high`: Indicates to the\xA0browser\xA0that the image is of\xA0**high** priority.\n\n`low`:\xA0Indicates to the\xA0browser\xA0that the image is of\xA0**low** priority."}, {name: "intrinsicsize", description: "This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it\u2019s the size specified in the attribute. Specifically, the image would raster at these dimensions and `naturalWidth`/`naturalHeight` on images would return the values specified in this attribute. [Explainer](https://github.com/ojanvafai/intrinsicsize-attribute), [examples](https://googlechrome.github.io/samples/intrinsic-size/index.html)"}, {name: "referrerpolicy", description: "A string indicating which referrer to use when fetching the resource:\n\n*   `no-referrer:` The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer \"The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.\") header will not be sent.\n*   `no-referrer-when-downgrade:` No `Referer` header will be sent when navigating to an origin without TLS (HTTPS). This is a user agent\u2019s default behavior if no policy is otherwise specified.\n*   `origin:` The `Referer` header will include the page of origin's scheme, the host, and the port.\n*   `origin-when-cross-origin:` Navigating to other origins will limit the included referral data to the scheme, the host and the port, while navigating from the same origin will include the referrer's full path.\n*   `unsafe-url:` The `Referer` header will include the origin and the path, but not the fragment, password, or username. This case is unsafe because it can leak origins and paths from TLS-protected resources to insecure origins."}, {name: "sizes", description: "A list of one or more strings separated by commas indicating a set of source sizes. Each source size consists of:\n\n1.  a media condition. This must be omitted for the last item.\n2.  a source size value.\n\nSource size values specify the intended display size of the image. User agents use the current source size to select one of the sources supplied by the `srcset` attribute, when those sources are described using width ('`w`') descriptors. The selected source size affects the intrinsic size of the image (the image\u2019s display size if no CSS styling is applied). If the `srcset` attribute is absent, or contains no values with a width (`w`) descriptor, then the `sizes` attribute has no effect."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/img"}]}, {name: "iframe", description: {kind: "markdown", value: "The iframe element represents a nested browsing context."}, attributes: [{name: "src", description: {kind: "markdown", value: 'The URL of the page to embed. Use a value of `about:blank` to embed an empty page that conforms to the [same-origin policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#Inherited_origins). Also note that programatically removing an `<iframe>`\'s src attribute (e.g. via [`Element.removeAttribute()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute "The Element method removeAttribute() removes the attribute with the specified name from the element.")) causes `about:blank` to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.'}}, {name: "srcdoc", description: {kind: "markdown", value: "Inline HTML to embed, overriding the `src` attribute. If a browser does not support the `srcdoc` attribute, it will fall back to the URL in the `src` attribute."}}, {name: "name", description: {kind: "markdown", value: 'A targetable name for the embedded browsing context. This can be used in the `target` attribute of the [`<a>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a "The HTML <a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL."), [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server."), or [`<base>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base "The HTML <base> element specifies the base URL to use for all relative URLs contained within a document. There can be only one <base> element in a document.") elements; the `formtarget` attribute of the [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") or [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") elements; or the `windowName` parameter in the [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open "The\xA0Window interface\'s open() method loads the specified resource into the browsing context (window, <iframe> or tab) with the specified name. If the name doesn\'t exist, then a new window is opened and the specified resource is loaded into its browsing context.") method.'}}, {name: "sandbox", valueSet: "sb", description: {kind: "markdown", value: 'Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply all restrictions, or space-separated tokens to lift particular restrictions:\n\n*   `allow-forms`: Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n*   `allow-modals`: Lets the resource [open modal windows](https://html.spec.whatwg.org/multipage/origin.html#sandboxed-modals-flag).\n*   `allow-orientation-lock`: Lets the resource [lock the screen orientation](https://developer.mozilla.org/en-US/docs/Web/API/Screen/lockOrientation).\n*   `allow-pointer-lock`: Lets the resource use the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock).\n*   `allow-popups`: Allows popups (such as `window.open()`, `target="_blank"`, or `showModalDialog()`). If this keyword is not used, the popup will silently fail to open.\n*   `allow-popups-to-escape-sandbox`: Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n*   `allow-presentation`: Lets the resource start a [presentation session](https://developer.mozilla.org/en-US/docs/Web/API/PresentationRequest).\n*   `allow-same-origin`: If this token is not used, the resource is treated as being from a special origin that always fails the [same-origin policy](https://developer.mozilla.org/en-US/docs/Glossary/same-origin_policy "same-origin policy: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin.").\n*   `allow-scripts`: Lets the resource run scripts (but not create popup windows).\n*   `allow-storage-access-by-user-activation` : Lets the resource request access to the parent\'s storage capabilities with the [Storage Access API](https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API).\n*   `allow-top-navigation`: Lets the resource navigate the top-level browsing context (the one named `_top`).\n*   `allow-top-navigation-by-user-activation`: Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n\n**Notes about sandboxing:**\n\n*   When the embedded document has the same origin as the embedding page, it is **strongly discouraged** to use both `allow-scripts` and `allow-same-origin`, as that lets the embedded document remove the `sandbox` attribute \u2014 making it no more secure than not using the `sandbox` attribute at all.\n*   Sandboxing is useless if the attacker can display content outside a sandboxed `iframe` \u2014 such as if the viewer opens the frame in a new tab. Such content should be also served from a _separate origin_ to limit potential damage.\n*   The `sandbox` attribute is unsupported in Internet Explorer 9 and earlier.'}}, {name: "seamless", valueSet: "v"}, {name: "allowfullscreen", valueSet: "v", description: {kind: "markdown", value: 'Set to `true` if the `<iframe>` can activate fullscreen mode by calling the [`requestFullscreen()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen "The Element.requestFullscreen() method issues an asynchronous request to make the element be displayed in full-screen mode.") method.'}}, {name: "width", description: {kind: "markdown", value: "The width of the frame in CSS pixels. Default is `300`."}}, {name: "height", description: {kind: "markdown", value: "The height of the frame in CSS pixels. Default is `150`."}}, {name: "allow", description: "Specifies a [feature policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy) for the `<iframe>`."}, {name: "allowpaymentrequest", description: "Set to `true` if a cross-origin `<iframe>` should be allowed to invoke the [Payment Request API](https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API)."}, {name: "allowpaymentrequest", description: 'This attribute is considered a legacy attribute and redefined as `allow="payment"`.'}, {name: "csp", description: 'A [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) enforced for the embedded resource. See [`HTMLIFrameElement.csp`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/csp "The csp property of the HTMLIFrameElement interface specifies the Content Security Policy that an embedded document must agree to enforce upon itself.") for details.'}, {name: "importance", description: "The download priority of the resource in the `<iframe>`'s `src` attribute. Allowed values:\n\n`auto` (default)\n\nNo preference. The browser uses its own heuristics to decide the priority of the resource.\n\n`high`\n\nThe resource should be downloaded before other lower-priority page resources.\n\n`low`\n\nThe resource should be downloaded after other higher-priority page resources."}, {name: "referrerpolicy", description: 'Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the frame\'s resource:\n\n*   `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` (default): The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/origin "origin: Web content\'s origin is defined by the scheme (protocol), host (domain), and port of the URL used to access it. Two objects have the same origin only when the scheme, host, and port all match.")s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS "TLS: Transport Layer Security (TLS), previously known as Secure Sockets Layer (SSL), is a protocol used by applications to communicate securely across a network, preventing tampering with and eavesdropping on email, web browsing, messaging, and other protocols.") ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS "HTTPS: HTTPS (HTTP Secure) is an encrypted version of the HTTP protocol. It usually uses SSL or TLS to encrypt all communication between a client and a server. This secure connection allows clients to safely exchange sensitive data with a server, for example for banking activities or online shopping.")).\n*   `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Archive/Mozilla/URIScheme), [host](https://developer.mozilla.org/en-US/docs/Glossary/host "host: A host is a device connected to the Internet (or a local network). Some hosts called servers offer additional services like serving webpages or storing files and emails."), and [port](https://developer.mozilla.org/en-US/docs/Glossary/port "port: For a computer connected to a network with an IP address, a port is a communication endpoint. Ports are designated by numbers, and below 1024 each port is associated by default with a specific protocol.").\n*   `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n*   `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy "same origin: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin."), but cross-origin requests will contain no referrer information.\n*   `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (HTTPS\u2192HTTPS), but don\'t send it to a less secure destination (HTTPS\u2192HTTP).\n*   `strict-origin-when-cross-origin`: Send a full URL when performing a same-origin request, only send the origin when the protocol security level stays the same (HTTPS\u2192HTTPS), and send no header to a less secure destination (HTTPS\u2192HTTP).\n*   `unsafe-url`: The referrer will include the origin _and_ the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/iframe"}]}, {name: "embed", description: {kind: "markdown", value: "The embed element provides an integration point for an external (typically non-HTML) application or interactive content."}, attributes: [{name: "src", description: {kind: "markdown", value: "The URL\xA0of the resource being embedded."}}, {name: "type", description: {kind: "markdown", value: "The MIME\xA0type to use to select the plug-in to instantiate."}}, {name: "width", description: {kind: "markdown", value: "The displayed width of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are _not_ allowed."}}, {name: "height", description: {kind: "markdown", value: "The displayed height of the resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). This must be an absolute value; percentages are _not_ allowed."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/embed"}]}, {name: "object", description: {kind: "markdown", value: "The object element can represent an external resource, which, depending on the type of the resource, will either be treated as an image, as a nested browsing context, or as an external resource to be processed by a plugin."}, attributes: [{name: "data", description: {kind: "markdown", value: "The address of the resource as a valid URL. At least one of **data** and **type** must be defined."}}, {name: "type", description: {kind: "markdown", value: "The [content type](https://developer.mozilla.org/en-US/docs/Glossary/Content_type) of the resource specified by **data**. At least one of **data** and **type** must be defined."}}, {name: "typemustmatch", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute indicates if the **type** attribute and the actual [content type](https://developer.mozilla.org/en-US/docs/Glossary/Content_type) of the resource must match to be used."}}, {name: "name", description: {kind: "markdown", value: "The name of valid browsing context (HTML5), or the name of the control (HTML 4)."}}, {name: "usemap", description: {kind: "markdown", value: "A hash-name reference to a [`<map>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map \"The HTML <map> element is used with <area> elements to define an image map (a clickable link area).\") element; that is a '#' followed by the value of a [`name`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map#attr-name) of a map element."}}, {name: "form", description: {kind: "markdown", value: 'The form element, if any, that the object element is associated with (its _form owner_). The value of the attribute must be an ID of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document.'}}, {name: "width", description: {kind: "markdown", value: "The width of the display resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). -- (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))"}}, {name: "height", description: {kind: "markdown", value: "The height of the displayed resource, in [CSS pixels](https://drafts.csswg.org/css-values/#px). -- (Absolute values only. [NO percentages](https://html.spec.whatwg.org/multipage/embedded-content.html#dimension-attributes))"}}, {name: "archive", description: "A space-separated list of URIs for archives of resources for the object."}, {name: "border", description: "The width of a border around the control, in pixels."}, {name: "classid", description: "The URI of the object's implementation. It can be used together with, or in place of, the **data** attribute."}, {name: "codebase", description: "The base path used to resolve relative URIs specified by **classid**, **data**, or **archive**. If not specified, the default is the base URI of the current document."}, {name: "codetype", description: "The content type of the data specified by **classid**."}, {name: "declare", description: "The presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent `<object>` element. In HTML5, repeat the <object> element completely each that that the resource is reused."}, {name: "standby", description: "A message that the browser can show while loading the object's implementation and data."}, {name: "tabindex", description: "The position of the element in the tabbing navigation order for the current document."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/object"}]}, {name: "param", description: {kind: "markdown", value: "The param element defines parameters for plugins invoked by object elements. It does not represent anything on its own."}, attributes: [{name: "name", description: {kind: "markdown", value: "Name of the parameter."}}, {name: "value", description: {kind: "markdown", value: "Specifies the value of the parameter."}}, {name: "type", description: 'Only used if the `valuetype` is set to "ref". Specifies the MIME type of values found at the URI specified by value.'}, {name: "valuetype", description: 'Specifies the type of the `value` attribute. Possible values are:\n\n*   data: Default value. The value is passed to the object\'s implementation as a string.\n*   ref: The value is a URI to a resource where run-time values are stored.\n*   object: An ID of another [`<object>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object "The HTML <object> element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.") in the same document.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/param"}]}, {name: "video", description: {kind: "markdown", value: "A video element is used for playing videos or movies, and audio files with captions."}, attributes: [{name: "src"}, {name: "crossorigin", valueSet: "xo"}, {name: "poster"}, {name: "preload", valueSet: "pl"}, {name: "autoplay", valueSet: "v", description: {kind: "markdown", value: "A Boolean attribute; if specified, the video automatically begins to play back as soon as it can do so without stopping to finish loading the data."}}, {name: "mediagroup"}, {name: "loop", valueSet: "v"}, {name: "muted", valueSet: "v"}, {name: "controls", valueSet: "v"}, {name: "width"}, {name: "height"}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/video"}]}, {name: "audio", description: {kind: "markdown", value: "An audio element represents a sound or audio stream."}, attributes: [{name: "src", description: {kind: "markdown", value: 'The URL of the audio to embed. This is subject to [HTTP access controls](https://developer.mozilla.org/en-US/docs/HTTP_access_control). This is optional; you may instead use the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source "The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.") element within the audio block to specify the audio to embed.'}}, {name: "crossorigin", valueSet: "xo", description: {kind: "markdown", value: 'This enumerated attribute indicates whether to use CORS to fetch the related image. [CORS-enabled resources](https://developer.mozilla.org/en-US/docs/CORS_Enabled_Image) can be reused in the [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") element without being _tainted_. The allowed values are:\n\nanonymous\n\nSends a cross-origin request without a credential. In other words, it sends the `Origin:` HTTP header without a cookie, X.509 certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (by not setting the `Access-Control-Allow-Origin:` HTTP header), the image will be _tainted_, and its usage restricted.\n\nuse-credentials\n\nSends a cross-origin request with a credential. In other words, it sends the `Origin:` HTTP header with a cookie, a certificate, or performing HTTP Basic authentication. If the server does not give credentials to the origin site (through `Access-Control-Allow-Credentials:` HTTP header), the image will be _tainted_ and its usage restricted.\n\nWhen not present, the resource is fetched without a CORS request (i.e. without sending the `Origin:` HTTP header), preventing its non-tainted used in [`<canvas>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations.") elements. If invalid, it is handled as if the enumerated keyword **anonymous** was used. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes) for additional information.'}}, {name: "preload", valueSet: "pl", description: {kind: "markdown", value: "This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values:\n\n*   `none`: Indicates that the audio should not be preloaded.\n*   `metadata`: Indicates that only audio metadata (e.g. length) is fetched.\n*   `auto`: Indicates that the whole audio file can be downloaded, even if the user is not expected to use it.\n*   _empty string_: A synonym of the `auto` value.\n\nIf not set, `preload`'s default value is browser-defined (i.e. each browser may have its own default value). The spec advises it to be set to `metadata`.\n\n**Usage notes:**\n\n*   The `autoplay` attribute has precedence over\xA0`preload`. If `autoplay` is specified, the browser would obviously need to start downloading the audio for playback.\n*   The browser is not forced by the specification to follow the value of this attribute; it is a mere hint."}}, {name: "autoplay", valueSet: "v", description: {kind: "markdown", value: "A Boolean attribute:\xA0if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.\n\n**Note**: Sites that automatically play audio (or videos with an audio track) can be an unpleasant experience for users, so should be avoided when possible. If you must offer autoplay functionality, you should make it opt-in (requiring a user to specifically enable it). However, this can be useful when creating media elements whose source will be set at a later time, under user control."}}, {name: "mediagroup"}, {name: "loop", valueSet: "v", description: {kind: "markdown", value: "A Boolean attribute:\xA0if specified, the audio player will\xA0automatically seek back to the start\xA0upon reaching the end of the audio."}}, {name: "muted", valueSet: "v", description: {kind: "markdown", value: "A Boolean attribute that indicates whether the audio will be initially silenced. Its default value is `false`."}}, {name: "controls", valueSet: "v", description: {kind: "markdown", value: "If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/audio"}]}, {name: "source", description: {kind: "markdown", value: "The source element allows authors to specify multiple alternative media resources for media elements. It does not represent anything on its own."}, attributes: [{name: "src", description: {kind: "markdown", value: 'Required for [`<audio>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio "The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:\xA0the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.") and [`<video>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video "The HTML Video element (<video>) embeds a media player which supports video playback into the document."), address of the media resource. The value of this attribute is ignored when the `<source>` element is placed inside a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'}}, {name: "type", description: {kind: "markdown", value: "The MIME-type of the resource, optionally with a `codecs` parameter. See [RFC 4281](https://tools.ietf.org/html/rfc4281) for information about how to specify codecs."}}, {name: "sizes", description: 'Is a list of source sizes that describes the final rendered width of the image represented by the source. Each source size consists of a comma-separated list of media condition-length pairs. This information is used by the browser to determine, before laying the page out, which image defined in [`srcset`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attr-srcset) to use.  \nThe `sizes` attribute has an effect only when the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source "The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.") element is the direct child of a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'}, {name: "srcset", description: "A list of one or more strings separated by commas indicating a set of possible images represented by the source for the browser to use. Each string is composed of:\n\n1.  one URL to an image,\n2.  a width descriptor, that is a positive integer directly followed by `'w'`. The default value, if missing, is the infinity.\n3.  a pixel density descriptor, that is a positive floating number directly followed by `'x'`. The default value, if missing, is `1x`.\n\nEach string in the list must have at least a width descriptor or a pixel density descriptor to be valid. Among the list, there must be only one string containing the same tuple of width descriptor and pixel density descriptor.  \nThe browser chooses the most adequate image to display at a given point of time.  \nThe `srcset` attribute has an effect only when the [`<source>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source \"The HTML <source> element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element.\") element is the direct child of a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture \"The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.\") element."}, {name: "media", description: '[Media query](https://developer.mozilla.org/en-US/docs/CSS/Media_queries) of the resource\'s intended media; this should be used only in a [`<picture>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture "The HTML <picture> element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios.") element.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/source"}]}, {name: "track", description: {kind: "markdown", value: "The track element allows authors to specify explicit external timed text tracks for media elements. It does not represent anything on its own."}, attributes: [{name: "default", valueSet: "v", description: {kind: "markdown", value: "This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one `track` element per media element."}}, {name: "kind", valueSet: "tk", description: {kind: "markdown", value: "How the text track is meant to be used. If omitted the default kind is `subtitles`. If the attribute is not present, it will use the `subtitles`. If the attribute contains an invalid value, it will use `metadata`. (Versions of Chrome earlier than 52 treated an invalid value as `subtitles`.)\xA0The following keywords are allowed:\n\n*   `subtitles`\n    *   Subtitles provide translation of content that cannot be understood by the viewer. For example dialogue or text that is not English in an English language film.\n    *   Subtitles may contain additional content, usually extra background information. For example the text at the beginning of the Star Wars films, or the date, time, and location of a scene.\n*   `captions`\n    *   Closed captions provide a transcription and possibly a translation of audio.\n    *   It may include important non-verbal information such as music cues or sound effects. It may indicate the cue's source (e.g. music, text, character).\n    *   Suitable for users who are deaf or when the sound is muted.\n*   `descriptions`\n    *   Textual description of the video content.\n    *   Suitable for users who are blind or where the video cannot be seen.\n*   `chapters`\n    *   Chapter titles are intended to be used when the user is navigating the media resource.\n*   `metadata`\n    *   Tracks used by scripts. Not visible to the user."}}, {name: "label", description: {kind: "markdown", value: "A user-readable title of the text track which is used by the browser when listing available text tracks."}}, {name: "src", description: {kind: "markdown", value: 'Address of the track (`.vtt` file). Must be a valid URL. This attribute must be specified and its URL value must have the same origin as the document \u2014 unless the [`<audio>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio "The HTML <audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the <source> element:\xA0the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.") or [`<video>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video "The HTML Video element (<video>) embeds a media player which supports video playback into the document.") parent element of the `track` element has a [`crossorigin`](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) attribute.'}}, {name: "srclang", description: {kind: "markdown", value: "Language of the track text data. It must be a valid [BCP 47](https://r12a.github.io/app-subtags/) language tag. If the `kind` attribute is set to\xA0`subtitles,` then `srclang` must be defined."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/track"}]}, {name: "map", description: {kind: "markdown", value: "The map element, in conjunction with an img element and any area element descendants, defines an image map. The element represents its children."}, attributes: [{name: "name", description: {kind: "markdown", value: "The name attribute gives the map a name so that it can be referenced. The attribute must be present and must have a non-empty value with no space characters. The value of the name attribute must not be a compatibility-caseless match for the value of the name attribute of another map element in the same document. If the id attribute is also specified, both attributes must have the same value."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/map"}]}, {name: "area", description: {kind: "markdown", value: "The area element represents either a hyperlink with some text and a corresponding area on an image map, or a dead area on an image map."}, attributes: [{name: "alt"}, {name: "coords"}, {name: "shape", valueSet: "sh"}, {name: "href"}, {name: "target"}, {name: "download"}, {name: "ping"}, {name: "rel"}, {name: "hreflang"}, {name: "type"}, {name: "accesskey", description: "Specifies a keyboard navigation accelerator for the element. Pressing ALT or a similar key in association with the specified character selects the form control correlated with that key sequence. Page designers are forewarned to avoid key sequences already bound to browsers. This attribute is global since HTML5."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/area"}]}, {name: "table", description: {kind: "markdown", value: "The table element represents data with more than one dimension, in the form of a table."}, attributes: [{name: "border"}, {name: "align", description: 'This enumerated attribute indicates how the table must be aligned inside the containing document. It may have the following values:\n\n*   left: the table is displayed on the left side of the document;\n*   center: the table is displayed in the center of the document;\n*   right: the table is displayed on the right side of the document.\n\n**Usage Note**\n\n*   **Do not use this attribute**, as it has been deprecated. The [`<table>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table "The HTML <table> element represents tabular data \u2014 that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). Set [`margin-left`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-left "The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") and [`margin-right`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin-right "The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.") to `auto` or [`margin`](https://developer.mozilla.org/en-US/docs/Web/CSS/margin "The margin CSS property sets the margin area on all four sides of an element. It is a shorthand for margin-top, margin-right, margin-bottom, and margin-left.") to `0 auto` to achieve an effect that is similar to the align attribute.\n*   Prior to Firefox 4, Firefox also supported the `middle`, `absmiddle`, and `abscenter` values as synonyms of `center`, in quirks mode only.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/table"}]}, {name: "caption", description: {kind: "markdown", value: "The caption element represents the title of the table that is its parent, if it has a parent and that is a table element."}, attributes: [{name: "align", description: 'This enumerated attribute indicates how the caption must be aligned with respect to the table. It may have one of the following values:\n\n`left`\n\nThe caption is displayed to the left of the table.\n\n`top`\n\nThe caption is displayed above the table.\n\n`right`\n\nThe caption is displayed to the right of the table.\n\n`bottom`\n\nThe caption is displayed below the table.\n\n**Usage note:** Do not use this attribute, as it has been deprecated. The [`<caption>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption "The HTML Table Caption element (<caption>) specifies the caption (or title) of a table, and if used is always the first child of a <table>.") element should be styled using the [CSS](https://developer.mozilla.org/en-US/docs/CSS) properties [`caption-side`](https://developer.mozilla.org/en-US/docs/Web/CSS/caption-side "The caption-side CSS property puts the content of a table\'s <caption> on the specified side. The values are relative to the writing-mode of the table.") and [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.").'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/caption"}]}, {name: "colgroup", description: {kind: "markdown", value: "The colgroup element represents a group of one or more columns in the table that is its parent, if it has a parent and that is a table element."}, attributes: [{name: "span"}, {name: "align", description: 'This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-charoff) attributes Unimplemented (see [bug\xA02212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed. The descendant [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") elements may override this value using their own [`align`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-align) attribute.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values:\n    *   Do not try to set the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on a selector giving a [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element. Because [`<td>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") elements are not descendant of the [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element, they won\'t inherit it.\n    *   If the table doesn\'t use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, use one `td:nth-child(an+b)` CSS selector per column, where a is the total number of the columns in the table and b is the ordinal position of this column in the table. Only after this selector the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property can be used.\n    *   If the table does use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/colgroup"}]}, {name: "col", description: {kind: "markdown", value: "If a col element has a parent and that is a colgroup element that itself has a parent that is a table element, then the col element represents one or more columns in the column group represented by that colgroup."}, attributes: [{name: "span"}, {name: "align", description: 'This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-charoff) attributes Unimplemented (see [bug\xA02212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, its value is inherited from the [`align`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup#attr-align) of the [`<colgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup "The HTML <colgroup> element defines a group of columns within a table.") element this `<col>` element belongs too. If there are none, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values:\n    *   Do not try to set the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on a selector giving a [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") element. Because [`<td>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") elements are not descendant of the [`<col>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col "The HTML <col> element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element.") element, they won\'t inherit it.\n    *   If the table doesn\'t use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, use the `td:nth-child(an+b)` CSS selector. Set `a` to zero and `b` to the position of the column in the table, e.g. `td:nth-child(2) { text-align: right; }` to right-align the second column.\n    *   If the table does use a [`colspan`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-colspan) attribute, the effect can be achieved by combining adequate CSS attribute selectors like `[colspan=n]`, though this is not trivial.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/col"}]}, {name: "tbody", description: {kind: "markdown", value: "The tbody element represents a block of rows that consist of a body of data for the parent table element, if the tbody element has a parent and it is a table."}, attributes: [{name: "align", description: 'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-charoff) attributes.\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/tbody"}]}, {name: "thead", description: {kind: "markdown", value: "The thead element represents the block of rows that consist of the column labels (headers) for the parent table element, if the thead element has a parent and it is a table."}, attributes: [{name: "align", description: 'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-charoff) attributes Unimplemented (see [bug\xA02212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/thead"}]}, {name: "tfoot", description: {kind: "markdown", value: "The tfoot element represents the block of rows that consist of the column summaries (footers) for the parent table element, if the tfoot element has a parent and it is a table."}, attributes: [{name: "align", description: 'This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:\n\n*   `left`, aligning the content to the left of the cell\n*   `center`, centering the content in the cell\n*   `right`, aligning the content to the right of the cell\n*   `justify`, inserting spaces into the textual content so that the content is justified in the cell\n*   `char`, aligning the textual content on a special character with a minimal offset, defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody#attr-charoff) attributes Unimplemented (see [bug\xA02212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nIf this attribute is not set, the `left` value is assumed.\n\n**Note:** Do not use this attribute as it is obsolete (not supported) in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property on it.\n*   To achieve the same effect as the `char` value, in CSS3, you can use the value of the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot#attr-char) as the value of the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property Unimplemented.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/tfoot"}]}, {name: "tr", description: {kind: "markdown", value: "The tr element represents a row of cells in a table."}, attributes: [{name: "align", description: 'A [`DOMString`](https://developer.mozilla.org/en-US/docs/Web/API/DOMString "DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.") which specifies how the cell\'s context should be aligned horizontally within the cells in the row; this is shorthand for using `align` on every cell in the row individually. Possible values are:\n\n`left`\n\nAlign the content of each cell at its left edge.\n\n`center`\n\nCenter the contents of each cell between their left and right edges.\n\n`right`\n\nAlign the content of each cell at its right edge.\n\n`justify`\n\nWiden whitespaces within the text of each cell so that the text fills the full width of each cell (full justification).\n\n`char`\n\nAlign each cell in the row on a specific character (such that each row in the column that is configured this way will horizontally align its cells on that character). This uses the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr#attr-charoff) to establish the alignment character (typically "." or "," when aligning numerical data) and the number of characters that should follow the alignment character. This alignment type was never widely supported.\n\nIf no value is expressly set for `align`, the parent node\'s value is inherited.\n\nInstead of using the obsolete `align` attribute, you should instead use the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to establish `left`, `center`, `right`, or `justify` alignment for the row\'s cells. To apply character-based alignment, set the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the alignment character (such as `"."` or `","`).'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/tr"}]}, {name: "td", description: {kind: "markdown", value: "The td element represents a data cell in a table."}, attributes: [{name: "colspan"}, {name: "rowspan"}, {name: "headers"}, {name: "abbr", description: "This attribute contains a short abbreviated description of the cell's content. Some user-agents, such as speech readers, may present this description before the content itself.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard. Alternatively, you can put the abbreviated description inside the cell and place the long content in the **title** attribute."}, {name: "align", description: 'This enumerated attribute specifies how the cell content\'s horizontal alignment will be handled. Possible values are:\n\n*   `left`: The content is aligned to the left of the cell.\n*   `center`: The content is centered in the cell.\n*   `right`: The content is aligned to the right of the cell.\n*   `justify` (with text only): The content is stretched out inside the cell so that it covers its entire width.\n*   `char` (with text only): The content is aligned to a character inside the `<th>` element with minimal offset. This character is defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-charoff) attributes Unimplemented (see [bug\xA02212](https://bugzilla.mozilla.org/show_bug.cgi?id=2212 "character alignment not implemented (align=char, charoff=, text-align:<string>)")).\n\nThe default value when this attribute is not specified is `left`.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, apply the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the element.\n*   To achieve the same effect as the `char` value, give the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property the same value you would use for the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td#attr-char). Unimplemented in CSS3.'}, {name: "axis", description: "This attribute contains a list of space-separated strings. Each string is the `id` of a group of cells that this header applies to.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard."}, {name: "bgcolor", description: 'This attribute defines the background color of each cell in a column. It consists of a 6-digit hexadecimal code as defined in [sRGB](https://www.w3.org/Graphics/Color/sRGB) and is prefixed by \'#\'. This attribute may be used with one of sixteen predefined color strings:\n\n\xA0\n\n`black` = "#000000"\n\n\xA0\n\n`green` = "#008000"\n\n\xA0\n\n`silver` = "#C0C0C0"\n\n\xA0\n\n`lime` = "#00FF00"\n\n\xA0\n\n`gray` = "#808080"\n\n\xA0\n\n`olive` = "#808000"\n\n\xA0\n\n`white` = "#FFFFFF"\n\n\xA0\n\n`yellow` = "#FFFF00"\n\n\xA0\n\n`maroon` = "#800000"\n\n\xA0\n\n`navy` = "#000080"\n\n\xA0\n\n`red` = "#FF0000"\n\n\xA0\n\n`blue` = "#0000FF"\n\n\xA0\n\n`purple` = "#800080"\n\n\xA0\n\n`teal` = "#008080"\n\n\xA0\n\n`fuchsia` = "#FF00FF"\n\n\xA0\n\n`aqua` = "#00FFFF"\n\n**Note:** Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: The [`<td>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td "The HTML <td> element defines a cell of a table that contains data. It participates in the table model.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/CSS). To create a similar effect use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property in [CSS](https://developer.mozilla.org/en-US/docs/CSS) instead.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/td"}]}, {name: "th", description: {kind: "markdown", value: "The th element represents a header cell in a table."}, attributes: [{name: "colspan"}, {name: "rowspan"}, {name: "headers"}, {name: "scope", valueSet: "s"}, {name: "sorted"}, {name: "abbr", description: {kind: "markdown", value: "This attribute contains a short abbreviated description of the cell's content. Some user-agents, such as speech readers, may present this description before the content itself."}}, {name: "align", description: 'This enumerated attribute specifies how the cell content\'s horizontal alignment will be handled. Possible values are:\n\n*   `left`: The content is aligned to the left of the cell.\n*   `center`: The content is centered in the cell.\n*   `right`: The content is aligned to the right of the cell.\n*   `justify` (with text only): The content is stretched out inside the cell so that it covers its entire width.\n*   `char` (with text only): The content is aligned to a character inside the `<th>` element with minimal offset. This character is defined by the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-char) and [`charoff`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-charoff) attributes.\n\nThe default value when this attribute is not specified is `left`.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard.\n\n*   To achieve the same effect as the `left`, `center`, `right` or `justify` values, apply the CSS [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property to the element.\n*   To achieve the same effect as the `char` value, give the [`text-align`](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align "The text-align CSS property sets the horizontal alignment of an inline or table-cell box. This means it works like vertical-align but in the horizontal direction.") property the same value you would use for the [`char`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-char). Unimplemented in CSS3.'}, {name: "axis", description: "This attribute contains a list of space-separated strings. Each string is the `id` of a group of cells that this header applies to.\n\n**Note:** Do not use this attribute as it is obsolete in the latest standard: use the [`scope`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#attr-scope) attribute instead."}, {name: "bgcolor", description: 'This attribute defines the background color of each cell in a column. It consists of a 6-digit hexadecimal code as defined in [sRGB](https://www.w3.org/Graphics/Color/sRGB) and is prefixed by \'#\'. This attribute may be used with one of sixteen predefined color strings:\n\n\xA0\n\n`black` = "#000000"\n\n\xA0\n\n`green` = "#008000"\n\n\xA0\n\n`silver` = "#C0C0C0"\n\n\xA0\n\n`lime` = "#00FF00"\n\n\xA0\n\n`gray` = "#808080"\n\n\xA0\n\n`olive` = "#808000"\n\n\xA0\n\n`white` = "#FFFFFF"\n\n\xA0\n\n`yellow` = "#FFFF00"\n\n\xA0\n\n`maroon` = "#800000"\n\n\xA0\n\n`navy` = "#000080"\n\n\xA0\n\n`red` = "#FF0000"\n\n\xA0\n\n`blue` = "#0000FF"\n\n\xA0\n\n`purple` = "#800080"\n\n\xA0\n\n`teal` = "#008080"\n\n\xA0\n\n`fuchsia` = "#FF00FF"\n\n\xA0\n\n`aqua` = "#00FFFF"\n\n**Note:** Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: The [`<th>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th "The HTML <th> element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.") element should be styled using [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS). To create a similar effect use the [`background-color`](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color "The background-color CSS property sets the background color of an element.") property in [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) instead.'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/th"}]}, {name: "form", description: {kind: "markdown", value: "The form element represents a collection of form-associated elements, some of which can represent editable values that can be submitted to a server for processing."}, attributes: [{name: "accept-charset", description: {kind: "markdown", value: 'A space- or comma-delimited list of character encodings that the server accepts. The browser uses them in the order in which they are listed. The default value, the reserved string `"UNKNOWN"`, indicates the same encoding as that of the document containing the form element.  \nIn previous versions of HTML, the different character encodings could be delimited by spaces or commas. In HTML5, only spaces are allowed as delimiters.'}}, {name: "action", description: {kind: "markdown", value: 'The URI of a program that processes the form information. This value can be overridden by a [`formaction`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formaction) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}}, {name: "autocomplete", valueSet: "o", description: {kind: "markdown", value: "Indicates whether input elements can by default have their values automatically completed by the browser. This setting can be overridden by an `autocomplete` attribute on an element belonging to the form. Possible values are:\n\n*   `off`: The user must explicitly enter a value into each field for every use, or the document provides its own auto-completion method; the browser does not automatically complete entries.\n*   `on`: The browser can automatically complete values based on values that the user has previously entered in the form.\n\nFor most modern browsers (including Firefox 38+, Google Chrome 34+, IE 11+) setting the autocomplete attribute will not prevent a browser's password manager from asking the user if they want to store login fields (username and password), if the user permits the storage the browser will autofill the login the next time the user visits the page. See [The autocomplete attribute and login fields](https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion#The_autocomplete_attribute_and_login_fields)."}}, {name: "enctype", valueSet: "et", description: {kind: "markdown", value: 'When the value of the `method` attribute is `post`, enctype is the [MIME type](https://en.wikipedia.org/wiki/Mime_type) of content that is used to submit the form to the server. Possible values are:\n\n*   `application/x-www-form-urlencoded`: The default value if the attribute is not specified.\n*   `multipart/form-data`: The value used for an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element with the `type` attribute set to "file".\n*   `text/plain`: (HTML5)\n\nThis value can be overridden by a [`formenctype`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formenctype) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}}, {name: "method", valueSet: "m", description: {kind: "markdown", value: 'The [HTTP](https://developer.mozilla.org/en-US/docs/Web/HTTP) method that the browser uses to submit the form. Possible values are:\n\n*   `post`: Corresponds to the HTTP [POST method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5) ; form data are included in the body of the form and sent to the server.\n*   `get`: Corresponds to the HTTP [GET method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3); form data are appended to the `action` attribute URI with a \'?\' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n*   `dialog`: Use when the form is inside a\xA0[`<dialog>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog "The HTML <dialog> element represents a dialog box or other interactive component, such as an inspector or window.") element to close the dialog when submitted.\n\nThis value can be overridden by a [`formmethod`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formmethod) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}}, {name: "name", description: {kind: "markdown", value: "The name of the form. In HTML 4, its use is deprecated (`id` should be used instead). It must be unique among the forms in a document and not just an empty string in HTML 5."}}, {name: "novalidate", valueSet: "v", description: {kind: "markdown", value: 'This Boolean attribute indicates that the form is not to be validated when submitted. If this attribute is not specified (and therefore the form is validated), this default setting can be overridden by a [`formnovalidate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formnovalidate) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element belonging to the form.'}}, {name: "target", description: {kind: "markdown", value: 'A name or keyword indicating where to display the response that is received after submitting the form. In HTML 4, this is the name/keyword for a frame. In HTML5, it is a name/keyword for a _browsing context_ (for example, tab, window, or inline frame). The following keywords have special meanings:\n\n*   `_self`: Load the response into the same HTML 4 frame (or HTML5 browsing context) as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the response into a new unnamed HTML 4 window or HTML5 browsing context.\n*   `_parent`: Load the response into the HTML 4 frameset parent of the current frame, or HTML5 parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: HTML 4: Load the response into the full original window, and cancel all other frames. HTML5: Load the response into the top-level browsing context (i.e., the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`.\n*   _iframename_: The response is displayed in a named [`<iframe>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe "The HTML Inline Frame element (<iframe>) represents a nested browsing context, embedding another HTML page into the current one.").\n\nHTML5: This value can be overridden by a [`formtarget`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formtarget) attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") or [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}}, {name: "accept", description: 'A comma-separated list of content types that the server accepts.\n\n**Usage note:** This attribute has been removed in HTML5 and should no longer be used. Instead, use the [`accept`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) attribute of the specific [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element.'}, {name: "autocapitalize", description: "This is a nonstandard attribute used by iOS Safari Mobile which controls whether and how the text value for textual form control descendants should be automatically capitalized as it is entered/edited by the user. If the `autocapitalize` attribute is specified on an individual form control descendant, it trumps the form-wide `autocapitalize` setting. The non-deprecated values are available in iOS 5 and later. The default value is `sentences`. Possible values are:\n\n*   `none`: Completely disables automatic capitalization\n*   `sentences`: Automatically capitalize the first letter of sentences.\n*   `words`: Automatically capitalize the first letter of words.\n*   `characters`: Automatically capitalize all characters.\n*   `on`: Deprecated since iOS 5.\n*   `off`: Deprecated since iOS 5."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/form"}]}, {name: "label", description: {kind: "markdown", value: "The label element represents a caption in a user interface. The caption can be associated with a specific form control, known as the label element's labeled control, either using the for attribute, or by putting the form control inside the label element itself."}, attributes: [{name: "form", description: {kind: "markdown", value: 'The [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element with which the label is associated (its _form owner_). If specified, the value of the attribute is the `id` of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document. This lets you place label elements anywhere within a document, not just as descendants of their form elements.'}}, {name: "for", description: {kind: "markdown", value: "The [`id`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-id) of a [labelable](https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_categories#Form_labelable) form-related element in the same document as the `<label>` element. The first element in the document with an `id` matching the value of the `for` attribute is the _labeled control_ for this label element, if it is a labelable element. If it is\xA0not labelable then the `for` attribute has no effect. If there are other elements which also match the `id` value, later in the document, they are not considered.\n\n**Note**: A `<label>` element can have both a `for` attribute and a contained control element, as long as the `for` attribute points to the contained control element."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/label"}]}, {name: "input", description: {kind: "markdown", value: "The input element represents a typed data field, usually with a form control to allow the user to edit the data."}, attributes: [{name: "accept"}, {name: "alt"}, {name: "autocomplete", valueSet: "inputautocomplete"}, {name: "autofocus", valueSet: "v"}, {name: "checked", valueSet: "v"}, {name: "dirname"}, {name: "disabled", valueSet: "v"}, {name: "form"}, {name: "formaction"}, {name: "formenctype", valueSet: "et"}, {name: "formmethod", valueSet: "fm"}, {name: "formnovalidate", valueSet: "v"}, {name: "formtarget"}, {name: "height"}, {name: "inputmode", valueSet: "im"}, {name: "list"}, {name: "max"}, {name: "maxlength"}, {name: "min"}, {name: "minlength"}, {name: "multiple", valueSet: "v"}, {name: "name"}, {name: "pattern"}, {name: "placeholder"}, {name: "readonly", valueSet: "v"}, {name: "required", valueSet: "v"}, {name: "size"}, {name: "src"}, {name: "step"}, {name: "type", valueSet: "t"}, {name: "value"}, {name: "width"}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/input"}]}, {name: "button", description: {kind: "markdown", value: "The button element represents a button labeled by its contents."}, attributes: [{name: "autofocus", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute lets you specify that the button should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form-associated element in a document can have this attribute specified."}}, {name: "disabled", valueSet: "v", description: {kind: "markdown", value: 'This Boolean attribute indicates that the user cannot interact with the button. If this attribute is not specified, the button inherits its setting from the containing element, for example [`<fieldset>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset "The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form."); if there is no containing element with the **disabled** attribute set, then the button is enabled.\n\nFirefox will, unlike other browsers, by default, [persist the dynamic disabled state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") across page loads. Use the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-autocomplete) attribute to control this feature.'}}, {name: "form", description: {kind: "markdown", value: 'The form element that the button is associated with (its _form owner_). The value of the attribute must be the **id** attribute of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element in the same document. If this attribute is not specified, the `<button>` element will be associated to an ancestor [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element, if one exists. This attribute enables you to associate `<button>` elements to [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") elements anywhere within a document, not just as descendants of [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") elements.'}}, {name: "formaction", description: {kind: "markdown", value: "The URI of a program that processes the information submitted by the button. If specified, it overrides the [`action`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-action) attribute of the button's form owner."}}, {name: "formenctype", valueSet: "et", description: {kind: "markdown", value: 'If the button is a submit button, this attribute specifies the type of content that is used to submit the form to the server. Possible values are:\n\n*   `application/x-www-form-urlencoded`: The default value if the attribute is not specified.\n*   `multipart/form-data`: Use this value if you are using an [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") element with the [`type`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) attribute set to `file`.\n*   `text/plain`\n\nIf this attribute is specified, it overrides the [`enctype`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype) attribute of the button\'s form owner.'}}, {name: "formmethod", valueSet: "fm", description: {kind: "markdown", value: "If the button is a submit button, this attribute specifies the HTTP method that the browser uses to submit the form. Possible values are:\n\n*   `post`: The data from the form are included in the body of the form and sent to the server.\n*   `get`: The data from the form are appended to the **form** attribute URI, with a '?' as a separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters.\n\nIf specified, this attribute overrides the [`method`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-method) attribute of the button's form owner."}}, {name: "formnovalidate", valueSet: "v", description: {kind: "markdown", value: "If the button is a submit button, this Boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the [`novalidate`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-novalidate) attribute of the button's form owner."}}, {name: "formtarget", description: {kind: "markdown", value: "If the button is a submit button, this attribute is a name or keyword indicating where to display the response that is received after submitting the form. This is a name of, or keyword for, a _browsing context_ (for example, tab, window, or inline frame). If this attribute is specified, it overrides the [`target`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-target) attribute of the button's form owner. The following keywords have special meanings:\n\n*   `_self`: Load the response into the same browsing context as the current one. This value is the default if the attribute is not specified.\n*   `_blank`: Load the response into a new unnamed browsing context.\n*   `_parent`: Load the response into the parent browsing context of the current one. If there is no parent, this option behaves the same way as `_self`.\n*   `_top`: Load the response into the top-level browsing context (that is, the browsing context that is an ancestor of the current one, and has no parent). If there is no parent, this option behaves the same way as `_self`."}}, {name: "name", description: {kind: "markdown", value: "The name of the button, which is submitted with the form data."}}, {name: "type", valueSet: "bt", description: {kind: "markdown", value: "The type of the button. Possible values are:\n\n*   `submit`: The button submits the form data to the server. This is the default if the attribute is not specified, or if the attribute is dynamically changed to an empty or invalid value.\n*   `reset`: The button resets all the controls to their initial values.\n*   `button`: The button has no default behavior. It can have client-side scripts associated with the element's events, which are triggered when the events occur."}}, {name: "value", description: {kind: "markdown", value: "The initial value of the button. It defines the value associated with the button which is submitted with the form data. This value is passed to the server in params when the form is submitted."}}, {name: "autocomplete", description: 'The use of this attribute on a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") is nonstandard and Firefox-specific. By default, unlike other browsers, [Firefox persists the dynamic disabled state](https://stackoverflow.com/questions/5985839/bug-with-firefox-disabled-attribute-of-input-not-resetting-when-refreshing) of a [`<button>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button "The HTML <button> element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality.") across page loads. Setting the value of this attribute to `off` (i.e. `autocomplete="off"`) disables this feature. See [bug\xA0654072](https://bugzilla.mozilla.org/show_bug.cgi?id=654072 "if disabled state is changed with javascript, the normal state doesn\'t return after refreshing the page").'}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/button"}]}, {name: "select", description: {kind: "markdown", value: "The select element represents a control for selecting amongst a set of options."}, attributes: [{name: "autocomplete", valueSet: "inputautocomplete", description: {kind: "markdown", value: 'A [`DOMString`](https://developer.mozilla.org/en-US/docs/Web/API/DOMString "DOMString is a UTF-16 String. As JavaScript already uses such strings, DOMString is mapped directly to a String.") providing a hint for a [user agent\'s](https://developer.mozilla.org/en-US/docs/Glossary/user_agent "user agent\'s: A user agent is a computer program representing a person, for example, a browser in a Web context.") autocomplete feature. See [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for a complete list of values and details on how to use autocomplete.'}}, {name: "autofocus", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the `autofocus` attribute."}}, {name: "disabled", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example `fieldset`; if there is no containing element with the `disabled` attribute set, then the control is enabled."}}, {name: "form", description: {kind: "markdown", value: 'This attribute lets you specify the form element to\xA0which\xA0the select element is associated\xA0(that is, its "form owner"). If this attribute is specified, its value must be the same as the `id` of a form element in the same document. This enables you to place select elements anywhere within a document, not just as descendants of their form elements.'}}, {name: "multiple", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time. When `multiple` is specified, most browsers will show a scrolling list box instead of a single line dropdown."}}, {name: "name", description: {kind: "markdown", value: "This attribute is used to specify the name of the control."}}, {name: "required", valueSet: "v", description: {kind: "markdown", value: "A Boolean attribute indicating that an option with a non-empty string value must be selected."}}, {name: "size", description: {kind: "markdown", value: "If the control is presented as a scrolling list box (e.g. when `multiple` is specified), this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select element as a scrolled list box. The default value is 0.\n\n**Note:** According to the HTML5 specification, the default value for size should be 1; however, in practice, this has been found to break some web sites, and no other browser currently does that, so Mozilla has opted to continue to return 0 for the time being with Firefox."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/select"}]}, {name: "datalist", description: {kind: "markdown", value: "The datalist element represents a set of option elements that represent predefined options for other controls. In the rendering, the datalist element represents nothing and it, along with its children, should be hidden."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/datalist"}]}, {name: "optgroup", description: {kind: "markdown", value: "The optgroup element represents a group of option elements with a common label."}, attributes: [{name: "disabled", valueSet: "v", description: {kind: "markdown", value: "If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones."}}, {name: "label", description: {kind: "markdown", value: "The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/optgroup"}]}, {name: "option", description: {kind: "markdown", value: "The option element represents an option in a select element or as part of a list of suggestions in a datalist element."}, attributes: [{name: "disabled", valueSet: "v", description: {kind: "markdown", value: 'If this Boolean attribute is set, this option is not checkable. Often browsers grey out such control and it won\'t receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one of its ancestors is a disabled [`<optgroup>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup "The HTML <optgroup> element creates a grouping of options within a <select> element.") element.'}}, {name: "label", description: {kind: "markdown", value: "This attribute is text for the label indicating the meaning of the option. If the `label` attribute isn't defined, its value is that of the element text content."}}, {name: "selected", valueSet: "v", description: {kind: "markdown", value: 'If present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select "The HTML <select> element represents a control that provides a menu of options") element whose [`multiple`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple) attribute is not set, only one single `<option>` of this [`<select>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select "The HTML <select> element represents a control that provides a menu of options") element may have the `selected` attribute.'}}, {name: "value", description: {kind: "markdown", value: "The content of this attribute represents the value to be submitted with the form, should this option be selected.\xA0If this attribute is omitted, the value is taken from the text content of the option element."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/option"}]}, {name: "textarea", description: {kind: "markdown", value: "The textarea element represents a multiline plain text edit control for the element's raw value. The contents of the control represent the control's default value."}, attributes: [{name: "autocomplete", valueSet: "inputautocomplete", description: {kind: "markdown", value: 'This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:\n\n*   `off`: The user must explicitly enter a value into this field for every use, or the document provides its own auto-completion method; the browser does not automatically complete the entry.\n*   `on`: The browser can automatically complete the value based on values that the user has entered during previous uses.\n\nIf the `autocomplete` attribute is not specified on a `<textarea>` element, then the browser uses the `autocomplete` attribute value of the `<textarea>` element\'s form owner. The form owner is either the [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element that this `<textarea>` element is a descendant of or the form element whose `id` is specified by the `form` attribute of the input element. For more information, see the [`autocomplete`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-autocomplete) attribute in [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.").'}}, {name: "autofocus", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form-associated element in a document can have this attribute specified."}}, {name: "cols", description: {kind: "markdown", value: "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is `20`."}}, {name: "dirname"}, {name: "disabled", valueSet: "v", description: {kind: "markdown", value: 'This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example [`<fieldset>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset "The HTML <fieldset> element is used to group several controls as well as labels (<label>) within a web form."); if there is no containing element when the `disabled` attribute is set, the control is enabled.'}}, {name: "form", description: {kind: "markdown", value: 'The form element that the `<textarea>` element is associated with (its "form owner"). The value of the attribute must be the `id` of a form element in the same document. If this attribute is not specified, the `<textarea>` element must be a descendant of a form element. This attribute enables you to place `<textarea>` elements anywhere within a document, not just as descendants of form elements.'}}, {name: "inputmode", valueSet: "im"}, {name: "maxlength", description: {kind: "markdown", value: "The maximum number of characters (unicode code points) that the user can enter. If this value isn't specified, the user can enter an unlimited number of characters."}}, {name: "minlength", description: {kind: "markdown", value: "The minimum number of characters (unicode code points) required that the user should enter."}}, {name: "name", description: {kind: "markdown", value: "The name of the control."}}, {name: "placeholder", description: {kind: "markdown", value: 'A hint to the user of what can be entered in the control. Carriage returns or line-feeds within the placeholder text must be treated as line breaks when rendering the hint.\n\n**Note:** Placeholders should only be used to show an example of the type of data that should be entered into a form; they are _not_ a substitute for a proper [`<label>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label "The HTML <label> element represents a caption for an item in a user interface.") element tied to the input. See [Labels and placeholders](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Labels_and_placeholders "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") in [<input>: The Input (Form Input) element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") for a full explanation.'}}, {name: "readonly", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the `disabled` attribute, the `readonly` attribute does not prevent the user from clicking or selecting in the control. The value of a read-only control is still submitted with the form."}}, {name: "required", valueSet: "v", description: {kind: "markdown", value: "This attribute specifies that the user must fill in a value before submitting a form."}}, {name: "rows", description: {kind: "markdown", value: "The number of visible text lines for the control."}}, {name: "wrap", valueSet: "w", description: {kind: "markdown", value: "Indicates how the control wraps text. Possible values are:\n\n*   `hard`: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the `cols` attribute must also be specified for this to take effect.\n*   `soft`: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.\n*   `off` : Like `soft` but changes appearance to `white-space: pre` so line segments exceeding `cols` are not wrapped and the `<textarea>` becomes horizontally scrollable.\n\nIf this attribute is not specified, `soft` is its default value."}}, {name: "autocapitalize", description: "This is a non-standard attribute supported by WebKit on iOS (therefore nearly all browsers running on iOS, including Safari, Firefox, and Chrome), which controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. The non-deprecated values are available in iOS 5 and later. Possible values are:\n\n*   `none`: Completely disables automatic capitalization.\n*   `sentences`: Automatically capitalize the first letter of sentences.\n*   `words`: Automatically capitalize the first letter of words.\n*   `characters`: Automatically capitalize all characters.\n*   `on`: Deprecated since iOS 5.\n*   `off`: Deprecated since iOS 5."}, {name: "spellcheck", description: "Specifies whether the `<textarea>` is subject to spell checking by the underlying browser/OS. the value can be:\n\n*   `true`: Indicates that the element needs to have its spelling and grammar checked.\n*   `default` : Indicates that the element is to act according to a default behavior, possibly based on the parent element's own `spellcheck` value.\n*   `false` : Indicates that the element should not be spell checked."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/textarea"}]}, {name: "output", description: {kind: "markdown", value: "The output element represents the result of a calculation performed by the application, or the result of a user action."}, attributes: [{name: "for", description: {kind: "markdown", value: "A space-separated list of other elements\u2019 [`id`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)s, indicating that those elements contributed input values to (or otherwise affected) the calculation."}}, {name: "form", description: {kind: "markdown", value: 'The [form element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) that this element is associated with (its "form owner"). The value of the attribute must be an `id` of a form element in the same document. If this attribute is not specified, the output element must be a descendant of a form element. This attribute enables you to place output elements anywhere within a document, not just as descendants of their form elements.'}}, {name: "name", description: {kind: "markdown", value: 'The name of the element, exposed in the [`HTMLFormElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement "The HTMLFormElement interface represents a <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.") API.'}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/output"}]}, {name: "progress", description: {kind: "markdown", value: "The progress element represents the completion progress of a task. The progress is either indeterminate, indicating that progress is being made but that it is not clear how much more work remains to be done before the task is complete (e.g. because the task is waiting for a remote host to respond), or the progress is a number in the range zero to a maximum, giving the fraction of work that has so far been completed."}, attributes: [{name: "value", description: {kind: "markdown", value: "This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and `max`, or between 0 and 1 if `max` is omitted. If there is no `value` attribute, the progress bar is indeterminate; this indicates that an activity is ongoing with no indication of how long it is expected to take."}}, {name: "max", description: {kind: "markdown", value: "This attribute describes how much work the task indicated by the `progress` element requires. The `max` attribute, if present, must have a value greater than zero and be a valid floating point number. The default value is 1."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/progress"}]}, {name: "meter", description: {kind: "markdown", value: "The meter element represents a scalar measurement within a known range, or a fractional value; for example disk usage, the relevance of a query result, or the fraction of a voting population to have selected a particular candidate."}, attributes: [{name: "value", description: {kind: "markdown", value: "The current numeric value. This must be between the minimum and maximum values (`min` attribute and `max` attribute) if they are specified. If unspecified or malformed, the value is 0. If specified, but not within the range given by the `min` attribute and `max` attribute, the value is equal to the nearest end of the range.\n\n**Usage note:** Unless the `value` attribute is between `0` and `1` (inclusive), the `min` and `max` attributes should define the range so that the `value` attribute's value is within it."}}, {name: "min", description: {kind: "markdown", value: "The lower numeric bound of the measured range. This must be less than the maximum value (`max` attribute), if specified. If unspecified, the minimum value is 0."}}, {name: "max", description: {kind: "markdown", value: "The upper numeric bound of the measured range. This must be greater than the minimum value (`min` attribute), if specified. If unspecified, the maximum value is 1."}}, {name: "low", description: {kind: "markdown", value: "The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (`min` attribute), and it also must be less than the high value and maximum value (`high` attribute and `max` attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the `low` value is equal to the minimum value."}}, {name: "high", description: {kind: "markdown", value: "The lower numeric bound of the high end of the measured range. This must be less than the maximum value (`max` attribute), and it also must be greater than the low value and minimum value (`low` attribute and **min** attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the `high` value is equal to the maximum value."}}, {name: "optimum", description: {kind: "markdown", value: "This attribute indicates the optimal numeric value. It must be within the range (as defined by the `min` attribute and `max` attribute). When used with the `low` attribute and `high` attribute, it gives an indication where along the range is considered preferable. For example, if it is between the `min` attribute and the `low` attribute, then the lower range is considered preferred."}}, {name: "form", description: "This attribute associates the element with a `form` element that has ownership of the `meter` element. For example, a `meter` might be displaying a range corresponding to an `input` element of `type` _number_. This attribute is only used if the `meter` element is being used as a form-associated element; even then, it may be omitted if the element appears as a descendant of a `form` element."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/meter"}]}, {name: "fieldset", description: {kind: "markdown", value: "The fieldset element represents a set of form controls optionally grouped under a common name."}, attributes: [{name: "disabled", valueSet: "v", description: {kind: "markdown", value: "If this Boolean attribute is set, all form controls that are descendants of the `<fieldset>`, are disabled, meaning they are not editable and won't be submitted along with the `<form>`. They won't receive any browsing events, like mouse clicks or focus-related events. By default browsers display such controls grayed out. Note that form elements inside the [`<legend>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend \"The HTML <legend> element represents a caption for the content of its parent <fieldset>.\") element won't be disabled."}}, {name: "form", description: {kind: "markdown", value: 'This attribute takes the value of the `id` attribute of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form "The HTML <form> element represents a document section that contains interactive controls for submitting information to a web server.") element you want the `<fieldset>` to be part of, even if it is not inside the form.'}}, {name: "name", description: {kind: "markdown", value: 'The name associated with the group.\n\n**Note**: The caption for the fieldset is given by the first [`<legend>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend "The HTML <legend> element represents a caption for the content of its parent <fieldset>.") element nested inside it.'}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/fieldset"}]}, {name: "legend", description: {kind: "markdown", value: "The legend element represents a caption for the rest of the contents of the legend element's parent fieldset element, if any."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/legend"}]}, {name: "details", description: {kind: "markdown", value: "The details element represents a disclosure widget from which the user can obtain additional information or controls."}, attributes: [{name: "open", valueSet: "v", description: {kind: "markdown", value: "This Boolean attribute indicates whether or not the details \u2014 that is, the contents of the `<details>` element \u2014 are currently visible. The default, `false`, means the details are not visible."}}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/details"}]}, {name: "summary", description: {kind: "markdown", value: "The summary element represents a summary, caption, or legend for the rest of the contents of the summary element's parent details element, if any."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/summary"}]}, {name: "dialog", description: {kind: "markdown", value: "The dialog element represents a part of an application that a user interacts with to perform a task, for example a dialog box, inspector, or window."}, attributes: [{name: "open", description: "Indicates that the dialog is active and available for interaction. When the `open` attribute is not set, the dialog shouldn't be shown to the user."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/dialog"}]}, {name: "script", description: {kind: "markdown", value: "The script element allows authors to include dynamic script and data blocks in their documents. The element does not represent content for the user."}, attributes: [{name: "src", description: {kind: "markdown", value: "This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document.\n\nIf a `script` element has a `src` attribute specified, it should not have a script embedded inside its tags."}}, {name: "type", description: {kind: "markdown", value: 'This attribute indicates the type of script represented. The value of this attribute will be in one of the following categories:\n\n*   **Omitted or a JavaScript MIME type:** For HTML5-compliant browsers this indicates the script is JavaScript. HTML5 specification urges authors to omit the attribute rather than provide a redundant MIME type. In earlier browsers, this identified the scripting language of the embedded or imported (via the `src` attribute) code. JavaScript MIME types are [listed in the specification](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#JavaScript_types).\n*   **`module`:** For HTML5-compliant browsers the code is treated as a JavaScript module. The processing of the script contents is not affected by the `charset` and `defer` attributes. For information on using `module`, see [ES6 in Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/). Code may behave differently when the `module` keyword is used.\n*   **Any other value:** The embedded content is treated as a data block which won\'t be processed by the browser. Developers must use a valid MIME type that is not a JavaScript MIME type to denote data blocks. The `src` attribute will be ignored.\n\n**Note:** in Firefox you could specify the version of JavaScript contained in a `<script>` element by including a non-standard `version` parameter inside the `type` attribute \u2014 for example `type="text/javascript;version=1.8"`. This has been removed in Firefox 59 (see [bug\xA01428745](https://bugzilla.mozilla.org/show_bug.cgi?id=1428745 "FIXED: Remove support for version parameter from script loader")).'}}, {name: "charset"}, {name: "async", valueSet: "v", description: {kind: "markdown", value: 'This is a Boolean attribute indicating that the browser should, if possible, load the script asynchronously.\n\nThis attribute must not be used if the `src` attribute is absent (i.e. for inline scripts). If it is included in this case it will have no effect.\n\nBrowsers usually assume the worst case scenario and load scripts synchronously, (i.e. `async="false"`) during HTML parsing.\n\nDynamically inserted scripts (using [`document.createElement()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement "In an HTML document, the document.createElement() method creates the HTML element specified by tagName, or an HTMLUnknownElement if tagName isn\'t recognized.")) load asynchronously by default, so to turn on synchronous loading (i.e. scripts load in the order they were inserted) set `async="false"`.\n\nSee [Browser compatibility](#Browser_compatibility) for notes on browser support. See also [Async scripts for asm.js](https://developer.mozilla.org/en-US/docs/Games/Techniques/Async_scripts).'}}, {name: "defer", valueSet: "v", description: {kind: "markdown", value: 'This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing [`DOMContentLoaded`](https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded "/en-US/docs/Web/Events/DOMContentLoaded").\n\nScripts with the `defer` attribute will prevent the `DOMContentLoaded` event from firing until the script has loaded and finished evaluating.\n\nThis attribute must not be used if the `src` attribute is absent (i.e. for inline scripts), in this case it would have no effect.\n\nTo achieve a similar effect for dynamically inserted scripts use `async="false"` instead. Scripts with the `defer` attribute will execute in the order in which they appear in the document.'}}, {name: "crossorigin", valueSet: "xo", description: {kind: "markdown", value: 'Normal `script` elements pass minimal information to the [`window.onerror`](https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror "The onerror property of the GlobalEventHandlers mixin is an EventHandler that processes error events.") for scripts which do not pass the standard [CORS](https://developer.mozilla.org/en-US/docs/Glossary/CORS "CORS: CORS (Cross-Origin Resource Sharing) is a system, consisting of transmitting HTTP headers, that determines whether browsers block frontend JavaScript code from accessing responses for cross-origin requests.") checks. To allow error logging for sites which use a separate domain for static media, use this attribute. See [CORS settings attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes) for a more descriptive explanation of its valid arguments.'}}, {name: "nonce", description: {kind: "markdown", value: "A cryptographic nonce (number used once) to whitelist inline scripts in a [script-src Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial."}}, {name: "integrity", description: "This attribute contains inline metadata that a user agent can use to verify that a fetched resource has been delivered free of unexpected manipulation. See [Subresource Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)."}, {name: "nomodule", description: "This Boolean attribute is set to indicate that the script should not be executed in browsers that support [ES2015 modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/) \u2014 in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code."}, {name: "referrerpolicy", description: 'Indicates which [referrer](https://developer.mozilla.org/en-US/docs/Web/API/Document/referrer) to send when fetching the script, or resources fetched by the script:\n\n*   `no-referrer`: The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent.\n*   `no-referrer-when-downgrade` (default): The [`Referer`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer "The Referer request header contains the address of the previous web page from which a link to the currently requested page was followed. The Referer header allows servers to identify where people are visiting them from and may use that data for analytics, logging, or optimized caching, for example.") header will not be sent to [origin](https://developer.mozilla.org/en-US/docs/Glossary/origin "origin: Web content\'s origin is defined by the scheme (protocol), host (domain), and port of the URL used to access it. Two objects have the same origin only when the scheme, host, and port all match.")s without [TLS](https://developer.mozilla.org/en-US/docs/Glossary/TLS "TLS: Transport Layer Security (TLS), previously known as Secure Sockets Layer (SSL), is a protocol used by applications to communicate securely across a network, preventing tampering with and eavesdropping on email, web browsing, messaging, and other protocols.") ([HTTPS](https://developer.mozilla.org/en-US/docs/Glossary/HTTPS "HTTPS: HTTPS (HTTP Secure) is an encrypted version of the HTTP protocol. It usually uses SSL or TLS to encrypt all communication between a client and a server. This secure connection allows clients to safely exchange sensitive data with a server, for example for banking activities or online shopping.")).\n*   `origin`: The sent referrer will be limited to the origin of the referring page: its [scheme](https://developer.mozilla.org/en-US/docs/Archive/Mozilla/URIScheme), [host](https://developer.mozilla.org/en-US/docs/Glossary/host "host: A host is a device connected to the Internet (or a local network). Some hosts called servers offer additional services like serving webpages or storing files and emails."), and [port](https://developer.mozilla.org/en-US/docs/Glossary/port "port: For a computer connected to a network with an IP address, a port is a communication endpoint. Ports are designated by numbers, and below 1024 each port is associated by default with a specific protocol.").\n*   `origin-when-cross-origin`: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.\n*   `same-origin`: A referrer will be sent for [same origin](https://developer.mozilla.org/en-US/docs/Glossary/Same-origin_policy "same origin: The same-origin policy is a critical security mechanism that restricts how a document or script loaded from one origin can interact with a resource from another origin."), but cross-origin requests will contain no referrer information.\n*   `strict-origin`: Only send the origin of the document as the referrer when the protocol security level stays the same (e.g. HTTPS\u2192HTTPS), but don\'t send it to a less secure destination (e.g. HTTPS\u2192HTTP).\n*   `strict-origin-when-cross-origin`: Send a full URL when performing a same-origin request, but only send the origin when the protocol security level stays the same (e.g.HTTPS\u2192HTTPS), and send no header to a less secure destination (e.g. HTTPS\u2192HTTP).\n*   `unsafe-url`: The referrer will include the origin _and_ the path (but not the [fragment](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash), [password](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password), or [username](https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username)). **This value is unsafe**, because it leaks origins and paths from TLS-protected resources to insecure origins.\n\n**Note**: An empty string value (`""`) is both the default value, and a fallback value if `referrerpolicy` is not supported. If `referrerpolicy` is not explicitly specified on the `<script>` element, it will adopt a higher-level referrer policy, i.e. one set on the whole document or domain. If a higher-level policy is not available,\xA0the empty string is treated as being equivalent to `no-referrer-when-downgrade`.'}, {name: "text", description: "Like the `textContent` attribute, this attribute sets the text content of the element. Unlike the `textContent` attribute, however, this attribute is evaluated as executable code after the node is inserted into the DOM."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/script"}]}, {name: "noscript", description: {kind: "markdown", value: "The noscript element represents nothing if scripting is enabled, and represents its children if scripting is disabled. It is used to present different markup to user agents that support scripting and those that don't support scripting, by affecting how the document is parsed."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/noscript"}]}, {name: "template", description: {kind: "markdown", value: "The template element is used to declare fragments of HTML that can be cloned and inserted in the document by script."}, attributes: [], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/template"}]}, {name: "canvas", description: {kind: "markdown", value: "The canvas element provides scripts with a resolution-dependent bitmap canvas, which can be used for rendering graphs, game graphics, art, or other visual images on the fly."}, attributes: [{name: "width", description: {kind: "markdown", value: "The width of the coordinate space in CSS pixels. Defaults to 300."}}, {name: "height", description: {kind: "markdown", value: "The height of the coordinate space in CSS pixels. Defaults to 150."}}, {name: "moz-opaque", description: "Lets the canvas know whether or not translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized. This is only supported by Mozilla-based browsers; use the standardized [`canvas.getContext('2d', { alpha: false })`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext \"The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported.\") instead."}], references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Element/canvas"}]}], globalAttributes: [{name: "accesskey", description: {kind: "markdown", value: "Provides a hint for generating a keyboard shortcut for the current element. This attribute consists of a space-separated list of characters. The browser should use the first one that exists on the computer keyboard layout."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/accesskey"}]}, {name: "autocapitalize", description: {kind: "markdown", value: "Controls whether and how text input is automatically capitalized as it is entered/edited by the user. It can have the following values:\n\n*   `off` or `none`, no autocapitalization is applied (all letters default to lowercase)\n*   `on` or `sentences`, the first letter of each sentence defaults to a capital letter; all other letters default to lowercase\n*   `words`, the first letter of each word defaults to a capital letter; all other letters default to lowercase\n*   `characters`, all letters should default to uppercase"}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/autocapitalize"}]}, {name: "class", description: {kind: "markdown", value: 'A space-separated list of the classes of the element. Classes allows CSS and JavaScript to select and access specific elements via the [class selectors](/en-US/docs/Web/CSS/Class_selectors) or functions like the method [`Document.getElementsByClassName()`](/en-US/docs/Web/API/Document/getElementsByClassName "returns an array-like object of all child elements which have all of the given class names.").'}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/class"}]}, {name: "contenteditable", description: {kind: "markdown", value: "An enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing. The attribute must take one of the following values:\n\n*   `true` or the _empty string_, which indicates that the element must be editable;\n*   `false`, which indicates that the element must not be editable."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/contenteditable"}]}, {name: "contextmenu", description: {kind: "markdown", value: 'The `[**id**](#attr-id)` of a [`<menu>`](/en-US/docs/Web/HTML/Element/menu "The HTML <menu> element represents a group of commands that a user can perform or activate. This includes both list menus, which might appear across the top of a screen, as well as context menus, such as those that might appear underneath a button after it has been clicked.") to use as the contextual menu for this element.'}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/contextmenu"}]}, {name: "dir", description: {kind: "markdown", value: "An enumerated attribute indicating the directionality of the element's text. It can have the following values:\n\n*   `ltr`, which means _left to right_ and is to be used for languages that are written from the left to the right (like English);\n*   `rtl`, which means _right to left_ and is to be used for languages that are written from the right to the left (like Arabic);\n*   `auto`, which lets the user agent decide. It uses a basic algorithm as it parses the characters inside the element until it finds a character with a strong directionality, then it applies that directionality to the whole element."}, valueSet: "d", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/dir"}]}, {name: "draggable", description: {kind: "markdown", value: "An enumerated attribute indicating whether the element can be dragged, using the [Drag and Drop API](/en-us/docs/DragDrop/Drag_and_Drop). It can have the following values:\n\n*   `true`, which indicates that the element may be dragged\n*   `false`, which indicates that the element may not be dragged."}, valueSet: "b", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/draggable"}]}, {name: "dropzone", description: {kind: "markdown", value: "An enumerated attribute indicating what types of content can be dropped on an element, using the [Drag and Drop API](/en-US/docs/DragDrop/Drag_and_Drop). It can have the following values:\n\n*   `copy`, which indicates that dropping will create a copy of the element that was dragged\n*   `move`, which indicates that the element that was dragged will be moved to this new location.\n*   `link`, will create a link to the dragged data."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/dropzone"}]}, {name: "exportparts", description: {kind: "markdown", value: "Used to transitively export shadow parts from a nested shadow tree into a containing light tree."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/exportparts"}]}, {name: "hidden", description: {kind: "markdown", value: "A Boolean attribute indicates that the element is not yet, or is no longer, _relevant_. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. The browser won't render such elements. This attribute must not be used to hide content that could legitimately be shown."}, valueSet: "v", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/hidden"}]}, {name: "id", description: {kind: "markdown", value: "Defines a unique identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS)."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/id"}]}, {name: "inputmode", description: {kind: "markdown", value: 'Provides a hint to browsers as to the type of virtual keyboard configuration to use when editing this element or its contents. Used primarily on [`<input>`](/en-US/docs/Web/HTML/Element/input "The HTML <input> element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent.") elements, but is usable on any element while in `[contenteditable](/en-US/docs/Web/HTML/Global_attributes#attr-contenteditable)` mode.'}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/inputmode"}]}, {name: "is", description: {kind: "markdown", value: "Allows you to specify that a standard HTML element should behave like a registered custom built-in element (see [Using custom elements](/en-US/docs/Web/Web_Components/Using_custom_elements) for more details)."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/is"}]}, {name: "itemid", description: {kind: "markdown", value: "The unique, global identifier of an item."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemid"}]}, {name: "itemprop", description: {kind: "markdown", value: "Used to add properties to an item. Every HTML element may have an `itemprop` attribute specified, where an `itemprop` consists of a name and value pair."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemprop"}]}, {name: "itemref", description: {kind: "markdown", value: "Properties that are not descendants of an element with the `itemscope` attribute can be associated with the item using an `itemref`. It provides a list of element ids (not `itemid`s) with additional properties elsewhere in the document."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemref"}]}, {name: "itemscope", description: {kind: "markdown", value: "`itemscope` (usually) works along with `[itemtype](/en-US/docs/Web/HTML/Global_attributes#attr-itemtype)` to specify that the HTML contained in a block is about a particular item. `itemscope` creates the Item and defines the scope of the `itemtype` associated with it. `itemtype` is a valid URL of a vocabulary (such as [schema.org](https://schema.org/)) that describes the item and its properties context."}, valueSet: "v", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemscope"}]}, {name: "itemtype", description: {kind: "markdown", value: "Specifies the URL of the vocabulary that will be used to define `itemprop`s (item properties) in the data structure. `[itemscope](/en-US/docs/Web/HTML/Global_attributes#attr-itemscope)` is used to set the scope of where in the data structure the vocabulary set by `itemtype` will be active."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/itemtype"}]}, {name: "lang", description: {kind: "markdown", value: "Helps define the language of an element: the language that non-editable elements are in, or the language that editable elements should be written in by the user. The attribute contains one \u201Clanguage tag\u201D (made of hyphen-separated \u201Clanguage subtags\u201D) in the format defined in [_Tags for Identifying Languages (BCP47)_](https://www.ietf.org/rfc/bcp/bcp47.txt). [**xml:lang**](#attr-xml:lang) has priority over it."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/lang"}]}, {name: "part", description: {kind: "markdown", value: 'A space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the [`::part`](/en-US/docs/Web/CSS/::part "The ::part CSS pseudo-element represents any element within a shadow tree that has a matching part attribute.") pseudo-element.'}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/part"}]}, {name: "role", valueSet: "roles"}, {name: "slot", description: {kind: "markdown", value: "Assigns a slot in a [shadow DOM](/en-US/docs/Web/Web_Components/Shadow_DOM) shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the [`<slot>`](/en-US/docs/Web/HTML/Element/slot \"The HTML <slot> element\u2014part of the Web Components technology suite\u2014is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.\") element whose `[name](/en-US/docs/Web/HTML/Element/slot#attr-name)` attribute's value matches that `slot` attribute's value."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/slot"}]}, {name: "spellcheck", description: {kind: "markdown", value: "An enumerated attribute defines whether the element may be checked for spelling errors. It may have the following values:\n\n*   `true`, which indicates that the element should be, if possible, checked for spelling errors;\n*   `false`, which indicates that the element should not be checked for spelling errors."}, valueSet: "b", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/spellcheck"}]}, {name: "style", description: {kind: "markdown", value: 'Contains [CSS](/en-US/docs/Web/CSS) styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the [`<style>`](/en-US/docs/Web/HTML/Element/style "The HTML <style> element contains style information for a document, or part of a document.") element have mainly the purpose of allowing for quick styling, for example for testing purposes.'}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/style"}]}, {name: "tabindex", description: {kind: "markdown", value: "An integer attribute indicating if the element can take input focus (is _focusable_), if it should participate to sequential keyboard navigation, and if so, at what position. It can take several values:\n\n*   a _negative value_ means that the element should be focusable, but should not be reachable via sequential keyboard navigation;\n*   `0` means that the element should be focusable and reachable via sequential keyboard navigation, but its relative order is defined by the platform convention;\n*   a _positive value_ means that the element should be focusable and reachable via sequential keyboard navigation; the order in which the elements are focused is the increasing value of the [**tabindex**](#attr-tabindex). If several elements share the same tabindex, their relative order follows their relative positions in the document."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/tabindex"}]}, {name: "title", description: {kind: "markdown", value: "Contains a text representing advisory information related to the element it belongs to. Such information can typically, but not necessarily, be presented to the user as a tooltip."}, references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/title"}]}, {name: "translate", description: {kind: "markdown", value: "An enumerated attribute that is used to specify whether an element's attribute values and the values of its [`Text`](/en-US/docs/Web/API/Text \"The Text interface represents the textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element's text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children.\") node children are to be translated when the page is localized, or whether to leave them unchanged. It can have the following values:\n\n*   empty string and `yes`, which indicates that the element will be translated.\n*   `no`, which indicates that the element will not be translated."}, valueSet: "y", references: [{name: "MDN Reference", url: "https://developer.mozilla.org/docs/Web/HTML/Global_attributes/translate"}]}, {name: "onabort", description: {kind: "markdown", value: "The loading of a resource has been aborted."}}, {name: "onblur", description: {kind: "markdown", value: "An element has lost focus (does not bubble)."}}, {name: "oncanplay", description: {kind: "markdown", value: "The user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content."}}, {name: "oncanplaythrough", description: {kind: "markdown", value: "The user agent can play the media up to its end without having to stop for further buffering of content."}}, {name: "onchange", description: {kind: "markdown", value: "The change event is fired for <input>, <select>, and <textarea> elements when a change to the element's value is committed by the user."}}, {name: "onclick", description: {kind: "markdown", value: "A pointing device button has been pressed and released on an element."}}, {name: "oncontextmenu", description: {kind: "markdown", value: "The right button of the mouse is clicked (before the context menu is displayed)."}}, {name: "ondblclick", description: {kind: "markdown", value: "A pointing device button is clicked twice on an element."}}, {name: "ondrag", description: {kind: "markdown", value: "An element or text selection is being dragged (every 350ms)."}}, {name: "ondragend", description: {kind: "markdown", value: "A drag operation is being ended (by releasing a mouse button or hitting the escape key)."}}, {name: "ondragenter", description: {kind: "markdown", value: "A dragged element or text selection enters a valid drop target."}}, {name: "ondragleave", description: {kind: "markdown", value: "A dragged element or text selection leaves a valid drop target."}}, {name: "ondragover", description: {kind: "markdown", value: "An element or text selection is being dragged over a valid drop target (every 350ms)."}}, {name: "ondragstart", description: {kind: "markdown", value: "The user starts dragging an element or text selection."}}, {name: "ondrop", description: {kind: "markdown", value: "An element is dropped on a valid drop target."}}, {name: "ondurationchange", description: {kind: "markdown", value: "The duration attribute has been updated."}}, {name: "onemptied", description: {kind: "markdown", value: "The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it."}}, {name: "onended", description: {kind: "markdown", value: "Playback has stopped because the end of the media was reached."}}, {name: "onerror", description: {kind: "markdown", value: "A resource failed to load."}}, {name: "onfocus", description: {kind: "markdown", value: "An element has received focus (does not bubble)."}}, {name: "onformchange"}, {name: "onforminput"}, {name: "oninput", description: {kind: "markdown", value: "The value of an element changes or the content of an element with the attribute contenteditable is modified."}}, {name: "oninvalid", description: {kind: "markdown", value: "A submittable element has been checked and doesn't satisfy its constraints."}}, {name: "onkeydown", description: {kind: "markdown", value: "A key is pressed down."}}, {name: "onkeypress", description: {kind: "markdown", value: "A key is pressed down and that key normally produces a character value (use input instead)."}}, {name: "onkeyup", description: {kind: "markdown", value: "A key is released."}}, {name: "onload", description: {kind: "markdown", value: "A resource and its dependent resources have finished loading."}}, {name: "onloadeddata", description: {kind: "markdown", value: "The first frame of the media has finished loading."}}, {name: "onloadedmetadata", description: {kind: "markdown", value: "The metadata has been loaded."}}, {name: "onloadstart", description: {kind: "markdown", value: "Progress has begun."}}, {name: "onmousedown", description: {kind: "markdown", value: "A pointing device button (usually a mouse) is pressed on an element."}}, {name: "onmousemove", description: {kind: "markdown", value: "A pointing device is moved over an element."}}, {name: "onmouseout", description: {kind: "markdown", value: "A pointing device is moved off the element that has the listener attached or off one of its children."}}, {name: "onmouseover", description: {kind: "markdown", value: "A pointing device is moved onto the element that has the listener attached or onto one of its children."}}, {name: "onmouseup", description: {kind: "markdown", value: "A pointing device button is released over an element."}}, {name: "onmousewheel"}, {name: "onpause", description: {kind: "markdown", value: "Playback has been paused."}}, {name: "onplay", description: {kind: "markdown", value: "Playback has begun."}}, {name: "onplaying", description: {kind: "markdown", value: "Playback is ready to start after having been paused or delayed due to lack of data."}}, {name: "onprogress", description: {kind: "markdown", value: "In progress."}}, {name: "onratechange", description: {kind: "markdown", value: "The playback rate has changed."}}, {name: "onreset", description: {kind: "markdown", value: "A form is reset."}}, {name: "onresize", description: {kind: "markdown", value: "The document view has been resized."}}, {name: "onreadystatechange", description: {kind: "markdown", value: "The readyState attribute of a document has changed."}}, {name: "onscroll", description: {kind: "markdown", value: "The document view or an element has been scrolled."}}, {name: "onseeked", description: {kind: "markdown", value: "A seek operation completed."}}, {name: "onseeking", description: {kind: "markdown", value: "A seek operation began."}}, {name: "onselect", description: {kind: "markdown", value: "Some text is being selected."}}, {name: "onshow", description: {kind: "markdown", value: "A contextmenu event was fired on/bubbled to an element that has a contextmenu attribute"}}, {name: "onstalled", description: {kind: "markdown", value: "The user agent is trying to fetch media data, but data is unexpectedly not forthcoming."}}, {name: "onsubmit", description: {kind: "markdown", value: "A form is submitted."}}, {name: "onsuspend", description: {kind: "markdown", value: "Media data loading has been suspended."}}, {name: "ontimeupdate", description: {kind: "markdown", value: "The time indicated by the currentTime attribute has been updated."}}, {name: "onvolumechange", description: {kind: "markdown", value: "The volume has changed."}}, {name: "onwaiting", description: {kind: "markdown", value: "Playback has stopped because of a temporary lack of data."}}, {name: "aria-activedescendant", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-activedescendant"}], description: {kind: "markdown", value: "Identifies the currently active element when DOM focus is on a [`composite`](https://www.w3.org/TR/wai-aria-1.1/#composite) widget, [`textbox`](https://www.w3.org/TR/wai-aria-1.1/#textbox), [`group`](https://www.w3.org/TR/wai-aria-1.1/#group), or [`application`](https://www.w3.org/TR/wai-aria-1.1/#application)."}}, {name: "aria-atomic", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-atomic"}], description: {kind: "markdown", value: "Indicates whether [assistive technologies](https://www.w3.org/TR/wai-aria-1.1/#dfn-assistive-technology) will present all, or only parts of, the changed region based on the change notifications defined by the [`aria-relevant`](https://www.w3.org/TR/wai-aria-1.1/#aria-relevant) attribute."}}, {name: "aria-autocomplete", valueSet: "autocomplete", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-autocomplete"}], description: {kind: "markdown", value: "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be presented if they are made."}}, {name: "aria-busy", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-busy"}], description: {kind: "markdown", value: "Indicates an element is being modified and that assistive technologies _MAY_ want to wait until the modifications are complete before exposing them to the user."}}, {name: "aria-checked", valueSet: "tristate", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-checked"}], description: {kind: "markdown", value: 'Indicates the current "checked" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of checkboxes, radio buttons, and other [widgets](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-pressed`](https://www.w3.org/TR/wai-aria-1.1/#aria-pressed) and [`aria-selected`](https://www.w3.org/TR/wai-aria-1.1/#aria-selected).'}}, {name: "aria-colcount", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-colcount"}], description: {kind: "markdown", value: "Defines the total number of columns in a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-colindex)."}}, {name: "aria-colindex", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-colindex"}], description: {kind: "markdown", value: "Defines an [element's](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) column index or position with respect to the total number of columns within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colcount`](https://www.w3.org/TR/wai-aria-1.1/#aria-colcount) and [`aria-colspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-colspan)."}}, {name: "aria-colspan", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-colspan"}], description: {kind: "markdown", value: "Defines the number of columns spanned by a cell or gridcell within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-colindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-colindex) and [`aria-rowspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan)."}}, {name: "aria-controls", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-controls"}], description: {kind: "markdown", value: "Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) whose contents or presence are controlled by the current element. See related [`aria-owns`](https://www.w3.org/TR/wai-aria-1.1/#aria-owns)."}}, {name: "aria-current", valueSet: "current", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-current"}], description: {kind: "markdown", value: "Indicates the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that represents the current item within a container or set of related elements."}}, {name: "aria-describedat", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-describedat"}]}, {name: "aria-describedby", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-describedby"}], description: {kind: "markdown", value: "Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) that describes the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-labelledby`](https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby)."}}, {name: "aria-disabled", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-disabled"}], description: {kind: "markdown", value: "Indicates that the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is [perceivable](https://www.w3.org/TR/wai-aria-1.1/#dfn-perceivable) but disabled, so it is not editable or otherwise [operable](https://www.w3.org/TR/wai-aria-1.1/#dfn-operable). See related [`aria-hidden`](https://www.w3.org/TR/wai-aria-1.1/#aria-hidden) and [`aria-readonly`](https://www.w3.org/TR/wai-aria-1.1/#aria-readonly)."}}, {name: "aria-dropeffect", valueSet: "dropeffect", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-dropeffect"}], description: {kind: "markdown", value: "\\[Deprecated in ARIA 1.1\\] Indicates what functions can be performed when a dragged object is released on the drop target."}}, {name: "aria-errormessage", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-errormessage"}], description: {kind: "markdown", value: "Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that provides an error message for the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-invalid`](https://www.w3.org/TR/wai-aria-1.1/#aria-invalid) and [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}}, {name: "aria-expanded", valueSet: "u", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-expanded"}], description: {kind: "markdown", value: "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."}}, {name: "aria-flowto", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-flowto"}], description: {kind: "markdown", value: "Identifies the next [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) in an alternate reading order of content which, at the user's discretion, allows assistive technology to override the general default of reading in document source order."}}, {name: "aria-grabbed", valueSet: "u", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-grabbed"}], description: {kind: "markdown", value: `\\[Deprecated in ARIA 1.1\\] Indicates an element's "grabbed" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) in a drag-and-drop operation.`}}, {name: "aria-haspopup", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup"}], description: {kind: "markdown", value: "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)."}}, {name: "aria-hidden", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-hidden"}], description: {kind: "markdown", value: "Indicates whether the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is exposed to an accessibility API. See related [`aria-disabled`](https://www.w3.org/TR/wai-aria-1.1/#aria-disabled)."}}, {name: "aria-invalid", valueSet: "invalid", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-invalid"}], description: {kind: "markdown", value: "Indicates the entered value does not conform to the format expected by the application. See related [`aria-errormessage`](https://www.w3.org/TR/wai-aria-1.1/#aria-errormessage)."}}, {name: "aria-kbdshortcuts", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-kbdshortcuts"}]}, {name: "aria-label", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-label"}], description: {kind: "markdown", value: "Defines a string value that labels the current element. See related [`aria-labelledby`](https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby)."}}, {name: "aria-labelledby", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby"}], description: {kind: "markdown", value: "Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) that labels the current element. See related [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}}, {name: "aria-level", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-level"}], description: {kind: "markdown", value: "Defines the hierarchical level of an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) within a structure."}}, {name: "aria-live", valueSet: "live", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-live"}], description: {kind: "markdown", value: "Indicates that an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) will be updated, and describes the types of updates the [user agents](https://www.w3.org/TR/wai-aria-1.1/#dfn-user-agent), [assistive technologies](https://www.w3.org/TR/wai-aria-1.1/#dfn-assistive-technology), and user can expect from the [live region](https://www.w3.org/TR/wai-aria-1.1/#dfn-live-region)."}}, {name: "aria-modal", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-modal"}], description: {kind: "markdown", value: "Indicates whether an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is modal when displayed."}}, {name: "aria-multiline", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-multiline"}], description: {kind: "markdown", value: "Indicates whether a text box accepts multiple lines of input or only a single line."}}, {name: "aria-multiselectable", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-multiselectable"}], description: {kind: "markdown", value: "Indicates that the user may select more than one item from the current selectable descendants."}}, {name: "aria-orientation", valueSet: "orientation", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-orientation"}], description: {kind: "markdown", value: "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."}}, {name: "aria-owns", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-owns"}], description: {kind: "markdown", value: "Identifies an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) (or elements) in order to define a visual, functional, or contextual parent/child [relationship](https://www.w3.org/TR/wai-aria-1.1/#dfn-relationship) between DOM elements where the DOM hierarchy cannot be used to represent the relationship. See related [`aria-controls`](https://www.w3.org/TR/wai-aria-1.1/#aria-controls)."}}, {name: "aria-placeholder", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-placeholder"}], description: {kind: "markdown", value: "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value. A hint could be a sample value or a brief description of the expected format."}}, {name: "aria-posinset", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-posinset"}], description: {kind: "markdown", value: "Defines an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)'s number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related [`aria-setsize`](https://www.w3.org/TR/wai-aria-1.1/#aria-setsize)."}}, {name: "aria-pressed", valueSet: "tristate", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-pressed"}], description: {kind: "markdown", value: 'Indicates the current "pressed" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of toggle buttons. See related [`aria-checked`](https://www.w3.org/TR/wai-aria-1.1/#aria-checked) and [`aria-selected`](https://www.w3.org/TR/wai-aria-1.1/#aria-selected).'}}, {name: "aria-readonly", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-readonly"}], description: {kind: "markdown", value: "Indicates that the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) is not editable, but is otherwise [operable](https://www.w3.org/TR/wai-aria-1.1/#dfn-operable). See related [`aria-disabled`](https://www.w3.org/TR/wai-aria-1.1/#aria-disabled)."}}, {name: "aria-relevant", valueSet: "relevant", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-relevant"}], description: {kind: "markdown", value: "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. See related [`aria-atomic`](https://www.w3.org/TR/wai-aria-1.1/#aria-atomic)."}}, {name: "aria-required", valueSet: "b", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-required"}], description: {kind: "markdown", value: "Indicates that user input is required on the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) before a form may be submitted."}}, {name: "aria-roledescription", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-roledescription"}], description: {kind: "markdown", value: "Defines a human-readable, author-localized description for the [role](https://www.w3.org/TR/wai-aria-1.1/#dfn-role) of an [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element)."}}, {name: "aria-rowcount", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-rowcount"}], description: {kind: "markdown", value: "Defines the total number of rows in a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex)."}}, {name: "aria-rowindex", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex"}], description: {kind: "markdown", value: "Defines an [element's](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) row index or position with respect to the total number of rows within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowcount`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowcount) and [`aria-rowspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan)."}}, {name: "aria-rowspan", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-rowspan"}], description: {kind: "markdown", value: "Defines the number of rows spanned by a cell or gridcell within a [`table`](https://www.w3.org/TR/wai-aria-1.1/#table), [`grid`](https://www.w3.org/TR/wai-aria-1.1/#grid), or [`treegrid`](https://www.w3.org/TR/wai-aria-1.1/#treegrid). See related [`aria-rowindex`](https://www.w3.org/TR/wai-aria-1.1/#aria-rowindex) and [`aria-colspan`](https://www.w3.org/TR/wai-aria-1.1/#aria-colspan)."}}, {name: "aria-selected", valueSet: "u", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-selected"}], description: {kind: "markdown", value: 'Indicates the current "selected" [state](https://www.w3.org/TR/wai-aria-1.1/#dfn-state) of various [widgets](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-checked`](https://www.w3.org/TR/wai-aria-1.1/#aria-checked) and [`aria-pressed`](https://www.w3.org/TR/wai-aria-1.1/#aria-pressed).'}}, {name: "aria-setsize", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-setsize"}], description: {kind: "markdown", value: "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM. See related [`aria-posinset`](https://www.w3.org/TR/wai-aria-1.1/#aria-posinset)."}}, {name: "aria-sort", valueSet: "sort", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-sort"}], description: {kind: "markdown", value: "Indicates if items in a table or grid are sorted in ascending or descending order."}}, {name: "aria-valuemax", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-valuemax"}], description: {kind: "markdown", value: "Defines the maximum allowed value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}}, {name: "aria-valuemin", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-valuemin"}], description: {kind: "markdown", value: "Defines the minimum allowed value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}}, {name: "aria-valuenow", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-valuenow"}], description: {kind: "markdown", value: "Defines the current value for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget). See related [`aria-valuetext`](https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext)."}}, {name: "aria-valuetext", references: [{name: "WAI-ARIA Reference", url: "https://www.w3.org/TR/wai-aria-1.1/#aria-valuetext"}], description: {kind: "markdown", value: "Defines the human readable text alternative of [`aria-valuenow`](https://www.w3.org/TR/wai-aria-1.1/#aria-valuenow) for a range [widget](https://www.w3.org/TR/wai-aria-1.1/#dfn-widget)."}}, {name: "aria-details", description: {kind: "markdown", value: "Identifies the [element](https://www.w3.org/TR/wai-aria-1.1/#dfn-element) that provides a detailed, extended description for the [object](https://www.w3.org/TR/wai-aria-1.1/#dfn-object). See related [`aria-describedby`](https://www.w3.org/TR/wai-aria-1.1/#aria-describedby)."}}, {name: "aria-keyshortcuts", description: {kind: "markdown", value: "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."}}], valueSets: [{name: "b", values: [{name: "true"}, {name: "false"}]}, {name: "u", values: [{name: "true"}, {name: "false"}, {name: "undefined"}]}, {name: "o", values: [{name: "on"}, {name: "off"}]}, {name: "y", values: [{name: "yes"}, {name: "no"}]}, {name: "w", values: [{name: "soft"}, {name: "hard"}]}, {name: "d", values: [{name: "ltr"}, {name: "rtl"}, {name: "auto"}]}, {name: "m", values: [{name: "GET", description: {kind: "markdown", value: "Corresponds to the HTTP [GET method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3); form data are appended to the `action` attribute URI with a '?' as separator, and the resulting URI is sent to the server. Use this method when the form has no side-effects and contains only ASCII characters."}}, {name: "POST", description: {kind: "markdown", value: "Corresponds to the HTTP [POST method](https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5); form data are included in the body of the form and sent to the server."}}, {name: "dialog", description: {kind: "markdown", value: "Use when the form is inside a [`<dialog>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog) element to close the dialog when submitted."}}]}, {name: "fm", values: [{name: "GET"}, {name: "POST"}]}, {name: "s", values: [{name: "row"}, {name: "col"}, {name: "rowgroup"}, {name: "colgroup"}]}, {name: "t", values: [{name: "hidden"}, {name: "text"}, {name: "search"}, {name: "tel"}, {name: "url"}, {name: "email"}, {name: "password"}, {name: "datetime"}, {name: "date"}, {name: "month"}, {name: "week"}, {name: "time"}, {name: "datetime-local"}, {name: "number"}, {name: "range"}, {name: "color"}, {name: "checkbox"}, {name: "radio"}, {name: "file"}, {name: "submit"}, {name: "image"}, {name: "reset"}, {name: "button"}]}, {name: "im", values: [{name: "verbatim"}, {name: "latin"}, {name: "latin-name"}, {name: "latin-prose"}, {name: "full-width-latin"}, {name: "kana"}, {name: "kana-name"}, {name: "katakana"}, {name: "numeric"}, {name: "tel"}, {name: "email"}, {name: "url"}]}, {name: "bt", values: [{name: "button"}, {name: "submit"}, {name: "reset"}, {name: "menu"}]}, {name: "lt", values: [{name: "1"}, {name: "a"}, {name: "A"}, {name: "i"}, {name: "I"}]}, {name: "mt", values: [{name: "context"}, {name: "toolbar"}]}, {name: "mit", values: [{name: "command"}, {name: "checkbox"}, {name: "radio"}]}, {name: "et", values: [{name: "application/x-www-form-urlencoded"}, {name: "multipart/form-data"}, {name: "text/plain"}]}, {name: "tk", values: [{name: "subtitles"}, {name: "captions"}, {name: "descriptions"}, {name: "chapters"}, {name: "metadata"}]}, {name: "pl", values: [{name: "none"}, {name: "metadata"}, {name: "auto"}]}, {name: "sh", values: [{name: "circle"}, {name: "default"}, {name: "poly"}, {name: "rect"}]}, {name: "xo", values: [{name: "anonymous"}, {name: "use-credentials"}]}, {name: "sb", values: [{name: "allow-forms"}, {name: "allow-modals"}, {name: "allow-pointer-lock"}, {name: "allow-popups"}, {name: "allow-popups-to-escape-sandbox"}, {name: "allow-same-origin"}, {name: "allow-scripts"}, {name: "allow-top-navigation"}]}, {name: "tristate", values: [{name: "true"}, {name: "false"}, {name: "mixed"}, {name: "undefined"}]}, {name: "inputautocomplete", values: [{name: "additional-name"}, {name: "address-level1"}, {name: "address-level2"}, {name: "address-level3"}, {name: "address-level4"}, {name: "address-line1"}, {name: "address-line2"}, {name: "address-line3"}, {name: "bday"}, {name: "bday-year"}, {name: "bday-day"}, {name: "bday-month"}, {name: "billing"}, {name: "cc-additional-name"}, {name: "cc-csc"}, {name: "cc-exp"}, {name: "cc-exp-month"}, {name: "cc-exp-year"}, {name: "cc-family-name"}, {name: "cc-given-name"}, {name: "cc-name"}, {name: "cc-number"}, {name: "cc-type"}, {name: "country"}, {name: "country-name"}, {name: "current-password"}, {name: "email"}, {name: "family-name"}, {name: "fax"}, {name: "given-name"}, {name: "home"}, {name: "honorific-prefix"}, {name: "honorific-suffix"}, {name: "impp"}, {name: "language"}, {name: "mobile"}, {name: "name"}, {name: "new-password"}, {name: "nickname"}, {name: "organization"}, {name: "organization-title"}, {name: "pager"}, {name: "photo"}, {name: "postal-code"}, {name: "sex"}, {name: "shipping"}, {name: "street-address"}, {name: "tel-area-code"}, {name: "tel"}, {name: "tel-country-code"}, {name: "tel-extension"}, {name: "tel-local"}, {name: "tel-local-prefix"}, {name: "tel-local-suffix"}, {name: "tel-national"}, {name: "transaction-amount"}, {name: "transaction-currency"}, {name: "url"}, {name: "username"}, {name: "work"}]}, {name: "autocomplete", values: [{name: "inline"}, {name: "list"}, {name: "both"}, {name: "none"}]}, {name: "current", values: [{name: "page"}, {name: "step"}, {name: "location"}, {name: "date"}, {name: "time"}, {name: "true"}, {name: "false"}]}, {name: "dropeffect", values: [{name: "copy"}, {name: "move"}, {name: "link"}, {name: "execute"}, {name: "popup"}, {name: "none"}]}, {name: "invalid", values: [{name: "grammar"}, {name: "false"}, {name: "spelling"}, {name: "true"}]}, {name: "live", values: [{name: "off"}, {name: "polite"}, {name: "assertive"}]}, {name: "orientation", values: [{name: "vertical"}, {name: "horizontal"}, {name: "undefined"}]}, {name: "relevant", values: [{name: "additions"}, {name: "removals"}, {name: "text"}, {name: "all"}, {name: "additions text"}]}, {name: "sort", values: [{name: "ascending"}, {name: "descending"}, {name: "none"}, {name: "other"}]}, {name: "roles", values: [{name: "alert"}, {name: "alertdialog"}, {name: "button"}, {name: "checkbox"}, {name: "dialog"}, {name: "gridcell"}, {name: "link"}, {name: "log"}, {name: "marquee"}, {name: "menuitem"}, {name: "menuitemcheckbox"}, {name: "menuitemradio"}, {name: "option"}, {name: "progressbar"}, {name: "radio"}, {name: "scrollbar"}, {name: "searchbox"}, {name: "slider"}, {name: "spinbutton"}, {name: "status"}, {name: "switch"}, {name: "tab"}, {name: "tabpanel"}, {name: "textbox"}, {name: "timer"}, {name: "tooltip"}, {name: "treeitem"}, {name: "combobox"}, {name: "grid"}, {name: "listbox"}, {name: "menu"}, {name: "menubar"}, {name: "radiogroup"}, {name: "tablist"}, {name: "tree"}, {name: "treegrid"}, {name: "application"}, {name: "article"}, {name: "cell"}, {name: "columnheader"}, {name: "definition"}, {name: "directory"}, {name: "document"}, {name: "feed"}, {name: "figure"}, {name: "group"}, {name: "heading"}, {name: "img"}, {name: "list"}, {name: "listitem"}, {name: "math"}, {name: "none"}, {name: "note"}, {name: "presentation"}, {name: "region"}, {name: "row"}, {name: "rowgroup"}, {name: "rowheader"}, {name: "separator"}, {name: "table"}, {name: "term"}, {name: "text"}, {name: "toolbar"}, {name: "banner"}, {name: "complementary"}, {name: "contentinfo"}, {name: "form"}, {name: "main"}, {name: "navigation"}, {name: "region"}, {name: "search"}, {name: "doc-abstract"}, {name: "doc-acknowledgments"}, {name: "doc-afterword"}, {name: "doc-appendix"}, {name: "doc-backlink"}, {name: "doc-biblioentry"}, {name: "doc-bibliography"}, {name: "doc-biblioref"}, {name: "doc-chapter"}, {name: "doc-colophon"}, {name: "doc-conclusion"}, {name: "doc-cover"}, {name: "doc-credit"}, {name: "doc-credits"}, {name: "doc-dedication"}, {name: "doc-endnote"}, {name: "doc-endnotes"}, {name: "doc-epigraph"}, {name: "doc-epilogue"}, {name: "doc-errata"}, {name: "doc-example"}, {name: "doc-footnote"}, {name: "doc-foreword"}, {name: "doc-glossary"}, {name: "doc-glossref"}, {name: "doc-index"}, {name: "doc-introduction"}, {name: "doc-noteref"}, {name: "doc-notice"}, {name: "doc-pagebreak"}, {name: "doc-pagelist"}, {name: "doc-part"}, {name: "doc-preface"}, {name: "doc-prologue"}, {name: "doc-pullquote"}, {name: "doc-qna"}, {name: "doc-subtitle"}, {name: "doc-tip"}, {name: "doc-toc"}]}, {name: "metanames", values: [{name: "application-name"}, {name: "author"}, {name: "description"}, {name: "format-detection"}, {name: "generator"}, {name: "keywords"}, {name: "publisher"}, {name: "referrer"}, {name: "robots"}, {name: "theme-color"}, {name: "viewport"}]}]}, At = function() {
    function e2(e3) {
      this.dataProviders = [], this.setDataProviders(e3.useDefaultDataProvider !== false, e3.customDataProviders || []);
    }
    return e2.prototype.setDataProviders = function(e3, t2) {
      var n2;
      this.dataProviders = [], e3 && this.dataProviders.push(new Ke("html5", Ot)), (n2 = this.dataProviders).push.apply(n2, t2);
    }, e2.prototype.getDataProviders = function() {
      return this.dataProviders;
    }, e2;
  }(), Rt = {};
  function Mt(e2) {
    e2 === void 0 && (e2 = Rt);
    var t2 = new At(e2), n2 = new lt(e2, t2), i2 = new ot(e2, t2);
    return {setDataProviders: t2.setDataProviders.bind(t2), createScanner: Ie, parseHTMLDocument: function(e3) {
      return Me(e3.getText());
    }, doComplete: i2.doComplete.bind(i2), doComplete2: i2.doComplete2.bind(i2), setCompletionParticipants: i2.setCompletionParticipants.bind(i2), doHover: n2.doHover.bind(n2), format: ut, findDocumentHighlights: yt, findDocumentLinks: wt, findDocumentSymbols: kt, getFoldingRanges: Nt, getSelectionRanges: It, doTagComplete: i2.doTagComplete.bind(i2), doRename: Et, findMatchingTagPosition: Tt, findOnTypeRenameRanges: Lt};
  }
}, function(e, t, n) {
  "use strict";
  var i, r = function() {
    return i === void 0 && (i = Boolean(window && document && document.all && !window.atob)), i;
  }, o = function() {
    var e2 = {};
    return function(t2) {
      if (e2[t2] === void 0) {
        var n2 = document.querySelector(t2);
        if (window.HTMLIFrameElement && n2 instanceof window.HTMLIFrameElement)
          try {
            n2 = n2.contentDocument.head;
          } catch (e3) {
            n2 = null;
          }
        e2[t2] = n2;
      }
      return e2[t2];
    };
  }(), s = [];
  function a(e2) {
    for (var t2 = -1, n2 = 0; n2 < s.length; n2++)
      if (s[n2].identifier === e2) {
        t2 = n2;
        break;
      }
    return t2;
  }
  function l(e2, t2) {
    for (var n2 = {}, i2 = [], r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2[r2], l2 = t2.base ? o2[0] + t2.base : o2[0], c2 = n2[l2] || 0, d2 = "".concat(l2, " ").concat(c2);
      n2[l2] = c2 + 1;
      var h2 = a(d2), u2 = {css: o2[1], media: o2[2], sourceMap: o2[3]};
      h2 !== -1 ? (s[h2].references++, s[h2].updater(u2)) : s.push({identifier: d2, updater: f(u2, t2), references: 1}), i2.push(d2);
    }
    return i2;
  }
  function c(e2) {
    var t2 = document.createElement("style"), i2 = e2.attributes || {};
    if (i2.nonce === void 0) {
      var r2 = n.nc;
      r2 && (i2.nonce = r2);
    }
    if (Object.keys(i2).forEach(function(e3) {
      t2.setAttribute(e3, i2[e3]);
    }), typeof e2.insert == "function")
      e2.insert(t2);
    else {
      var s2 = o(e2.insert || "head");
      if (!s2)
        throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
      s2.appendChild(t2);
    }
    return t2;
  }
  var d, h = (d = [], function(e2, t2) {
    return d[e2] = t2, d.filter(Boolean).join("\n");
  });
  function u(e2, t2, n2, i2) {
    var r2 = n2 ? "" : i2.media ? "@media ".concat(i2.media, " {").concat(i2.css, "}") : i2.css;
    if (e2.styleSheet)
      e2.styleSheet.cssText = h(t2, r2);
    else {
      var o2 = document.createTextNode(r2), s2 = e2.childNodes;
      s2[t2] && e2.removeChild(s2[t2]), s2.length ? e2.insertBefore(o2, s2[t2]) : e2.appendChild(o2);
    }
  }
  function p(e2, t2, n2) {
    var i2 = n2.css, r2 = n2.media, o2 = n2.sourceMap;
    if (r2 ? e2.setAttribute("media", r2) : e2.removeAttribute("media"), o2 && typeof btoa != "undefined" && (i2 += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o2)))), " */")), e2.styleSheet)
      e2.styleSheet.cssText = i2;
    else {
      for (; e2.firstChild; )
        e2.removeChild(e2.firstChild);
      e2.appendChild(document.createTextNode(i2));
    }
  }
  var m = null, g = 0;
  function f(e2, t2) {
    var n2, i2, r2;
    if (t2.singleton) {
      var o2 = g++;
      n2 = m || (m = c(t2)), i2 = u.bind(null, n2, o2, false), r2 = u.bind(null, n2, o2, true);
    } else
      n2 = c(t2), i2 = p.bind(null, n2, t2), r2 = function() {
        !function(e3) {
          if (e3.parentNode === null)
            return false;
          e3.parentNode.removeChild(e3);
        }(n2);
      };
    return i2(e2), function(t3) {
      if (t3) {
        if (t3.css === e2.css && t3.media === e2.media && t3.sourceMap === e2.sourceMap)
          return;
        i2(e2 = t3);
      } else
        r2();
    };
  }
  e.exports = function(e2, t2) {
    (t2 = t2 || {}).singleton || typeof t2.singleton == "boolean" || (t2.singleton = r());
    var n2 = l(e2 = e2 || [], t2);
    return function(e3) {
      if (e3 = e3 || [], Object.prototype.toString.call(e3) === "[object Array]") {
        for (var i2 = 0; i2 < n2.length; i2++) {
          var r2 = a(n2[i2]);
          s[r2].references--;
        }
        for (var o2 = l(e3, t2), c2 = 0; c2 < n2.length; c2++) {
          var d2 = a(n2[c2]);
          s[d2].references === 0 && (s[d2].updater(), s.splice(d2, 1));
        }
        n2 = o2;
      }
    };
  };
}, function(e, t, n) {
  "use strict";
  e.exports = function(e2) {
    var t2 = [];
    return t2.toString = function() {
      return this.map(function(t3) {
        var n2 = function(e3, t4) {
          var n3 = e3[1] || "", i = e3[3];
          if (!i)
            return n3;
          if (t4 && typeof btoa == "function") {
            var r = (s = i, a = btoa(unescape(encodeURIComponent(JSON.stringify(s)))), l = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a), "/*# ".concat(l, " */")), o = i.sources.map(function(e4) {
              return "/*# sourceURL=".concat(i.sourceRoot || "").concat(e4, " */");
            });
            return [n3].concat(o).concat([r]).join("\n");
          }
          var s, a, l;
          return [n3].join("\n");
        }(t3, e2);
        return t3[2] ? "@media ".concat(t3[2], " {").concat(n2, "}") : n2;
      }).join("");
    }, t2.i = function(e3, n2, i) {
      typeof e3 == "string" && (e3 = [[null, e3, ""]]);
      var r = {};
      if (i)
        for (var o = 0; o < this.length; o++) {
          var s = this[o][0];
          s != null && (r[s] = true);
        }
      for (var a = 0; a < e3.length; a++) {
        var l = [].concat(e3[a]);
        i && r[l[0]] || (n2 && (l[2] ? l[2] = "".concat(n2, " and ").concat(l[2]) : l[2] = n2), t2.push(l));
      }
    }, t2;
  };
}, function(e, t, n) {
  "use strict";
  n.d(t, "d", function() {
    return o;
  }), n.d(t, "b", function() {
    return s;
  }), n.d(t, "n", function() {
    return a;
  }), n.d(t, "c", function() {
    return l;
  }), n.d(t, "a", function() {
    return c;
  }), n.d(t, "f", function() {
    return h;
  }), n.d(t, "h", function() {
    return u;
  }), n.d(t, "l", function() {
    return p;
  }), n.d(t, "e", function() {
    return m;
  }), n.d(t, "j", function() {
    return g;
  }), n.d(t, "m", function() {
    return f;
  }), n.d(t, "i", function() {
    return b;
  }), n.d(t, "g", function() {
    return _;
  }), n.d(t, "k", function() {
    return v;
  });
  var i = n(6);
  class r {
    constructor() {
      this._zoomLevel = 0, this._lastZoomLevelChangeTime = 0, this._onDidChangeZoomLevel = new i.a(), this.onDidChangeZoomLevel = this._onDidChangeZoomLevel.event, this._zoomFactor = 1;
    }
    getZoomLevel() {
      return this._zoomLevel;
    }
    getTimeSinceLastZoomLevelChanged() {
      return Date.now() - this._lastZoomLevelChangeTime;
    }
    getZoomFactor() {
      return this._zoomFactor;
    }
    getPixelRatio() {
      let e2 = document.createElement("canvas").getContext("2d");
      return (window.devicePixelRatio || 1) / (e2.webkitBackingStorePixelRatio || e2.mozBackingStorePixelRatio || e2.msBackingStorePixelRatio || e2.oBackingStorePixelRatio || e2.backingStorePixelRatio || 1);
    }
  }
  function o() {
    return r.INSTANCE.getZoomLevel();
  }
  function s() {
    return r.INSTANCE.getTimeSinceLastZoomLevelChanged();
  }
  function a(e2) {
    return r.INSTANCE.onDidChangeZoomLevel(e2);
  }
  function l() {
    return r.INSTANCE.getZoomFactor();
  }
  function c() {
    return r.INSTANCE.getPixelRatio();
  }
  r.INSTANCE = new r();
  const d = navigator.userAgent, h = d.indexOf("Edge/") >= 0, u = d.indexOf("Firefox") >= 0, p = d.indexOf("AppleWebKit") >= 0, m = d.indexOf("Chrome") >= 0, g = !m && d.indexOf("Safari") >= 0, f = !m && !g && p, b = d.indexOf("iPad") >= 0 || g && navigator.maxTouchPoints > 0, _ = h && d.indexOf("WebView/") >= 0, v = window.matchMedia && window.matchMedia("(display-mode: standalone)").matches;
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return r;
  }), n.d(t, "b", function() {
    return o;
  });
  var i = n(1);
  class r {
    constructor(e2) {
      this.domNode = e2, this._maxWidth = -1, this._width = -1, this._height = -1, this._top = -1, this._left = -1, this._bottom = -1, this._right = -1, this._fontFamily = "", this._fontWeight = "", this._fontSize = -1, this._fontFeatureSettings = "", this._lineHeight = -1, this._letterSpacing = -100, this._className = "", this._display = "", this._position = "", this._visibility = "", this._backgroundColor = "", this._layerHint = false, this._contain = "none", this._boxShadow = "";
    }
    setMaxWidth(e2) {
      this._maxWidth !== e2 && (this._maxWidth = e2, this.domNode.style.maxWidth = this._maxWidth + "px");
    }
    setWidth(e2) {
      this._width !== e2 && (this._width = e2, this.domNode.style.width = this._width + "px");
    }
    setHeight(e2) {
      this._height !== e2 && (this._height = e2, this.domNode.style.height = this._height + "px");
    }
    setTop(e2) {
      this._top !== e2 && (this._top = e2, this.domNode.style.top = this._top + "px");
    }
    unsetTop() {
      this._top !== -1 && (this._top = -1, this.domNode.style.top = "");
    }
    setLeft(e2) {
      this._left !== e2 && (this._left = e2, this.domNode.style.left = this._left + "px");
    }
    setBottom(e2) {
      this._bottom !== e2 && (this._bottom = e2, this.domNode.style.bottom = this._bottom + "px");
    }
    setRight(e2) {
      this._right !== e2 && (this._right = e2, this.domNode.style.right = this._right + "px");
    }
    setFontFamily(e2) {
      this._fontFamily !== e2 && (this._fontFamily = e2, this.domNode.style.fontFamily = this._fontFamily);
    }
    setFontWeight(e2) {
      this._fontWeight !== e2 && (this._fontWeight = e2, this.domNode.style.fontWeight = this._fontWeight);
    }
    setFontSize(e2) {
      this._fontSize !== e2 && (this._fontSize = e2, this.domNode.style.fontSize = this._fontSize + "px");
    }
    setFontFeatureSettings(e2) {
      this._fontFeatureSettings !== e2 && (this._fontFeatureSettings = e2, this.domNode.style.fontFeatureSettings = this._fontFeatureSettings);
    }
    setLineHeight(e2) {
      this._lineHeight !== e2 && (this._lineHeight = e2, this.domNode.style.lineHeight = this._lineHeight + "px");
    }
    setLetterSpacing(e2) {
      this._letterSpacing !== e2 && (this._letterSpacing = e2, this.domNode.style.letterSpacing = this._letterSpacing + "px");
    }
    setClassName(e2) {
      this._className !== e2 && (this._className = e2, this.domNode.className = this._className);
    }
    toggleClassName(e2, t2) {
      i.ab(this.domNode, e2, t2), this._className = this.domNode.className;
    }
    setDisplay(e2) {
      this._display !== e2 && (this._display = e2, this.domNode.style.display = this._display);
    }
    setPosition(e2) {
      this._position !== e2 && (this._position = e2, this.domNode.style.position = this._position);
    }
    setVisibility(e2) {
      this._visibility !== e2 && (this._visibility = e2, this.domNode.style.visibility = this._visibility);
    }
    setBackgroundColor(e2) {
      this._backgroundColor !== e2 && (this._backgroundColor = e2, this.domNode.style.backgroundColor = this._backgroundColor);
    }
    setLayerHinting(e2) {
      this._layerHint !== e2 && (this._layerHint = e2, this.domNode.style.transform = this._layerHint ? "translate3d(0px, 0px, 0px)" : "");
    }
    setBoxShadow(e2) {
      this._boxShadow !== e2 && (this._boxShadow = e2, this.domNode.style.boxShadow = e2);
    }
    setContain(e2) {
      this._contain !== e2 && (this._contain = e2, this.domNode.style.contain = this._contain);
    }
    setAttribute(e2, t2) {
      this.domNode.setAttribute(e2, t2);
    }
    removeAttribute(e2) {
      this.domNode.removeAttribute(e2);
    }
    appendChild(e2) {
      this.domNode.appendChild(e2.domNode);
    }
    removeChild(e2) {
      this.domNode.removeChild(e2.domNode);
    }
  }
  function o(e2) {
    return new r(e2);
  }
}, function(e, t, n) {
  "use strict";
  function i(e2) {
    return e2 < 0 ? 0 : e2 > 255 ? 255 : 0 | e2;
  }
  function r(e2) {
    return e2 < 0 ? 0 : e2 > 4294967295 ? 4294967295 : 0 | e2;
  }
  n.d(t, "b", function() {
    return i;
  }), n.d(t, "a", function() {
    return r;
  });
}, function(e, t, n) {
  "use strict";
  var i;
  n.d(t, "a", function() {
    return i;
  }), function(e2) {
    e2.is = function(e3) {
      return e3 && typeof e3 == "object" && typeof e3[Symbol.iterator] == "function";
    };
    const t2 = Object.freeze([]);
    e2.empty = function() {
      return t2;
    }, e2.single = function* (e3) {
      yield e3;
    }, e2.from = function(e3) {
      return e3 || t2;
    }, e2.first = function(e3) {
      return e3[Symbol.iterator]().next().value;
    }, e2.some = function(e3, t3) {
      for (const n2 of e3)
        if (t3(n2))
          return true;
      return false;
    }, e2.filter = function* (e3, t3) {
      for (const n2 of e3)
        t3(n2) && (yield n2);
    }, e2.map = function* (e3, t3) {
      for (const n2 of e3)
        yield t3(n2);
    }, e2.concat = function* (...e3) {
      for (const t3 of e3)
        for (const e4 of t3)
          yield e4;
    }, e2.consume = function(t3, n2 = Number.POSITIVE_INFINITY) {
      const i2 = [];
      if (n2 === 0)
        return [i2, t3];
      const r = t3[Symbol.iterator]();
      for (let t4 = 0; t4 < n2; t4++) {
        const t5 = r.next();
        if (t5.done)
          return [i2, e2.empty()];
        i2.push(t5.value);
      }
      return [i2, {[Symbol.iterator]: () => r}];
    };
  }(i || (i = {}));
}, function(e, t, n) {
  "use strict";
  n.d(t, "f", function() {
    return oe;
  }), n.d(t, "c", function() {
    return d;
  }), n.d(t, "b", function() {
    return p;
  }), n.d(t, "a", function() {
    return A;
  }), n.d(t, "d", function() {
    return R;
  }), n.d(t, "e", function() {
    return H;
  }), n.d(t, "g", function() {
    return yt;
  });
  var i, r, o, s, a, l, c, d, h, u, p, m, g, f, b, _, v, w, y, C, x = n(65);
  function S(e2, t2) {
    if (e2 === t2)
      return true;
    if (e2 == null || t2 == null)
      return false;
    if (typeof e2 != typeof t2)
      return false;
    if (typeof e2 != "object")
      return false;
    if (Array.isArray(e2) !== Array.isArray(t2))
      return false;
    var n2, i2;
    if (Array.isArray(e2)) {
      if (e2.length !== t2.length)
        return false;
      for (n2 = 0; n2 < e2.length; n2++)
        if (!S(e2[n2], t2[n2]))
          return false;
    } else {
      var r2 = [];
      for (i2 in e2)
        r2.push(i2);
      r2.sort();
      var o2 = [];
      for (i2 in t2)
        o2.push(i2);
      if (o2.sort(), !S(r2, o2))
        return false;
      for (n2 = 0; n2 < r2.length; n2++)
        if (!S(e2[r2[n2]], t2[r2[n2]]))
          return false;
    }
    return true;
  }
  function k(e2) {
    return typeof e2 == "number";
  }
  function E(e2) {
    return e2 !== void 0;
  }
  function T(e2) {
    return typeof e2 == "boolean";
  }
  !function(e2) {
    e2.create = function(e3, t2) {
      return {line: e3, character: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && ie.number(t2.line) && ie.number(t2.character);
    };
  }(i || (i = {})), function(e2) {
    e2.create = function(e3, t2, n2, r2) {
      if (ie.number(e3) && ie.number(t2) && ie.number(n2) && ie.number(r2))
        return {start: i.create(e3, t2), end: i.create(n2, r2)};
      if (i.is(e3) && i.is(t2))
        return {start: e3, end: t2};
      throw new Error("Range#create called with invalid arguments[" + e3 + ", " + t2 + ", " + n2 + ", " + r2 + "]");
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && i.is(t2.start) && i.is(t2.end);
    };
  }(r || (r = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, range: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && r.is(t2.range) && (ie.string(t2.uri) || ie.undefined(t2.uri));
    };
  }(o || (o = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {targetUri: e3, targetRange: t2, targetSelectionRange: n2, originSelectionRange: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && r.is(t2.targetRange) && ie.string(t2.targetUri) && (r.is(t2.targetSelectionRange) || ie.undefined(t2.targetSelectionRange)) && (r.is(t2.originSelectionRange) || ie.undefined(t2.originSelectionRange));
    };
  }(s || (s = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {red: e3, green: t2, blue: n2, alpha: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.number(t2.red) && ie.number(t2.green) && ie.number(t2.blue) && ie.number(t2.alpha);
    };
  }(a || (a = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, color: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return r.is(t2.range) && a.is(t2.color);
    };
  }(l || (l = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {label: e3, textEdit: t2, additionalTextEdits: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.string(t2.label) && (ie.undefined(t2.textEdit) || b.is(t2)) && (ie.undefined(t2.additionalTextEdits) || ie.typedArray(t2.additionalTextEdits, b.is));
    };
  }(c || (c = {})), function(e2) {
    e2.Comment = "comment", e2.Imports = "imports", e2.Region = "region";
  }(d || (d = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {startLine: e3, endLine: t2};
      return ie.defined(n2) && (o2.startCharacter = n2), ie.defined(i2) && (o2.endCharacter = i2), ie.defined(r2) && (o2.kind = r2), o2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.number(t2.startLine) && ie.number(t2.startLine) && (ie.undefined(t2.startCharacter) || ie.number(t2.startCharacter)) && (ie.undefined(t2.endCharacter) || ie.number(t2.endCharacter)) && (ie.undefined(t2.kind) || ie.string(t2.kind));
    };
  }(h || (h = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {location: e3, message: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && o.is(t2.location) && ie.string(t2.message);
    };
  }(u || (u = {})), function(e2) {
    e2.Error = 1, e2.Warning = 2, e2.Information = 3, e2.Hint = 4;
  }(p || (p = {})), function(e2) {
    e2.Unnecessary = 1, e2.Deprecated = 2;
  }(m || (m = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {range: e3, message: t2};
      return ie.defined(n2) && (s2.severity = n2), ie.defined(i2) && (s2.code = i2), ie.defined(r2) && (s2.source = r2), ie.defined(o2) && (s2.relatedInformation = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && r.is(t2.range) && ie.string(t2.message) && (ie.number(t2.severity) || ie.undefined(t2.severity)) && (ie.number(t2.code) || ie.string(t2.code) || ie.undefined(t2.code)) && (ie.string(t2.source) || ie.undefined(t2.source)) && (ie.undefined(t2.relatedInformation) || ie.typedArray(t2.relatedInformation, u.is));
    };
  }(g || (g = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {title: e3, command: t2};
      return ie.defined(n2) && n2.length > 0 && (r2.arguments = n2), r2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.title) && ie.string(t2.command);
    };
  }(f || (f = {})), function(e2) {
    e2.replace = function(e3, t2) {
      return {range: e3, newText: t2};
    }, e2.insert = function(e3, t2) {
      return {range: {start: e3, end: e3}, newText: t2};
    }, e2.del = function(e3) {
      return {range: e3, newText: ""};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(t2) && ie.string(t2.newText) && r.is(t2.range);
    };
  }(b || (b = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {textDocument: e3, edits: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && N.is(t2.textDocument) && Array.isArray(t2.edits);
    };
  }(_ || (_ = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "create", uri: e3};
      return t2 === void 0 || t2.overwrite === void 0 && t2.ignoreIfExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "create" && ie.string(t2.uri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || ie.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || ie.boolean(t2.options.ignoreIfExists)));
    };
  }(v || (v = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {kind: "rename", oldUri: e3, newUri: t2};
      return n2 === void 0 || n2.overwrite === void 0 && n2.ignoreIfExists === void 0 || (i2.options = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "rename" && ie.string(t2.oldUri) && ie.string(t2.newUri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || ie.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || ie.boolean(t2.options.ignoreIfExists)));
    };
  }(w || (w = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "delete", uri: e3};
      return t2 === void 0 || t2.recursive === void 0 && t2.ignoreIfNotExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "delete" && ie.string(t2.uri) && (t2.options === void 0 || (t2.options.recursive === void 0 || ie.boolean(t2.options.recursive)) && (t2.options.ignoreIfNotExists === void 0 || ie.boolean(t2.options.ignoreIfNotExists)));
    };
  }(y || (y = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return t2 && (t2.changes !== void 0 || t2.documentChanges !== void 0) && (t2.documentChanges === void 0 || t2.documentChanges.every(function(e4) {
        return ie.string(e4.kind) ? v.is(e4) || w.is(e4) || y.is(e4) : _.is(e4);
      }));
    };
  }(C || (C = {}));
  var L, N, I, D, O, A, R, M, P, F, W, z, B, j, V, U, H, q, $, K, G, Y, Z, X, Q, J, ee, te = function() {
    function e2(e3) {
      this.edits = e3;
    }
    return e2.prototype.insert = function(e3, t2) {
      this.edits.push(b.insert(e3, t2));
    }, e2.prototype.replace = function(e3, t2) {
      this.edits.push(b.replace(e3, t2));
    }, e2.prototype.delete = function(e3) {
      this.edits.push(b.del(e3));
    }, e2.prototype.add = function(e3) {
      this.edits.push(e3);
    }, e2.prototype.all = function() {
      return this.edits;
    }, e2.prototype.clear = function() {
      this.edits.splice(0, this.edits.length);
    }, e2;
  }();
  !function() {
    function e2(e3) {
      var t2 = this;
      this._textEditChanges = Object.create(null), e3 && (this._workspaceEdit = e3, e3.documentChanges ? e3.documentChanges.forEach(function(e4) {
        if (_.is(e4)) {
          var n2 = new te(e4.edits);
          t2._textEditChanges[e4.textDocument.uri] = n2;
        }
      }) : e3.changes && Object.keys(e3.changes).forEach(function(n2) {
        var i2 = new te(e3.changes[n2]);
        t2._textEditChanges[n2] = i2;
      }));
    }
    Object.defineProperty(e2.prototype, "edit", {get: function() {
      return this._workspaceEdit;
    }, enumerable: true, configurable: true}), e2.prototype.getTextEditChange = function(e3) {
      if (N.is(e3)) {
        if (this._workspaceEdit || (this._workspaceEdit = {documentChanges: []}), !this._workspaceEdit.documentChanges)
          throw new Error("Workspace edit is not configured for document changes.");
        var t2 = e3;
        if (!(i2 = this._textEditChanges[t2.uri])) {
          var n2 = {textDocument: t2, edits: r2 = []};
          this._workspaceEdit.documentChanges.push(n2), i2 = new te(r2), this._textEditChanges[t2.uri] = i2;
        }
        return i2;
      }
      if (this._workspaceEdit || (this._workspaceEdit = {changes: Object.create(null)}), !this._workspaceEdit.changes)
        throw new Error("Workspace edit is not configured for normal text edit changes.");
      var i2;
      if (!(i2 = this._textEditChanges[e3])) {
        var r2 = [];
        this._workspaceEdit.changes[e3] = r2, i2 = new te(r2), this._textEditChanges[e3] = i2;
      }
      return i2;
    }, e2.prototype.createFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(v.create(e3, t2));
    }, e2.prototype.renameFile = function(e3, t2, n2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(w.create(e3, t2, n2));
    }, e2.prototype.deleteFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(y.create(e3, t2));
    }, e2.prototype.checkDocumentChanges = function() {
      if (!this._workspaceEdit || !this._workspaceEdit.documentChanges)
        throw new Error("Workspace edit is not configured for document changes.");
    };
  }();
  !function(e2) {
    e2.create = function(e3) {
      return {uri: e3};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri);
    };
  }(L || (L = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, version: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri) && (t2.version === null || ie.number(t2.version));
    };
  }(N || (N = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {uri: e3, languageId: t2, version: n2, text: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.string(t2.uri) && ie.string(t2.languageId) && ie.number(t2.version) && ie.string(t2.text);
    };
  }(I || (I = {})), function(e2) {
    e2.PlainText = "plaintext", e2.Markdown = "markdown";
  }(D || (D = {})), function(e2) {
    e2.is = function(t2) {
      var n2 = t2;
      return n2 === e2.PlainText || n2 === e2.Markdown;
    };
  }(D || (D = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return ie.objectLiteral(e3) && D.is(t2.kind) && ie.string(t2.value);
    };
  }(O || (O = {})), function(e2) {
    e2.Text = 1, e2.Method = 2, e2.Function = 3, e2.Constructor = 4, e2.Field = 5, e2.Variable = 6, e2.Class = 7, e2.Interface = 8, e2.Module = 9, e2.Property = 10, e2.Unit = 11, e2.Value = 12, e2.Enum = 13, e2.Keyword = 14, e2.Snippet = 15, e2.Color = 16, e2.File = 17, e2.Reference = 18, e2.Folder = 19, e2.EnumMember = 20, e2.Constant = 21, e2.Struct = 22, e2.Event = 23, e2.Operator = 24, e2.TypeParameter = 25;
  }(A || (A = {})), function(e2) {
    e2.PlainText = 1, e2.Snippet = 2;
  }(R || (R = {})), function(e2) {
    e2.Deprecated = 1;
  }(M || (M = {})), function(e2) {
    e2.create = function(e3) {
      return {label: e3};
    };
  }(P || (P = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {items: e3 || [], isIncomplete: !!t2};
    };
  }(F || (F = {})), function(e2) {
    e2.fromPlainText = function(e3) {
      return e3.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.string(t2) || ie.objectLiteral(t2) && ie.string(t2.language) && ie.string(t2.value);
    };
  }(W || (W = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return !!t2 && ie.objectLiteral(t2) && (O.is(t2.contents) || W.is(t2.contents) || ie.typedArray(t2.contents, W.is)) && (e3.range === void 0 || r.is(e3.range));
    };
  }(z || (z = {})), function(e2) {
    e2.create = function(e3, t2) {
      return t2 ? {label: e3, documentation: t2} : {label: e3};
    };
  }(B || (B = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {label: e3};
      return ie.defined(t2) && (r2.documentation = t2), ie.defined(n2) ? r2.parameters = n2 : r2.parameters = [], r2;
    };
  }(j || (j = {})), function(e2) {
    e2.Text = 1, e2.Read = 2, e2.Write = 3;
  }(V || (V = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return ie.number(t2) && (n2.kind = t2), n2;
    };
  }(U || (U = {})), function(e2) {
    e2.File = 1, e2.Module = 2, e2.Namespace = 3, e2.Package = 4, e2.Class = 5, e2.Method = 6, e2.Property = 7, e2.Field = 8, e2.Constructor = 9, e2.Enum = 10, e2.Interface = 11, e2.Function = 12, e2.Variable = 13, e2.Constant = 14, e2.String = 15, e2.Number = 16, e2.Boolean = 17, e2.Array = 18, e2.Object = 19, e2.Key = 20, e2.Null = 21, e2.EnumMember = 22, e2.Struct = 23, e2.Event = 24, e2.Operator = 25, e2.TypeParameter = 26;
  }(H || (H = {})), function(e2) {
    e2.Deprecated = 1;
  }(q || (q = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {name: e3, kind: t2, location: {uri: i2, range: n2}};
      return r2 && (o2.containerName = r2), o2;
    };
  }($ || ($ = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {name: e3, detail: t2, kind: n2, range: i2, selectionRange: r2};
      return o2 !== void 0 && (s2.children = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && ie.string(t2.name) && ie.number(t2.kind) && r.is(t2.range) && r.is(t2.selectionRange) && (t2.detail === void 0 || ie.string(t2.detail)) && (t2.deprecated === void 0 || ie.boolean(t2.deprecated)) && (t2.children === void 0 || Array.isArray(t2.children));
    };
  }(K || (K = {})), function(e2) {
    e2.Empty = "", e2.QuickFix = "quickfix", e2.Refactor = "refactor", e2.RefactorExtract = "refactor.extract", e2.RefactorInline = "refactor.inline", e2.RefactorRewrite = "refactor.rewrite", e2.Source = "source", e2.SourceOrganizeImports = "source.organizeImports", e2.SourceFixAll = "source.fixAll";
  }(G || (G = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {diagnostics: e3};
      return t2 != null && (n2.only = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.typedArray(t2.diagnostics, g.is) && (t2.only === void 0 || ie.typedArray(t2.only, ie.string));
    };
  }(Y || (Y = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {title: e3};
      return f.is(t2) ? i2.command = t2 : i2.edit = t2, n2 !== void 0 && (i2.kind = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && ie.string(t2.title) && (t2.diagnostics === void 0 || ie.typedArray(t2.diagnostics, g.is)) && (t2.kind === void 0 || ie.string(t2.kind)) && (t2.edit !== void 0 || t2.command !== void 0) && (t2.command === void 0 || f.is(t2.command)) && (t2.isPreferred === void 0 || ie.boolean(t2.isPreferred)) && (t2.edit === void 0 || C.is(t2.edit));
    };
  }(Z || (Z = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return ie.defined(t2) && (n2.data = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && r.is(t2.range) && (ie.undefined(t2.command) || f.is(t2.command));
    };
  }(X || (X = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {tabSize: e3, insertSpaces: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && ie.number(t2.tabSize) && ie.boolean(t2.insertSpaces);
    };
  }(Q || (Q = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {range: e3, target: t2, data: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ie.defined(t2) && r.is(t2.range) && (ie.undefined(t2.target) || ie.string(t2.target));
    };
  }(J || (J = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, parent: t2};
    }, e2.is = function(t2) {
      var n2 = t2;
      return n2 !== void 0 && r.is(n2.range) && (n2.parent === void 0 || e2.is(n2.parent));
    };
  }(ee || (ee = {}));
  var ne;
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new re(e3, t2, n2, i2);
    }, e2.is = function(e3) {
      var t2 = e3;
      return !!(ie.defined(t2) && ie.string(t2.uri) && (ie.undefined(t2.languageId) || ie.string(t2.languageId)) && ie.number(t2.lineCount) && ie.func(t2.getText) && ie.func(t2.positionAt) && ie.func(t2.offsetAt));
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2, function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }), r2 = n2.length, o2 = i2.length - 1; o2 >= 0; o2--) {
        var s2 = i2[o2], a2 = e3.offsetAt(s2.range.start), l2 = e3.offsetAt(s2.range.end);
        if (!(l2 <= r2))
          throw new Error("Overlapping edit");
        n2 = n2.substring(0, a2) + s2.newText + n2.substring(l2, n2.length), r2 = a2;
      }
      return n2;
    };
  }(ne || (ne = {}));
  var ie, re = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(e3, t2) {
      this._content = e3.text, this._version = t2, this._lineOffsets = void 0;
    }, e2.prototype.getLineOffsets = function() {
      if (this._lineOffsets === void 0) {
        for (var e3 = [], t2 = this._content, n2 = true, i2 = 0; i2 < t2.length; i2++) {
          n2 && (e3.push(i2), n2 = false);
          var r2 = t2.charAt(i2);
          n2 = r2 === "\r" || r2 === "\n", r2 === "\r" && i2 + 1 < t2.length && t2.charAt(i2 + 1) === "\n" && i2++;
        }
        n2 && t2.length > 0 && e3.push(t2.length), this._lineOffsets = e3;
      }
      return this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, r2 = t2.length;
      if (r2 === 0)
        return i.create(0, e3);
      for (; n2 < r2; ) {
        var o2 = Math.floor((n2 + r2) / 2);
        t2[o2] > e3 ? r2 = o2 : n2 = o2 + 1;
      }
      var s2 = n2 - 1;
      return i.create(s2, e3 - t2[s2]);
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2;
  }();
  !function(e2) {
    var t2 = Object.prototype.toString;
    e2.defined = function(e3) {
      return e3 !== void 0;
    }, e2.undefined = function(e3) {
      return e3 === void 0;
    }, e2.boolean = function(e3) {
      return e3 === true || e3 === false;
    }, e2.string = function(e3) {
      return t2.call(e3) === "[object String]";
    }, e2.number = function(e3) {
      return t2.call(e3) === "[object Number]";
    }, e2.func = function(e3) {
      return t2.call(e3) === "[object Function]";
    }, e2.objectLiteral = function(e3) {
      return e3 !== null && typeof e3 == "object";
    }, e2.typedArray = function(e3, t3) {
      return Array.isArray(e3) && e3.every(t3);
    };
  }(ie || (ie = {}));
  var oe, se, ae, le = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(t2, n2) {
      for (var i2 = 0, r2 = t2; i2 < r2.length; i2++) {
        var o2 = r2[i2];
        if (e2.isIncremental(o2)) {
          var s2 = de(o2.range), a2 = this.offsetAt(s2.start), l2 = this.offsetAt(s2.end);
          this._content = this._content.substring(0, a2) + o2.text + this._content.substring(l2, this._content.length);
          var c2 = Math.max(s2.start.line, 0), d2 = Math.max(s2.end.line, 0), h2 = this._lineOffsets, u2 = ce(o2.text, false, a2);
          if (d2 - c2 === u2.length)
            for (var p2 = 0, m2 = u2.length; p2 < m2; p2++)
              h2[p2 + c2 + 1] = u2[p2];
          else
            u2.length < 1e4 ? h2.splice.apply(h2, [c2 + 1, d2 - c2].concat(u2)) : this._lineOffsets = h2 = h2.slice(0, c2 + 1).concat(u2, h2.slice(d2 + 1));
          var g2 = o2.text.length - (l2 - a2);
          if (g2 !== 0)
            for (p2 = c2 + 1 + u2.length, m2 = h2.length; p2 < m2; p2++)
              h2[p2] = h2[p2] + g2;
        } else {
          if (!e2.isFull(o2))
            throw new Error("Unknown change event received");
          this._content = o2.text, this._lineOffsets = void 0;
        }
      }
      this._version = n2;
    }, e2.prototype.getLineOffsets = function() {
      return this._lineOffsets === void 0 && (this._lineOffsets = ce(this._content, true)), this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, i2 = t2.length;
      if (i2 === 0)
        return {line: 0, character: e3};
      for (; n2 < i2; ) {
        var r2 = Math.floor((n2 + i2) / 2);
        t2[r2] > e3 ? i2 = r2 : n2 = r2 + 1;
      }
      var o2 = n2 - 1;
      return {line: o2, character: e3 - t2[o2]};
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2.isIncremental = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range !== void 0 && (t2.rangeLength === void 0 || typeof t2.rangeLength == "number");
    }, e2.isFull = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range === void 0 && t2.rangeLength === void 0;
    }, e2;
  }();
  function ce(e2, t2, n2) {
    n2 === void 0 && (n2 = 0);
    for (var i2 = t2 ? [n2] : [], r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charCodeAt(r2);
      o2 !== 13 && o2 !== 10 || (o2 === 13 && r2 + 1 < e2.length && e2.charCodeAt(r2 + 1) === 10 && r2++, i2.push(n2 + r2 + 1));
    }
    return i2;
  }
  function de(e2) {
    var t2 = e2.start, n2 = e2.end;
    return t2.line > n2.line || t2.line === n2.line && t2.character > n2.character ? {start: n2, end: t2} : e2;
  }
  function he(e2) {
    var t2 = de(e2.range);
    return t2 !== e2.range ? {newText: e2.newText, range: t2} : e2;
  }
  function ue(e2, t2) {
    return t2.length === 0 ? e2 : e2.replace(/\{(\d+)\}/g, function(e3, n2) {
      var i2 = n2[0];
      return t2[i2] !== void 0 ? t2[i2] : e3;
    });
  }
  function pe(e2, t2) {
    for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
      n2[i2 - 2] = arguments[i2];
    return ue(t2, n2);
  }
  function me(e2) {
    return pe;
  }
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new le(e3, t2, n2, i2);
    }, e2.update = function(e3, t2, n2) {
      if (e3 instanceof le)
        return e3.update(t2, n2), e3;
      throw new Error("TextDocument.update: document must be created by TextDocument.create");
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = 0, r2 = [], o2 = 0, s2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2.map(he), function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }); o2 < s2.length; o2++) {
        var a2 = s2[o2], l2 = e3.offsetAt(a2.range.start);
        if (l2 < i2)
          throw new Error("Overlapping edit");
        l2 > i2 && r2.push(n2.substring(i2, l2)), a2.newText.length && r2.push(a2.newText), i2 = e3.offsetAt(a2.range.end);
      }
      return r2.push(n2.substr(i2)), r2.join("");
    };
  }(oe || (oe = {})), function(e2) {
    e2[e2.Undefined = 0] = "Undefined", e2[e2.EnumValueMismatch = 1] = "EnumValueMismatch", e2[e2.UnexpectedEndOfComment = 257] = "UnexpectedEndOfComment", e2[e2.UnexpectedEndOfString = 258] = "UnexpectedEndOfString", e2[e2.UnexpectedEndOfNumber = 259] = "UnexpectedEndOfNumber", e2[e2.InvalidUnicode = 260] = "InvalidUnicode", e2[e2.InvalidEscapeCharacter = 261] = "InvalidEscapeCharacter", e2[e2.InvalidCharacter = 262] = "InvalidCharacter", e2[e2.PropertyExpected = 513] = "PropertyExpected", e2[e2.CommaExpected = 514] = "CommaExpected", e2[e2.ColonExpected = 515] = "ColonExpected", e2[e2.ValueExpected = 516] = "ValueExpected", e2[e2.CommaOrCloseBacketExpected = 517] = "CommaOrCloseBacketExpected", e2[e2.CommaOrCloseBraceExpected = 518] = "CommaOrCloseBraceExpected", e2[e2.TrailingComma = 519] = "TrailingComma", e2[e2.DuplicateKey = 520] = "DuplicateKey", e2[e2.CommentNotPermitted = 521] = "CommentNotPermitted", e2[e2.SchemaResolveError = 768] = "SchemaResolveError";
  }(se || (se = {})), (ae || (ae = {})).LATEST = {textDocument: {completion: {completionItem: {documentationFormat: [D.Markdown, D.PlainText], commitCharactersSupport: true}}}};
  var ge, fe, be = (ge = function(e2, t2) {
    return (ge = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
      e3.__proto__ = t3;
    } || function(e3, t3) {
      for (var n2 in t3)
        t3.hasOwnProperty(n2) && (e3[n2] = t3[n2]);
    })(e2, t2);
  }, function(e2, t2) {
    function n2() {
      this.constructor = e2;
    }
    ge(e2, t2), e2.prototype = t2 === null ? Object.create(t2) : (n2.prototype = t2.prototype, new n2());
  }), _e = me(), ve = {"color-hex": {errorMessage: _e("colorHexFormatWarning", "Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA."), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/}, "date-time": {errorMessage: _e("dateTimeFormatWarning", "String is not a RFC3339 date-time."), pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i}, date: {errorMessage: _e("dateFormatWarning", "String is not a RFC3339 date."), pattern: /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i}, time: {errorMessage: _e("timeFormatWarning", "String is not a RFC3339 time."), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i}, email: {errorMessage: _e("emailFormatWarning", "String is not an e-mail address."), pattern: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/}}, we = function() {
    function e2(e3, t2, n2) {
      n2 === void 0 && (n2 = 0), this.offset = t2, this.length = n2, this.parent = e3;
    }
    return Object.defineProperty(e2.prototype, "children", {get: function() {
      return [];
    }, enumerable: false, configurable: true}), e2.prototype.toString = function() {
      return "type: " + this.type + " (" + this.offset + "/" + this.length + ")" + (this.parent ? " parent: {" + this.parent.toString() + "}" : "");
    }, e2;
  }(), ye = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.type = "null", i2.value = null, i2;
    }
    return be(t2, e2), t2;
  }(we), Ce = function(e2) {
    function t2(t3, n2, i2) {
      var r2 = e2.call(this, t3, i2) || this;
      return r2.type = "boolean", r2.value = n2, r2;
    }
    return be(t2, e2), t2;
  }(we), xe = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.type = "array", i2.items = [], i2;
    }
    return be(t2, e2), Object.defineProperty(t2.prototype, "children", {get: function() {
      return this.items;
    }, enumerable: false, configurable: true}), t2;
  }(we), Se = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.type = "number", i2.isInteger = true, i2.value = Number.NaN, i2;
    }
    return be(t2, e2), t2;
  }(we), ke = function(e2) {
    function t2(t3, n2, i2) {
      var r2 = e2.call(this, t3, n2, i2) || this;
      return r2.type = "string", r2.value = "", r2;
    }
    return be(t2, e2), t2;
  }(we), Ee = function(e2) {
    function t2(t3, n2, i2) {
      var r2 = e2.call(this, t3, n2) || this;
      return r2.type = "property", r2.colonOffset = -1, r2.keyNode = i2, r2;
    }
    return be(t2, e2), Object.defineProperty(t2.prototype, "children", {get: function() {
      return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];
    }, enumerable: false, configurable: true}), t2;
  }(we), Te = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.type = "object", i2.properties = [], i2;
    }
    return be(t2, e2), Object.defineProperty(t2.prototype, "children", {get: function() {
      return this.properties;
    }, enumerable: false, configurable: true}), t2;
  }(we);
  function Le(e2) {
    return T(e2) ? e2 ? {} : {not: {}} : e2;
  }
  !function(e2) {
    e2[e2.Key = 0] = "Key", e2[e2.Enum = 1] = "Enum";
  }(fe || (fe = {}));
  var Ne = function() {
    function e2(e3, t2) {
      e3 === void 0 && (e3 = -1), this.focusOffset = e3, this.exclude = t2, this.schemas = [];
    }
    return e2.prototype.add = function(e3) {
      this.schemas.push(e3);
    }, e2.prototype.merge = function(e3) {
      Array.prototype.push.apply(this.schemas, e3.schemas);
    }, e2.prototype.include = function(e3) {
      return (this.focusOffset === -1 || Re(e3, this.focusOffset)) && e3 !== this.exclude;
    }, e2.prototype.newSub = function() {
      return new e2(-1, this.exclude);
    }, e2;
  }(), Ie = function() {
    function e2() {
    }
    return Object.defineProperty(e2.prototype, "schemas", {get: function() {
      return [];
    }, enumerable: false, configurable: true}), e2.prototype.add = function(e3) {
    }, e2.prototype.merge = function(e3) {
    }, e2.prototype.include = function(e3) {
      return true;
    }, e2.prototype.newSub = function() {
      return this;
    }, e2.instance = new e2(), e2;
  }(), De = function() {
    function e2() {
      this.problems = [], this.propertiesMatches = 0, this.propertiesValueMatches = 0, this.primaryValueMatches = 0, this.enumValueMatch = false, this.enumValues = void 0;
    }
    return e2.prototype.hasProblems = function() {
      return !!this.problems.length;
    }, e2.prototype.mergeAll = function(e3) {
      for (var t2 = 0, n2 = e3; t2 < n2.length; t2++) {
        var i2 = n2[t2];
        this.merge(i2);
      }
    }, e2.prototype.merge = function(e3) {
      this.problems = this.problems.concat(e3.problems);
    }, e2.prototype.mergeEnumValues = function(e3) {
      if (!this.enumValueMatch && !e3.enumValueMatch && this.enumValues && e3.enumValues) {
        this.enumValues = this.enumValues.concat(e3.enumValues);
        for (var t2 = 0, n2 = this.problems; t2 < n2.length; t2++) {
          var i2 = n2[t2];
          i2.code === se.EnumValueMismatch && (i2.message = _e("enumWarning", "Value is not accepted. Valid values: {0}.", this.enumValues.map(function(e4) {
            return JSON.stringify(e4);
          }).join(", ")));
        }
      }
    }, e2.prototype.mergePropertyMatch = function(e3) {
      this.merge(e3), this.propertiesMatches++, (e3.enumValueMatch || !e3.hasProblems() && e3.propertiesMatches) && this.propertiesValueMatches++, e3.enumValueMatch && e3.enumValues && e3.enumValues.length === 1 && this.primaryValueMatches++;
    }, e2.prototype.compare = function(e3) {
      var t2 = this.hasProblems();
      return t2 !== e3.hasProblems() ? t2 ? -1 : 1 : this.enumValueMatch !== e3.enumValueMatch ? e3.enumValueMatch ? -1 : 1 : this.primaryValueMatches !== e3.primaryValueMatches ? this.primaryValueMatches - e3.primaryValueMatches : this.propertiesValueMatches !== e3.propertiesValueMatches ? this.propertiesValueMatches - e3.propertiesValueMatches : this.propertiesMatches - e3.propertiesMatches;
    }, e2;
  }();
  function Oe(e2) {
    return x.e(e2);
  }
  function Ae(e2) {
    return x.d(e2);
  }
  function Re(e2, t2, n2) {
    return n2 === void 0 && (n2 = false), t2 >= e2.offset && t2 < e2.offset + e2.length || n2 && t2 === e2.offset + e2.length;
  }
  var Me = function() {
    function e2(e3, t2, n2) {
      t2 === void 0 && (t2 = []), n2 === void 0 && (n2 = []), this.root = e3, this.syntaxErrors = t2, this.comments = n2;
    }
    return e2.prototype.getNodeFromOffset = function(e3, t2) {
      if (t2 === void 0 && (t2 = false), this.root)
        return x.b(this.root, e3, t2);
    }, e2.prototype.visit = function(e3) {
      if (this.root) {
        var t2 = function(n2) {
          var i2 = e3(n2), r2 = n2.children;
          if (Array.isArray(r2))
            for (var o2 = 0; o2 < r2.length && i2; o2++)
              i2 = t2(r2[o2]);
          return i2;
        };
        t2(this.root);
      }
    }, e2.prototype.validate = function(e3, t2) {
      if (this.root && t2) {
        var n2 = new De();
        return Pe(this.root, t2, n2, Ie.instance), n2.problems.map(function(t3) {
          var n3 = r.create(e3.positionAt(t3.location.offset), e3.positionAt(t3.location.offset + t3.location.length));
          return g.create(n3, t3.message, t3.severity, t3.code);
        });
      }
    }, e2.prototype.getMatchingSchemas = function(e3, t2, n2) {
      t2 === void 0 && (t2 = -1);
      var i2 = new Ne(t2, n2);
      return this.root && e3 && Pe(this.root, e3, new De(), i2), i2.schemas;
    }, e2;
  }();
  function Pe(e2, t2, n2, i2) {
    if (e2 && i2.include(e2)) {
      var r2 = e2;
      switch (r2.type) {
        case "object":
          !function(e3, t3, n3, i3) {
            for (var r3 = Object.create(null), o2 = [], s2 = 0, a2 = e3.properties; s2 < a2.length; s2++) {
              var l2 = (v2 = a2[s2]).keyNode.value;
              r3[l2] = v2.valueNode, o2.push(l2);
            }
            if (Array.isArray(t3.required))
              for (var c2 = 0, d2 = t3.required; c2 < d2.length; c2++) {
                var h2 = d2[c2];
                if (!r3[h2]) {
                  var u2 = e3.parent && e3.parent.type === "property" && e3.parent.keyNode, m2 = u2 ? {offset: u2.offset, length: u2.length} : {offset: e3.offset, length: 1};
                  n3.problems.push({location: m2, severity: p.Warning, message: _e("MissingRequiredPropWarning", 'Missing property "{0}".', h2)});
                }
              }
            var g2 = function(e4) {
              for (var t4 = o2.indexOf(e4); t4 >= 0; )
                o2.splice(t4, 1), t4 = o2.indexOf(e4);
            };
            if (t3.properties)
              for (var f2 = 0, b2 = Object.keys(t3.properties); f2 < b2.length; f2++) {
                h2 = b2[f2];
                g2(h2);
                var _2 = t3.properties[h2];
                if (A2 = r3[h2])
                  if (T(_2))
                    if (_2)
                      n3.propertiesMatches++, n3.propertiesValueMatches++;
                    else {
                      var v2 = A2.parent;
                      n3.problems.push({location: {offset: v2.keyNode.offset, length: v2.keyNode.length}, severity: p.Warning, message: t3.errorMessage || _e("DisallowedExtraPropWarning", "Property {0} is not allowed.", h2)});
                    }
                  else {
                    var w2 = new De();
                    Pe(A2, _2, w2, i3), n3.mergePropertyMatch(w2);
                  }
              }
            if (t3.patternProperties)
              for (var y2 = 0, C2 = Object.keys(t3.patternProperties); y2 < C2.length; y2++)
                for (var x2 = C2[y2], S2 = new RegExp(x2), E2 = 0, L2 = o2.slice(0); E2 < L2.length; E2++) {
                  h2 = L2[E2];
                  if (S2.test(h2)) {
                    if (g2(h2), A2 = r3[h2])
                      if (T(_2 = t3.patternProperties[x2]))
                        if (_2)
                          n3.propertiesMatches++, n3.propertiesValueMatches++;
                        else {
                          v2 = A2.parent;
                          n3.problems.push({location: {offset: v2.keyNode.offset, length: v2.keyNode.length}, severity: p.Warning, message: t3.errorMessage || _e("DisallowedExtraPropWarning", "Property {0} is not allowed.", h2)});
                        }
                      else {
                        w2 = new De();
                        Pe(A2, _2, w2, i3), n3.mergePropertyMatch(w2);
                      }
                  }
                }
            if (typeof t3.additionalProperties == "object")
              for (var N2 = 0, I2 = o2; N2 < I2.length; N2++) {
                h2 = I2[N2];
                if (A2 = r3[h2]) {
                  w2 = new De();
                  Pe(A2, t3.additionalProperties, w2, i3), n3.mergePropertyMatch(w2);
                }
              }
            else if (t3.additionalProperties === false && o2.length > 0)
              for (var D2 = 0, O2 = o2; D2 < O2.length; D2++) {
                var A2;
                h2 = O2[D2];
                if (A2 = r3[h2]) {
                  v2 = A2.parent;
                  n3.problems.push({location: {offset: v2.keyNode.offset, length: v2.keyNode.length}, severity: p.Warning, message: t3.errorMessage || _e("DisallowedExtraPropWarning", "Property {0} is not allowed.", h2)});
                }
              }
            k(t3.maxProperties) && e3.properties.length > t3.maxProperties && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("MaxPropWarning", "Object has more properties than limit of {0}.", t3.maxProperties)});
            k(t3.minProperties) && e3.properties.length < t3.minProperties && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("MinPropWarning", "Object has fewer properties than the required number of {0}", t3.minProperties)});
            if (t3.dependencies)
              for (var R2 = 0, M2 = Object.keys(t3.dependencies); R2 < M2.length; R2++) {
                l2 = M2[R2];
                if (r3[l2]) {
                  var P2 = t3.dependencies[l2];
                  if (Array.isArray(P2))
                    for (var F2 = 0, W2 = P2; F2 < W2.length; F2++) {
                      var z2 = W2[F2];
                      r3[z2] ? n3.propertiesValueMatches++ : n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("RequiredDependentPropWarning", "Object is missing property {0} required by property {1}.", z2, l2)});
                    }
                  else if (_2 = Le(P2)) {
                    w2 = new De();
                    Pe(e3, _2, w2, i3), n3.mergePropertyMatch(w2);
                  }
                }
              }
            var B2 = Le(t3.propertyNames);
            if (B2)
              for (var j2 = 0, V2 = e3.properties; j2 < V2.length; j2++) {
                var U2 = V2[j2];
                (l2 = U2.keyNode) && Pe(l2, B2, n3, Ie.instance);
              }
          }(r2, t2, n2, i2);
          break;
        case "array":
          !function(e3, t3, n3, i3) {
            if (Array.isArray(t3.items)) {
              for (var r3 = t3.items, o2 = 0; o2 < r3.length; o2++) {
                var s2 = Le(r3[o2]), a2 = new De();
                (u2 = e3.items[o2]) ? (Pe(u2, s2, a2, i3), n3.mergePropertyMatch(a2)) : e3.items.length >= r3.length && n3.propertiesValueMatches++;
              }
              if (e3.items.length > r3.length)
                if (typeof t3.additionalItems == "object")
                  for (var l2 = r3.length; l2 < e3.items.length; l2++) {
                    a2 = new De();
                    Pe(e3.items[l2], t3.additionalItems, a2, i3), n3.mergePropertyMatch(a2);
                  }
                else
                  t3.additionalItems === false && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("additionalItemsWarning", "Array has too many items according to schema. Expected {0} or fewer.", r3.length)});
            } else {
              var c2 = Le(t3.items);
              if (c2)
                for (var d2 = 0, h2 = e3.items; d2 < h2.length; d2++) {
                  var u2 = h2[d2];
                  a2 = new De();
                  Pe(u2, c2, a2, i3), n3.mergePropertyMatch(a2);
                }
            }
            var m2 = Le(t3.contains);
            if (m2) {
              e3.items.some(function(e4) {
                var t4 = new De();
                return Pe(e4, m2, t4, Ie.instance), !t4.hasProblems();
              }) || n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: t3.errorMessage || _e("requiredItemMissingWarning", "Array does not contain required item.")});
            }
            k(t3.minItems) && e3.items.length < t3.minItems && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("minItemsWarning", "Array has too few items. Expected {0} or more.", t3.minItems)});
            k(t3.maxItems) && e3.items.length > t3.maxItems && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("maxItemsWarning", "Array has too many items. Expected {0} or fewer.", t3.maxItems)});
            if (t3.uniqueItems === true) {
              var g2 = Oe(e3);
              g2.some(function(e4, t4) {
                return t4 !== g2.lastIndexOf(e4);
              }) && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("uniqueItemsWarning", "Array has duplicate items.")});
            }
          }(r2, t2, n2, i2);
          break;
        case "string":
          !function(e3, t3, n3, i3) {
            k(t3.minLength) && e3.value.length < t3.minLength && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("minLengthWarning", "String is shorter than the minimum length of {0}.", t3.minLength)});
            k(t3.maxLength) && e3.value.length > t3.maxLength && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("maxLengthWarning", "String is longer than the maximum length of {0}.", t3.maxLength)});
            if (r3 = t3.pattern, typeof r3 == "string") {
              new RegExp(t3.pattern).test(e3.value) || n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: t3.patternErrorMessage || t3.errorMessage || _e("patternWarning", 'String does not match the pattern of "{0}".', t3.pattern)});
            }
            var r3;
            if (t3.format)
              switch (t3.format) {
                case "uri":
                case "uri-reference":
                  var o2 = void 0;
                  if (e3.value) {
                    var s2 = /^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/.exec(e3.value);
                    s2 ? s2[2] || t3.format !== "uri" || (o2 = _e("uriSchemeMissing", "URI with a scheme is expected.")) : o2 = _e("uriMissing", "URI is expected.");
                  } else
                    o2 = _e("uriEmpty", "URI expected.");
                  o2 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: t3.patternErrorMessage || t3.errorMessage || _e("uriFormatWarning", "String is not a URI: {0}", o2)});
                  break;
                case "color-hex":
                case "date-time":
                case "date":
                case "time":
                case "email":
                  var a2 = ve[t3.format];
                  e3.value && a2.pattern.exec(e3.value) || n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: t3.patternErrorMessage || t3.errorMessage || a2.errorMessage});
              }
          }(r2, t2, n2);
          break;
        case "number":
          !function(e3, t3, n3, i3) {
            var r3 = e3.value;
            function o2(e4) {
              var t4, n4 = /^(-?\d+)(?:\.(\d+))?(?:e([-+]\d+))?$/.exec(e4.toString());
              return n4 && {value: Number(n4[1] + (n4[2] || "")), multiplier: (((t4 = n4[2]) === null || t4 === void 0 ? void 0 : t4.length) || 0) - (parseInt(n4[3]) || 0)};
            }
            if (k(t3.multipleOf)) {
              var s2 = -1;
              if (Number.isInteger(t3.multipleOf))
                s2 = r3 % t3.multipleOf;
              else {
                var a2 = o2(t3.multipleOf), l2 = o2(r3);
                if (a2 && l2) {
                  var c2 = Math.pow(10, Math.abs(l2.multiplier - a2.multiplier));
                  l2.multiplier < a2.multiplier ? l2.value *= c2 : a2.value *= c2, s2 = l2.value % a2.value;
                }
              }
              s2 !== 0 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("multipleOfWarning", "Value is not divisible by {0}.", t3.multipleOf)});
            }
            function d2(e4, t4) {
              return k(t4) ? t4 : T(t4) && t4 ? e4 : void 0;
            }
            function h2(e4, t4) {
              if (!T(t4) || !t4)
                return e4;
            }
            var u2 = d2(t3.minimum, t3.exclusiveMinimum);
            k(u2) && r3 <= u2 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("exclusiveMinimumWarning", "Value is below the exclusive minimum of {0}.", u2)});
            var m2 = d2(t3.maximum, t3.exclusiveMaximum);
            k(m2) && r3 >= m2 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("exclusiveMaximumWarning", "Value is above the exclusive maximum of {0}.", m2)});
            var g2 = h2(t3.minimum, t3.exclusiveMinimum);
            k(g2) && r3 < g2 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("minimumWarning", "Value is below the minimum of {0}.", g2)});
            var f2 = h2(t3.maximum, t3.exclusiveMaximum);
            k(f2) && r3 > f2 && n3.problems.push({location: {offset: e3.offset, length: e3.length}, severity: p.Warning, message: _e("maximumWarning", "Value is above the maximum of {0}.", f2)});
          }(r2, t2, n2);
          break;
        case "property":
          return Pe(r2.valueNode, t2, n2, i2);
      }
      !function() {
        function e3(e4) {
          return r2.type === e4 || e4 === "integer" && r2.type === "number" && r2.isInteger;
        }
        Array.isArray(t2.type) ? t2.type.some(e3) || n2.problems.push({location: {offset: r2.offset, length: r2.length}, severity: p.Warning, message: t2.errorMessage || _e("typeArrayMismatchWarning", "Incorrect type. Expected one of {0}.", t2.type.join(", "))}) : t2.type && (e3(t2.type) || n2.problems.push({location: {offset: r2.offset, length: r2.length}, severity: p.Warning, message: t2.errorMessage || _e("typeMismatchWarning", 'Incorrect type. Expected "{0}".', t2.type)}));
        if (Array.isArray(t2.allOf))
          for (var o2 = 0, s2 = t2.allOf; o2 < s2.length; o2++) {
            var a2 = s2[o2];
            Pe(r2, Le(a2), n2, i2);
          }
        var l2 = Le(t2.not);
        if (l2) {
          var c2 = new De(), d2 = i2.newSub();
          Pe(r2, l2, c2, d2), c2.hasProblems() || n2.problems.push({location: {offset: r2.offset, length: r2.length}, severity: p.Warning, message: _e("notSchemaWarning", "Matches a schema that is not allowed.")});
          for (var h2 = 0, u2 = d2.schemas; h2 < u2.length; h2++) {
            var m2 = u2[h2];
            m2.inverted = !m2.inverted, i2.add(m2);
          }
        }
        var g2 = function(e4, t3) {
          for (var o3 = [], s3 = void 0, a3 = 0, l3 = e4; a3 < l3.length; a3++) {
            var c3 = Le(l3[a3]), d3 = new De(), h3 = i2.newSub();
            if (Pe(r2, c3, d3, h3), d3.hasProblems() || o3.push(c3), s3)
              if (t3 || d3.hasProblems() || s3.validationResult.hasProblems()) {
                var u3 = d3.compare(s3.validationResult);
                u3 > 0 ? s3 = {schema: c3, validationResult: d3, matchingSchemas: h3} : u3 === 0 && (s3.matchingSchemas.merge(h3), s3.validationResult.mergeEnumValues(d3));
              } else
                s3.matchingSchemas.merge(h3), s3.validationResult.propertiesMatches += d3.propertiesMatches, s3.validationResult.propertiesValueMatches += d3.propertiesValueMatches;
            else
              s3 = {schema: c3, validationResult: d3, matchingSchemas: h3};
          }
          return o3.length > 1 && t3 && n2.problems.push({location: {offset: r2.offset, length: 1}, severity: p.Warning, message: _e("oneOfWarning", "Matches multiple schemas when only one must validate.")}), s3 && (n2.merge(s3.validationResult), n2.propertiesMatches += s3.validationResult.propertiesMatches, n2.propertiesValueMatches += s3.validationResult.propertiesValueMatches, i2.merge(s3.matchingSchemas)), o3.length;
        };
        Array.isArray(t2.anyOf) && g2(t2.anyOf, false);
        Array.isArray(t2.oneOf) && g2(t2.oneOf, true);
        var f2 = function(e4) {
          var t3 = new De(), o3 = i2.newSub();
          Pe(r2, Le(e4), t3, o3), n2.merge(t3), n2.propertiesMatches += t3.propertiesMatches, n2.propertiesValueMatches += t3.propertiesValueMatches, i2.merge(o3);
        }, b2 = Le(t2.if);
        b2 && function(e4, t3, n3) {
          var o3 = Le(e4), s3 = new De(), a3 = i2.newSub();
          Pe(r2, o3, s3, a3), i2.merge(a3), s3.hasProblems() ? n3 && f2(n3) : t3 && f2(t3);
        }(b2, Le(t2.then), Le(t2.else));
        if (Array.isArray(t2.enum)) {
          for (var _2 = Oe(r2), v2 = false, w2 = 0, y2 = t2.enum; w2 < y2.length; w2++) {
            var C2 = y2[w2];
            if (S(_2, C2)) {
              v2 = true;
              break;
            }
          }
          n2.enumValues = t2.enum, n2.enumValueMatch = v2, v2 || n2.problems.push({location: {offset: r2.offset, length: r2.length}, severity: p.Warning, code: se.EnumValueMismatch, message: t2.errorMessage || _e("enumWarning", "Value is not accepted. Valid values: {0}.", t2.enum.map(function(e4) {
            return JSON.stringify(e4);
          }).join(", "))});
        }
        if (E(t2.const)) {
          S(_2 = Oe(r2), t2.const) ? n2.enumValueMatch = true : (n2.problems.push({location: {offset: r2.offset, length: r2.length}, severity: p.Warning, code: se.EnumValueMismatch, message: t2.errorMessage || _e("constWarning", "Value must be {0}.", JSON.stringify(t2.const))}), n2.enumValueMatch = false), n2.enumValues = [t2.const];
        }
        t2.deprecationMessage && r2.parent && n2.problems.push({location: {offset: r2.parent.offset, length: r2.parent.length}, severity: p.Warning, message: t2.deprecationMessage});
      }(), i2.add({node: r2, schema: t2});
    }
  }
  function Fe(e2, t2) {
    var n2 = [], i2 = -1, o2 = e2.getText(), s2 = x.a(o2, false), a2 = t2 && t2.collectComments ? [] : void 0;
    function l2() {
      for (; ; ) {
        var t3 = s2.scan();
        switch (h2(), t3) {
          case 12:
          case 13:
            Array.isArray(a2) && a2.push(r.create(e2.positionAt(s2.getTokenOffset()), e2.positionAt(s2.getTokenOffset() + s2.getTokenLength())));
            break;
          case 15:
          case 14:
            break;
          default:
            return t3;
        }
      }
    }
    function c2(t3, o3, s3, a3, l3) {
      if (l3 === void 0 && (l3 = p.Error), n2.length === 0 || s3 !== i2) {
        var c3 = r.create(e2.positionAt(s3), e2.positionAt(a3));
        n2.push(g.create(c3, t3, l3, o3, e2.languageId)), i2 = s3;
      }
    }
    function d2(e3, t3, n3, i3, r2) {
      n3 === void 0 && (n3 = void 0), i3 === void 0 && (i3 = []), r2 === void 0 && (r2 = []);
      var a3 = s2.getTokenOffset(), d3 = s2.getTokenOffset() + s2.getTokenLength();
      if (a3 === d3 && a3 > 0) {
        for (a3--; a3 > 0 && /\s/.test(o2.charAt(a3)); )
          a3--;
        d3 = a3 + 1;
      }
      if (c2(e3, t3, a3, d3), n3 && u2(n3, false), i3.length + r2.length > 0)
        for (var h3 = s2.getToken(); h3 !== 17; ) {
          if (i3.indexOf(h3) !== -1) {
            l2();
            break;
          }
          if (r2.indexOf(h3) !== -1)
            break;
          h3 = l2();
        }
      return n3;
    }
    function h2() {
      switch (s2.getTokenError()) {
        case 4:
          return d2(_e("InvalidUnicode", "Invalid unicode sequence in string."), se.InvalidUnicode), true;
        case 5:
          return d2(_e("InvalidEscapeCharacter", "Invalid escape character in string."), se.InvalidEscapeCharacter), true;
        case 3:
          return d2(_e("UnexpectedEndOfNumber", "Unexpected end of number."), se.UnexpectedEndOfNumber), true;
        case 1:
          return d2(_e("UnexpectedEndOfComment", "Unexpected end of comment."), se.UnexpectedEndOfComment), true;
        case 2:
          return d2(_e("UnexpectedEndOfString", "Unexpected end of string."), se.UnexpectedEndOfString), true;
        case 6:
          return d2(_e("InvalidCharacter", "Invalid characters in string. Control characters must be escaped."), se.InvalidCharacter), true;
      }
      return false;
    }
    function u2(e3, t3) {
      return e3.length = s2.getTokenOffset() + s2.getTokenLength() - e3.offset, t3 && l2(), e3;
    }
    var m2 = new ke(void 0, 0, 0);
    function f2(t3, n3) {
      var i3 = new Ee(t3, s2.getTokenOffset(), m2), r2 = b2(i3);
      if (!r2) {
        if (s2.getToken() !== 16)
          return;
        d2(_e("DoubleQuotesExpected", "Property keys must be doublequoted"), se.Undefined);
        var o3 = new ke(i3, s2.getTokenOffset(), s2.getTokenLength());
        o3.value = s2.getTokenValue(), r2 = o3, l2();
      }
      i3.keyNode = r2;
      var a3 = n3[r2.value];
      if (a3 ? (c2(_e("DuplicateKeyWarning", "Duplicate object key"), se.DuplicateKey, i3.keyNode.offset, i3.keyNode.offset + i3.keyNode.length, p.Warning), typeof a3 == "object" && c2(_e("DuplicateKeyWarning", "Duplicate object key"), se.DuplicateKey, a3.keyNode.offset, a3.keyNode.offset + a3.keyNode.length, p.Warning), n3[r2.value] = true) : n3[r2.value] = i3, s2.getToken() === 6)
        i3.colonOffset = s2.getTokenOffset(), l2();
      else if (d2(_e("ColonExpected", "Colon expected"), se.ColonExpected), s2.getToken() === 10 && e2.positionAt(r2.offset + r2.length).line < e2.positionAt(s2.getTokenOffset()).line)
        return i3.length = r2.length, i3;
      var h3 = _2(i3);
      return h3 ? (i3.valueNode = h3, i3.length = h3.offset + h3.length - i3.offset, i3) : d2(_e("ValueExpected", "Value expected"), se.ValueExpected, i3, [], [2, 5]);
    }
    function b2(e3) {
      if (s2.getToken() === 10) {
        var t3 = new ke(e3, s2.getTokenOffset());
        return t3.value = s2.getTokenValue(), u2(t3, true);
      }
    }
    function _2(e3) {
      return function(e4) {
        if (s2.getToken() === 3) {
          var t3 = new xe(e4, s2.getTokenOffset());
          l2();
          for (var n3 = false; s2.getToken() !== 4 && s2.getToken() !== 17; ) {
            if (s2.getToken() === 5) {
              n3 || d2(_e("ValueExpected", "Value expected"), se.ValueExpected);
              var i3 = s2.getTokenOffset();
              if (l2(), s2.getToken() === 4) {
                n3 && c2(_e("TrailingComma", "Trailing comma"), se.TrailingComma, i3, i3 + 1);
                continue;
              }
            } else
              n3 && d2(_e("ExpectedComma", "Expected comma"), se.CommaExpected);
            var r2 = _2(t3);
            r2 ? t3.items.push(r2) : d2(_e("PropertyExpected", "Value expected"), se.ValueExpected, void 0, [], [4, 5]), n3 = true;
          }
          return s2.getToken() !== 4 ? d2(_e("ExpectedCloseBracket", "Expected comma or closing bracket"), se.CommaOrCloseBacketExpected, t3) : u2(t3, true);
        }
      }(e3) || function(e4) {
        if (s2.getToken() === 1) {
          var t3 = new Te(e4, s2.getTokenOffset()), n3 = Object.create(null);
          l2();
          for (var i3 = false; s2.getToken() !== 2 && s2.getToken() !== 17; ) {
            if (s2.getToken() === 5) {
              i3 || d2(_e("PropertyExpected", "Property expected"), se.PropertyExpected);
              var r2 = s2.getTokenOffset();
              if (l2(), s2.getToken() === 2) {
                i3 && c2(_e("TrailingComma", "Trailing comma"), se.TrailingComma, r2, r2 + 1);
                continue;
              }
            } else
              i3 && d2(_e("ExpectedComma", "Expected comma"), se.CommaExpected);
            var o3 = f2(t3, n3);
            o3 ? t3.properties.push(o3) : d2(_e("PropertyExpected", "Property expected"), se.PropertyExpected, void 0, [], [2, 5]), i3 = true;
          }
          return s2.getToken() !== 2 ? d2(_e("ExpectedCloseBrace", "Expected comma or closing brace"), se.CommaOrCloseBraceExpected, t3) : u2(t3, true);
        }
      }(e3) || b2(e3) || function(e4) {
        if (s2.getToken() === 11) {
          var t3 = new Se(e4, s2.getTokenOffset());
          if (s2.getTokenError() === 0) {
            var n3 = s2.getTokenValue();
            try {
              var i3 = JSON.parse(n3);
              if (!k(i3))
                return d2(_e("InvalidNumberFormat", "Invalid number format."), se.Undefined, t3);
              t3.value = i3;
            } catch (e5) {
              return d2(_e("InvalidNumberFormat", "Invalid number format."), se.Undefined, t3);
            }
            t3.isInteger = n3.indexOf(".") === -1;
          }
          return u2(t3, true);
        }
      }(e3) || function(e4) {
        switch (s2.getToken()) {
          case 7:
            return u2(new ye(e4, s2.getTokenOffset()), true);
          case 8:
            return u2(new Ce(e4, true, s2.getTokenOffset()), true);
          case 9:
            return u2(new Ce(e4, false, s2.getTokenOffset()), true);
          default:
            return;
        }
      }(e3);
    }
    var v2 = void 0;
    return l2() !== 17 && ((v2 = _2(v2)) ? s2.getToken() !== 17 && d2(_e("End of file expected", "End of file expected."), se.Undefined) : d2(_e("Invalid symbol", "Expected a JSON object, array or literal."), se.Undefined)), new Me(v2, n2, a2);
  }
  function We(e2, t2) {
    var n2 = e2.length - t2.length;
    return n2 > 0 ? e2.lastIndexOf(t2) === n2 : n2 === 0 && e2 === t2;
  }
  function ze(e2) {
    return e2.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g, "\\$&").replace(/[\*]/g, ".*");
  }
  var Be = me(), je = function() {
    function e2(e3, t2, n2, i2) {
      t2 === void 0 && (t2 = []), n2 === void 0 && (n2 = Promise), i2 === void 0 && (i2 = {}), this.schemaService = e3, this.contributions = t2, this.promiseConstructor = n2, this.clientCapabilities = i2;
    }
    return e2.prototype.doResolve = function(e3) {
      for (var t2 = this.contributions.length - 1; t2 >= 0; t2--) {
        var n2 = this.contributions[t2].resolveCompletion;
        if (n2) {
          var i2 = n2(e3);
          if (i2)
            return i2;
        }
      }
      return this.promiseConstructor.resolve(e3);
    }, e2.prototype.doComplete = function(e3, t2, n2) {
      var i2 = this, o2 = {items: [], isIncomplete: false}, s2 = e3.getText(), a2 = e3.offsetAt(t2), l2 = n2.getNodeFromOffset(a2, true);
      if (this.isInComment(e3, l2 ? l2.offset : 0, a2))
        return Promise.resolve(o2);
      if (l2 && a2 === l2.offset + l2.length && a2 > 0) {
        var c2 = s2[a2 - 1];
        (l2.type === "object" && c2 === "}" || l2.type === "array" && c2 === "]") && (l2 = l2.parent);
      }
      var d2, h2 = this.getCurrentWord(e3, a2);
      if (!l2 || l2.type !== "string" && l2.type !== "number" && l2.type !== "boolean" && l2.type !== "null") {
        var u2 = a2 - h2.length;
        u2 > 0 && s2[u2 - 1] === '"' && u2--, d2 = r.create(e3.positionAt(u2), t2);
      } else
        d2 = r.create(e3.positionAt(l2.offset), e3.positionAt(l2.offset + l2.length));
      var p2 = {}, m2 = {add: function(e4) {
        var t3 = e4.label, n3 = p2[t3];
        if (n3)
          n3.documentation || (n3.documentation = e4.documentation);
        else {
          if ((t3 = t3.replace(/[\n]/g, "\u21B5")).length > 60) {
            var i3 = t3.substr(0, 57).trim() + "...";
            p2[i3] || (t3 = i3);
          }
          d2 && e4.insertText !== void 0 && (e4.textEdit = b.replace(d2, e4.insertText)), e4.label = t3, p2[t3] = e4, o2.items.push(e4);
        }
      }, setAsIncomplete: function() {
        o2.isIncomplete = true;
      }, error: function(e4) {
        console.error(e4);
      }, log: function(e4) {
        console.log(e4);
      }, getNumberOfProposals: function() {
        return o2.items.length;
      }};
      return this.schemaService.getSchemaForResource(e3.uri, n2).then(function(t3) {
        var r2 = [], c3 = true, u3 = "", g2 = void 0;
        if (l2 && l2.type === "string") {
          var f2 = l2.parent;
          f2 && f2.type === "property" && f2.keyNode === l2 && (c3 = !f2.valueNode, g2 = f2, u3 = s2.substr(l2.offset + 1, l2.length - 2), f2 && (l2 = f2.parent));
        }
        if (l2 && l2.type === "object") {
          if (l2.offset === a2)
            return o2;
          l2.properties.forEach(function(e4) {
            g2 && g2 === e4 || (p2[e4.keyNode.value] = P.create("__"));
          });
          var b2 = "";
          c3 && (b2 = i2.evaluateSeparatorAfter(e3, e3.offsetAt(d2.end))), t3 ? i2.getPropertyCompletions(t3, n2, l2, c3, b2, m2) : i2.getSchemaLessPropertyCompletions(n2, l2, u3, m2);
          var _2 = Ae(l2);
          i2.contributions.forEach(function(t4) {
            var n3 = t4.collectPropertyCompletions(e3.uri, _2, h2, c3, b2 === "", m2);
            n3 && r2.push(n3);
          }), !t3 && h2.length > 0 && s2.charAt(a2 - h2.length - 1) !== '"' && (m2.add({kind: A.Property, label: i2.getLabelForValue(h2), insertText: i2.getInsertTextForProperty(h2, void 0, false, b2), insertTextFormat: R.Snippet, documentation: ""}), m2.setAsIncomplete());
        }
        var v2 = {};
        return t3 ? i2.getValueCompletions(t3, n2, l2, a2, e3, m2, v2) : i2.getSchemaLessValueCompletions(n2, l2, a2, e3, m2), i2.contributions.length > 0 && i2.getContributedValueCompletions(n2, l2, a2, e3, m2, r2), i2.promiseConstructor.all(r2).then(function() {
          if (m2.getNumberOfProposals() === 0) {
            var t4 = a2;
            !l2 || l2.type !== "string" && l2.type !== "number" && l2.type !== "boolean" && l2.type !== "null" || (t4 = l2.offset + l2.length);
            var n3 = i2.evaluateSeparatorAfter(e3, t4);
            i2.addFillerValueCompletions(v2, n3, m2);
          }
          return o2;
        });
      });
    }, e2.prototype.getPropertyCompletions = function(e3, t2, n2, i2, r2, o2) {
      var s2 = this;
      t2.getMatchingSchemas(e3.schema, n2.offset).forEach(function(e4) {
        if (e4.node === n2 && !e4.inverted) {
          var t3 = e4.schema.properties;
          t3 && Object.keys(t3).forEach(function(e5) {
            var n3 = t3[e5];
            if (typeof n3 == "object" && !n3.deprecationMessage && !n3.doNotSuggest) {
              var a3 = {kind: A.Property, label: e5, insertText: s2.getInsertTextForProperty(e5, n3, i2, r2), insertTextFormat: R.Snippet, filterText: s2.getFilterTextForValue(e5), documentation: s2.fromMarkup(n3.markdownDescription) || n3.description || ""};
              n3.suggestSortText !== void 0 && (a3.sortText = n3.suggestSortText), a3.insertText && We(a3.insertText, "$1" + r2) && (a3.command = {title: "Suggest", command: "editor.action.triggerSuggest"}), o2.add(a3);
            }
          });
          var a2 = e4.schema.propertyNames;
          if (typeof a2 == "object" && !a2.deprecationMessage && !a2.doNotSuggest) {
            var l2 = function(e5, t4) {
              t4 === void 0 && (t4 = void 0);
              var n3 = {kind: A.Property, label: e5, insertText: s2.getInsertTextForProperty(e5, void 0, i2, r2), insertTextFormat: R.Snippet, filterText: s2.getFilterTextForValue(e5), documentation: t4 || s2.fromMarkup(a2.markdownDescription) || a2.description || ""};
              a2.suggestSortText !== void 0 && (n3.sortText = a2.suggestSortText), n3.insertText && We(n3.insertText, "$1" + r2) && (n3.command = {title: "Suggest", command: "editor.action.triggerSuggest"}), o2.add(n3);
            };
            if (a2.enum)
              for (var c2 = 0; c2 < a2.enum.length; c2++) {
                var d2 = void 0;
                a2.markdownEnumDescriptions && c2 < a2.markdownEnumDescriptions.length ? d2 = s2.fromMarkup(a2.markdownEnumDescriptions[c2]) : a2.enumDescriptions && c2 < a2.enumDescriptions.length && (d2 = a2.enumDescriptions[c2]), l2(a2.enum[c2], d2);
              }
            a2.const && l2(a2.const);
          }
        }
      });
    }, e2.prototype.getSchemaLessPropertyCompletions = function(e3, t2, n2, i2) {
      var r2 = this, o2 = function(e4) {
        e4.properties.forEach(function(e5) {
          var t3 = e5.keyNode.value;
          i2.add({kind: A.Property, label: t3, insertText: r2.getInsertTextForValue(t3, ""), insertTextFormat: R.Snippet, filterText: r2.getFilterTextForValue(t3), documentation: ""});
        });
      };
      if (t2.parent)
        if (t2.parent.type === "property") {
          var s2 = t2.parent.keyNode.value;
          e3.visit(function(e4) {
            return e4.type === "property" && e4 !== t2.parent && e4.keyNode.value === s2 && e4.valueNode && e4.valueNode.type === "object" && o2(e4.valueNode), true;
          });
        } else
          t2.parent.type === "array" && t2.parent.items.forEach(function(e4) {
            e4.type === "object" && e4 !== t2 && o2(e4);
          });
      else
        t2.type === "object" && i2.add({kind: A.Property, label: "$schema", insertText: this.getInsertTextForProperty("$schema", void 0, true, ""), insertTextFormat: R.Snippet, documentation: "", filterText: this.getFilterTextForValue("$schema")});
    }, e2.prototype.getSchemaLessValueCompletions = function(e3, t2, n2, i2, r2) {
      var o2 = this, s2 = n2;
      if (!t2 || t2.type !== "string" && t2.type !== "number" && t2.type !== "boolean" && t2.type !== "null" || (s2 = t2.offset + t2.length, t2 = t2.parent), !t2)
        return r2.add({kind: this.getSuggestionKind("object"), label: "Empty object", insertText: this.getInsertTextForValue({}, ""), insertTextFormat: R.Snippet, documentation: ""}), void r2.add({kind: this.getSuggestionKind("array"), label: "Empty array", insertText: this.getInsertTextForValue([], ""), insertTextFormat: R.Snippet, documentation: ""});
      var a2 = this.evaluateSeparatorAfter(i2, s2), l2 = function(e4) {
        e4.parent && !Re(e4.parent, n2, true) && r2.add({kind: o2.getSuggestionKind(e4.type), label: o2.getLabelTextForMatchingNode(e4, i2), insertText: o2.getInsertTextForMatchingNode(e4, i2, a2), insertTextFormat: R.Snippet, documentation: ""}), e4.type === "boolean" && o2.addBooleanValueCompletion(!e4.value, a2, r2);
      };
      if (t2.type === "property" && n2 > (t2.colonOffset || 0)) {
        var c2 = t2.valueNode;
        if (c2 && (n2 > c2.offset + c2.length || c2.type === "object" || c2.type === "array"))
          return;
        var d2 = t2.keyNode.value;
        e3.visit(function(e4) {
          return e4.type === "property" && e4.keyNode.value === d2 && e4.valueNode && l2(e4.valueNode), true;
        }), d2 === "$schema" && t2.parent && !t2.parent.parent && this.addDollarSchemaCompletions(a2, r2);
      }
      if (t2.type === "array")
        if (t2.parent && t2.parent.type === "property") {
          var h2 = t2.parent.keyNode.value;
          e3.visit(function(e4) {
            return e4.type === "property" && e4.keyNode.value === h2 && e4.valueNode && e4.valueNode.type === "array" && e4.valueNode.items.forEach(l2), true;
          });
        } else
          t2.items.forEach(l2);
    }, e2.prototype.getValueCompletions = function(e3, t2, n2, i2, r2, o2, s2) {
      var a2 = i2, l2 = void 0, c2 = void 0;
      if (!n2 || n2.type !== "string" && n2.type !== "number" && n2.type !== "boolean" && n2.type !== "null" || (a2 = n2.offset + n2.length, c2 = n2, n2 = n2.parent), n2) {
        if (n2.type === "property" && i2 > (n2.colonOffset || 0)) {
          var d2 = n2.valueNode;
          if (d2 && i2 > d2.offset + d2.length)
            return;
          l2 = n2.keyNode.value, n2 = n2.parent;
        }
        if (n2 && (l2 !== void 0 || n2.type === "array")) {
          for (var h2 = this.evaluateSeparatorAfter(r2, a2), u2 = 0, p2 = t2.getMatchingSchemas(e3.schema, n2.offset, c2); u2 < p2.length; u2++) {
            var m2 = p2[u2];
            if (m2.node === n2 && !m2.inverted && m2.schema) {
              if (n2.type === "array" && m2.schema.items)
                if (Array.isArray(m2.schema.items)) {
                  var g2 = this.findItemAtOffset(n2, r2, i2);
                  g2 < m2.schema.items.length && this.addSchemaValueCompletions(m2.schema.items[g2], h2, o2, s2);
                } else
                  this.addSchemaValueCompletions(m2.schema.items, h2, o2, s2);
              if (l2 !== void 0) {
                var f2 = false;
                if (m2.schema.properties)
                  (w2 = m2.schema.properties[l2]) && (f2 = true, this.addSchemaValueCompletions(w2, h2, o2, s2));
                if (m2.schema.patternProperties && !f2)
                  for (var b2 = 0, _2 = Object.keys(m2.schema.patternProperties); b2 < _2.length; b2++) {
                    var v2 = _2[b2];
                    if (new RegExp(v2).test(l2)) {
                      f2 = true;
                      var w2 = m2.schema.patternProperties[v2];
                      this.addSchemaValueCompletions(w2, h2, o2, s2);
                    }
                  }
                if (m2.schema.additionalProperties && !f2) {
                  w2 = m2.schema.additionalProperties;
                  this.addSchemaValueCompletions(w2, h2, o2, s2);
                }
              }
            }
          }
          l2 !== "$schema" || n2.parent || this.addDollarSchemaCompletions(h2, o2), s2.boolean && (this.addBooleanValueCompletion(true, h2, o2), this.addBooleanValueCompletion(false, h2, o2)), s2.null && this.addNullValueCompletion(h2, o2);
        }
      } else
        this.addSchemaValueCompletions(e3.schema, "", o2, s2);
    }, e2.prototype.getContributedValueCompletions = function(e3, t2, n2, i2, r2, o2) {
      if (t2) {
        if (t2.type !== "string" && t2.type !== "number" && t2.type !== "boolean" && t2.type !== "null" || (t2 = t2.parent), t2 && t2.type === "property" && n2 > (t2.colonOffset || 0)) {
          var s2 = t2.keyNode.value, a2 = t2.valueNode;
          if ((!a2 || n2 <= a2.offset + a2.length) && t2.parent) {
            var l2 = Ae(t2.parent);
            this.contributions.forEach(function(e4) {
              var t3 = e4.collectValueCompletions(i2.uri, l2, s2, r2);
              t3 && o2.push(t3);
            });
          }
        }
      } else
        this.contributions.forEach(function(e4) {
          var t3 = e4.collectDefaultCompletions(i2.uri, r2);
          t3 && o2.push(t3);
        });
    }, e2.prototype.addSchemaValueCompletions = function(e3, t2, n2, i2) {
      var r2 = this;
      typeof e3 == "object" && (this.addEnumValueCompletions(e3, t2, n2), this.addDefaultValueCompletions(e3, t2, n2), this.collectTypes(e3, i2), Array.isArray(e3.allOf) && e3.allOf.forEach(function(e4) {
        return r2.addSchemaValueCompletions(e4, t2, n2, i2);
      }), Array.isArray(e3.anyOf) && e3.anyOf.forEach(function(e4) {
        return r2.addSchemaValueCompletions(e4, t2, n2, i2);
      }), Array.isArray(e3.oneOf) && e3.oneOf.forEach(function(e4) {
        return r2.addSchemaValueCompletions(e4, t2, n2, i2);
      }));
    }, e2.prototype.addDefaultValueCompletions = function(e3, t2, n2, i2) {
      var r2 = this;
      i2 === void 0 && (i2 = 0);
      var o2 = false;
      if (E(e3.default)) {
        for (var s2 = e3.type, a2 = e3.default, l2 = i2; l2 > 0; l2--)
          a2 = [a2], s2 = "array";
        n2.add({kind: this.getSuggestionKind(s2), label: this.getLabelForValue(a2), insertText: this.getInsertTextForValue(a2, t2), insertTextFormat: R.Snippet, detail: Be("json.suggest.default", "Default value")}), o2 = true;
      }
      Array.isArray(e3.examples) && e3.examples.forEach(function(s3) {
        for (var a3 = e3.type, l3 = s3, c2 = i2; c2 > 0; c2--)
          l3 = [l3], a3 = "array";
        n2.add({kind: r2.getSuggestionKind(a3), label: r2.getLabelForValue(l3), insertText: r2.getInsertTextForValue(l3, t2), insertTextFormat: R.Snippet}), o2 = true;
      }), Array.isArray(e3.defaultSnippets) && e3.defaultSnippets.forEach(function(s3) {
        var a3, l3, c2 = e3.type, d2 = s3.body, h2 = s3.label;
        if (E(d2)) {
          e3.type;
          for (var u2 = i2; u2 > 0; u2--)
            d2 = [d2], "array";
          a3 = r2.getInsertTextForSnippetValue(d2, t2), l3 = r2.getFilterTextForSnippetValue(d2), h2 = h2 || r2.getLabelForSnippetValue(d2);
        } else {
          if (typeof s3.bodyText != "string")
            return;
          var p2 = "", m2 = "", g2 = "";
          for (u2 = i2; u2 > 0; u2--)
            p2 = p2 + g2 + "[\n", m2 = m2 + "\n" + g2 + "]", g2 += "	", c2 = "array";
          a3 = p2 + g2 + s3.bodyText.split("\n").join("\n" + g2) + m2 + t2, h2 = h2 || a3, l3 = a3.replace(/[\n]/g, "");
        }
        n2.add({kind: r2.getSuggestionKind(c2), label: h2, documentation: r2.fromMarkup(s3.markdownDescription) || s3.description, insertText: a3, insertTextFormat: R.Snippet, filterText: l3}), o2 = true;
      }), !o2 && typeof e3.items == "object" && !Array.isArray(e3.items) && i2 < 5 && this.addDefaultValueCompletions(e3.items, t2, n2, i2 + 1);
    }, e2.prototype.addEnumValueCompletions = function(e3, t2, n2) {
      if (E(e3.const) && n2.add({kind: this.getSuggestionKind(e3.type), label: this.getLabelForValue(e3.const), insertText: this.getInsertTextForValue(e3.const, t2), insertTextFormat: R.Snippet, documentation: this.fromMarkup(e3.markdownDescription) || e3.description}), Array.isArray(e3.enum))
        for (var i2 = 0, r2 = e3.enum.length; i2 < r2; i2++) {
          var o2 = e3.enum[i2], s2 = this.fromMarkup(e3.markdownDescription) || e3.description;
          e3.markdownEnumDescriptions && i2 < e3.markdownEnumDescriptions.length && this.doesSupportMarkdown() ? s2 = this.fromMarkup(e3.markdownEnumDescriptions[i2]) : e3.enumDescriptions && i2 < e3.enumDescriptions.length && (s2 = e3.enumDescriptions[i2]), n2.add({kind: this.getSuggestionKind(e3.type), label: this.getLabelForValue(o2), insertText: this.getInsertTextForValue(o2, t2), insertTextFormat: R.Snippet, documentation: s2});
        }
    }, e2.prototype.collectTypes = function(e3, t2) {
      if (!Array.isArray(e3.enum) && !E(e3.const)) {
        var n2 = e3.type;
        Array.isArray(n2) ? n2.forEach(function(e4) {
          return t2[e4] = true;
        }) : n2 && (t2[n2] = true);
      }
    }, e2.prototype.addFillerValueCompletions = function(e3, t2, n2) {
      e3.object && n2.add({kind: this.getSuggestionKind("object"), label: "{}", insertText: this.getInsertTextForGuessedValue({}, t2), insertTextFormat: R.Snippet, detail: Be("defaults.object", "New object"), documentation: ""}), e3.array && n2.add({kind: this.getSuggestionKind("array"), label: "[]", insertText: this.getInsertTextForGuessedValue([], t2), insertTextFormat: R.Snippet, detail: Be("defaults.array", "New array"), documentation: ""});
    }, e2.prototype.addBooleanValueCompletion = function(e3, t2, n2) {
      n2.add({kind: this.getSuggestionKind("boolean"), label: e3 ? "true" : "false", insertText: this.getInsertTextForValue(e3, t2), insertTextFormat: R.Snippet, documentation: ""});
    }, e2.prototype.addNullValueCompletion = function(e3, t2) {
      t2.add({kind: this.getSuggestionKind("null"), label: "null", insertText: "null" + e3, insertTextFormat: R.Snippet, documentation: ""});
    }, e2.prototype.addDollarSchemaCompletions = function(e3, t2) {
      var n2 = this;
      this.schemaService.getRegisteredSchemaIds(function(e4) {
        return e4 === "http" || e4 === "https";
      }).forEach(function(i2) {
        return t2.add({kind: A.Module, label: n2.getLabelForValue(i2), filterText: n2.getFilterTextForValue(i2), insertText: n2.getInsertTextForValue(i2, e3), insertTextFormat: R.Snippet, documentation: ""});
      });
    }, e2.prototype.getLabelForValue = function(e3) {
      return JSON.stringify(e3);
    }, e2.prototype.getFilterTextForValue = function(e3) {
      return JSON.stringify(e3);
    }, e2.prototype.getFilterTextForSnippetValue = function(e3) {
      return JSON.stringify(e3).replace(/\$\{\d+:([^}]+)\}|\$\d+/g, "$1");
    }, e2.prototype.getLabelForSnippetValue = function(e3) {
      return JSON.stringify(e3).replace(/\$\{\d+:([^}]+)\}|\$\d+/g, "$1");
    }, e2.prototype.getInsertTextForPlainText = function(e3) {
      return e3.replace(/[\\\$\}]/g, "\\$&");
    }, e2.prototype.getInsertTextForValue = function(e3, t2) {
      var n2 = JSON.stringify(e3, null, "	");
      return n2 === "{}" ? "{$1}" + t2 : n2 === "[]" ? "[$1]" + t2 : this.getInsertTextForPlainText(n2 + t2);
    }, e2.prototype.getInsertTextForSnippetValue = function(e3, t2) {
      return function e4(t3, n2, i2) {
        if (t3 !== null && typeof t3 == "object") {
          var r2 = n2 + "	";
          if (Array.isArray(t3)) {
            if (t3.length === 0)
              return "[]";
            for (var o2 = "[\n", s2 = 0; s2 < t3.length; s2++)
              o2 += r2 + e4(t3[s2], r2, i2), s2 < t3.length - 1 && (o2 += ","), o2 += "\n";
            return o2 += n2 + "]";
          }
          var a2 = Object.keys(t3);
          if (a2.length === 0)
            return "{}";
          for (o2 = "{\n", s2 = 0; s2 < a2.length; s2++) {
            var l2 = a2[s2];
            o2 += r2 + JSON.stringify(l2) + ": " + e4(t3[l2], r2, i2), s2 < a2.length - 1 && (o2 += ","), o2 += "\n";
          }
          return o2 += n2 + "}";
        }
        return i2(t3);
      }(e3, "", function(e4) {
        return typeof e4 == "string" && e4[0] === "^" ? e4.substr(1) : JSON.stringify(e4);
      }) + t2;
    }, e2.prototype.getInsertTextForGuessedValue = function(e3, t2) {
      switch (typeof e3) {
        case "object":
          return e3 === null ? "${1:null}" + t2 : this.getInsertTextForValue(e3, t2);
        case "string":
          var n2 = JSON.stringify(e3);
          return n2 = n2.substr(1, n2.length - 2), '"${1:' + (n2 = this.getInsertTextForPlainText(n2)) + '}"' + t2;
        case "number":
        case "boolean":
          return "${1:" + JSON.stringify(e3) + "}" + t2;
      }
      return this.getInsertTextForValue(e3, t2);
    }, e2.prototype.getSuggestionKind = function(e3) {
      if (Array.isArray(e3)) {
        var t2 = e3;
        e3 = t2.length > 0 ? t2[0] : void 0;
      }
      if (!e3)
        return A.Value;
      switch (e3) {
        case "string":
          return A.Value;
        case "object":
          return A.Module;
        case "property":
          return A.Property;
        default:
          return A.Value;
      }
    }, e2.prototype.getLabelTextForMatchingNode = function(e3, t2) {
      switch (e3.type) {
        case "array":
          return "[]";
        case "object":
          return "{}";
        default:
          return t2.getText().substr(e3.offset, e3.length);
      }
    }, e2.prototype.getInsertTextForMatchingNode = function(e3, t2, n2) {
      switch (e3.type) {
        case "array":
          return this.getInsertTextForValue([], n2);
        case "object":
          return this.getInsertTextForValue({}, n2);
        default:
          var i2 = t2.getText().substr(e3.offset, e3.length) + n2;
          return this.getInsertTextForPlainText(i2);
      }
    }, e2.prototype.getInsertTextForProperty = function(e3, t2, n2, i2) {
      var r2 = this.getInsertTextForValue(e3, "");
      if (!n2)
        return r2;
      var o2, s2 = r2 + ": ", a2 = 0;
      if (t2) {
        if (Array.isArray(t2.defaultSnippets)) {
          if (t2.defaultSnippets.length === 1) {
            var l2 = t2.defaultSnippets[0].body;
            E(l2) && (o2 = this.getInsertTextForSnippetValue(l2, ""));
          }
          a2 += t2.defaultSnippets.length;
        }
        if (t2.enum && (o2 || t2.enum.length !== 1 || (o2 = this.getInsertTextForGuessedValue(t2.enum[0], "")), a2 += t2.enum.length), E(t2.default) && (o2 || (o2 = this.getInsertTextForGuessedValue(t2.default, "")), a2++), Array.isArray(t2.examples) && t2.examples.length && (o2 || (o2 = this.getInsertTextForGuessedValue(t2.examples[0], "")), a2 += t2.examples.length), a2 === 0) {
          var c2 = Array.isArray(t2.type) ? t2.type[0] : t2.type;
          switch (c2 || (t2.properties ? c2 = "object" : t2.items && (c2 = "array")), c2) {
            case "boolean":
              o2 = "$1";
              break;
            case "string":
              o2 = '"$1"';
              break;
            case "object":
              o2 = "{$1}";
              break;
            case "array":
              o2 = "[$1]";
              break;
            case "number":
            case "integer":
              o2 = "${1:0}";
              break;
            case "null":
              o2 = "${1:null}";
              break;
            default:
              return r2;
          }
        }
      }
      return (!o2 || a2 > 1) && (o2 = "$1"), s2 + o2 + i2;
    }, e2.prototype.getCurrentWord = function(e3, t2) {
      for (var n2 = t2 - 1, i2 = e3.getText(); n2 >= 0 && ' 	\n\r\v":{[,]}'.indexOf(i2.charAt(n2)) === -1; )
        n2--;
      return i2.substring(n2 + 1, t2);
    }, e2.prototype.evaluateSeparatorAfter = function(e3, t2) {
      var n2 = x.a(e3.getText(), true);
      switch (n2.setPosition(t2), n2.scan()) {
        case 5:
        case 2:
        case 4:
        case 17:
          return "";
        default:
          return ",";
      }
    }, e2.prototype.findItemAtOffset = function(e3, t2, n2) {
      for (var i2 = x.a(t2.getText(), true), r2 = e3.items, o2 = r2.length - 1; o2 >= 0; o2--) {
        var s2 = r2[o2];
        if (n2 > s2.offset + s2.length)
          return i2.setPosition(s2.offset + s2.length), i2.scan() === 5 && n2 >= i2.getTokenOffset() + i2.getTokenLength() ? o2 + 1 : o2;
        if (n2 >= s2.offset)
          return o2;
      }
      return 0;
    }, e2.prototype.isInComment = function(e3, t2, n2) {
      var i2 = x.a(e3.getText(), false);
      i2.setPosition(t2);
      for (var r2 = i2.scan(); r2 !== 17 && i2.getTokenOffset() + i2.getTokenLength() < n2; )
        r2 = i2.scan();
      return (r2 === 12 || r2 === 13) && i2.getTokenOffset() <= n2;
    }, e2.prototype.fromMarkup = function(e3) {
      if (e3 && this.doesSupportMarkdown())
        return {kind: D.Markdown, value: e3};
    }, e2.prototype.doesSupportMarkdown = function() {
      if (!E(this.supportsMarkdown)) {
        var e3 = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;
        this.supportsMarkdown = e3 && e3.completionItem && Array.isArray(e3.completionItem.documentationFormat) && e3.completionItem.documentationFormat.indexOf(D.Markdown) !== -1;
      }
      return this.supportsMarkdown;
    }, e2.prototype.doesSupportsCommitCharacters = function() {
      if (!E(this.supportsCommitCharacters)) {
        var e3 = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;
        this.supportsCommitCharacters = e3 && e3.completionItem && !!e3.completionItem.commitCharactersSupport;
      }
      return this.supportsCommitCharacters;
    }, e2;
  }(), Ve = function() {
    function e2(e3, t2, n2) {
      t2 === void 0 && (t2 = []), this.schemaService = e3, this.contributions = t2, this.promise = n2 || Promise;
    }
    return e2.prototype.doHover = function(e3, t2, n2) {
      var i2 = e3.offsetAt(t2), o2 = n2.getNodeFromOffset(i2);
      if (!o2 || (o2.type === "object" || o2.type === "array") && i2 > o2.offset + 1 && i2 < o2.offset + o2.length - 1)
        return this.promise.resolve(null);
      var s2 = o2;
      if (o2.type === "string") {
        var a2 = o2.parent;
        if (a2 && a2.type === "property" && a2.keyNode === o2 && !(o2 = a2.valueNode))
          return this.promise.resolve(null);
      }
      for (var l2 = r.create(e3.positionAt(s2.offset), e3.positionAt(s2.offset + s2.length)), c2 = function(e4) {
        return {contents: e4, range: l2};
      }, d2 = Ae(o2), h2 = this.contributions.length - 1; h2 >= 0; h2--) {
        var u2 = this.contributions[h2].getInfoContribution(e3.uri, d2);
        if (u2)
          return u2.then(function(e4) {
            return c2(e4);
          });
      }
      return this.schemaService.getSchemaForResource(e3.uri, n2).then(function(e4) {
        if (e4 && o2) {
          var t3 = n2.getMatchingSchemas(e4.schema, o2.offset), i3 = void 0, r2 = void 0, s3 = void 0, a3 = void 0;
          t3.every(function(e5) {
            if (e5.node === o2 && !e5.inverted && e5.schema && (i3 = i3 || e5.schema.title, r2 = r2 || e5.schema.markdownDescription || Ue(e5.schema.description), e5.schema.enum)) {
              var t4 = e5.schema.enum.indexOf(Oe(o2));
              e5.schema.markdownEnumDescriptions ? s3 = e5.schema.markdownEnumDescriptions[t4] : e5.schema.enumDescriptions && (s3 = Ue(e5.schema.enumDescriptions[t4])), s3 && typeof (a3 = e5.schema.enum[t4]) != "string" && (a3 = JSON.stringify(a3));
            }
            return true;
          });
          var l3 = "";
          return i3 && (l3 = Ue(i3)), r2 && (l3.length > 0 && (l3 += "\n\n"), l3 += r2), s3 && (l3.length > 0 && (l3 += "\n\n"), l3 += "`" + function(e5) {
            if (e5.indexOf("`") !== -1)
              return "`` " + e5 + " ``";
            return e5;
          }(a3) + "`: " + s3), c2([l3]);
        }
        return null;
      });
    }, e2;
  }();
  function Ue(e2) {
    if (e2)
      return e2.replace(/([^\n\r])(\r?\n)([^\n\r])/gm, "$1\n\n$3").replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
  }
  var He = n(140), qe = me(), $e = function() {
    function e2(e3, t2) {
      this.patternRegExps = [], this.isInclude = [];
      try {
        for (var n2 = 0, i2 = e3; n2 < i2.length; n2++) {
          var r2 = i2[n2], o2 = r2[0] !== "!";
          o2 || (r2 = r2.substring(1)), this.patternRegExps.push(new RegExp(ze(r2) + "$")), this.isInclude.push(o2);
        }
        this.uris = t2;
      } catch (e4) {
        this.patternRegExps.length = 0, this.isInclude.length = 0, this.uris = [];
      }
    }
    return e2.prototype.matchesPattern = function(e3) {
      for (var t2 = false, n2 = 0; n2 < this.patternRegExps.length; n2++) {
        this.patternRegExps[n2].test(e3) && (t2 = this.isInclude[n2]);
      }
      return t2;
    }, e2.prototype.getURIs = function() {
      return this.uris;
    }, e2;
  }(), Ke = function() {
    function e2(e3, t2, n2) {
      this.service = e3, this.url = t2, this.dependencies = {}, n2 && (this.unresolvedSchema = this.service.promise.resolve(new Ge(n2)));
    }
    return e2.prototype.getUnresolvedSchema = function() {
      return this.unresolvedSchema || (this.unresolvedSchema = this.service.loadSchema(this.url)), this.unresolvedSchema;
    }, e2.prototype.getResolvedSchema = function() {
      var e3 = this;
      return this.resolvedSchema || (this.resolvedSchema = this.getUnresolvedSchema().then(function(t2) {
        return e3.service.resolveSchemaContent(t2, e3.url, e3.dependencies);
      })), this.resolvedSchema;
    }, e2.prototype.clearSchema = function() {
      this.resolvedSchema = void 0, this.unresolvedSchema = void 0, this.dependencies = {};
    }, e2;
  }(), Ge = function(e2, t2) {
    t2 === void 0 && (t2 = []), this.schema = e2, this.errors = t2;
  }, Ye = function() {
    function e2(e3, t2) {
      t2 === void 0 && (t2 = []), this.schema = e3, this.errors = t2;
    }
    return e2.prototype.getSection = function(e3) {
      var t2 = this.getSectionRecursive(e3, this.schema);
      if (t2)
        return Le(t2);
    }, e2.prototype.getSectionRecursive = function(e3, t2) {
      if (!t2 || typeof t2 == "boolean" || e3.length === 0)
        return t2;
      var n2 = e3.shift();
      if (t2.properties && (t2.properties[n2], 1))
        return this.getSectionRecursive(e3, t2.properties[n2]);
      if (t2.patternProperties)
        for (var i2 = 0, r2 = Object.keys(t2.patternProperties); i2 < r2.length; i2++) {
          var o2 = r2[i2];
          if (new RegExp(o2).test(n2))
            return this.getSectionRecursive(e3, t2.patternProperties[o2]);
        }
      else {
        if (typeof t2.additionalProperties == "object")
          return this.getSectionRecursive(e3, t2.additionalProperties);
        if (n2.match("[0-9]+")) {
          if (Array.isArray(t2.items)) {
            var s2 = parseInt(n2, 10);
            if (!isNaN(s2) && t2.items[s2])
              return this.getSectionRecursive(e3, t2.items[s2]);
          } else if (t2.items)
            return this.getSectionRecursive(e3, t2.items);
        }
      }
    }, e2;
  }(), Ze = function() {
    function e2(e3, t2, n2) {
      this.contextService = t2, this.requestService = e3, this.promiseConstructor = n2 || Promise, this.callOnDispose = [], this.contributionSchemas = {}, this.contributionAssociations = [], this.schemasById = {}, this.filePatternAssociations = [], this.registeredSchemasIds = {};
    }
    return e2.prototype.getRegisteredSchemaIds = function(e3) {
      return Object.keys(this.registeredSchemasIds).filter(function(t2) {
        var n2 = He.a.parse(t2).scheme;
        return n2 !== "schemaservice" && (!e3 || e3(n2));
      });
    }, Object.defineProperty(e2.prototype, "promise", {get: function() {
      return this.promiseConstructor;
    }, enumerable: false, configurable: true}), e2.prototype.dispose = function() {
      for (; this.callOnDispose.length > 0; )
        this.callOnDispose.pop()();
    }, e2.prototype.onResourceChange = function(e3) {
      for (var t2 = this, n2 = false, i2 = [e3 = Qe(e3)], r2 = Object.keys(this.schemasById).map(function(e4) {
        return t2.schemasById[e4];
      }); i2.length; )
        for (var o2 = i2.pop(), s2 = 0; s2 < r2.length; s2++) {
          var a2 = r2[s2];
          a2 && (a2.url === o2 || a2.dependencies[o2]) && (a2.url !== o2 && i2.push(a2.url), a2.clearSchema(), r2[s2] = void 0, n2 = true);
        }
      return n2;
    }, e2.prototype.setSchemaContributions = function(e3) {
      if (e3.schemas) {
        var t2 = e3.schemas;
        for (var n2 in t2) {
          var i2 = Qe(n2);
          this.contributionSchemas[i2] = this.addSchemaHandle(i2, t2[n2]);
        }
      }
      if (Array.isArray(e3.schemaAssociations))
        for (var r2 = 0, o2 = e3.schemaAssociations; r2 < o2.length; r2++) {
          var s2 = o2[r2], a2 = s2.uris.map(Qe), l2 = this.addFilePatternAssociation(s2.pattern, a2);
          this.contributionAssociations.push(l2);
        }
    }, e2.prototype.addSchemaHandle = function(e3, t2) {
      var n2 = new Ke(this, e3, t2);
      return this.schemasById[e3] = n2, n2;
    }, e2.prototype.getOrAddSchemaHandle = function(e3, t2) {
      return this.schemasById[e3] || this.addSchemaHandle(e3, t2);
    }, e2.prototype.addFilePatternAssociation = function(e3, t2) {
      var n2 = new $e(e3, t2);
      return this.filePatternAssociations.push(n2), n2;
    }, e2.prototype.registerExternalSchema = function(e3, t2, n2) {
      var i2 = Qe(e3);
      return this.registeredSchemasIds[i2] = true, this.cachedSchemaForResource = void 0, t2 && this.addFilePatternAssociation(t2, [e3]), n2 ? this.addSchemaHandle(i2, n2) : this.getOrAddSchemaHandle(i2);
    }, e2.prototype.clearExternalSchemas = function() {
      for (var e3 in this.schemasById = {}, this.filePatternAssociations = [], this.registeredSchemasIds = {}, this.cachedSchemaForResource = void 0, this.contributionSchemas)
        this.schemasById[e3] = this.contributionSchemas[e3], this.registeredSchemasIds[e3] = true;
      for (var t2 = 0, n2 = this.contributionAssociations; t2 < n2.length; t2++) {
        var i2 = n2[t2];
        this.filePatternAssociations.push(i2);
      }
    }, e2.prototype.getResolvedSchema = function(e3) {
      var t2 = Qe(e3), n2 = this.schemasById[t2];
      return n2 ? n2.getResolvedSchema() : this.promise.resolve(void 0);
    }, e2.prototype.loadSchema = function(e3) {
      if (!this.requestService) {
        var t2 = qe("json.schema.norequestservice", "Unable to load schema from '{0}'. No schema request service available", Je(e3));
        return this.promise.resolve(new Ge({}, [t2]));
      }
      return this.requestService(e3).then(function(t3) {
        if (!t3) {
          var n2 = qe("json.schema.nocontent", "Unable to load schema from '{0}': No content.", Je(e3));
          return new Ge({}, [n2]);
        }
        var i2, r2 = [];
        i2 = x.f(t3, r2);
        var o2 = r2.length ? [qe("json.schema.invalidFormat", "Unable to parse content from '{0}': Parse error at offset {1}.", Je(e3), r2[0].offset)] : [];
        return new Ge(i2, o2);
      }, function(t3) {
        var n2 = t3.toString(), i2 = t3.toString().split("Error: ");
        return i2.length > 1 && (n2 = i2[1]), We(n2, ".") && (n2 = n2.substr(0, n2.length - 1)), new Ge({}, [qe("json.schema.nocontent", "Unable to load schema from '{0}': {1}.", Je(e3), n2)]);
      });
    }, e2.prototype.resolveSchemaContent = function(e3, t2, n2) {
      var i2 = this, r2 = e3.errors.slice(0), o2 = e3.schema;
      if (o2.$schema) {
        var s2 = Qe(o2.$schema);
        if (s2 === "http://json-schema.org/draft-03/schema")
          return this.promise.resolve(new Ye({}, [qe("json.schema.draft03.notsupported", "Draft-03 schemas are not supported.")]));
        s2 === "https://json-schema.org/draft/2019-09/schema" && r2.push(qe("json.schema.draft201909.notsupported", "Draft 2019-09 schemas are not yet fully supported."));
      }
      var a2 = this.contextService, l2 = function(e4, t3, n3, i3) {
        var o3 = i3 ? decodeURIComponent(i3) : void 0, s3 = function(e5, t4) {
          if (!t4)
            return e5;
          var n4 = e5;
          return t4[0] === "/" && (t4 = t4.substr(1)), t4.split("/").some(function(e6) {
            return !(n4 = n4[e6]);
          }), n4;
        }(t3, o3);
        if (s3)
          for (var a3 in s3)
            s3.hasOwnProperty(a3) && !e4.hasOwnProperty(a3) && (e4[a3] = s3[a3]);
        else
          r2.push(qe("json.schema.invalidref", "$ref '{0}' in '{1}' can not be resolved.", o3, n3));
      }, c2 = function(e4, t3, n3, o3, s3) {
        a2 && !/^\w+:\/\/.*/.test(t3) && (t3 = a2.resolveRelativePath(t3, o3)), t3 = Qe(t3);
        var c3 = i2.getOrAddSchemaHandle(t3);
        return c3.getUnresolvedSchema().then(function(i3) {
          if (s3[t3] = true, i3.errors.length) {
            var o4 = n3 ? t3 + "#" + n3 : t3;
            r2.push(qe("json.schema.problemloadingref", "Problems loading reference '{0}': {1}", o4, i3.errors[0]));
          }
          return l2(e4, i3.schema, t3, n3), d2(e4, i3.schema, t3, c3.dependencies);
        });
      }, d2 = function(e4, t3, n3, r3) {
        if (!e4 || typeof e4 != "object")
          return Promise.resolve(null);
        for (var o3 = [e4], s3 = [], a3 = [], d3 = function(e5) {
          for (var i3 = []; e5.$ref; ) {
            var s4 = e5.$ref, d4 = s4.split("#", 2);
            if (delete e5.$ref, d4[0].length > 0)
              return void a3.push(c2(e5, d4[0], d4[1], n3, r3));
            i3.indexOf(s4) === -1 && (l2(e5, t3, n3, d4[1]), i3.push(s4));
          }
          !function() {
            for (var e6 = [], t4 = 0; t4 < arguments.length; t4++)
              e6[t4] = arguments[t4];
            for (var n4 = 0, i4 = e6; n4 < i4.length; n4++) {
              var r4 = i4[n4];
              typeof r4 == "object" && o3.push(r4);
            }
          }(e5.items, e5.additionalItems, e5.additionalProperties, e5.not, e5.contains, e5.propertyNames, e5.if, e5.then, e5.else), function() {
            for (var e6 = [], t4 = 0; t4 < arguments.length; t4++)
              e6[t4] = arguments[t4];
            for (var n4 = 0, i4 = e6; n4 < i4.length; n4++) {
              var r4 = i4[n4];
              if (typeof r4 == "object")
                for (var s5 in r4) {
                  var a4 = s5, l3 = r4[a4];
                  typeof l3 == "object" && o3.push(l3);
                }
            }
          }(e5.definitions, e5.properties, e5.patternProperties, e5.dependencies), function() {
            for (var e6 = [], t4 = 0; t4 < arguments.length; t4++)
              e6[t4] = arguments[t4];
            for (var n4 = 0, i4 = e6; n4 < i4.length; n4++) {
              var r4 = i4[n4];
              if (Array.isArray(r4))
                for (var s5 = 0, a4 = r4; s5 < a4.length; s5++) {
                  var l3 = a4[s5];
                  typeof l3 == "object" && o3.push(l3);
                }
            }
          }(e5.anyOf, e5.allOf, e5.oneOf, e5.items);
        }; o3.length; ) {
          var h2 = o3.pop();
          s3.indexOf(h2) >= 0 || (s3.push(h2), d3(h2));
        }
        return i2.promise.all(a3);
      };
      return d2(o2, o2, t2, n2).then(function(e4) {
        return new Ye(o2, r2);
      });
    }, e2.prototype.getSchemaForResource = function(e3, t2) {
      if (t2 && t2.root && t2.root.type === "object") {
        var n2 = t2.root.properties.filter(function(e4) {
          return e4.keyNode.value === "$schema" && e4.valueNode && e4.valueNode.type === "string";
        });
        if (n2.length > 0) {
          var i2 = n2[0].valueNode;
          if (i2 && i2.type === "string") {
            var r2 = Oe(i2);
            if (r2 && function(e4, t3) {
              if (e4.length < t3.length)
                return false;
              for (var n3 = 0; n3 < t3.length; n3++)
                if (e4[n3] !== t3[n3])
                  return false;
              return true;
            }(r2, ".") && this.contextService && (r2 = this.contextService.resolveRelativePath(r2, e3)), r2) {
              var o2 = Qe(r2);
              return this.getOrAddSchemaHandle(o2).getResolvedSchema();
            }
          }
        }
      }
      if (this.cachedSchemaForResource && this.cachedSchemaForResource.resource === e3)
        return this.cachedSchemaForResource.resolvedSchema;
      for (var s2 = Object.create(null), a2 = [], l2 = 0, c2 = this.filePatternAssociations; l2 < c2.length; l2++) {
        var d2 = c2[l2];
        if (d2.matchesPattern(e3))
          for (var h2 = 0, u2 = d2.getURIs(); h2 < u2.length; h2++) {
            var p2 = u2[h2];
            s2[p2] || (a2.push(p2), s2[p2] = true);
          }
      }
      var m2 = a2.length > 0 ? this.createCombinedSchema(e3, a2).getResolvedSchema() : this.promise.resolve(void 0);
      return this.cachedSchemaForResource = {resource: e3, resolvedSchema: m2}, m2;
    }, e2.prototype.createCombinedSchema = function(e3, t2) {
      if (t2.length === 1)
        return this.getOrAddSchemaHandle(t2[0]);
      var n2 = "schemaservice://combinedSchema/" + encodeURIComponent(e3), i2 = {allOf: t2.map(function(e4) {
        return {$ref: e4};
      })};
      return this.addSchemaHandle(n2, i2);
    }, e2.prototype.getMatchingSchemas = function(e3, t2, n2) {
      if (n2) {
        var i2 = n2.id || "schemaservice://untitled/matchingSchemas/" + Xe++;
        return this.resolveSchemaContent(new Ge(n2), i2, {}).then(function(e4) {
          return t2.getMatchingSchemas(e4.schema).filter(function(e5) {
            return !e5.inverted;
          });
        });
      }
      return this.getSchemaForResource(e3.uri, t2).then(function(e4) {
        return e4 ? t2.getMatchingSchemas(e4.schema).filter(function(e5) {
          return !e5.inverted;
        }) : [];
      });
    }, e2;
  }(), Xe = 0;
  function Qe(e2) {
    try {
      return He.a.parse(e2).toString();
    } catch (t2) {
      return e2;
    }
  }
  function Je(e2) {
    try {
      var t2 = He.a.parse(e2);
      if (t2.scheme === "file")
        return t2.fsPath;
    } catch (e3) {
    }
    return e2;
  }
  var et = me(), tt = function() {
    function e2(e3, t2) {
      this.jsonSchemaService = e3, this.promise = t2, this.validationEnabled = true;
    }
    return e2.prototype.configure = function(e3) {
      e3 && (this.validationEnabled = e3.validate, this.commentSeverity = e3.allowComments ? void 0 : p.Error);
    }, e2.prototype.doValidation = function(e3, t2, n2, i2) {
      var o2 = this;
      if (!this.validationEnabled)
        return this.promise.resolve([]);
      var s2 = [], a2 = {}, l2 = function(e4) {
        var t3 = e4.range.start.line + " " + e4.range.start.character + " " + e4.message;
        a2[t3] || (a2[t3] = true, s2.push(e4));
      }, c2 = function(i3) {
        var a3 = n2 ? it(n2.trailingCommas) : p.Error, c3 = n2 ? it(n2.comments) : o2.commentSeverity;
        if (i3) {
          if (i3.errors.length && t2.root) {
            var d3 = t2.root, h2 = d3.type === "object" ? d3.properties[0] : void 0;
            if (h2 && h2.keyNode.value === "$schema") {
              var u2 = h2.valueNode || h2, m2 = r.create(e3.positionAt(u2.offset), e3.positionAt(u2.offset + u2.length));
              l2(g.create(m2, i3.errors[0], p.Warning, se.SchemaResolveError));
            } else {
              m2 = r.create(e3.positionAt(d3.offset), e3.positionAt(d3.offset + 1));
              l2(g.create(m2, i3.errors[0], p.Warning, se.SchemaResolveError));
            }
          } else {
            var f2 = t2.validate(e3, i3.schema);
            f2 && f2.forEach(l2);
          }
          (function e4(t3) {
            if (t3 && typeof t3 == "object") {
              if (T(t3.allowComments))
                return t3.allowComments;
              if (t3.allOf)
                for (var n3 = 0, i4 = t3.allOf; n3 < i4.length; n3++) {
                  var r2 = i4[n3], o3 = e4(r2);
                  if (T(o3))
                    return o3;
                }
            }
            return;
          })(i3.schema) && (c3 = void 0), function e4(t3) {
            if (t3 && typeof t3 == "object") {
              if (T(t3.allowTrailingCommas))
                return t3.allowTrailingCommas;
              var n3 = t3;
              if (T(n3.allowsTrailingCommas))
                return n3.allowsTrailingCommas;
              if (t3.allOf)
                for (var i4 = 0, r2 = t3.allOf; i4 < r2.length; i4++) {
                  var o3 = r2[i4], s3 = e4(o3);
                  if (T(s3))
                    return s3;
                }
            }
            return;
          }(i3.schema) && (a3 = void 0);
        }
        for (var b2 = 0, _2 = t2.syntaxErrors; b2 < _2.length; b2++) {
          var v2 = _2[b2];
          if (v2.code === se.TrailingComma) {
            if (typeof a3 != "number")
              continue;
            v2.severity = a3;
          }
          l2(v2);
        }
        if (typeof c3 == "number") {
          var w2 = et("InvalidCommentToken", "Comments are not permitted in JSON.");
          t2.comments.forEach(function(e4) {
            l2(g.create(e4, w2, c3, se.CommentNotPermitted));
          });
        }
        return s2;
      };
      if (i2) {
        var d2 = i2.id || "schemaservice://untitled/" + nt++;
        return this.jsonSchemaService.resolveSchemaContent(new Ge(i2), d2, {}).then(function(e4) {
          return c2(e4);
        });
      }
      return this.jsonSchemaService.getSchemaForResource(e3.uri, t2).then(function(e4) {
        return c2(e4);
      });
    }, e2;
  }(), nt = 0;
  function it(e2) {
    switch (e2) {
      case "error":
        return p.Error;
      case "warning":
        return p.Warning;
      case "ignore":
        return;
    }
  }
  function rt(e2) {
    return e2 < 48 ? 0 : e2 <= 57 ? e2 - 48 : (e2 < 97 && (e2 += 32), e2 >= 97 && e2 <= 102 ? e2 - 97 + 10 : 0);
  }
  function ot(e2) {
    if (e2[0] === "#")
      switch (e2.length) {
        case 4:
          return {red: 17 * rt(e2.charCodeAt(1)) / 255, green: 17 * rt(e2.charCodeAt(2)) / 255, blue: 17 * rt(e2.charCodeAt(3)) / 255, alpha: 1};
        case 5:
          return {red: 17 * rt(e2.charCodeAt(1)) / 255, green: 17 * rt(e2.charCodeAt(2)) / 255, blue: 17 * rt(e2.charCodeAt(3)) / 255, alpha: 17 * rt(e2.charCodeAt(4)) / 255};
        case 7:
          return {red: (16 * rt(e2.charCodeAt(1)) + rt(e2.charCodeAt(2))) / 255, green: (16 * rt(e2.charCodeAt(3)) + rt(e2.charCodeAt(4))) / 255, blue: (16 * rt(e2.charCodeAt(5)) + rt(e2.charCodeAt(6))) / 255, alpha: 1};
        case 9:
          return {red: (16 * rt(e2.charCodeAt(1)) + rt(e2.charCodeAt(2))) / 255, green: (16 * rt(e2.charCodeAt(3)) + rt(e2.charCodeAt(4))) / 255, blue: (16 * rt(e2.charCodeAt(5)) + rt(e2.charCodeAt(6))) / 255, alpha: (16 * rt(e2.charCodeAt(7)) + rt(e2.charCodeAt(8))) / 255};
      }
  }
  var st = function() {
    function e2(e3) {
      this.schemaService = e3;
    }
    return e2.prototype.findDocumentSymbols = function(e3, t2, n2) {
      var i2 = this;
      n2 === void 0 && (n2 = {resultLimit: Number.MAX_VALUE});
      var r2 = t2.root;
      if (!r2)
        return [];
      var s2 = n2.resultLimit || Number.MAX_VALUE, a2 = e3.uri;
      if ((a2 === "vscode://defaultsettings/keybindings.json" || We(a2.toLowerCase(), "/user/keybindings.json")) && r2.type === "array") {
        for (var l2 = [], c2 = 0, d2 = r2.items; c2 < d2.length; c2++) {
          var h2 = d2[c2];
          if (h2.type === "object")
            for (var u2 = 0, p2 = h2.properties; u2 < p2.length; u2++) {
              var m2 = p2[u2];
              if (m2.keyNode.value === "key" && m2.valueNode) {
                var g2 = o.create(e3.uri, at(e3, h2));
                if (l2.push({name: Oe(m2.valueNode), kind: H.Function, location: g2}), --s2 <= 0)
                  return n2 && n2.onResultLimitExceeded && n2.onResultLimitExceeded(a2), l2;
              }
            }
        }
        return l2;
      }
      for (var f2 = [{node: r2, containerName: ""}], b2 = 0, _2 = false, v2 = [], w2 = function(t3, n3) {
        t3.type === "array" ? t3.items.forEach(function(e4) {
          e4 && f2.push({node: e4, containerName: n3});
        }) : t3.type === "object" && t3.properties.forEach(function(t4) {
          var r3 = t4.valueNode;
          if (r3)
            if (s2 > 0) {
              s2--;
              var a3 = o.create(e3.uri, at(e3, t4)), l3 = n3 ? n3 + "." + t4.keyNode.value : t4.keyNode.value;
              v2.push({name: i2.getKeyLabel(t4), kind: i2.getSymbolKind(r3.type), location: a3, containerName: n3}), f2.push({node: r3, containerName: l3});
            } else
              _2 = true;
        });
      }; b2 < f2.length; ) {
        var y2 = f2[b2++];
        w2(y2.node, y2.containerName);
      }
      return _2 && n2 && n2.onResultLimitExceeded && n2.onResultLimitExceeded(a2), v2;
    }, e2.prototype.findDocumentSymbols2 = function(e3, t2, n2) {
      var i2 = this;
      n2 === void 0 && (n2 = {resultLimit: Number.MAX_VALUE});
      var r2 = t2.root;
      if (!r2)
        return [];
      var o2 = n2.resultLimit || Number.MAX_VALUE, s2 = e3.uri;
      if ((s2 === "vscode://defaultsettings/keybindings.json" || We(s2.toLowerCase(), "/user/keybindings.json")) && r2.type === "array") {
        for (var a2 = [], l2 = 0, c2 = r2.items; l2 < c2.length; l2++) {
          var d2 = c2[l2];
          if (d2.type === "object")
            for (var h2 = 0, u2 = d2.properties; h2 < u2.length; h2++) {
              var p2 = u2[h2];
              if (p2.keyNode.value === "key" && p2.valueNode) {
                var m2 = at(e3, d2), g2 = at(e3, p2.keyNode);
                if (a2.push({name: Oe(p2.valueNode), kind: H.Function, range: m2, selectionRange: g2}), --o2 <= 0)
                  return n2 && n2.onResultLimitExceeded && n2.onResultLimitExceeded(s2), a2;
              }
            }
        }
        return a2;
      }
      for (var f2 = [], b2 = [{node: r2, result: f2}], _2 = 0, v2 = false, w2 = function(t3, n3) {
        t3.type === "array" ? t3.items.forEach(function(t4, r3) {
          if (t4)
            if (o2 > 0) {
              o2--;
              var s3 = at(e3, t4), a3 = s3, l3 = {name: String(r3), kind: i2.getSymbolKind(t4.type), range: s3, selectionRange: a3, children: []};
              n3.push(l3), b2.push({result: l3.children, node: t4});
            } else
              v2 = true;
        }) : t3.type === "object" && t3.properties.forEach(function(t4) {
          var r3 = t4.valueNode;
          if (r3)
            if (o2 > 0) {
              o2--;
              var s3 = at(e3, t4), a3 = at(e3, t4.keyNode), l3 = {name: i2.getKeyLabel(t4), kind: i2.getSymbolKind(r3.type), range: s3, selectionRange: a3, children: []};
              n3.push(l3), b2.push({result: l3.children, node: r3});
            } else
              v2 = true;
        });
      }; _2 < b2.length; ) {
        var y2 = b2[_2++];
        w2(y2.node, y2.result);
      }
      return v2 && n2 && n2.onResultLimitExceeded && n2.onResultLimitExceeded(s2), f2;
    }, e2.prototype.getSymbolKind = function(e3) {
      switch (e3) {
        case "object":
          return H.Module;
        case "string":
          return H.String;
        case "number":
          return H.Number;
        case "array":
          return H.Array;
        case "boolean":
          return H.Boolean;
        default:
          return H.Variable;
      }
    }, e2.prototype.getKeyLabel = function(e3) {
      var t2 = e3.keyNode.value;
      return t2 && (t2 = t2.replace(/[\n]/g, "\u21B5")), t2 && t2.trim() ? t2 : '"' + t2 + '"';
    }, e2.prototype.findDocumentColors = function(e3, t2, n2) {
      return this.schemaService.getSchemaForResource(e3.uri, t2).then(function(i2) {
        var r2 = [];
        if (i2)
          for (var o2 = n2 && typeof n2.resultLimit == "number" ? n2.resultLimit : Number.MAX_VALUE, s2 = {}, a2 = 0, l2 = t2.getMatchingSchemas(i2.schema); a2 < l2.length; a2++) {
            var c2 = l2[a2];
            if (!c2.inverted && c2.schema && (c2.schema.format === "color" || c2.schema.format === "color-hex") && c2.node && c2.node.type === "string") {
              var d2 = String(c2.node.offset);
              if (!s2[d2]) {
                var h2 = ot(Oe(c2.node));
                if (h2) {
                  var u2 = at(e3, c2.node);
                  r2.push({color: h2, range: u2});
                }
                if (s2[d2] = true, --o2 <= 0)
                  return n2 && n2.onResultLimitExceeded && n2.onResultLimitExceeded(e3.uri), r2;
              }
            }
          }
        return r2;
      });
    }, e2.prototype.getColorPresentations = function(e3, t2, n2, i2) {
      var r2, o2 = [], s2 = Math.round(255 * n2.red), a2 = Math.round(255 * n2.green), l2 = Math.round(255 * n2.blue);
      function c2(e4) {
        var t3 = e4.toString(16);
        return t3.length !== 2 ? "0" + t3 : t3;
      }
      return r2 = n2.alpha === 1 ? "#" + c2(s2) + c2(a2) + c2(l2) : "#" + c2(s2) + c2(a2) + c2(l2) + c2(Math.round(255 * n2.alpha)), o2.push({label: r2, textEdit: b.replace(i2, JSON.stringify(r2))}), o2;
    }, e2;
  }();
  function at(e2, t2) {
    return r.create(e2.positionAt(t2.offset), e2.positionAt(t2.offset + t2.length));
  }
  var lt = me(), ct = {schemaAssociations: [], schemas: {"http://json-schema.org/schema#": {$ref: "http://json-schema.org/draft-07/schema#"}, "http://json-schema.org/draft-04/schema#": {title: lt("schema.json", "Describes a JSON file using a schema. See json-schema.org for more info."), $schema: "http://json-schema.org/draft-04/schema#", definitions: {schemaArray: {type: "array", minItems: 1, items: {$ref: "#"}}, positiveInteger: {type: "integer", minimum: 0}, positiveIntegerDefault0: {allOf: [{$ref: "#/definitions/positiveInteger"}, {default: 0}]}, simpleTypes: {type: "string", enum: ["array", "boolean", "integer", "null", "number", "object", "string"]}, stringArray: {type: "array", items: {type: "string"}, minItems: 1, uniqueItems: true}}, type: "object", properties: {id: {type: "string", format: "uri"}, $schema: {type: "string", format: "uri"}, title: {type: "string"}, description: {type: "string"}, default: {}, multipleOf: {type: "number", minimum: 0, exclusiveMinimum: true}, maximum: {type: "number"}, exclusiveMaximum: {type: "boolean", default: false}, minimum: {type: "number"}, exclusiveMinimum: {type: "boolean", default: false}, maxLength: {allOf: [{$ref: "#/definitions/positiveInteger"}]}, minLength: {allOf: [{$ref: "#/definitions/positiveIntegerDefault0"}]}, pattern: {type: "string", format: "regex"}, additionalItems: {anyOf: [{type: "boolean"}, {$ref: "#"}], default: {}}, items: {anyOf: [{$ref: "#"}, {$ref: "#/definitions/schemaArray"}], default: {}}, maxItems: {allOf: [{$ref: "#/definitions/positiveInteger"}]}, minItems: {allOf: [{$ref: "#/definitions/positiveIntegerDefault0"}]}, uniqueItems: {type: "boolean", default: false}, maxProperties: {allOf: [{$ref: "#/definitions/positiveInteger"}]}, minProperties: {allOf: [{$ref: "#/definitions/positiveIntegerDefault0"}]}, required: {allOf: [{$ref: "#/definitions/stringArray"}]}, additionalProperties: {anyOf: [{type: "boolean"}, {$ref: "#"}], default: {}}, definitions: {type: "object", additionalProperties: {$ref: "#"}, default: {}}, properties: {type: "object", additionalProperties: {$ref: "#"}, default: {}}, patternProperties: {type: "object", additionalProperties: {$ref: "#"}, default: {}}, dependencies: {type: "object", additionalProperties: {anyOf: [{$ref: "#"}, {$ref: "#/definitions/stringArray"}]}}, enum: {type: "array", minItems: 1, uniqueItems: true}, type: {anyOf: [{$ref: "#/definitions/simpleTypes"}, {type: "array", items: {$ref: "#/definitions/simpleTypes"}, minItems: 1, uniqueItems: true}]}, format: {anyOf: [{type: "string", enum: ["date-time", "uri", "email", "hostname", "ipv4", "ipv6", "regex"]}, {type: "string"}]}, allOf: {allOf: [{$ref: "#/definitions/schemaArray"}]}, anyOf: {allOf: [{$ref: "#/definitions/schemaArray"}]}, oneOf: {allOf: [{$ref: "#/definitions/schemaArray"}]}, not: {allOf: [{$ref: "#"}]}}, dependencies: {exclusiveMaximum: ["maximum"], exclusiveMinimum: ["minimum"]}, default: {}}, "http://json-schema.org/draft-07/schema#": {title: lt("schema.json", "Describes a JSON file using a schema. See json-schema.org for more info."), definitions: {schemaArray: {type: "array", minItems: 1, items: {$ref: "#"}}, nonNegativeInteger: {type: "integer", minimum: 0}, nonNegativeIntegerDefault0: {allOf: [{$ref: "#/definitions/nonNegativeInteger"}, {default: 0}]}, simpleTypes: {enum: ["array", "boolean", "integer", "null", "number", "object", "string"]}, stringArray: {type: "array", items: {type: "string"}, uniqueItems: true, default: []}}, type: ["object", "boolean"], properties: {$id: {type: "string", format: "uri-reference"}, $schema: {type: "string", format: "uri"}, $ref: {type: "string", format: "uri-reference"}, $comment: {type: "string"}, title: {type: "string"}, description: {type: "string"}, default: true, readOnly: {type: "boolean", default: false}, examples: {type: "array", items: true}, multipleOf: {type: "number", exclusiveMinimum: 0}, maximum: {type: "number"}, exclusiveMaximum: {type: "number"}, minimum: {type: "number"}, exclusiveMinimum: {type: "number"}, maxLength: {$ref: "#/definitions/nonNegativeInteger"}, minLength: {$ref: "#/definitions/nonNegativeIntegerDefault0"}, pattern: {type: "string", format: "regex"}, additionalItems: {$ref: "#"}, items: {anyOf: [{$ref: "#"}, {$ref: "#/definitions/schemaArray"}], default: true}, maxItems: {$ref: "#/definitions/nonNegativeInteger"}, minItems: {$ref: "#/definitions/nonNegativeIntegerDefault0"}, uniqueItems: {type: "boolean", default: false}, contains: {$ref: "#"}, maxProperties: {$ref: "#/definitions/nonNegativeInteger"}, minProperties: {$ref: "#/definitions/nonNegativeIntegerDefault0"}, required: {$ref: "#/definitions/stringArray"}, additionalProperties: {$ref: "#"}, definitions: {type: "object", additionalProperties: {$ref: "#"}, default: {}}, properties: {type: "object", additionalProperties: {$ref: "#"}, default: {}}, patternProperties: {type: "object", additionalProperties: {$ref: "#"}, propertyNames: {format: "regex"}, default: {}}, dependencies: {type: "object", additionalProperties: {anyOf: [{$ref: "#"}, {$ref: "#/definitions/stringArray"}]}}, propertyNames: {$ref: "#"}, const: true, enum: {type: "array", items: true, minItems: 1, uniqueItems: true}, type: {anyOf: [{$ref: "#/definitions/simpleTypes"}, {type: "array", items: {$ref: "#/definitions/simpleTypes"}, minItems: 1, uniqueItems: true}]}, format: {type: "string"}, contentMediaType: {type: "string"}, contentEncoding: {type: "string"}, if: {$ref: "#"}, then: {$ref: "#"}, else: {$ref: "#"}, allOf: {$ref: "#/definitions/schemaArray"}, anyOf: {$ref: "#/definitions/schemaArray"}, oneOf: {$ref: "#/definitions/schemaArray"}, not: {$ref: "#"}}, default: true}}}, dt = {id: lt("schema.json.id", "A unique identifier for the schema."), $schema: lt("schema.json.$schema", "The schema to verify this document against."), title: lt("schema.json.title", "A descriptive title of the element."), description: lt("schema.json.description", "A long description of the element. Used in hover menus and suggestions."), default: lt("schema.json.default", "A default value. Used by suggestions."), multipleOf: lt("schema.json.multipleOf", "A number that should cleanly divide the current value (i.e. have no remainder)."), maximum: lt("schema.json.maximum", "The maximum numerical value, inclusive by default."), exclusiveMaximum: lt("schema.json.exclusiveMaximum", "Makes the maximum property exclusive."), minimum: lt("schema.json.minimum", "The minimum numerical value, inclusive by default."), exclusiveMinimum: lt("schema.json.exclusiveMininum", "Makes the minimum property exclusive."), maxLength: lt("schema.json.maxLength", "The maximum length of a string."), minLength: lt("schema.json.minLength", "The minimum length of a string."), pattern: lt("schema.json.pattern", "A regular expression to match the string against. It is not implicitly anchored."), additionalItems: lt("schema.json.additionalItems", "For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail."), items: lt("schema.json.items", "For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on."), maxItems: lt("schema.json.maxItems", "The maximum number of items that can be inside an array. Inclusive."), minItems: lt("schema.json.minItems", "The minimum number of items that can be inside an array. Inclusive."), uniqueItems: lt("schema.json.uniqueItems", "If all of the items in the array must be unique. Defaults to false."), maxProperties: lt("schema.json.maxProperties", "The maximum number of properties an object can have. Inclusive."), minProperties: lt("schema.json.minProperties", "The minimum number of properties an object can have. Inclusive."), required: lt("schema.json.required", "An array of strings that lists the names of all properties required on this object."), additionalProperties: lt("schema.json.additionalProperties", "Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail."), definitions: lt("schema.json.definitions", "Not used for validation. Place subschemas here that you wish to reference inline with $ref."), properties: lt("schema.json.properties", "A map of property names to schemas for each property."), patternProperties: lt("schema.json.patternProperties", "A map of regular expressions on property names to schemas for matching properties."), dependencies: lt("schema.json.dependencies", "A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object."), enum: lt("schema.json.enum", "The set of literal values that are valid."), type: lt("schema.json.type", "Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types."), format: lt("schema.json.format", "Describes the format expected for the value."), allOf: lt("schema.json.allOf", "An array of schemas, all of which must match."), anyOf: lt("schema.json.anyOf", "An array of schemas, where at least one must match."), oneOf: lt("schema.json.oneOf", "An array of schemas, exactly one of which must match."), not: lt("schema.json.not", "A schema which must not match."), $id: lt("schema.json.$id", "A unique identifier for the schema."), $ref: lt("schema.json.$ref", "Reference a definition hosted on any location."), $comment: lt("schema.json.$comment", "Comments from schema authors to readers or maintainers of the schema."), readOnly: lt("schema.json.readOnly", "Indicates that the value of the instance is managed exclusively by the owning authority."), examples: lt("schema.json.examples", "Sample JSON values associated with a particular schema, for the purpose of illustrating usage."), contains: lt("schema.json.contains", 'An array instance is valid against "contains" if at least one of its elements is valid against the given schema.'), propertyNames: lt("schema.json.propertyNames", "If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema."), const: lt("schema.json.const", "An instance validates successfully against this keyword if its value is equal to the value of the keyword."), contentMediaType: lt("schema.json.contentMediaType", "Describes the media type of a string property."), contentEncoding: lt("schema.json.contentEncoding", "Describes the content encoding of a string property."), if: lt("schema.json.if", 'The validation outcome of the "if" subschema controls which of the "then" or "else" keywords are evaluated.'), then: lt("schema.json.then", 'The "if" subschema is used for validation when the "if" subschema succeeds.'), else: lt("schema.json.else", 'The "else" subschema is used for validation when the "if" subschema fails.')};
  for (var ht in ct.schemas) {
    var ut = ct.schemas[ht];
    for (var pt in ut.properties) {
      var mt = ut.properties[pt];
      typeof mt == "boolean" && (mt = ut.properties[pt] = {});
      var gt = dt[pt];
      gt ? mt.description = gt : console.log(pt + ": localize('schema.json." + pt + `', "")`);
    }
  }
  function ft(e2, t2) {
    var n2 = [], r2 = [], o2 = [], s2 = -1, a2 = Object(x.a)(e2.getText(), false), l2 = a2.scan();
    function c2(e3) {
      n2.push(e3), r2.push(o2.length);
    }
    for (; l2 !== 17; ) {
      switch (l2) {
        case 1:
        case 3:
          var h2 = {startLine: m2 = e2.positionAt(a2.getTokenOffset()).line, endLine: m2, kind: l2 === 1 ? "object" : "array"};
          o2.push(h2);
          break;
        case 2:
        case 4:
          var u2 = l2 === 2 ? "object" : "array";
          if (o2.length > 0 && o2[o2.length - 1].kind === u2) {
            h2 = o2.pop();
            var p2 = e2.positionAt(a2.getTokenOffset()).line;
            h2 && p2 > h2.startLine + 1 && s2 !== h2.startLine && (h2.endLine = p2 - 1, c2(h2), s2 = h2.startLine);
          }
          break;
        case 13:
          var m2 = e2.positionAt(a2.getTokenOffset()).line, g2 = e2.positionAt(a2.getTokenOffset() + a2.getTokenLength()).line;
          a2.getTokenError() === 1 && m2 + 1 < e2.lineCount ? a2.setPosition(e2.offsetAt(i.create(m2 + 1, 0))) : m2 < g2 && (c2({startLine: m2, endLine: g2, kind: d.Comment}), s2 = m2);
          break;
        case 12:
          var f2 = e2.getText().substr(a2.getTokenOffset(), a2.getTokenLength()).match(/^\/\/\s*#(region\b)|(endregion\b)/);
          if (f2) {
            p2 = e2.positionAt(a2.getTokenOffset()).line;
            if (f2[1]) {
              h2 = {startLine: p2, endLine: p2, kind: d.Region};
              o2.push(h2);
            } else {
              for (var b2 = o2.length - 1; b2 >= 0 && o2[b2].kind !== d.Region; )
                b2--;
              if (b2 >= 0) {
                h2 = o2[b2];
                o2.length = b2, p2 > h2.startLine && s2 !== h2.startLine && (h2.endLine = p2, c2(h2), s2 = h2.startLine);
              }
            }
          }
      }
      l2 = a2.scan();
    }
    var _2 = t2 && t2.rangeLimit;
    if (typeof _2 != "number" || n2.length <= _2)
      return n2;
    t2 && t2.onRangeLimitExceeded && t2.onRangeLimitExceeded(e2.uri);
    for (var v2 = [], w2 = 0, y2 = r2; w2 < y2.length; w2++) {
      (T2 = y2[w2]) < 30 && (v2[T2] = (v2[T2] || 0) + 1);
    }
    var C2 = 0, S2 = 0;
    for (b2 = 0; b2 < v2.length; b2++) {
      var k2 = v2[b2];
      if (k2) {
        if (k2 + C2 > _2) {
          S2 = b2;
          break;
        }
        C2 += k2;
      }
    }
    var E2 = [];
    for (b2 = 0; b2 < n2.length; b2++) {
      var T2;
      typeof (T2 = r2[b2]) == "number" && (T2 < S2 || T2 === S2 && C2++ < _2) && E2.push(n2[b2]);
    }
    return E2;
  }
  function bt(e2, t2, n2) {
    function i2(t3, n3) {
      return r.create(e2.positionAt(t3), e2.positionAt(n3));
    }
    var o2 = Object(x.a)(e2.getText(), true);
    function s2(e3, t3) {
      return o2.setPosition(e3), o2.scan() === t3 ? o2.getTokenOffset() + o2.getTokenLength() : -1;
    }
    return t2.map(function(t3) {
      for (var o3 = e2.offsetAt(t3), a2 = n2.getNodeFromOffset(o3, true), l2 = []; a2; ) {
        switch (a2.type) {
          case "string":
          case "object":
          case "array":
            var c2 = a2.offset + 1, d2 = a2.offset + a2.length - 1;
            c2 < d2 && o3 >= c2 && o3 <= d2 && l2.push(i2(c2, d2)), l2.push(i2(a2.offset, a2.offset + a2.length));
            break;
          case "number":
          case "boolean":
          case "null":
          case "property":
            l2.push(i2(a2.offset, a2.offset + a2.length));
        }
        if (a2.type === "property" || a2.parent && a2.parent.type === "array") {
          var h2 = s2(a2.offset + a2.length, 5);
          h2 !== -1 && l2.push(i2(a2.offset, h2));
        }
        a2 = a2.parent;
      }
      for (var u2 = void 0, p2 = l2.length - 1; p2 >= 0; p2--)
        u2 = ee.create(l2[p2], u2);
      return u2 || (u2 = ee.create(r.create(t3, t3))), u2;
    });
  }
  function _t(e2, t2, n2) {
    var i2 = e2.offsetAt(t2), r2 = n2.getNodeFromOffset(i2, true);
    if (!r2 || !function(e3) {
      return e3.type === "string" && e3.parent && e3.parent.type === "property" && e3.parent.valueNode === e3 && e3.parent.keyNode.value === "$ref" || false;
    }(r2))
      return Promise.resolve([]);
    var o2 = r2.parent.valueNode, s2 = function(e3, t3) {
      var n3 = function(e4) {
        if (e4 === "#")
          return [];
        if (e4[0] !== "#" || e4[1] !== "/")
          return null;
        return e4.substring(2).split(/\//).map(wt);
      }(t3);
      if (!n3)
        return null;
      return function e4(t4, n4) {
        if (!n4)
          return null;
        if (t4.length === 0)
          return n4;
        var i3 = t4.shift();
        if (n4 && n4.type === "object") {
          var r3 = n4.properties.find(function(e5) {
            return e5.keyNode.value === i3;
          });
          return r3 ? e4(t4, r3.valueNode) : null;
        }
        if (n4 && n4.type === "array" && i3.match(/^(0|[1-9][0-9]*)$/)) {
          var o3 = Number.parseInt(i3), s3 = n4.items[o3];
          return s3 ? e4(t4, s3) : null;
        }
        return null;
      }(n3, e3.root);
    }(n2, o2.value);
    if (!s2)
      return Promise.resolve([]);
    var a2 = {targetUri: e2.uri, originSelectionRange: vt(e2, o2), targetRange: vt(e2, s2), targetSelectionRange: vt(e2, s2)};
    return Promise.resolve([a2]);
  }
  function vt(e2, t2) {
    return r.create(e2.positionAt(t2.offset), e2.positionAt(t2.offset + t2.length));
  }
  function wt(e2) {
    return e2.replace(/~1/g, "/").replace(/~0/g, "~");
  }
  function yt(e2) {
    var t2 = e2.promiseConstructor || Promise, n2 = new Ze(e2.schemaRequestService, e2.workspaceContext, t2);
    n2.setSchemaContributions(ct);
    var i2 = new je(n2, e2.contributions, t2, e2.clientCapabilities), o2 = new Ve(n2, e2.contributions, t2), s2 = new st(n2), a2 = new tt(n2, t2);
    return {configure: function(e3) {
      n2.clearExternalSchemas(), e3.schemas && e3.schemas.forEach(function(e4) {
        n2.registerExternalSchema(e4.uri, e4.fileMatch, e4.schema);
      }), a2.configure(e3);
    }, resetSchema: function(e3) {
      return n2.onResourceChange(e3);
    }, doValidation: a2.doValidation.bind(a2), parseJSONDocument: function(e3) {
      return Fe(e3, {collectComments: true});
    }, newJSONDocument: function(e3, t3) {
      return function(e4, t4) {
        return t4 === void 0 && (t4 = []), new Me(e4, t4, []);
      }(e3, t3);
    }, getMatchingSchemas: n2.getMatchingSchemas.bind(n2), doResolve: i2.doResolve.bind(i2), doComplete: i2.doComplete.bind(i2), findDocumentSymbols: s2.findDocumentSymbols.bind(s2), findDocumentSymbols2: s2.findDocumentSymbols2.bind(s2), findColorSymbols: function(e3, t3) {
      return s2.findDocumentColors(e3, t3).then(function(e4) {
        return e4.map(function(e5) {
          return e5.range;
        });
      });
    }, findDocumentColors: s2.findDocumentColors.bind(s2), getColorPresentations: s2.getColorPresentations.bind(s2), doHover: o2.doHover.bind(o2), getFoldingRanges: ft, getSelectionRanges: bt, findDefinition: _t, format: function(e3, t3, n3) {
      var i3 = void 0;
      if (t3) {
        var o3 = e3.offsetAt(t3.start);
        i3 = {offset: o3, length: e3.offsetAt(t3.end) - o3};
      }
      var s3 = {tabSize: n3 ? n3.tabSize : 4, insertSpaces: !n3 || n3.insertSpaces, eol: "\n"};
      return Object(x.c)(e3.getText(), i3, s3).map(function(t4) {
        return b.replace(r.create(e3.positionAt(t4.offset), e3.positionAt(t4.offset + t4.length)), t4.content);
      });
    }};
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return b;
  });
  var i = n(6), r = n(2), o = n(8), s = n(73), a = n(75), l = n(114);
  class c {
    constructor(e2) {
      if (e2.autoClosingPairs ? this._autoClosingPairs = e2.autoClosingPairs.map((e3) => new a.b(e3)) : e2.brackets ? this._autoClosingPairs = e2.brackets.map((e3) => new a.b({open: e3[0], close: e3[1]})) : this._autoClosingPairs = [], e2.__electricCharacterSupport && e2.__electricCharacterSupport.docComment) {
        const t2 = e2.__electricCharacterSupport.docComment;
        this._autoClosingPairs.push(new a.b({open: t2.open, close: t2.close || ""}));
      }
      this._autoCloseBefore = typeof e2.autoCloseBefore == "string" ? e2.autoCloseBefore : c.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED, this._surroundingPairs = e2.surroundingPairs || this._autoClosingPairs;
    }
    getAutoClosingPairs() {
      return this._autoClosingPairs;
    }
    getAutoCloseBeforeSet() {
      return this._autoCloseBefore;
    }
    static shouldAutoClosePair(e2, t2, n2) {
      if (t2.getTokenCount() === 0)
        return true;
      const i2 = t2.findTokenIndexAtOffset(n2 - 2), r2 = t2.getStandardTokenType(i2);
      return e2.isOK(r2);
    }
    getSurroundingPairs() {
      return this._surroundingPairs;
    }
  }
  c.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED = ";:.,=}])> \n	";
  var d = n(119);
  class h {
    constructor(e2) {
      this._richEditBrackets = e2;
    }
    getElectricCharacters() {
      let e2 = [];
      if (this._richEditBrackets)
        for (const t2 of this._richEditBrackets.brackets)
          for (const n2 of t2.close) {
            const t3 = n2.charAt(n2.length - 1);
            e2.push(t3);
          }
      return e2 = e2.filter((e3, t2, n2) => n2.indexOf(e3) === t2), e2;
    }
    onElectricCharacter(e2, t2, n2) {
      if (!this._richEditBrackets || this._richEditBrackets.brackets.length === 0)
        return null;
      const i2 = t2.findTokenIndexAtOffset(n2 - 1);
      if (Object(l.b)(t2.getStandardTokenType(i2)))
        return null;
      const r2 = this._richEditBrackets.reversedRegex, o2 = t2.getLineContent().substring(0, n2 - 1) + e2, s2 = d.a.findPrevBracketInRange(r2, 1, o2, 0, o2.length);
      if (!s2)
        return null;
      const a2 = o2.substring(s2.startColumn - 1, s2.endColumn - 1).toLowerCase();
      if (this._richEditBrackets.textIsOpenBracket[a2])
        return null;
      const c2 = t2.getActualLineContentBefore(s2.startColumn - 1);
      return /^\s*$/.test(c2) ? {matchOpenBracket: a2} : null;
    }
  }
  class u {
    constructor(e2) {
      this._indentationRules = e2;
    }
    shouldIncrease(e2) {
      return !!(this._indentationRules && this._indentationRules.increaseIndentPattern && this._indentationRules.increaseIndentPattern.test(e2));
    }
    shouldDecrease(e2) {
      return !!(this._indentationRules && this._indentationRules.decreaseIndentPattern && this._indentationRules.decreaseIndentPattern.test(e2));
    }
    shouldIndentNextLine(e2) {
      return !!(this._indentationRules && this._indentationRules.indentNextLinePattern && this._indentationRules.indentNextLinePattern.test(e2));
    }
    shouldIgnore(e2) {
      return !!(this._indentationRules && this._indentationRules.unIndentedLinePattern && this._indentationRules.unIndentedLinePattern.test(e2));
    }
    getIndentMetadata(e2) {
      let t2 = 0;
      return this.shouldIncrease(e2) && (t2 += 1), this.shouldDecrease(e2) && (t2 += 2), this.shouldIndentNextLine(e2) && (t2 += 4), this.shouldIgnore(e2) && (t2 += 8), t2;
    }
  }
  var p = n(13);
  class m {
    constructor(e2) {
      (e2 = e2 || {}).brackets = e2.brackets || [["(", ")"], ["{", "}"], ["[", "]"]], this._brackets = [], e2.brackets.forEach((e3) => {
        const t2 = m._createOpenBracketRegExp(e3[0]), n2 = m._createCloseBracketRegExp(e3[1]);
        t2 && n2 && this._brackets.push({open: e3[0], openRegExp: t2, close: e3[1], closeRegExp: n2});
      }), this._regExpRules = e2.onEnterRules || [];
    }
    onEnter(e2, t2, n2, i2) {
      if (e2 >= 3)
        for (let e3 = 0, r2 = this._regExpRules.length; e3 < r2; e3++) {
          let r3 = this._regExpRules[e3];
          if ([{reg: r3.beforeText, text: n2}, {reg: r3.afterText, text: i2}, {reg: r3.oneLineAboveText, text: t2}].every((e4) => !e4.reg || e4.reg.test(e4.text)))
            return r3.action;
        }
      if (e2 >= 2 && n2.length > 0 && i2.length > 0)
        for (let e3 = 0, t3 = this._brackets.length; e3 < t3; e3++) {
          let t4 = this._brackets[e3];
          if (t4.openRegExp.test(n2) && t4.closeRegExp.test(i2))
            return {indentAction: a.a.IndentOutdent};
        }
      if (e2 >= 2 && n2.length > 0)
        for (let e3 = 0, t3 = this._brackets.length; e3 < t3; e3++) {
          if (this._brackets[e3].openRegExp.test(n2))
            return {indentAction: a.a.Indent};
        }
      return null;
    }
    static _createOpenBracketRegExp(e2) {
      let t2 = o.v(e2);
      return /\B/.test(t2.charAt(0)) || (t2 = "\\b" + t2), t2 += "\\s*$", m._safeRegExp(t2);
    }
    static _createCloseBracketRegExp(e2) {
      let t2 = o.v(e2);
      return /\B/.test(t2.charAt(t2.length - 1)) || (t2 += "\\b"), t2 = "^\\s*" + t2, m._safeRegExp(t2);
    }
    static _safeRegExp(e2) {
      try {
        return new RegExp(e2);
      } catch (e3) {
        return Object(p.e)(e3), null;
      }
    }
  }
  class g {
    constructor(e2, t2, n2) {
      this._languageIdentifier = e2, this._brackets = null, this._electricCharacter = null;
      let i2 = null;
      t2 && (i2 = t2._conf), this._conf = g._mergeConf(i2, n2), this._onEnterSupport = this._conf.brackets || this._conf.indentationRules || this._conf.onEnterRules ? new m(this._conf) : null, this.comments = g._handleComments(this._conf), this.characterPair = new c(this._conf), this.wordDefinition = this._conf.wordPattern || s.a, this.indentationRules = this._conf.indentationRules, this._conf.indentationRules ? this.indentRulesSupport = new u(this._conf.indentationRules) : this.indentRulesSupport = null, this.foldingRules = this._conf.folding || {};
    }
    get brackets() {
      return !this._brackets && this._conf.brackets && (this._brackets = new d.b(this._languageIdentifier, this._conf.brackets)), this._brackets;
    }
    get electricCharacter() {
      return this._electricCharacter || (this._electricCharacter = new h(this.brackets)), this._electricCharacter;
    }
    onEnter(e2, t2, n2, i2) {
      return this._onEnterSupport ? this._onEnterSupport.onEnter(e2, t2, n2, i2) : null;
    }
    static _mergeConf(e2, t2) {
      return {comments: e2 ? t2.comments || e2.comments : t2.comments, brackets: e2 ? t2.brackets || e2.brackets : t2.brackets, wordPattern: e2 ? t2.wordPattern || e2.wordPattern : t2.wordPattern, indentationRules: e2 ? t2.indentationRules || e2.indentationRules : t2.indentationRules, onEnterRules: e2 ? t2.onEnterRules || e2.onEnterRules : t2.onEnterRules, autoClosingPairs: e2 ? t2.autoClosingPairs || e2.autoClosingPairs : t2.autoClosingPairs, surroundingPairs: e2 ? t2.surroundingPairs || e2.surroundingPairs : t2.surroundingPairs, autoCloseBefore: e2 ? t2.autoCloseBefore || e2.autoCloseBefore : t2.autoCloseBefore, folding: e2 ? t2.folding || e2.folding : t2.folding, __electricCharacterSupport: e2 ? t2.__electricCharacterSupport || e2.__electricCharacterSupport : t2.__electricCharacterSupport};
    }
    static _handleComments(e2) {
      let t2 = e2.comments;
      if (!t2)
        return null;
      let n2 = {};
      if (t2.lineComment && (n2.lineCommentToken = t2.lineComment), t2.blockComment) {
        let [e3, i2] = t2.blockComment;
        n2.blockCommentStartToken = e3, n2.blockCommentEndToken = i2;
      }
      return n2;
    }
  }
  class f {
    constructor(e2) {
      this.languageIdentifier = e2;
    }
  }
  const b = new class {
    constructor() {
      this._entries = new Map(), this._onDidChange = new i.a(), this.onDidChange = this._onDidChange.event;
    }
    register(e2, t2) {
      let n2 = this._getRichEditSupport(e2.id), i2 = new g(e2, n2, t2);
      return this._entries.set(e2.id, i2), this._onDidChange.fire(new f(e2)), Object(r.h)(() => {
        this._entries.get(e2.id) === i2 && (this._entries.set(e2.id, n2), this._onDidChange.fire(new f(e2)));
      });
    }
    _getRichEditSupport(e2) {
      return this._entries.get(e2);
    }
    getIndentationRules(e2) {
      const t2 = this._entries.get(e2);
      return t2 && t2.indentationRules || null;
    }
    _getElectricCharacterSupport(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 && t2.electricCharacter || null;
    }
    getElectricCharacters(e2) {
      let t2 = this._getElectricCharacterSupport(e2);
      return t2 ? t2.getElectricCharacters() : [];
    }
    onElectricCharacter(e2, t2, n2) {
      let i2 = Object(l.a)(t2, n2 - 1), r2 = this._getElectricCharacterSupport(i2.languageId);
      return r2 ? r2.onElectricCharacter(e2, i2, n2 - i2.firstCharOffset) : null;
    }
    getComments(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 && t2.comments || null;
    }
    _getCharacterPairSupport(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 && t2.characterPair || null;
    }
    getAutoClosingPairs(e2) {
      let t2 = this._getCharacterPairSupport(e2);
      return t2 ? t2.getAutoClosingPairs() : [];
    }
    getAutoCloseBeforeSet(e2) {
      let t2 = this._getCharacterPairSupport(e2);
      return t2 ? t2.getAutoCloseBeforeSet() : c.DEFAULT_AUTOCLOSE_BEFORE_LANGUAGE_DEFINED;
    }
    getSurroundingPairs(e2) {
      let t2 = this._getCharacterPairSupport(e2);
      return t2 ? t2.getSurroundingPairs() : [];
    }
    shouldAutoClosePair(e2, t2, n2) {
      const i2 = Object(l.a)(t2, n2 - 1);
      return c.shouldAutoClosePair(e2, i2, n2 - i2.firstCharOffset);
    }
    getWordDefinition(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 ? Object(s.c)(t2.wordDefinition || null) : Object(s.c)(null);
    }
    getFoldingRules(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 ? t2.foldingRules : {};
    }
    getIndentRulesSupport(e2) {
      let t2 = this._getRichEditSupport(e2);
      return t2 && t2.indentRulesSupport || null;
    }
    getPrecedingValidLine(e2, t2, n2) {
      let i2 = e2.getLanguageIdAtPosition(t2, 0);
      if (t2 > 1) {
        let r2, o2 = -1;
        for (r2 = t2 - 1; r2 >= 1; r2--) {
          if (e2.getLanguageIdAtPosition(r2, 0) !== i2)
            return o2;
          let t3 = e2.getLineContent(r2);
          if (!n2.shouldIgnore(t3) && !/^\s+$/.test(t3) && t3 !== "")
            return r2;
          o2 = r2;
        }
      }
      return -1;
    }
    getInheritIndentForLine(e2, t2, n2, i2 = true) {
      if (e2 < 4)
        return null;
      const r2 = this.getIndentRulesSupport(t2.getLanguageIdentifier().id);
      if (!r2)
        return null;
      if (n2 <= 1)
        return {indentation: "", action: null};
      const s2 = this.getPrecedingValidLine(t2, n2, r2);
      if (s2 < 0)
        return null;
      if (s2 < 1)
        return {indentation: "", action: null};
      const l2 = t2.getLineContent(s2);
      if (r2.shouldIncrease(l2) || r2.shouldIndentNextLine(l2))
        return {indentation: o.z(l2), action: a.a.Indent, line: s2};
      if (r2.shouldDecrease(l2))
        return {indentation: o.z(l2), action: null, line: s2};
      {
        if (s2 === 1)
          return {indentation: o.z(t2.getLineContent(s2)), action: null, line: s2};
        const e3 = s2 - 1, n3 = r2.getIndentMetadata(t2.getLineContent(e3));
        if (!(3 & n3) && 4 & n3) {
          let n4 = 0;
          for (let i3 = e3 - 1; i3 > 0; i3--)
            if (!r2.shouldIndentNextLine(t2.getLineContent(i3))) {
              n4 = i3;
              break;
            }
          return {indentation: o.z(t2.getLineContent(n4 + 1)), action: null, line: n4 + 1};
        }
        if (i2)
          return {indentation: o.z(t2.getLineContent(s2)), action: null, line: s2};
        for (let e4 = s2; e4 > 0; e4--) {
          const n4 = t2.getLineContent(e4);
          if (r2.shouldIncrease(n4))
            return {indentation: o.z(n4), action: a.a.Indent, line: e4};
          if (r2.shouldIndentNextLine(n4)) {
            let n5 = 0;
            for (let i3 = e4 - 1; i3 > 0; i3--)
              if (!r2.shouldIndentNextLine(t2.getLineContent(e4))) {
                n5 = i3;
                break;
              }
            return {indentation: o.z(t2.getLineContent(n5 + 1)), action: null, line: n5 + 1};
          }
          if (r2.shouldDecrease(n4))
            return {indentation: o.z(n4), action: null, line: e4};
        }
        return {indentation: o.z(t2.getLineContent(1)), action: null, line: 1};
      }
    }
    getGoodIndentForLine(e2, t2, n2, i2, r2) {
      if (e2 < 4)
        return null;
      const s2 = this._getRichEditSupport(n2);
      if (!s2)
        return null;
      const l2 = this.getIndentRulesSupport(n2);
      if (!l2)
        return null;
      const c2 = this.getInheritIndentForLine(e2, t2, i2), d2 = t2.getLineContent(i2);
      if (c2) {
        const n3 = c2.line;
        if (n3 !== void 0) {
          const i3 = s2.onEnter(e2, "", t2.getLineContent(n3), "");
          if (i3) {
            let e3 = o.z(t2.getLineContent(n3));
            return i3.removeText && (e3 = e3.substring(0, e3.length - i3.removeText)), i3.indentAction === a.a.Indent || i3.indentAction === a.a.IndentOutdent ? e3 = r2.shiftIndent(e3) : i3.indentAction === a.a.Outdent && (e3 = r2.unshiftIndent(e3)), l2.shouldDecrease(d2) && (e3 = r2.unshiftIndent(e3)), i3.appendText && (e3 += i3.appendText), o.z(e3);
          }
        }
        return l2.shouldDecrease(d2) ? c2.action === a.a.Indent ? c2.indentation : r2.unshiftIndent(c2.indentation) : c2.action === a.a.Indent ? r2.shiftIndent(c2.indentation) : c2.indentation;
      }
      return null;
    }
    getIndentForEnter(e2, t2, n2, i2) {
      if (e2 < 4)
        return null;
      t2.forceTokenization(n2.startLineNumber);
      const r2 = t2.getLineTokens(n2.startLineNumber), s2 = Object(l.a)(r2, n2.startColumn - 1), c2 = s2.getLineContent();
      let d2, h2, u2 = false;
      if (s2.firstCharOffset > 0 && r2.getLanguageId(0) !== s2.languageId ? (u2 = true, d2 = c2.substr(0, n2.startColumn - 1 - s2.firstCharOffset)) : d2 = r2.getLineContent().substring(0, n2.startColumn - 1), n2.isEmpty())
        h2 = c2.substr(n2.startColumn - 1 - s2.firstCharOffset);
      else {
        h2 = this.getScopedLineTokens(t2, n2.endLineNumber, n2.endColumn).getLineContent().substr(n2.endColumn - 1 - s2.firstCharOffset);
      }
      const p2 = this.getIndentRulesSupport(s2.languageId);
      if (!p2)
        return null;
      const m2 = d2, g2 = o.z(d2), f2 = {getLineTokens: (e3) => t2.getLineTokens(e3), getLanguageIdentifier: () => t2.getLanguageIdentifier(), getLanguageIdAtPosition: (e3, n3) => t2.getLanguageIdAtPosition(e3, n3), getLineContent: (e3) => e3 === n2.startLineNumber ? m2 : t2.getLineContent(e3)}, b2 = o.z(r2.getLineContent()), _ = this.getInheritIndentForLine(e2, f2, n2.startLineNumber + 1);
      if (!_) {
        const e3 = u2 ? b2 : g2;
        return {beforeEnter: e3, afterEnter: e3};
      }
      let v = u2 ? b2 : _.indentation;
      return _.action === a.a.Indent && (v = i2.shiftIndent(v)), p2.shouldDecrease(h2) && (v = i2.unshiftIndent(v)), {beforeEnter: u2 ? b2 : g2, afterEnter: v};
    }
    getIndentActionForType(e2, t2, n2, i2, r2) {
      if (e2 < 4)
        return null;
      const o2 = this.getScopedLineTokens(t2, n2.startLineNumber, n2.startColumn), s2 = this.getIndentRulesSupport(o2.languageId);
      if (!s2)
        return null;
      const l2 = o2.getLineContent(), c2 = l2.substr(0, n2.startColumn - 1 - o2.firstCharOffset);
      let d2;
      if (n2.isEmpty())
        d2 = l2.substr(n2.startColumn - 1 - o2.firstCharOffset);
      else {
        d2 = this.getScopedLineTokens(t2, n2.endLineNumber, n2.endColumn).getLineContent().substr(n2.endColumn - 1 - o2.firstCharOffset);
      }
      if (!s2.shouldDecrease(c2 + d2) && s2.shouldDecrease(c2 + i2 + d2)) {
        const i3 = this.getInheritIndentForLine(e2, t2, n2.startLineNumber, false);
        if (!i3)
          return null;
        let o3 = i3.indentation;
        return i3.action !== a.a.Indent && (o3 = r2.unshiftIndent(o3)), o3;
      }
      return null;
    }
    getIndentMetadata(e2, t2) {
      const n2 = this.getIndentRulesSupport(e2.getLanguageIdentifier().id);
      return n2 ? t2 < 1 || t2 > e2.getLineCount() ? null : n2.getIndentMetadata(e2.getLineContent(t2)) : null;
    }
    getEnterAction(e2, t2, n2) {
      const i2 = this.getScopedLineTokens(t2, n2.startLineNumber, n2.startColumn), r2 = this._getRichEditSupport(i2.languageId);
      if (!r2)
        return null;
      const o2 = i2.getLineContent(), s2 = o2.substr(0, n2.startColumn - 1 - i2.firstCharOffset);
      let l2;
      if (n2.isEmpty())
        l2 = o2.substr(n2.startColumn - 1 - i2.firstCharOffset);
      else {
        l2 = this.getScopedLineTokens(t2, n2.endLineNumber, n2.endColumn).getLineContent().substr(n2.endColumn - 1 - i2.firstCharOffset);
      }
      let c2 = "";
      if (n2.startLineNumber > 1 && i2.firstCharOffset === 0) {
        const e3 = this.getScopedLineTokens(t2, n2.startLineNumber - 1);
        e3.languageId === i2.languageId && (c2 = e3.getLineContent());
      }
      const d2 = r2.onEnter(e2, c2, s2, l2);
      if (!d2)
        return null;
      const h2 = d2.indentAction;
      let u2 = d2.appendText;
      const p2 = d2.removeText || 0;
      u2 || (u2 = h2 === a.a.Indent || h2 === a.a.IndentOutdent ? "	" : "");
      let m2 = this.getIndentationAtPosition(t2, n2.startLineNumber, n2.startColumn);
      return p2 && (m2 = m2.substring(0, m2.length - p2)), {indentAction: h2, appendText: u2, removeText: p2, indentation: m2};
    }
    getIndentationAtPosition(e2, t2, n2) {
      const i2 = e2.getLineContent(t2);
      let r2 = o.z(i2);
      return r2.length > n2 - 1 && (r2 = r2.substring(0, n2 - 1)), r2;
    }
    getScopedLineTokens(e2, t2, n2) {
      e2.forceTokenization(t2);
      const i2 = e2.getLineTokens(t2), r2 = n2 === void 0 ? e2.getLineMaxColumn(t2) - 1 : n2 - 1;
      return Object(l.a)(i2, r2);
    }
    getBracketsSupport(e2) {
      const t2 = this._getRichEditSupport(e2);
      return t2 && t2.brackets || null;
    }
  }();
}, function(e, t, n) {
  "use strict";
  var i, r, o, s, a, l, c, d, h, u, p, m, g, f, b, _, v, w, y, C, x, S, k, E, T, L, N, I, D, O, A, R, M;
  n.d(t, "a", function() {
    return i;
  }), n.d(t, "b", function() {
    return r;
  }), n.d(t, "c", function() {
    return o;
  }), n.d(t, "d", function() {
    return s;
  }), n.d(t, "e", function() {
    return a;
  }), n.d(t, "f", function() {
    return l;
  }), n.d(t, "g", function() {
    return c;
  }), n.d(t, "h", function() {
    return d;
  }), n.d(t, "i", function() {
    return h;
  }), n.d(t, "j", function() {
    return u;
  }), n.d(t, "k", function() {
    return p;
  }), n.d(t, "l", function() {
    return m;
  }), n.d(t, "m", function() {
    return g;
  }), n.d(t, "n", function() {
    return f;
  }), n.d(t, "o", function() {
    return b;
  }), n.d(t, "p", function() {
    return _;
  }), n.d(t, "q", function() {
    return v;
  }), n.d(t, "r", function() {
    return w;
  }), n.d(t, "s", function() {
    return y;
  }), n.d(t, "t", function() {
    return C;
  }), n.d(t, "u", function() {
    return x;
  }), n.d(t, "v", function() {
    return S;
  }), n.d(t, "w", function() {
    return k;
  }), n.d(t, "x", function() {
    return E;
  }), n.d(t, "y", function() {
    return T;
  }), n.d(t, "z", function() {
    return L;
  }), n.d(t, "A", function() {
    return N;
  }), n.d(t, "B", function() {
    return I;
  }), n.d(t, "C", function() {
    return D;
  }), n.d(t, "D", function() {
    return O;
  }), n.d(t, "E", function() {
    return A;
  }), n.d(t, "F", function() {
    return R;
  }), n.d(t, "G", function() {
    return M;
  }), function(e2) {
    e2[e2.Unknown = 0] = "Unknown", e2[e2.Disabled = 1] = "Disabled", e2[e2.Enabled = 2] = "Enabled";
  }(i || (i = {})), function(e2) {
    e2[e2.KeepWhitespace = 1] = "KeepWhitespace", e2[e2.InsertAsSnippet = 4] = "InsertAsSnippet";
  }(r || (r = {})), function(e2) {
    e2[e2.Method = 0] = "Method", e2[e2.Function = 1] = "Function", e2[e2.Constructor = 2] = "Constructor", e2[e2.Field = 3] = "Field", e2[e2.Variable = 4] = "Variable", e2[e2.Class = 5] = "Class", e2[e2.Struct = 6] = "Struct", e2[e2.Interface = 7] = "Interface", e2[e2.Module = 8] = "Module", e2[e2.Property = 9] = "Property", e2[e2.Event = 10] = "Event", e2[e2.Operator = 11] = "Operator", e2[e2.Unit = 12] = "Unit", e2[e2.Value = 13] = "Value", e2[e2.Constant = 14] = "Constant", e2[e2.Enum = 15] = "Enum", e2[e2.EnumMember = 16] = "EnumMember", e2[e2.Keyword = 17] = "Keyword", e2[e2.Text = 18] = "Text", e2[e2.Color = 19] = "Color", e2[e2.File = 20] = "File", e2[e2.Reference = 21] = "Reference", e2[e2.Customcolor = 22] = "Customcolor", e2[e2.Folder = 23] = "Folder", e2[e2.TypeParameter = 24] = "TypeParameter", e2[e2.User = 25] = "User", e2[e2.Issue = 26] = "Issue", e2[e2.Snippet = 27] = "Snippet";
  }(o || (o = {})), function(e2) {
    e2[e2.Deprecated = 1] = "Deprecated";
  }(s || (s = {})), function(e2) {
    e2[e2.Invoke = 0] = "Invoke", e2[e2.TriggerCharacter = 1] = "TriggerCharacter", e2[e2.TriggerForIncompleteCompletions = 2] = "TriggerForIncompleteCompletions";
  }(a || (a = {})), function(e2) {
    e2[e2.EXACT = 0] = "EXACT", e2[e2.ABOVE = 1] = "ABOVE", e2[e2.BELOW = 2] = "BELOW";
  }(l || (l = {})), function(e2) {
    e2[e2.NotSet = 0] = "NotSet", e2[e2.ContentFlush = 1] = "ContentFlush", e2[e2.RecoverFromMarkers = 2] = "RecoverFromMarkers", e2[e2.Explicit = 3] = "Explicit", e2[e2.Paste = 4] = "Paste", e2[e2.Undo = 5] = "Undo", e2[e2.Redo = 6] = "Redo";
  }(c || (c = {})), function(e2) {
    e2[e2.LF = 1] = "LF", e2[e2.CRLF = 2] = "CRLF";
  }(d || (d = {})), function(e2) {
    e2[e2.Text = 0] = "Text", e2[e2.Read = 1] = "Read", e2[e2.Write = 2] = "Write";
  }(h || (h = {})), function(e2) {
    e2[e2.None = 0] = "None", e2[e2.Keep = 1] = "Keep", e2[e2.Brackets = 2] = "Brackets", e2[e2.Advanced = 3] = "Advanced", e2[e2.Full = 4] = "Full";
  }(u || (u = {})), function(e2) {
    e2[e2.acceptSuggestionOnCommitCharacter = 0] = "acceptSuggestionOnCommitCharacter", e2[e2.acceptSuggestionOnEnter = 1] = "acceptSuggestionOnEnter", e2[e2.accessibilitySupport = 2] = "accessibilitySupport", e2[e2.accessibilityPageSize = 3] = "accessibilityPageSize", e2[e2.ariaLabel = 4] = "ariaLabel", e2[e2.autoClosingBrackets = 5] = "autoClosingBrackets", e2[e2.autoClosingOvertype = 6] = "autoClosingOvertype", e2[e2.autoClosingQuotes = 7] = "autoClosingQuotes", e2[e2.autoIndent = 8] = "autoIndent", e2[e2.automaticLayout = 9] = "automaticLayout", e2[e2.autoSurround = 10] = "autoSurround", e2[e2.codeLens = 11] = "codeLens", e2[e2.colorDecorators = 12] = "colorDecorators", e2[e2.columnSelection = 13] = "columnSelection", e2[e2.comments = 14] = "comments", e2[e2.contextmenu = 15] = "contextmenu", e2[e2.copyWithSyntaxHighlighting = 16] = "copyWithSyntaxHighlighting", e2[e2.cursorBlinking = 17] = "cursorBlinking", e2[e2.cursorSmoothCaretAnimation = 18] = "cursorSmoothCaretAnimation", e2[e2.cursorStyle = 19] = "cursorStyle", e2[e2.cursorSurroundingLines = 20] = "cursorSurroundingLines", e2[e2.cursorSurroundingLinesStyle = 21] = "cursorSurroundingLinesStyle", e2[e2.cursorWidth = 22] = "cursorWidth", e2[e2.disableLayerHinting = 23] = "disableLayerHinting", e2[e2.disableMonospaceOptimizations = 24] = "disableMonospaceOptimizations", e2[e2.dragAndDrop = 25] = "dragAndDrop", e2[e2.emptySelectionClipboard = 26] = "emptySelectionClipboard", e2[e2.extraEditorClassName = 27] = "extraEditorClassName", e2[e2.fastScrollSensitivity = 28] = "fastScrollSensitivity", e2[e2.find = 29] = "find", e2[e2.fixedOverflowWidgets = 30] = "fixedOverflowWidgets", e2[e2.folding = 31] = "folding", e2[e2.foldingStrategy = 32] = "foldingStrategy", e2[e2.foldingHighlight = 33] = "foldingHighlight", e2[e2.unfoldOnClickAfterEndOfLine = 34] = "unfoldOnClickAfterEndOfLine", e2[e2.fontFamily = 35] = "fontFamily", e2[e2.fontInfo = 36] = "fontInfo", e2[e2.fontLigatures = 37] = "fontLigatures", e2[e2.fontSize = 38] = "fontSize", e2[e2.fontWeight = 39] = "fontWeight", e2[e2.formatOnPaste = 40] = "formatOnPaste", e2[e2.formatOnType = 41] = "formatOnType", e2[e2.glyphMargin = 42] = "glyphMargin", e2[e2.gotoLocation = 43] = "gotoLocation", e2[e2.hideCursorInOverviewRuler = 44] = "hideCursorInOverviewRuler", e2[e2.highlightActiveIndentGuide = 45] = "highlightActiveIndentGuide", e2[e2.hover = 46] = "hover", e2[e2.inDiffEditor = 47] = "inDiffEditor", e2[e2.letterSpacing = 48] = "letterSpacing", e2[e2.lightbulb = 49] = "lightbulb", e2[e2.lineDecorationsWidth = 50] = "lineDecorationsWidth", e2[e2.lineHeight = 51] = "lineHeight", e2[e2.lineNumbers = 52] = "lineNumbers", e2[e2.lineNumbersMinChars = 53] = "lineNumbersMinChars", e2[e2.links = 54] = "links", e2[e2.matchBrackets = 55] = "matchBrackets", e2[e2.minimap = 56] = "minimap", e2[e2.mouseStyle = 57] = "mouseStyle", e2[e2.mouseWheelScrollSensitivity = 58] = "mouseWheelScrollSensitivity", e2[e2.mouseWheelZoom = 59] = "mouseWheelZoom", e2[e2.multiCursorMergeOverlapping = 60] = "multiCursorMergeOverlapping", e2[e2.multiCursorModifier = 61] = "multiCursorModifier", e2[e2.multiCursorPaste = 62] = "multiCursorPaste", e2[e2.occurrencesHighlight = 63] = "occurrencesHighlight", e2[e2.overviewRulerBorder = 64] = "overviewRulerBorder", e2[e2.overviewRulerLanes = 65] = "overviewRulerLanes", e2[e2.padding = 66] = "padding", e2[e2.parameterHints = 67] = "parameterHints", e2[e2.peekWidgetDefaultFocus = 68] = "peekWidgetDefaultFocus", e2[e2.definitionLinkOpensInPeek = 69] = "definitionLinkOpensInPeek", e2[e2.quickSuggestions = 70] = "quickSuggestions", e2[e2.quickSuggestionsDelay = 71] = "quickSuggestionsDelay", e2[e2.readOnly = 72] = "readOnly", e2[e2.renameOnType = 73] = "renameOnType", e2[e2.renderControlCharacters = 74] = "renderControlCharacters", e2[e2.renderIndentGuides = 75] = "renderIndentGuides", e2[e2.renderFinalNewline = 76] = "renderFinalNewline", e2[e2.renderLineHighlight = 77] = "renderLineHighlight", e2[e2.renderLineHighlightOnlyWhenFocus = 78] = "renderLineHighlightOnlyWhenFocus", e2[e2.renderValidationDecorations = 79] = "renderValidationDecorations", e2[e2.renderWhitespace = 80] = "renderWhitespace", e2[e2.revealHorizontalRightPadding = 81] = "revealHorizontalRightPadding", e2[e2.roundedSelection = 82] = "roundedSelection", e2[e2.rulers = 83] = "rulers", e2[e2.scrollbar = 84] = "scrollbar", e2[e2.scrollBeyondLastColumn = 85] = "scrollBeyondLastColumn", e2[e2.scrollBeyondLastLine = 86] = "scrollBeyondLastLine", e2[e2.scrollPredominantAxis = 87] = "scrollPredominantAxis", e2[e2.selectionClipboard = 88] = "selectionClipboard", e2[e2.selectionHighlight = 89] = "selectionHighlight", e2[e2.selectOnLineNumbers = 90] = "selectOnLineNumbers", e2[e2.showFoldingControls = 91] = "showFoldingControls", e2[e2.showUnused = 92] = "showUnused", e2[e2.snippetSuggestions = 93] = "snippetSuggestions", e2[e2.smoothScrolling = 94] = "smoothScrolling", e2[e2.stopRenderingLineAfter = 95] = "stopRenderingLineAfter", e2[e2.suggest = 96] = "suggest", e2[e2.suggestFontSize = 97] = "suggestFontSize", e2[e2.suggestLineHeight = 98] = "suggestLineHeight", e2[e2.suggestOnTriggerCharacters = 99] = "suggestOnTriggerCharacters", e2[e2.suggestSelection = 100] = "suggestSelection", e2[e2.tabCompletion = 101] = "tabCompletion", e2[e2.tabIndex = 102] = "tabIndex", e2[e2.unusualLineTerminators = 103] = "unusualLineTerminators", e2[e2.useTabStops = 104] = "useTabStops", e2[e2.wordSeparators = 105] = "wordSeparators", e2[e2.wordWrap = 106] = "wordWrap", e2[e2.wordWrapBreakAfterCharacters = 107] = "wordWrapBreakAfterCharacters", e2[e2.wordWrapBreakBeforeCharacters = 108] = "wordWrapBreakBeforeCharacters", e2[e2.wordWrapColumn = 109] = "wordWrapColumn", e2[e2.wordWrapMinified = 110] = "wordWrapMinified", e2[e2.wrappingIndent = 111] = "wrappingIndent", e2[e2.wrappingStrategy = 112] = "wrappingStrategy", e2[e2.showDeprecated = 113] = "showDeprecated", e2[e2.editorClassName = 114] = "editorClassName", e2[e2.pixelRatio = 115] = "pixelRatio", e2[e2.tabFocusMode = 116] = "tabFocusMode", e2[e2.layoutInfo = 117] = "layoutInfo", e2[e2.wrappingInfo = 118] = "wrappingInfo";
  }(p || (p = {})), function(e2) {
    e2[e2.TextDefined = 0] = "TextDefined", e2[e2.LF = 1] = "LF", e2[e2.CRLF = 2] = "CRLF";
  }(m || (m = {})), function(e2) {
    e2[e2.LF = 0] = "LF", e2[e2.CRLF = 1] = "CRLF";
  }(g || (g = {})), function(e2) {
    e2[e2.None = 0] = "None", e2[e2.Indent = 1] = "Indent", e2[e2.IndentOutdent = 2] = "IndentOutdent", e2[e2.Outdent = 3] = "Outdent";
  }(f || (f = {})), function(e2) {
    e2[e2.Unknown = 0] = "Unknown", e2[e2.Backspace = 1] = "Backspace", e2[e2.Tab = 2] = "Tab", e2[e2.Enter = 3] = "Enter", e2[e2.Shift = 4] = "Shift", e2[e2.Ctrl = 5] = "Ctrl", e2[e2.Alt = 6] = "Alt", e2[e2.PauseBreak = 7] = "PauseBreak", e2[e2.CapsLock = 8] = "CapsLock", e2[e2.Escape = 9] = "Escape", e2[e2.Space = 10] = "Space", e2[e2.PageUp = 11] = "PageUp", e2[e2.PageDown = 12] = "PageDown", e2[e2.End = 13] = "End", e2[e2.Home = 14] = "Home", e2[e2.LeftArrow = 15] = "LeftArrow", e2[e2.UpArrow = 16] = "UpArrow", e2[e2.RightArrow = 17] = "RightArrow", e2[e2.DownArrow = 18] = "DownArrow", e2[e2.Insert = 19] = "Insert", e2[e2.Delete = 20] = "Delete", e2[e2.KEY_0 = 21] = "KEY_0", e2[e2.KEY_1 = 22] = "KEY_1", e2[e2.KEY_2 = 23] = "KEY_2", e2[e2.KEY_3 = 24] = "KEY_3", e2[e2.KEY_4 = 25] = "KEY_4", e2[e2.KEY_5 = 26] = "KEY_5", e2[e2.KEY_6 = 27] = "KEY_6", e2[e2.KEY_7 = 28] = "KEY_7", e2[e2.KEY_8 = 29] = "KEY_8", e2[e2.KEY_9 = 30] = "KEY_9", e2[e2.KEY_A = 31] = "KEY_A", e2[e2.KEY_B = 32] = "KEY_B", e2[e2.KEY_C = 33] = "KEY_C", e2[e2.KEY_D = 34] = "KEY_D", e2[e2.KEY_E = 35] = "KEY_E", e2[e2.KEY_F = 36] = "KEY_F", e2[e2.KEY_G = 37] = "KEY_G", e2[e2.KEY_H = 38] = "KEY_H", e2[e2.KEY_I = 39] = "KEY_I", e2[e2.KEY_J = 40] = "KEY_J", e2[e2.KEY_K = 41] = "KEY_K", e2[e2.KEY_L = 42] = "KEY_L", e2[e2.KEY_M = 43] = "KEY_M", e2[e2.KEY_N = 44] = "KEY_N", e2[e2.KEY_O = 45] = "KEY_O", e2[e2.KEY_P = 46] = "KEY_P", e2[e2.KEY_Q = 47] = "KEY_Q", e2[e2.KEY_R = 48] = "KEY_R", e2[e2.KEY_S = 49] = "KEY_S", e2[e2.KEY_T = 50] = "KEY_T", e2[e2.KEY_U = 51] = "KEY_U", e2[e2.KEY_V = 52] = "KEY_V", e2[e2.KEY_W = 53] = "KEY_W", e2[e2.KEY_X = 54] = "KEY_X", e2[e2.KEY_Y = 55] = "KEY_Y", e2[e2.KEY_Z = 56] = "KEY_Z", e2[e2.Meta = 57] = "Meta", e2[e2.ContextMenu = 58] = "ContextMenu", e2[e2.F1 = 59] = "F1", e2[e2.F2 = 60] = "F2", e2[e2.F3 = 61] = "F3", e2[e2.F4 = 62] = "F4", e2[e2.F5 = 63] = "F5", e2[e2.F6 = 64] = "F6", e2[e2.F7 = 65] = "F7", e2[e2.F8 = 66] = "F8", e2[e2.F9 = 67] = "F9", e2[e2.F10 = 68] = "F10", e2[e2.F11 = 69] = "F11", e2[e2.F12 = 70] = "F12", e2[e2.F13 = 71] = "F13", e2[e2.F14 = 72] = "F14", e2[e2.F15 = 73] = "F15", e2[e2.F16 = 74] = "F16", e2[e2.F17 = 75] = "F17", e2[e2.F18 = 76] = "F18", e2[e2.F19 = 77] = "F19", e2[e2.NumLock = 78] = "NumLock", e2[e2.ScrollLock = 79] = "ScrollLock", e2[e2.US_SEMICOLON = 80] = "US_SEMICOLON", e2[e2.US_EQUAL = 81] = "US_EQUAL", e2[e2.US_COMMA = 82] = "US_COMMA", e2[e2.US_MINUS = 83] = "US_MINUS", e2[e2.US_DOT = 84] = "US_DOT", e2[e2.US_SLASH = 85] = "US_SLASH", e2[e2.US_BACKTICK = 86] = "US_BACKTICK", e2[e2.US_OPEN_SQUARE_BRACKET = 87] = "US_OPEN_SQUARE_BRACKET", e2[e2.US_BACKSLASH = 88] = "US_BACKSLASH", e2[e2.US_CLOSE_SQUARE_BRACKET = 89] = "US_CLOSE_SQUARE_BRACKET", e2[e2.US_QUOTE = 90] = "US_QUOTE", e2[e2.OEM_8 = 91] = "OEM_8", e2[e2.OEM_102 = 92] = "OEM_102", e2[e2.NUMPAD_0 = 93] = "NUMPAD_0", e2[e2.NUMPAD_1 = 94] = "NUMPAD_1", e2[e2.NUMPAD_2 = 95] = "NUMPAD_2", e2[e2.NUMPAD_3 = 96] = "NUMPAD_3", e2[e2.NUMPAD_4 = 97] = "NUMPAD_4", e2[e2.NUMPAD_5 = 98] = "NUMPAD_5", e2[e2.NUMPAD_6 = 99] = "NUMPAD_6", e2[e2.NUMPAD_7 = 100] = "NUMPAD_7", e2[e2.NUMPAD_8 = 101] = "NUMPAD_8", e2[e2.NUMPAD_9 = 102] = "NUMPAD_9", e2[e2.NUMPAD_MULTIPLY = 103] = "NUMPAD_MULTIPLY", e2[e2.NUMPAD_ADD = 104] = "NUMPAD_ADD", e2[e2.NUMPAD_SEPARATOR = 105] = "NUMPAD_SEPARATOR", e2[e2.NUMPAD_SUBTRACT = 106] = "NUMPAD_SUBTRACT", e2[e2.NUMPAD_DECIMAL = 107] = "NUMPAD_DECIMAL", e2[e2.NUMPAD_DIVIDE = 108] = "NUMPAD_DIVIDE", e2[e2.KEY_IN_COMPOSITION = 109] = "KEY_IN_COMPOSITION", e2[e2.ABNT_C1 = 110] = "ABNT_C1", e2[e2.ABNT_C2 = 111] = "ABNT_C2", e2[e2.MAX_VALUE = 112] = "MAX_VALUE";
  }(b || (b = {})), function(e2) {
    e2[e2.Hint = 1] = "Hint", e2[e2.Info = 2] = "Info", e2[e2.Warning = 4] = "Warning", e2[e2.Error = 8] = "Error";
  }(_ || (_ = {})), function(e2) {
    e2[e2.Unnecessary = 1] = "Unnecessary", e2[e2.Deprecated = 2] = "Deprecated";
  }(v || (v = {})), function(e2) {
    e2[e2.Inline = 1] = "Inline", e2[e2.Gutter = 2] = "Gutter";
  }(w || (w = {})), function(e2) {
    e2[e2.UNKNOWN = 0] = "UNKNOWN", e2[e2.TEXTAREA = 1] = "TEXTAREA", e2[e2.GUTTER_GLYPH_MARGIN = 2] = "GUTTER_GLYPH_MARGIN", e2[e2.GUTTER_LINE_NUMBERS = 3] = "GUTTER_LINE_NUMBERS", e2[e2.GUTTER_LINE_DECORATIONS = 4] = "GUTTER_LINE_DECORATIONS", e2[e2.GUTTER_VIEW_ZONE = 5] = "GUTTER_VIEW_ZONE", e2[e2.CONTENT_TEXT = 6] = "CONTENT_TEXT", e2[e2.CONTENT_EMPTY = 7] = "CONTENT_EMPTY", e2[e2.CONTENT_VIEW_ZONE = 8] = "CONTENT_VIEW_ZONE", e2[e2.CONTENT_WIDGET = 9] = "CONTENT_WIDGET", e2[e2.OVERVIEW_RULER = 10] = "OVERVIEW_RULER", e2[e2.SCROLLBAR = 11] = "SCROLLBAR", e2[e2.OVERLAY_WIDGET = 12] = "OVERLAY_WIDGET", e2[e2.OUTSIDE_EDITOR = 13] = "OUTSIDE_EDITOR";
  }(y || (y = {})), function(e2) {
    e2[e2.TOP_RIGHT_CORNER = 0] = "TOP_RIGHT_CORNER", e2[e2.BOTTOM_RIGHT_CORNER = 1] = "BOTTOM_RIGHT_CORNER", e2[e2.TOP_CENTER = 2] = "TOP_CENTER";
  }(C || (C = {})), function(e2) {
    e2[e2.Left = 1] = "Left", e2[e2.Center = 2] = "Center", e2[e2.Right = 4] = "Right", e2[e2.Full = 7] = "Full";
  }(x || (x = {})), function(e2) {
    e2[e2.Off = 0] = "Off", e2[e2.On = 1] = "On", e2[e2.Relative = 2] = "Relative", e2[e2.Interval = 3] = "Interval", e2[e2.Custom = 4] = "Custom";
  }(S || (S = {})), function(e2) {
    e2[e2.None = 0] = "None", e2[e2.Text = 1] = "Text", e2[e2.Blocks = 2] = "Blocks";
  }(k || (k = {})), function(e2) {
    e2[e2.Smooth = 0] = "Smooth", e2[e2.Immediate = 1] = "Immediate";
  }(E || (E = {})), function(e2) {
    e2[e2.Auto = 1] = "Auto", e2[e2.Hidden = 2] = "Hidden", e2[e2.Visible = 3] = "Visible";
  }(T || (T = {})), function(e2) {
    e2[e2.LTR = 0] = "LTR", e2[e2.RTL = 1] = "RTL";
  }(L || (L = {})), function(e2) {
    e2[e2.Invoke = 1] = "Invoke", e2[e2.TriggerCharacter = 2] = "TriggerCharacter", e2[e2.ContentChange = 3] = "ContentChange";
  }(N || (N = {})), function(e2) {
    e2[e2.File = 0] = "File", e2[e2.Module = 1] = "Module", e2[e2.Namespace = 2] = "Namespace", e2[e2.Package = 3] = "Package", e2[e2.Class = 4] = "Class", e2[e2.Method = 5] = "Method", e2[e2.Property = 6] = "Property", e2[e2.Field = 7] = "Field", e2[e2.Constructor = 8] = "Constructor", e2[e2.Enum = 9] = "Enum", e2[e2.Interface = 10] = "Interface", e2[e2.Function = 11] = "Function", e2[e2.Variable = 12] = "Variable", e2[e2.Constant = 13] = "Constant", e2[e2.String = 14] = "String", e2[e2.Number = 15] = "Number", e2[e2.Boolean = 16] = "Boolean", e2[e2.Array = 17] = "Array", e2[e2.Object = 18] = "Object", e2[e2.Key = 19] = "Key", e2[e2.Null = 20] = "Null", e2[e2.EnumMember = 21] = "EnumMember", e2[e2.Struct = 22] = "Struct", e2[e2.Event = 23] = "Event", e2[e2.Operator = 24] = "Operator", e2[e2.TypeParameter = 25] = "TypeParameter";
  }(I || (I = {})), function(e2) {
    e2[e2.Deprecated = 1] = "Deprecated";
  }(D || (D = {})), function(e2) {
    e2[e2.Hidden = 0] = "Hidden", e2[e2.Blink = 1] = "Blink", e2[e2.Smooth = 2] = "Smooth", e2[e2.Phase = 3] = "Phase", e2[e2.Expand = 4] = "Expand", e2[e2.Solid = 5] = "Solid";
  }(O || (O = {})), function(e2) {
    e2[e2.Line = 1] = "Line", e2[e2.Block = 2] = "Block", e2[e2.Underline = 3] = "Underline", e2[e2.LineThin = 4] = "LineThin", e2[e2.BlockOutline = 5] = "BlockOutline", e2[e2.UnderlineThin = 6] = "UnderlineThin";
  }(A || (A = {})), function(e2) {
    e2[e2.AlwaysGrowsWhenTypingAtEdges = 0] = "AlwaysGrowsWhenTypingAtEdges", e2[e2.NeverGrowsWhenTypingAtEdges = 1] = "NeverGrowsWhenTypingAtEdges", e2[e2.GrowsOnlyWhenTypingBefore = 2] = "GrowsOnlyWhenTypingBefore", e2[e2.GrowsOnlyWhenTypingAfter = 3] = "GrowsOnlyWhenTypingAfter";
  }(R || (R = {})), function(e2) {
    e2[e2.None = 0] = "None", e2[e2.Same = 1] = "Same", e2[e2.Indent = 2] = "Indent", e2[e2.DeepIndent = 3] = "DeepIndent";
  }(M || (M = {}));
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return r;
  });
  var i = n(18);
  const r = Object(i.c)("codeEditorService");
}, function(e, t, n) {
  "use strict";
  n.d(t, "i", function() {
    return h;
  }), n.d(t, "e", function() {
    return u;
  }), n.d(t, "d", function() {
    return p;
  }), n.d(t, "g", function() {
    return m;
  }), n.d(t, "f", function() {
    return g;
  }), n.d(t, "b", function() {
    return f;
  }), n.d(t, "a", function() {
    return b;
  }), n.d(t, "c", function() {
    return _;
  }), n.d(t, "h", function() {
    return v;
  });
  var i = n(28);
  class r extends Error {
    constructor(e2, t2, n2) {
      let i2;
      typeof t2 == "string" && t2.indexOf("not ") === 0 ? (i2 = "must not be", t2 = t2.replace(/^not /, "")) : i2 = "must be";
      const r2 = e2.indexOf(".") !== -1 ? "property" : "argument";
      let o2 = `The "${e2}" ${r2} ${i2} of type ${t2}`;
      o2 += ". Received type " + typeof n2, super(o2), this.code = "ERR_INVALID_ARG_TYPE";
    }
  }
  function o(e2, t2) {
    if (typeof e2 != "string")
      throw new r(t2, "string", e2);
  }
  function s(e2) {
    return e2 === 47 || e2 === 92;
  }
  function a(e2) {
    return e2 === 47;
  }
  function l(e2) {
    return e2 >= 65 && e2 <= 90 || e2 >= 97 && e2 <= 122;
  }
  function c(e2, t2, n2, i2) {
    let r2 = "", o2 = 0, s2 = -1, a2 = 0, l2 = 0;
    for (let c2 = 0; c2 <= e2.length; ++c2) {
      if (c2 < e2.length)
        l2 = e2.charCodeAt(c2);
      else {
        if (i2(l2))
          break;
        l2 = 47;
      }
      if (i2(l2)) {
        if (s2 === c2 - 1 || a2 === 1)
          ;
        else if (a2 === 2) {
          if (r2.length < 2 || o2 !== 2 || r2.charCodeAt(r2.length - 1) !== 46 || r2.charCodeAt(r2.length - 2) !== 46) {
            if (r2.length > 2) {
              const e3 = r2.lastIndexOf(n2);
              e3 === -1 ? (r2 = "", o2 = 0) : (r2 = r2.slice(0, e3), o2 = r2.length - 1 - r2.lastIndexOf(n2)), s2 = c2, a2 = 0;
              continue;
            }
            if (r2.length !== 0) {
              r2 = "", o2 = 0, s2 = c2, a2 = 0;
              continue;
            }
          }
          t2 && (r2 += r2.length > 0 ? n2 + ".." : "..", o2 = 2);
        } else
          r2.length > 0 ? r2 += `${n2}${e2.slice(s2 + 1, c2)}` : r2 = e2.slice(s2 + 1, c2), o2 = c2 - s2 - 1;
        s2 = c2, a2 = 0;
      } else
        l2 === 46 && a2 !== -1 ? ++a2 : a2 = -1;
    }
    return r2;
  }
  function d(e2, t2) {
    if (t2 === null || typeof t2 != "object")
      throw new r("pathObject", "Object", t2);
    const n2 = t2.dir || t2.root, i2 = t2.base || `${t2.name || ""}${t2.ext || ""}`;
    return n2 ? n2 === t2.root ? `${n2}${i2}` : `${n2}${e2}${i2}` : i2;
  }
  const h = {resolve(...e2) {
    let t2 = "", n2 = "", r2 = false;
    for (let a2 = e2.length - 1; a2 >= -1; a2--) {
      let c2;
      if (a2 >= 0) {
        if (c2 = e2[a2], o(c2, "path"), c2.length === 0)
          continue;
      } else
        t2.length === 0 ? c2 = i.a() : (c2 = i.b["=" + t2] || i.a(), (c2 === void 0 || c2.slice(0, 2).toLowerCase() !== t2.toLowerCase() && c2.charCodeAt(2) === 92) && (c2 = t2 + "\\"));
      const d2 = c2.length;
      let h2 = 0, u2 = "", p2 = false;
      const m2 = c2.charCodeAt(0);
      if (d2 === 1)
        s(m2) && (h2 = 1, p2 = true);
      else if (s(m2))
        if (p2 = true, s(c2.charCodeAt(1))) {
          let e3 = 2, t3 = e3;
          for (; e3 < d2 && !s(c2.charCodeAt(e3)); )
            e3++;
          if (e3 < d2 && e3 !== t3) {
            const n3 = c2.slice(t3, e3);
            for (t3 = e3; e3 < d2 && s(c2.charCodeAt(e3)); )
              e3++;
            if (e3 < d2 && e3 !== t3) {
              for (t3 = e3; e3 < d2 && !s(c2.charCodeAt(e3)); )
                e3++;
              e3 !== d2 && e3 === t3 || (u2 = `\\\\${n3}\\${c2.slice(t3, e3)}`, h2 = e3);
            }
          }
        } else
          h2 = 1;
      else
        l(m2) && c2.charCodeAt(1) === 58 && (u2 = c2.slice(0, 2), h2 = 2, d2 > 2 && s(c2.charCodeAt(2)) && (p2 = true, h2 = 3));
      if (u2.length > 0)
        if (t2.length > 0) {
          if (u2.toLowerCase() !== t2.toLowerCase())
            continue;
        } else
          t2 = u2;
      if (r2) {
        if (t2.length > 0)
          break;
      } else if (n2 = `${c2.slice(h2)}\\${n2}`, r2 = p2, p2 && t2.length > 0)
        break;
    }
    return n2 = c(n2, !r2, "\\", s), r2 ? `${t2}\\${n2}` : `${t2}${n2}` || ".";
  }, normalize(e2) {
    o(e2, "path");
    const t2 = e2.length;
    if (t2 === 0)
      return ".";
    let n2, i2 = 0, r2 = false;
    const d2 = e2.charCodeAt(0);
    if (t2 === 1)
      return a(d2) ? "\\" : e2;
    if (s(d2))
      if (r2 = true, s(e2.charCodeAt(1))) {
        let r3 = 2, o2 = r3;
        for (; r3 < t2 && !s(e2.charCodeAt(r3)); )
          r3++;
        if (r3 < t2 && r3 !== o2) {
          const a2 = e2.slice(o2, r3);
          for (o2 = r3; r3 < t2 && s(e2.charCodeAt(r3)); )
            r3++;
          if (r3 < t2 && r3 !== o2) {
            for (o2 = r3; r3 < t2 && !s(e2.charCodeAt(r3)); )
              r3++;
            if (r3 === t2)
              return `\\\\${a2}\\${e2.slice(o2)}\\`;
            r3 !== o2 && (n2 = `\\\\${a2}\\${e2.slice(o2, r3)}`, i2 = r3);
          }
        }
      } else
        i2 = 1;
    else
      l(d2) && e2.charCodeAt(1) === 58 && (n2 = e2.slice(0, 2), i2 = 2, t2 > 2 && s(e2.charCodeAt(2)) && (r2 = true, i2 = 3));
    let h2 = i2 < t2 ? c(e2.slice(i2), !r2, "\\", s) : "";
    return h2.length !== 0 || r2 || (h2 = "."), h2.length > 0 && s(e2.charCodeAt(t2 - 1)) && (h2 += "\\"), n2 === void 0 ? r2 ? "\\" + h2 : h2 : r2 ? `${n2}\\${h2}` : `${n2}${h2}`;
  }, isAbsolute(e2) {
    o(e2, "path");
    const t2 = e2.length;
    if (t2 === 0)
      return false;
    const n2 = e2.charCodeAt(0);
    return s(n2) || t2 > 2 && l(n2) && e2.charCodeAt(1) === 58 && s(e2.charCodeAt(2));
  }, join(...e2) {
    if (e2.length === 0)
      return ".";
    let t2, n2;
    for (let i3 = 0; i3 < e2.length; ++i3) {
      const r3 = e2[i3];
      o(r3, "path"), r3.length > 0 && (t2 === void 0 ? t2 = n2 = r3 : t2 += "\\" + r3);
    }
    if (t2 === void 0)
      return ".";
    let i2 = true, r2 = 0;
    if (typeof n2 == "string" && s(n2.charCodeAt(0))) {
      ++r2;
      const e3 = n2.length;
      e3 > 1 && s(n2.charCodeAt(1)) && (++r2, e3 > 2 && (s(n2.charCodeAt(2)) ? ++r2 : i2 = false));
    }
    if (i2) {
      for (; r2 < t2.length && s(t2.charCodeAt(r2)); )
        r2++;
      r2 >= 2 && (t2 = "\\" + t2.slice(r2));
    }
    return h.normalize(t2);
  }, relative(e2, t2) {
    if (o(e2, "from"), o(t2, "to"), e2 === t2)
      return "";
    const n2 = h.resolve(e2), i2 = h.resolve(t2);
    if (n2 === i2)
      return "";
    if ((e2 = n2.toLowerCase()) === (t2 = i2.toLowerCase()))
      return "";
    let r2 = 0;
    for (; r2 < e2.length && e2.charCodeAt(r2) === 92; )
      r2++;
    let s2 = e2.length;
    for (; s2 - 1 > r2 && e2.charCodeAt(s2 - 1) === 92; )
      s2--;
    const a2 = s2 - r2;
    let l2 = 0;
    for (; l2 < t2.length && t2.charCodeAt(l2) === 92; )
      l2++;
    let c2 = t2.length;
    for (; c2 - 1 > l2 && t2.charCodeAt(c2 - 1) === 92; )
      c2--;
    const d2 = c2 - l2, u2 = a2 < d2 ? a2 : d2;
    let p2 = -1, m2 = 0;
    for (; m2 < u2; m2++) {
      const n3 = e2.charCodeAt(r2 + m2);
      if (n3 !== t2.charCodeAt(l2 + m2))
        break;
      n3 === 92 && (p2 = m2);
    }
    if (m2 !== u2) {
      if (p2 === -1)
        return i2;
    } else {
      if (d2 > u2) {
        if (t2.charCodeAt(l2 + m2) === 92)
          return i2.slice(l2 + m2 + 1);
        if (m2 === 2)
          return i2.slice(l2 + m2);
      }
      a2 > u2 && (e2.charCodeAt(r2 + m2) === 92 ? p2 = m2 : m2 === 2 && (p2 = 3)), p2 === -1 && (p2 = 0);
    }
    let g2 = "";
    for (m2 = r2 + p2 + 1; m2 <= s2; ++m2)
      m2 !== s2 && e2.charCodeAt(m2) !== 92 || (g2 += g2.length === 0 ? ".." : "\\..");
    return l2 += p2, g2.length > 0 ? `${g2}${i2.slice(l2, c2)}` : (i2.charCodeAt(l2) === 92 && ++l2, i2.slice(l2, c2));
  }, toNamespacedPath(e2) {
    if (typeof e2 != "string")
      return e2;
    if (e2.length === 0)
      return "";
    const t2 = h.resolve(e2);
    if (t2.length <= 2)
      return e2;
    if (t2.charCodeAt(0) === 92) {
      if (t2.charCodeAt(1) === 92) {
        const e3 = t2.charCodeAt(2);
        if (e3 !== 63 && e3 !== 46)
          return "\\\\?\\UNC\\" + t2.slice(2);
      }
    } else if (l(t2.charCodeAt(0)) && t2.charCodeAt(1) === 58 && t2.charCodeAt(2) === 92)
      return "\\\\?\\" + t2;
    return e2;
  }, dirname(e2) {
    o(e2, "path");
    const t2 = e2.length;
    if (t2 === 0)
      return ".";
    let n2 = -1, i2 = 0;
    const r2 = e2.charCodeAt(0);
    if (t2 === 1)
      return s(r2) ? e2 : ".";
    if (s(r2)) {
      if (n2 = i2 = 1, s(e2.charCodeAt(1))) {
        let r3 = 2, o2 = r3;
        for (; r3 < t2 && !s(e2.charCodeAt(r3)); )
          r3++;
        if (r3 < t2 && r3 !== o2) {
          for (o2 = r3; r3 < t2 && s(e2.charCodeAt(r3)); )
            r3++;
          if (r3 < t2 && r3 !== o2) {
            for (o2 = r3; r3 < t2 && !s(e2.charCodeAt(r3)); )
              r3++;
            if (r3 === t2)
              return e2;
            r3 !== o2 && (n2 = i2 = r3 + 1);
          }
        }
      }
    } else
      l(r2) && e2.charCodeAt(1) === 58 && (n2 = t2 > 2 && s(e2.charCodeAt(2)) ? 3 : 2, i2 = n2);
    let a2 = -1, c2 = true;
    for (let n3 = t2 - 1; n3 >= i2; --n3)
      if (s(e2.charCodeAt(n3))) {
        if (!c2) {
          a2 = n3;
          break;
        }
      } else
        c2 = false;
    if (a2 === -1) {
      if (n2 === -1)
        return ".";
      a2 = n2;
    }
    return e2.slice(0, a2);
  }, basename(e2, t2) {
    t2 !== void 0 && o(t2, "ext"), o(e2, "path");
    let n2, i2 = 0, r2 = -1, a2 = true;
    if (e2.length >= 2 && l(e2.charCodeAt(0)) && e2.charCodeAt(1) === 58 && (i2 = 2), t2 !== void 0 && t2.length > 0 && t2.length <= e2.length) {
      if (t2 === e2)
        return "";
      let o2 = t2.length - 1, l2 = -1;
      for (n2 = e2.length - 1; n2 >= i2; --n2) {
        const c2 = e2.charCodeAt(n2);
        if (s(c2)) {
          if (!a2) {
            i2 = n2 + 1;
            break;
          }
        } else
          l2 === -1 && (a2 = false, l2 = n2 + 1), o2 >= 0 && (c2 === t2.charCodeAt(o2) ? --o2 == -1 && (r2 = n2) : (o2 = -1, r2 = l2));
      }
      return i2 === r2 ? r2 = l2 : r2 === -1 && (r2 = e2.length), e2.slice(i2, r2);
    }
    for (n2 = e2.length - 1; n2 >= i2; --n2)
      if (s(e2.charCodeAt(n2))) {
        if (!a2) {
          i2 = n2 + 1;
          break;
        }
      } else
        r2 === -1 && (a2 = false, r2 = n2 + 1);
    return r2 === -1 ? "" : e2.slice(i2, r2);
  }, extname(e2) {
    o(e2, "path");
    let t2 = 0, n2 = -1, i2 = 0, r2 = -1, a2 = true, c2 = 0;
    e2.length >= 2 && e2.charCodeAt(1) === 58 && l(e2.charCodeAt(0)) && (t2 = i2 = 2);
    for (let o2 = e2.length - 1; o2 >= t2; --o2) {
      const t3 = e2.charCodeAt(o2);
      if (s(t3)) {
        if (!a2) {
          i2 = o2 + 1;
          break;
        }
      } else
        r2 === -1 && (a2 = false, r2 = o2 + 1), t3 === 46 ? n2 === -1 ? n2 = o2 : c2 !== 1 && (c2 = 1) : n2 !== -1 && (c2 = -1);
    }
    return n2 === -1 || r2 === -1 || c2 === 0 || c2 === 1 && n2 === r2 - 1 && n2 === i2 + 1 ? "" : e2.slice(n2, r2);
  }, format: d.bind(null, "\\"), parse(e2) {
    o(e2, "path");
    const t2 = {root: "", dir: "", base: "", ext: "", name: ""};
    if (e2.length === 0)
      return t2;
    const n2 = e2.length;
    let i2 = 0, r2 = e2.charCodeAt(0);
    if (n2 === 1)
      return s(r2) ? (t2.root = t2.dir = e2, t2) : (t2.base = t2.name = e2, t2);
    if (s(r2)) {
      if (i2 = 1, s(e2.charCodeAt(1))) {
        let t3 = 2, r3 = t3;
        for (; t3 < n2 && !s(e2.charCodeAt(t3)); )
          t3++;
        if (t3 < n2 && t3 !== r3) {
          for (r3 = t3; t3 < n2 && s(e2.charCodeAt(t3)); )
            t3++;
          if (t3 < n2 && t3 !== r3) {
            for (r3 = t3; t3 < n2 && !s(e2.charCodeAt(t3)); )
              t3++;
            t3 === n2 ? i2 = t3 : t3 !== r3 && (i2 = t3 + 1);
          }
        }
      }
    } else if (l(r2) && e2.charCodeAt(1) === 58) {
      if (n2 <= 2)
        return t2.root = t2.dir = e2, t2;
      if (i2 = 2, s(e2.charCodeAt(2))) {
        if (n2 === 3)
          return t2.root = t2.dir = e2, t2;
        i2 = 3;
      }
    }
    i2 > 0 && (t2.root = e2.slice(0, i2));
    let a2 = -1, c2 = i2, d2 = -1, h2 = true, u2 = e2.length - 1, p2 = 0;
    for (; u2 >= i2; --u2)
      if (r2 = e2.charCodeAt(u2), s(r2)) {
        if (!h2) {
          c2 = u2 + 1;
          break;
        }
      } else
        d2 === -1 && (h2 = false, d2 = u2 + 1), r2 === 46 ? a2 === -1 ? a2 = u2 : p2 !== 1 && (p2 = 1) : a2 !== -1 && (p2 = -1);
    return d2 !== -1 && (a2 === -1 || p2 === 0 || p2 === 1 && a2 === d2 - 1 && a2 === c2 + 1 ? t2.base = t2.name = e2.slice(c2, d2) : (t2.name = e2.slice(c2, a2), t2.base = e2.slice(c2, d2), t2.ext = e2.slice(a2, d2))), t2.dir = c2 > 0 && c2 !== i2 ? e2.slice(0, c2 - 1) : t2.root, t2;
  }, sep: "\\", delimiter: ";", win32: null, posix: null}, u = {resolve(...e2) {
    let t2 = "", n2 = false;
    for (let r2 = e2.length - 1; r2 >= -1 && !n2; r2--) {
      const s2 = r2 >= 0 ? e2[r2] : i.a();
      o(s2, "path"), s2.length !== 0 && (t2 = `${s2}/${t2}`, n2 = s2.charCodeAt(0) === 47);
    }
    return t2 = c(t2, !n2, "/", a), n2 ? "/" + t2 : t2.length > 0 ? t2 : ".";
  }, normalize(e2) {
    if (o(e2, "path"), e2.length === 0)
      return ".";
    const t2 = e2.charCodeAt(0) === 47, n2 = e2.charCodeAt(e2.length - 1) === 47;
    return (e2 = c(e2, !t2, "/", a)).length === 0 ? t2 ? "/" : n2 ? "./" : "." : (n2 && (e2 += "/"), t2 ? "/" + e2 : e2);
  }, isAbsolute: (e2) => (o(e2, "path"), e2.length > 0 && e2.charCodeAt(0) === 47), join(...e2) {
    if (e2.length === 0)
      return ".";
    let t2;
    for (let n2 = 0; n2 < e2.length; ++n2) {
      const i2 = e2[n2];
      o(i2, "path"), i2.length > 0 && (t2 === void 0 ? t2 = i2 : t2 += "/" + i2);
    }
    return t2 === void 0 ? "." : u.normalize(t2);
  }, relative(e2, t2) {
    if (o(e2, "from"), o(t2, "to"), e2 === t2)
      return "";
    if ((e2 = u.resolve(e2)) === (t2 = u.resolve(t2)))
      return "";
    const n2 = e2.length, i2 = n2 - 1, r2 = t2.length - 1, s2 = i2 < r2 ? i2 : r2;
    let a2 = -1, l2 = 0;
    for (; l2 < s2; l2++) {
      const n3 = e2.charCodeAt(1 + l2);
      if (n3 !== t2.charCodeAt(1 + l2))
        break;
      n3 === 47 && (a2 = l2);
    }
    if (l2 === s2)
      if (r2 > s2) {
        if (t2.charCodeAt(1 + l2) === 47)
          return t2.slice(1 + l2 + 1);
        if (l2 === 0)
          return t2.slice(1 + l2);
      } else
        i2 > s2 && (e2.charCodeAt(1 + l2) === 47 ? a2 = l2 : l2 === 0 && (a2 = 0));
    let c2 = "";
    for (l2 = 1 + a2 + 1; l2 <= n2; ++l2)
      l2 !== n2 && e2.charCodeAt(l2) !== 47 || (c2 += c2.length === 0 ? ".." : "/..");
    return `${c2}${t2.slice(1 + a2)}`;
  }, toNamespacedPath: (e2) => e2, dirname(e2) {
    if (o(e2, "path"), e2.length === 0)
      return ".";
    const t2 = e2.charCodeAt(0) === 47;
    let n2 = -1, i2 = true;
    for (let t3 = e2.length - 1; t3 >= 1; --t3)
      if (e2.charCodeAt(t3) === 47) {
        if (!i2) {
          n2 = t3;
          break;
        }
      } else
        i2 = false;
    return n2 === -1 ? t2 ? "/" : "." : t2 && n2 === 1 ? "//" : e2.slice(0, n2);
  }, basename(e2, t2) {
    t2 !== void 0 && o(t2, "ext"), o(e2, "path");
    let n2, i2 = 0, r2 = -1, s2 = true;
    if (t2 !== void 0 && t2.length > 0 && t2.length <= e2.length) {
      if (t2 === e2)
        return "";
      let o2 = t2.length - 1, a2 = -1;
      for (n2 = e2.length - 1; n2 >= 0; --n2) {
        const l2 = e2.charCodeAt(n2);
        if (l2 === 47) {
          if (!s2) {
            i2 = n2 + 1;
            break;
          }
        } else
          a2 === -1 && (s2 = false, a2 = n2 + 1), o2 >= 0 && (l2 === t2.charCodeAt(o2) ? --o2 == -1 && (r2 = n2) : (o2 = -1, r2 = a2));
      }
      return i2 === r2 ? r2 = a2 : r2 === -1 && (r2 = e2.length), e2.slice(i2, r2);
    }
    for (n2 = e2.length - 1; n2 >= 0; --n2)
      if (e2.charCodeAt(n2) === 47) {
        if (!s2) {
          i2 = n2 + 1;
          break;
        }
      } else
        r2 === -1 && (s2 = false, r2 = n2 + 1);
    return r2 === -1 ? "" : e2.slice(i2, r2);
  }, extname(e2) {
    o(e2, "path");
    let t2 = -1, n2 = 0, i2 = -1, r2 = true, s2 = 0;
    for (let o2 = e2.length - 1; o2 >= 0; --o2) {
      const a2 = e2.charCodeAt(o2);
      if (a2 !== 47)
        i2 === -1 && (r2 = false, i2 = o2 + 1), a2 === 46 ? t2 === -1 ? t2 = o2 : s2 !== 1 && (s2 = 1) : t2 !== -1 && (s2 = -1);
      else if (!r2) {
        n2 = o2 + 1;
        break;
      }
    }
    return t2 === -1 || i2 === -1 || s2 === 0 || s2 === 1 && t2 === i2 - 1 && t2 === n2 + 1 ? "" : e2.slice(t2, i2);
  }, format: d.bind(null, "/"), parse(e2) {
    o(e2, "path");
    const t2 = {root: "", dir: "", base: "", ext: "", name: ""};
    if (e2.length === 0)
      return t2;
    const n2 = e2.charCodeAt(0) === 47;
    let i2;
    n2 ? (t2.root = "/", i2 = 1) : i2 = 0;
    let r2 = -1, s2 = 0, a2 = -1, l2 = true, c2 = e2.length - 1, d2 = 0;
    for (; c2 >= i2; --c2) {
      const t3 = e2.charCodeAt(c2);
      if (t3 !== 47)
        a2 === -1 && (l2 = false, a2 = c2 + 1), t3 === 46 ? r2 === -1 ? r2 = c2 : d2 !== 1 && (d2 = 1) : r2 !== -1 && (d2 = -1);
      else if (!l2) {
        s2 = c2 + 1;
        break;
      }
    }
    if (a2 !== -1) {
      const i3 = s2 === 0 && n2 ? 1 : s2;
      r2 === -1 || d2 === 0 || d2 === 1 && r2 === a2 - 1 && r2 === s2 + 1 ? t2.base = t2.name = e2.slice(i3, a2) : (t2.name = e2.slice(i3, r2), t2.base = e2.slice(i3, a2), t2.ext = e2.slice(r2, a2));
    }
    return s2 > 0 ? t2.dir = e2.slice(0, s2 - 1) : n2 && (t2.dir = "/"), t2;
  }, sep: "/", delimiter: ":", win32: null, posix: null};
  u.win32 = h.win32 = h, u.posix = h.posix = u;
  const p = i.c === "win32" ? h.normalize : u.normalize, m = i.c === "win32" ? h.resolve : u.resolve, g = i.c === "win32" ? h.relative : u.relative, f = i.c === "win32" ? h.dirname : u.dirname, b = i.c === "win32" ? h.basename : u.basename, _ = i.c === "win32" ? h.extname : u.extname, v = i.c === "win32" ? h.sep : u.sep;
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return l;
  }), n.d(t, "a", function() {
    return c;
  }), n.d(t, "f", function() {
    return d;
  }), n.d(t, "e", function() {
    return u;
  }), n.d(t, "d", function() {
    return m;
  }), n.d(t, "c", function() {
    return g;
  });
  var i = n(13);
  class r {
    constructor() {
      this._keyCodeToStr = [], this._strToKeyCode = Object.create(null);
    }
    define(e2, t2) {
      this._keyCodeToStr[e2] = t2, this._strToKeyCode[t2.toLowerCase()] = e2;
    }
    keyCodeToStr(e2) {
      return this._keyCodeToStr[e2];
    }
    strToKeyCode(e2) {
      return this._strToKeyCode[e2.toLowerCase()] || 0;
    }
  }
  const o = new r(), s = new r(), a = new r();
  var l;
  function c(e2, t2) {
    return (e2 | (65535 & t2) << 16 >>> 0) >>> 0;
  }
  function d(e2, t2) {
    if (e2 === 0)
      return null;
    const n2 = (65535 & e2) >>> 0, i2 = (4294901760 & e2) >>> 16;
    return new p(i2 !== 0 ? [h(n2, t2), h(i2, t2)] : [h(n2, t2)]);
  }
  function h(e2, t2) {
    const n2 = !!(2048 & e2), i2 = !!(256 & e2);
    return new u(t2 === 2 ? i2 : n2, !!(1024 & e2), !!(512 & e2), t2 === 2 ? n2 : i2, 255 & e2);
  }
  !function() {
    function e2(e3, t2, n2 = t2, i2 = n2) {
      o.define(e3, t2), s.define(e3, n2), a.define(e3, i2);
    }
    e2(0, "unknown"), e2(1, "Backspace"), e2(2, "Tab"), e2(3, "Enter"), e2(4, "Shift"), e2(5, "Ctrl"), e2(6, "Alt"), e2(7, "PauseBreak"), e2(8, "CapsLock"), e2(9, "Escape"), e2(10, "Space"), e2(11, "PageUp"), e2(12, "PageDown"), e2(13, "End"), e2(14, "Home"), e2(15, "LeftArrow", "Left"), e2(16, "UpArrow", "Up"), e2(17, "RightArrow", "Right"), e2(18, "DownArrow", "Down"), e2(19, "Insert"), e2(20, "Delete"), e2(21, "0"), e2(22, "1"), e2(23, "2"), e2(24, "3"), e2(25, "4"), e2(26, "5"), e2(27, "6"), e2(28, "7"), e2(29, "8"), e2(30, "9"), e2(31, "A"), e2(32, "B"), e2(33, "C"), e2(34, "D"), e2(35, "E"), e2(36, "F"), e2(37, "G"), e2(38, "H"), e2(39, "I"), e2(40, "J"), e2(41, "K"), e2(42, "L"), e2(43, "M"), e2(44, "N"), e2(45, "O"), e2(46, "P"), e2(47, "Q"), e2(48, "R"), e2(49, "S"), e2(50, "T"), e2(51, "U"), e2(52, "V"), e2(53, "W"), e2(54, "X"), e2(55, "Y"), e2(56, "Z"), e2(57, "Meta"), e2(58, "ContextMenu"), e2(59, "F1"), e2(60, "F2"), e2(61, "F3"), e2(62, "F4"), e2(63, "F5"), e2(64, "F6"), e2(65, "F7"), e2(66, "F8"), e2(67, "F9"), e2(68, "F10"), e2(69, "F11"), e2(70, "F12"), e2(71, "F13"), e2(72, "F14"), e2(73, "F15"), e2(74, "F16"), e2(75, "F17"), e2(76, "F18"), e2(77, "F19"), e2(78, "NumLock"), e2(79, "ScrollLock"), e2(80, ";", ";", "OEM_1"), e2(81, "=", "=", "OEM_PLUS"), e2(82, ",", ",", "OEM_COMMA"), e2(83, "-", "-", "OEM_MINUS"), e2(84, ".", ".", "OEM_PERIOD"), e2(85, "/", "/", "OEM_2"), e2(86, "`", "`", "OEM_3"), e2(110, "ABNT_C1"), e2(111, "ABNT_C2"), e2(87, "[", "[", "OEM_4"), e2(88, "\\", "\\", "OEM_5"), e2(89, "]", "]", "OEM_6"), e2(90, "'", "'", "OEM_7"), e2(91, "OEM_8"), e2(92, "OEM_102"), e2(93, "NumPad0"), e2(94, "NumPad1"), e2(95, "NumPad2"), e2(96, "NumPad3"), e2(97, "NumPad4"), e2(98, "NumPad5"), e2(99, "NumPad6"), e2(100, "NumPad7"), e2(101, "NumPad8"), e2(102, "NumPad9"), e2(103, "NumPad_Multiply"), e2(104, "NumPad_Add"), e2(105, "NumPad_Separator"), e2(106, "NumPad_Subtract"), e2(107, "NumPad_Decimal"), e2(108, "NumPad_Divide");
  }(), function(e2) {
    e2.toString = function(e3) {
      return o.keyCodeToStr(e3);
    }, e2.fromString = function(e3) {
      return o.strToKeyCode(e3);
    }, e2.toUserSettingsUS = function(e3) {
      return s.keyCodeToStr(e3);
    }, e2.toUserSettingsGeneral = function(e3) {
      return a.keyCodeToStr(e3);
    }, e2.fromUserSettings = function(e3) {
      return s.strToKeyCode(e3) || a.strToKeyCode(e3);
    };
  }(l || (l = {}));
  class u {
    constructor(e2, t2, n2, i2, r2) {
      this.ctrlKey = e2, this.shiftKey = t2, this.altKey = n2, this.metaKey = i2, this.keyCode = r2;
    }
    equals(e2) {
      return this.ctrlKey === e2.ctrlKey && this.shiftKey === e2.shiftKey && this.altKey === e2.altKey && this.metaKey === e2.metaKey && this.keyCode === e2.keyCode;
    }
    isModifierKey() {
      return this.keyCode === 0 || this.keyCode === 5 || this.keyCode === 57 || this.keyCode === 6 || this.keyCode === 4;
    }
    toChord() {
      return new p([this]);
    }
    isDuplicateModifierCase() {
      return this.ctrlKey && this.keyCode === 5 || this.shiftKey && this.keyCode === 4 || this.altKey && this.keyCode === 6 || this.metaKey && this.keyCode === 57;
    }
  }
  class p {
    constructor(e2) {
      if (e2.length === 0)
        throw Object(i.b)("parts");
      this.parts = e2;
    }
  }
  class m {
    constructor(e2, t2, n2, i2, r2, o2) {
      this.ctrlKey = e2, this.shiftKey = t2, this.altKey = n2, this.metaKey = i2, this.keyLabel = r2, this.keyAriaLabel = o2;
    }
  }
  class g {
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "a", function() {
    return r;
  }), n.d(t, "b", function() {
    return o;
  });
  var i = n(6);
  const r = (e2, t2, n2) => {
    const r2 = (e3) => o2.fire(e3), o2 = new i.a({onFirstListenerAdd: () => {
      e2.addEventListener(t2, r2, n2);
    }, onLastListenerRemove: () => {
      e2.removeEventListener(t2, r2, n2);
    }});
    return o2.event;
  };
  function o(e2) {
    return i.b.map(e2, (e3) => (e3.preventDefault(), e3.stopPropagation(), e3));
  }
}, function(e, t, n) {
  "use strict";
  n.d(t, "b", function() {
    return i;
  }), n.d(t, "a", function() {
    return s;
  });
  var i, r = n(23), o = n(11);
  !function(e2) {
    e2.inMemory = "inmemory", e2.vscode = "vscode", e2.internal = "private", e2.walkThrough = "walkThrough", e2.walkThroughSnippet = "walkThroughSnippet", e2.http = "http", e2.https = "https", e2.file = "file", e2.mailto = "mailto", e2.untitled = "untitled", e2.data = "data", e2.command = "command", e2.vscodeRemote = "vscode-remote", e2.vscodeRemoteResource = "vscode-remote-resource", e2.userData = "vscode-userdata", e2.vscodeCustomEditor = "vscode-custom-editor", e2.vscodeNotebook = "vscode-notebook", e2.vscodeNotebookCell = "vscode-notebook-cell", e2.vscodeSettings = "vscode-settings", e2.webviewPanel = "webview-panel", e2.vscodeWebview = "vscode-webview", e2.vscodeWebviewResource = "vscode-webview-resource", e2.extension = "extension";
  }(i || (i = {}));
  const s = new class {
    constructor() {
      this._hosts = Object.create(null), this._ports = Object.create(null), this._connectionTokens = Object.create(null), this._preferredWebSchema = "http", this._delegate = null;
    }
    setPreferredWebSchema(e2) {
      this._preferredWebSchema = e2;
    }
    rewrite(e2) {
      if (this._delegate)
        return this._delegate(e2);
      const t2 = e2.authority;
      let n2 = this._hosts[t2];
      n2 && n2.indexOf(":") !== -1 && (n2 = `[${n2}]`);
      const s2 = this._ports[t2], a = this._connectionTokens[t2];
      let l = "path=" + encodeURIComponent(e2.path);
      return typeof a == "string" && (l += "&tkn=" + encodeURIComponent(a)), r.a.from({scheme: o.h ? this._preferredWebSchema : i.vscodeRemoteResource, authority: `${n2}:${s2}`, path: "/vscode-remote-resource", query: l});
    }
  }();
}, function(e, t, n) {
  "use strict";
  n.d(t, "c", function() {
    return r;
  }), n.d(t, "d", function() {
    return o;
  }), n.d(t, "b", function() {
    return a;
  }), n.d(t, "g", function() {
    return l;
  }), n.d(t, "a", function() {
    return c;
  }), n.d(t, "e", function() {
    return d;
  }), n.d(t, "f", function() {
    return h;
  });
  var i = n(14);
  function r(e2) {
    if (!e2 || typeof e2 != "object")
      return e2;
    if (e2 instanceof RegExp)
      return e2;
    const t2 = Array.isArray(e2) ? [] : {};
    return Object.keys(e2).forEach((n2) => {
      e2[n2] && typeof e2[n2] == "object" ? t2[n2] = r(e2[n2]) : t2[n2] = e2[n2];
    }), t2;
  }
  function o(e2) {
    if (!e2 || typeof e2 != "object")
      return e2;
    const t2 = [e2];
    for (; t2.length > 0; ) {
      const e3 = t2.shift();
      Object.freeze(e3);
      for (const n2 in e3)
        if (s.call(e3, n2)) {
          const i2 = e3[n2];
          typeof i2 != "object" || Object.isFrozen(i2) || t2.push(i2);
        }
    }
    return e2;
  }
  const s = Object.prototype.hasOwnProperty;
  function a(e2, t2) {
    return function e3(t3, n2, r2) {
      if (Object(i.l)(t3))
        return t3;
      const o2 = n2(t3);
      if (o2 !== void 0)
        return o2;
      if (Object(i.e)(t3)) {
        const i2 = [];
        for (const o3 of t3)
          i2.push(e3(o3, n2, r2));
        return i2;
      }
      if (Object(i.i)(t3)) {
        if (r2.has(t3))
          throw new Error("Cannot clone recursive data-structure");
        r2.add(t3);
        const i2 = {};
        for (let o3 in t3)
          s.call(t3, o3) && (i2[o3] = e3(t3[o3], n2, r2));
        return r2.delete(t3), i2;
      }
      return t3;
    }(e2, t2, new Set());
  }
  function l(e2, t2, n2 = true) {
    return Object(i.i)(e2) ? (Object(i.i)(t2) && Object.keys(t2).forEach((r2) => {
      r2 in e2 ? n2 && (Object(i.i)(e2[r2]) && Object(i.i)(t2[r2]) ? l(e2[r2], t2[r2], n2) : e2[r2] = t2[r2]) : e2[r2] = t2[r2];
    }), e2) : t2;
  }
  function c(e2, ...t2) {
    return t2.forEach((t3) => Object.keys(t3).forEach((n2) => e2[n2] = t3[n2])), e2;
  }
  function d(e2, t2) {
    if (e2 === t2)
      return true;
    if (e2 == null || t2 == null)
      return false;
    if (typeof e2 != typeof t2)
      return false;
    if (typeof e2 != "object")
      return false;
    if (Array.isArray(e2) !== Array.isArray(t2))
      return false;
    let n2, i2;
    if (Array.isArray(e2)) {
      if (e2.length !== t2.length)
        return false;
      for (n2 = 0; n2 < e2.length; n2++)
        if (!d(e2[n2], t2[n2]))
          return false;
    } else {
      const r2 = [];
      for (i2 in e2)
        r2.push(i2);
      r2.sort();
      const o2 = [];
      for (i2 in t2)
        o2.push(i2);
      if (o2.sort(), !d(r2, o2))
        return false;
      for (n2 = 0; n2 < r2.length; n2++)
        if (!d(e2[r2[n2]], t2[r2[n2]]))
          return false;
    }
    return true;
  }
  function h(e2, t2, n2) {
    const i2 = t2(e2);
    return i2 === void 0 ? n2 : i2;
  }
}, function(e, t, n) {
  "use strict";
  var i = n(108);
  n.d(t, "a", function() {
    return i.b;
  }), n.d(t, "b", function() {
    return i.e;
  }), n.d(t, "c", function() {
    return i.h;
  }), n.d(t, "d", function() {
    return i.l;
  }), n.d(t, "e", function() {
    return i.m;
  }), n.d(t, "f", function() {
    return i.n;
  });
}, function(e, t, n) {
  "use strict";
  var i;
  n.d(t, "g", function() {
    return ui;
  }), n.d(t, "d", function() {
    return mn;
  }), n.d(t, "b", function() {
    return bn;
  }), n.d(t, "a", function() {
    return zn;
  }), n.d(t, "e", function() {
    return Bn;
  }), n.d(t, "c", function() {
    return Yn;
  }), n.d(t, "f", function() {
    return Xn;
  }), n.d(t, "h", function() {
    return Ho;
  }), n.d(t, "j", function() {
    return qo;
  }), n.d(t, "i", function() {
    return $o;
  }), function(e2) {
    e2[e2.Ident = 0] = "Ident", e2[e2.AtKeyword = 1] = "AtKeyword", e2[e2.String = 2] = "String", e2[e2.BadString = 3] = "BadString", e2[e2.UnquotedString = 4] = "UnquotedString", e2[e2.Hash = 5] = "Hash", e2[e2.Num = 6] = "Num", e2[e2.Percentage = 7] = "Percentage", e2[e2.Dimension = 8] = "Dimension", e2[e2.UnicodeRange = 9] = "UnicodeRange", e2[e2.CDO = 10] = "CDO", e2[e2.CDC = 11] = "CDC", e2[e2.Colon = 12] = "Colon", e2[e2.SemiColon = 13] = "SemiColon", e2[e2.CurlyL = 14] = "CurlyL", e2[e2.CurlyR = 15] = "CurlyR", e2[e2.ParenthesisL = 16] = "ParenthesisL", e2[e2.ParenthesisR = 17] = "ParenthesisR", e2[e2.BracketL = 18] = "BracketL", e2[e2.BracketR = 19] = "BracketR", e2[e2.Whitespace = 20] = "Whitespace", e2[e2.Includes = 21] = "Includes", e2[e2.Dashmatch = 22] = "Dashmatch", e2[e2.SubstringOperator = 23] = "SubstringOperator", e2[e2.PrefixOperator = 24] = "PrefixOperator", e2[e2.SuffixOperator = 25] = "SuffixOperator", e2[e2.Delim = 26] = "Delim", e2[e2.EMS = 27] = "EMS", e2[e2.EXS = 28] = "EXS", e2[e2.Length = 29] = "Length", e2[e2.Angle = 30] = "Angle", e2[e2.Time = 31] = "Time", e2[e2.Freq = 32] = "Freq", e2[e2.Exclamation = 33] = "Exclamation", e2[e2.Resolution = 34] = "Resolution", e2[e2.Comma = 35] = "Comma", e2[e2.Charset = 36] = "Charset", e2[e2.EscapedJavaScript = 37] = "EscapedJavaScript", e2[e2.BadEscapedJavaScript = 38] = "BadEscapedJavaScript", e2[e2.Comment = 39] = "Comment", e2[e2.SingleLineComment = 40] = "SingleLineComment", e2[e2.EOF = 41] = "EOF", e2[e2.CustomToken = 42] = "CustomToken";
  }(i || (i = {}));
  var r = function() {
    function e2(e3) {
      this.source = e3, this.len = e3.length, this.position = 0;
    }
    return e2.prototype.substring = function(e3, t2) {
      return t2 === void 0 && (t2 = this.position), this.source.substring(e3, t2);
    }, e2.prototype.eos = function() {
      return this.len <= this.position;
    }, e2.prototype.pos = function() {
      return this.position;
    }, e2.prototype.goBackTo = function(e3) {
      this.position = e3;
    }, e2.prototype.goBack = function(e3) {
      this.position -= e3;
    }, e2.prototype.advance = function(e3) {
      this.position += e3;
    }, e2.prototype.nextChar = function() {
      return this.source.charCodeAt(this.position++) || 0;
    }, e2.prototype.peekChar = function(e3) {
      return e3 === void 0 && (e3 = 0), this.source.charCodeAt(this.position + e3) || 0;
    }, e2.prototype.lookbackChar = function(e3) {
      return e3 === void 0 && (e3 = 0), this.source.charCodeAt(this.position - e3) || 0;
    }, e2.prototype.advanceIfChar = function(e3) {
      return e3 === this.source.charCodeAt(this.position) && (this.position++, true);
    }, e2.prototype.advanceIfChars = function(e3) {
      if (this.position + e3.length > this.source.length)
        return false;
      for (var t2 = 0; t2 < e3.length; t2++)
        if (this.source.charCodeAt(this.position + t2) !== e3[t2])
          return false;
      return this.advance(t2), true;
    }, e2.prototype.advanceWhileChar = function(e3) {
      for (var t2 = this.position; this.position < this.len && e3(this.source.charCodeAt(this.position)); )
        this.position++;
      return this.position - t2;
    }, e2;
  }(), o = "a".charCodeAt(0), s = "f".charCodeAt(0), a = "z".charCodeAt(0), l = "A".charCodeAt(0), c = "F".charCodeAt(0), d = "Z".charCodeAt(0), h = "0".charCodeAt(0), u = "9".charCodeAt(0), p = "~".charCodeAt(0), m = "^".charCodeAt(0), g = "=".charCodeAt(0), f = "|".charCodeAt(0), b = "-".charCodeAt(0), _ = "_".charCodeAt(0), v = "%".charCodeAt(0), w = "*".charCodeAt(0), y = "(".charCodeAt(0), C = ")".charCodeAt(0), x = "<".charCodeAt(0), S = ">".charCodeAt(0), k = "@".charCodeAt(0), E = "#".charCodeAt(0), T = "$".charCodeAt(0), L = "\\".charCodeAt(0), N = "/".charCodeAt(0), I = "\n".charCodeAt(0), D = "\r".charCodeAt(0), O = "\f".charCodeAt(0), A = '"'.charCodeAt(0), R = "'".charCodeAt(0), M = " ".charCodeAt(0), P = "	".charCodeAt(0), F = ";".charCodeAt(0), W = ":".charCodeAt(0), z = "{".charCodeAt(0), B = "}".charCodeAt(0), j = "[".charCodeAt(0), V = "]".charCodeAt(0), U = ",".charCodeAt(0), H = ".".charCodeAt(0), q = "!".charCodeAt(0), $ = {};
  $[F] = i.SemiColon, $[W] = i.Colon, $[z] = i.CurlyL, $[B] = i.CurlyR, $[V] = i.BracketR, $[j] = i.BracketL, $[y] = i.ParenthesisL, $[C] = i.ParenthesisR, $[U] = i.Comma;
  var K = {};
  K.em = i.EMS, K.ex = i.EXS, K.px = i.Length, K.cm = i.Length, K.mm = i.Length, K.in = i.Length, K.pt = i.Length, K.pc = i.Length, K.deg = i.Angle, K.rad = i.Angle, K.grad = i.Angle, K.ms = i.Time, K.s = i.Time, K.hz = i.Freq, K.khz = i.Freq, K["%"] = i.Percentage, K.fr = i.Percentage, K.dpi = i.Resolution, K.dpcm = i.Resolution;
  var G = function() {
    function e2() {
      this.stream = new r(""), this.ignoreComment = true, this.ignoreWhitespace = true, this.inURL = false;
    }
    return e2.prototype.setSource = function(e3) {
      this.stream = new r(e3);
    }, e2.prototype.finishToken = function(e3, t2, n2) {
      return {offset: e3, len: this.stream.pos() - e3, type: t2, text: n2 || this.stream.substring(e3)};
    }, e2.prototype.substring = function(e3, t2) {
      return this.stream.substring(e3, e3 + t2);
    }, e2.prototype.pos = function() {
      return this.stream.pos();
    }, e2.prototype.goBackTo = function(e3) {
      this.stream.goBackTo(e3);
    }, e2.prototype.scanUnquotedString = function() {
      var e3 = this.stream.pos(), t2 = [];
      return this._unquotedString(t2) ? this.finishToken(e3, i.UnquotedString, t2.join("")) : null;
    }, e2.prototype.scan = function() {
      var e3 = this.trivia();
      if (e3 !== null)
        return e3;
      var t2 = this.stream.pos();
      return this.stream.eos() ? this.finishToken(t2, i.EOF) : this.scanNext(t2);
    }, e2.prototype.scanNext = function(e3) {
      if (this.stream.advanceIfChars([x, q, b, b]))
        return this.finishToken(e3, i.CDO);
      if (this.stream.advanceIfChars([b, b, S]))
        return this.finishToken(e3, i.CDC);
      var t2 = [];
      if (this.ident(t2))
        return this.finishToken(e3, i.Ident, t2.join(""));
      if (this.stream.advanceIfChar(k)) {
        if (t2 = ["@"], this._name(t2)) {
          var n2 = t2.join("");
          return n2 === "@charset" ? this.finishToken(e3, i.Charset, n2) : this.finishToken(e3, i.AtKeyword, n2);
        }
        return this.finishToken(e3, i.Delim);
      }
      if (this.stream.advanceIfChar(E))
        return t2 = ["#"], this._name(t2) ? this.finishToken(e3, i.Hash, t2.join("")) : this.finishToken(e3, i.Delim);
      if (this.stream.advanceIfChar(q))
        return this.finishToken(e3, i.Exclamation);
      if (this._number()) {
        var r2 = this.stream.pos();
        if (t2 = [this.stream.substring(e3, r2)], this.stream.advanceIfChar(v))
          return this.finishToken(e3, i.Percentage);
        if (this.ident(t2)) {
          var o2 = this.stream.substring(r2).toLowerCase(), s2 = K[o2];
          return s2 !== void 0 ? this.finishToken(e3, s2, t2.join("")) : this.finishToken(e3, i.Dimension, t2.join(""));
        }
        return this.finishToken(e3, i.Num);
      }
      t2 = [];
      var a2 = this._string(t2);
      return a2 !== null ? this.finishToken(e3, a2, t2.join("")) : (a2 = $[this.stream.peekChar()]) !== void 0 ? (this.stream.advance(1), this.finishToken(e3, a2)) : this.stream.peekChar(0) === p && this.stream.peekChar(1) === g ? (this.stream.advance(2), this.finishToken(e3, i.Includes)) : this.stream.peekChar(0) === f && this.stream.peekChar(1) === g ? (this.stream.advance(2), this.finishToken(e3, i.Dashmatch)) : this.stream.peekChar(0) === w && this.stream.peekChar(1) === g ? (this.stream.advance(2), this.finishToken(e3, i.SubstringOperator)) : this.stream.peekChar(0) === m && this.stream.peekChar(1) === g ? (this.stream.advance(2), this.finishToken(e3, i.PrefixOperator)) : this.stream.peekChar(0) === T && this.stream.peekChar(1) === g ? (this.stream.advance(2), this.finishToken(e3, i.SuffixOperator)) : (this.stream.nextChar(), this.finishToken(e3, i.Delim));
    }, e2.prototype.trivia = function() {
      for (; ; ) {
        var e3 = this.stream.pos();
        if (this._whitespace()) {
          if (!this.ignoreWhitespace)
            return this.finishToken(e3, i.Whitespace);
        } else {
          if (!this.comment())
            return null;
          if (!this.ignoreComment)
            return this.finishToken(e3, i.Comment);
        }
      }
    }, e2.prototype.comment = function() {
      if (this.stream.advanceIfChars([N, w])) {
        var e3 = false, t2 = false;
        return this.stream.advanceWhileChar(function(n2) {
          return t2 && n2 === N ? (e3 = true, false) : (t2 = n2 === w, true);
        }), e3 && this.stream.advance(1), true;
      }
      return false;
    }, e2.prototype._number = function() {
      var e3, t2 = 0;
      return this.stream.peekChar() === H && (t2 = 1), (e3 = this.stream.peekChar(t2)) >= h && e3 <= u && (this.stream.advance(t2 + 1), this.stream.advanceWhileChar(function(e4) {
        return e4 >= h && e4 <= u || t2 === 0 && e4 === H;
      }), true);
    }, e2.prototype._newline = function(e3) {
      var t2 = this.stream.peekChar();
      switch (t2) {
        case D:
        case O:
        case I:
          return this.stream.advance(1), e3.push(String.fromCharCode(t2)), t2 === D && this.stream.advanceIfChar(I) && e3.push("\n"), true;
      }
      return false;
    }, e2.prototype._escape = function(e3, t2) {
      var n2 = this.stream.peekChar();
      if (n2 === L) {
        this.stream.advance(1), n2 = this.stream.peekChar();
        for (var i2 = 0; i2 < 6 && (n2 >= h && n2 <= u || n2 >= o && n2 <= s || n2 >= l && n2 <= c); )
          this.stream.advance(1), n2 = this.stream.peekChar(), i2++;
        if (i2 > 0) {
          try {
            var r2 = parseInt(this.stream.substring(this.stream.pos() - i2), 16);
            r2 && e3.push(String.fromCharCode(r2));
          } catch (e4) {
          }
          return n2 === M || n2 === P ? this.stream.advance(1) : this._newline([]), true;
        }
        if (n2 !== D && n2 !== O && n2 !== I)
          return this.stream.advance(1), e3.push(String.fromCharCode(n2)), true;
        if (t2)
          return this._newline(e3);
      }
      return false;
    }, e2.prototype._stringChar = function(e3, t2) {
      var n2 = this.stream.peekChar();
      return n2 !== 0 && n2 !== e3 && n2 !== L && n2 !== D && n2 !== O && n2 !== I && (this.stream.advance(1), t2.push(String.fromCharCode(n2)), true);
    }, e2.prototype._string = function(e3) {
      if (this.stream.peekChar() === R || this.stream.peekChar() === A) {
        var t2 = this.stream.nextChar();
        for (e3.push(String.fromCharCode(t2)); this._stringChar(t2, e3) || this._escape(e3, true); )
          ;
        return this.stream.peekChar() === t2 ? (this.stream.nextChar(), e3.push(String.fromCharCode(t2)), i.String) : i.BadString;
      }
      return null;
    }, e2.prototype._unquotedChar = function(e3) {
      var t2 = this.stream.peekChar();
      return t2 !== 0 && t2 !== L && t2 !== R && t2 !== A && t2 !== y && t2 !== C && t2 !== M && t2 !== P && t2 !== I && t2 !== O && t2 !== D && (this.stream.advance(1), e3.push(String.fromCharCode(t2)), true);
    }, e2.prototype._unquotedString = function(e3) {
      for (var t2 = false; this._unquotedChar(e3) || this._escape(e3); )
        t2 = true;
      return t2;
    }, e2.prototype._whitespace = function() {
      return this.stream.advanceWhileChar(function(e3) {
        return e3 === M || e3 === P || e3 === I || e3 === O || e3 === D;
      }) > 0;
    }, e2.prototype._name = function(e3) {
      for (var t2 = false; this._identChar(e3) || this._escape(e3); )
        t2 = true;
      return t2;
    }, e2.prototype.ident = function(e3) {
      var t2 = this.stream.pos();
      if (this._minus(e3) && this._minus(e3)) {
        if (this._identFirstChar(e3) || this._escape(e3)) {
          for (; this._identChar(e3) || this._escape(e3); )
            ;
          return true;
        }
      } else if (this._identFirstChar(e3) || this._escape(e3)) {
        for (; this._identChar(e3) || this._escape(e3); )
          ;
        return true;
      }
      return this.stream.goBackTo(t2), false;
    }, e2.prototype._identFirstChar = function(e3) {
      var t2 = this.stream.peekChar();
      return (t2 === _ || t2 >= o && t2 <= a || t2 >= l && t2 <= d || t2 >= 128 && t2 <= 65535) && (this.stream.advance(1), e3.push(String.fromCharCode(t2)), true);
    }, e2.prototype._minus = function(e3) {
      var t2 = this.stream.peekChar();
      return t2 === b && (this.stream.advance(1), e3.push(String.fromCharCode(t2)), true);
    }, e2.prototype._identChar = function(e3) {
      var t2 = this.stream.peekChar();
      return (t2 === _ || t2 === b || t2 >= o && t2 <= a || t2 >= l && t2 <= d || t2 >= h && t2 <= u || t2 >= 128 && t2 <= 65535) && (this.stream.advance(1), e3.push(String.fromCharCode(t2)), true);
    }, e2;
  }();
  function Y(e2, t2) {
    if (e2.length < t2.length)
      return false;
    for (var n2 = 0; n2 < t2.length; n2++)
      if (e2[n2] !== t2[n2])
        return false;
    return true;
  }
  function Z(e2, t2) {
    var n2 = e2.length - t2.length;
    return n2 > 0 ? e2.lastIndexOf(t2) === n2 : n2 === 0 && e2 === t2;
  }
  function X(e2, t2) {
    return t2 === void 0 && (t2 = true), e2 ? e2.length < 140 ? e2 : e2.slice(0, 140) + (t2 ? "\u2026" : "") : "";
  }
  var Q, J, ee, te = (Q = function(e2, t2) {
    return (Q = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
      e3.__proto__ = t3;
    } || function(e3, t3) {
      for (var n2 in t3)
        t3.hasOwnProperty(n2) && (e3[n2] = t3[n2]);
    })(e2, t2);
  }, function(e2, t2) {
    function n2() {
      this.constructor = e2;
    }
    Q(e2, t2), e2.prototype = t2 === null ? Object.create(t2) : (n2.prototype = t2.prototype, new n2());
  });
  function ne(e2, t2) {
    var n2 = null;
    return !e2 || t2 < e2.offset || t2 > e2.end ? null : (e2.accept(function(e3) {
      return e3.offset === -1 && e3.length === -1 || e3.offset <= t2 && e3.end >= t2 && (n2 ? e3.length <= n2.length && (n2 = e3) : n2 = e3, true);
    }), n2);
  }
  function ie(e2, t2) {
    for (var n2 = ne(e2, t2), i2 = []; n2; )
      i2.unshift(n2), n2 = n2.parent;
    return i2;
  }
  !function(e2) {
    e2[e2.Undefined = 0] = "Undefined", e2[e2.Identifier = 1] = "Identifier", e2[e2.Stylesheet = 2] = "Stylesheet", e2[e2.Ruleset = 3] = "Ruleset", e2[e2.Selector = 4] = "Selector", e2[e2.SimpleSelector = 5] = "SimpleSelector", e2[e2.SelectorInterpolation = 6] = "SelectorInterpolation", e2[e2.SelectorCombinator = 7] = "SelectorCombinator", e2[e2.SelectorCombinatorParent = 8] = "SelectorCombinatorParent", e2[e2.SelectorCombinatorSibling = 9] = "SelectorCombinatorSibling", e2[e2.SelectorCombinatorAllSiblings = 10] = "SelectorCombinatorAllSiblings", e2[e2.SelectorCombinatorShadowPiercingDescendant = 11] = "SelectorCombinatorShadowPiercingDescendant", e2[e2.Page = 12] = "Page", e2[e2.PageBoxMarginBox = 13] = "PageBoxMarginBox", e2[e2.ClassSelector = 14] = "ClassSelector", e2[e2.IdentifierSelector = 15] = "IdentifierSelector", e2[e2.ElementNameSelector = 16] = "ElementNameSelector", e2[e2.PseudoSelector = 17] = "PseudoSelector", e2[e2.AttributeSelector = 18] = "AttributeSelector", e2[e2.Declaration = 19] = "Declaration", e2[e2.Declarations = 20] = "Declarations", e2[e2.Property = 21] = "Property", e2[e2.Expression = 22] = "Expression", e2[e2.BinaryExpression = 23] = "BinaryExpression", e2[e2.Term = 24] = "Term", e2[e2.Operator = 25] = "Operator", e2[e2.Value = 26] = "Value", e2[e2.StringLiteral = 27] = "StringLiteral", e2[e2.URILiteral = 28] = "URILiteral", e2[e2.EscapedValue = 29] = "EscapedValue", e2[e2.Function = 30] = "Function", e2[e2.NumericValue = 31] = "NumericValue", e2[e2.HexColorValue = 32] = "HexColorValue", e2[e2.MixinDeclaration = 33] = "MixinDeclaration", e2[e2.MixinReference = 34] = "MixinReference", e2[e2.VariableName = 35] = "VariableName", e2[e2.VariableDeclaration = 36] = "VariableDeclaration", e2[e2.Prio = 37] = "Prio", e2[e2.Interpolation = 38] = "Interpolation", e2[e2.NestedProperties = 39] = "NestedProperties", e2[e2.ExtendsReference = 40] = "ExtendsReference", e2[e2.SelectorPlaceholder = 41] = "SelectorPlaceholder", e2[e2.Debug = 42] = "Debug", e2[e2.If = 43] = "If", e2[e2.Else = 44] = "Else", e2[e2.For = 45] = "For", e2[e2.Each = 46] = "Each", e2[e2.While = 47] = "While", e2[e2.MixinContentReference = 48] = "MixinContentReference", e2[e2.MixinContentDeclaration = 49] = "MixinContentDeclaration", e2[e2.Media = 50] = "Media", e2[e2.Keyframe = 51] = "Keyframe", e2[e2.FontFace = 52] = "FontFace", e2[e2.Import = 53] = "Import", e2[e2.Namespace = 54] = "Namespace", e2[e2.Invocation = 55] = "Invocation", e2[e2.FunctionDeclaration = 56] = "FunctionDeclaration", e2[e2.ReturnStatement = 57] = "ReturnStatement", e2[e2.MediaQuery = 58] = "MediaQuery", e2[e2.FunctionParameter = 59] = "FunctionParameter", e2[e2.FunctionArgument = 60] = "FunctionArgument", e2[e2.KeyframeSelector = 61] = "KeyframeSelector", e2[e2.ViewPort = 62] = "ViewPort", e2[e2.Document = 63] = "Document", e2[e2.AtApplyRule = 64] = "AtApplyRule", e2[e2.CustomPropertyDeclaration = 65] = "CustomPropertyDeclaration", e2[e2.CustomPropertySet = 66] = "CustomPropertySet", e2[e2.ListEntry = 67] = "ListEntry", e2[e2.Supports = 68] = "Supports", e2[e2.SupportsCondition = 69] = "SupportsCondition", e2[e2.NamespacePrefix = 70] = "NamespacePrefix", e2[e2.GridLine = 71] = "GridLine", e2[e2.Plugin = 72] = "Plugin", e2[e2.UnknownAtRule = 73] = "UnknownAtRule", e2[e2.Use = 74] = "Use", e2[e2.ModuleConfiguration = 75] = "ModuleConfiguration", e2[e2.Forward = 76] = "Forward", e2[e2.ForwardVisibility = 77] = "ForwardVisibility", e2[e2.Module = 78] = "Module";
  }(J || (J = {})), function(e2) {
    e2[e2.Mixin = 0] = "Mixin", e2[e2.Rule = 1] = "Rule", e2[e2.Variable = 2] = "Variable", e2[e2.Function = 3] = "Function", e2[e2.Keyframe = 4] = "Keyframe", e2[e2.Unknown = 5] = "Unknown", e2[e2.Module = 6] = "Module", e2[e2.Forward = 7] = "Forward", e2[e2.ForwardVisibility = 8] = "ForwardVisibility";
  }(ee || (ee = {}));
  var re, oe = function() {
    function e2(e3, t2, n2) {
      e3 === void 0 && (e3 = -1), t2 === void 0 && (t2 = -1), this.parent = null, this.offset = e3, this.length = t2, n2 && (this.nodeType = n2);
    }
    return Object.defineProperty(e2.prototype, "end", {get: function() {
      return this.offset + this.length;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "type", {get: function() {
      return this.nodeType || J.Undefined;
    }, set: function(e3) {
      this.nodeType = e3;
    }, enumerable: true, configurable: true}), e2.prototype.getTextProvider = function() {
      for (var e3 = this; e3 && !e3.textProvider; )
        e3 = e3.parent;
      return e3 ? e3.textProvider : function() {
        return "unknown";
      };
    }, e2.prototype.getText = function() {
      return this.getTextProvider()(this.offset, this.length);
    }, e2.prototype.matches = function(e3) {
      return this.length === e3.length && this.getTextProvider()(this.offset, this.length) === e3;
    }, e2.prototype.startsWith = function(e3) {
      return this.length >= e3.length && this.getTextProvider()(this.offset, e3.length) === e3;
    }, e2.prototype.endsWith = function(e3) {
      return this.length >= e3.length && this.getTextProvider()(this.end - e3.length, e3.length) === e3;
    }, e2.prototype.accept = function(e3) {
      if (e3(this) && this.children)
        for (var t2 = 0, n2 = this.children; t2 < n2.length; t2++) {
          n2[t2].accept(e3);
        }
    }, e2.prototype.acceptVisitor = function(e3) {
      this.accept(e3.visitNode.bind(e3));
    }, e2.prototype.adoptChild = function(e3, t2) {
      if (t2 === void 0 && (t2 = -1), e3.parent && e3.parent.children) {
        var n2 = e3.parent.children.indexOf(e3);
        n2 >= 0 && e3.parent.children.splice(n2, 1);
      }
      e3.parent = this;
      var i2 = this.children;
      return i2 || (i2 = this.children = []), t2 !== -1 ? i2.splice(t2, 0, e3) : i2.push(e3), e3;
    }, e2.prototype.attachTo = function(e3, t2) {
      return t2 === void 0 && (t2 = -1), e3 && e3.adoptChild(this, t2), this;
    }, e2.prototype.collectIssues = function(e3) {
      this.issues && e3.push.apply(e3, this.issues);
    }, e2.prototype.addIssue = function(e3) {
      this.issues || (this.issues = []), this.issues.push(e3);
    }, e2.prototype.hasIssue = function(e3) {
      return Array.isArray(this.issues) && this.issues.some(function(t2) {
        return t2.getRule() === e3;
      });
    }, e2.prototype.isErroneous = function(e3) {
      return e3 === void 0 && (e3 = false), !!(this.issues && this.issues.length > 0) || e3 && Array.isArray(this.children) && this.children.some(function(e4) {
        return e4.isErroneous(true);
      });
    }, e2.prototype.setNode = function(e3, t2, n2) {
      return n2 === void 0 && (n2 = -1), !!t2 && (t2.attachTo(this, n2), this[e3] = t2, true);
    }, e2.prototype.addChild = function(e3) {
      return !!e3 && (this.children || (this.children = []), e3.attachTo(this), this.updateOffsetAndLength(e3), true);
    }, e2.prototype.updateOffsetAndLength = function(e3) {
      (e3.offset < this.offset || this.offset === -1) && (this.offset = e3.offset);
      var t2 = e3.end;
      (t2 > this.end || this.length === -1) && (this.length = t2 - this.offset);
    }, e2.prototype.hasChildren = function() {
      return !!this.children && this.children.length > 0;
    }, e2.prototype.getChildren = function() {
      return this.children ? this.children.slice(0) : [];
    }, e2.prototype.getChild = function(e3) {
      return this.children && e3 < this.children.length ? this.children[e3] : null;
    }, e2.prototype.addChildren = function(e3) {
      for (var t2 = 0, n2 = e3; t2 < n2.length; t2++) {
        var i2 = n2[t2];
        this.addChild(i2);
      }
    }, e2.prototype.findFirstChildBeforeOffset = function(e3) {
      if (this.children) {
        for (var t2 = null, n2 = this.children.length - 1; n2 >= 0; n2--)
          if ((t2 = this.children[n2]).offset <= e3)
            return t2;
      }
      return null;
    }, e2.prototype.findChildAtOffset = function(e3, t2) {
      var n2 = this.findFirstChildBeforeOffset(e3);
      return n2 && n2.end >= e3 ? t2 && n2.findChildAtOffset(e3, true) || n2 : null;
    }, e2.prototype.encloses = function(e3) {
      return this.offset <= e3.offset && this.offset + this.length >= e3.offset + e3.length;
    }, e2.prototype.getParent = function() {
      for (var e3 = this.parent; e3 instanceof se; )
        e3 = e3.parent;
      return e3;
    }, e2.prototype.findParent = function(e3) {
      for (var t2 = this; t2 && t2.type !== e3; )
        t2 = t2.parent;
      return t2;
    }, e2.prototype.findAParent = function() {
      for (var e3 = [], t2 = 0; t2 < arguments.length; t2++)
        e3[t2] = arguments[t2];
      for (var n2 = this; n2 && !e3.some(function(e4) {
        return n2.type === e4;
      }); )
        n2 = n2.parent;
      return n2;
    }, e2.prototype.setData = function(e3, t2) {
      this.options || (this.options = {}), this.options[e3] = t2;
    }, e2.prototype.getData = function(e3) {
      return this.options && this.options.hasOwnProperty(e3) ? this.options[e3] : null;
    }, e2;
  }(), se = function(e2) {
    function t2(t3, n2) {
      n2 === void 0 && (n2 = -1);
      var i2 = e2.call(this, -1, -1) || this;
      return i2.attachTo(t3, n2), i2.offset = -1, i2.length = -1, i2;
    }
    return te(t2, e2), t2;
  }(oe), ae = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.isCustomProperty = false, i2;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Identifier;
    }, enumerable: true, configurable: true}), t2.prototype.containsInterpolation = function() {
      return this.hasChildren();
    }, t2;
  }(oe), le = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Stylesheet;
    }, enumerable: true, configurable: true}), t2;
  }(oe), ce = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Declarations;
    }, enumerable: true, configurable: true}), t2;
  }(oe), de = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), t2.prototype.getDeclarations = function() {
      return this.declarations;
    }, t2.prototype.setDeclarations = function(e3) {
      return this.setNode("declarations", e3);
    }, t2;
  }(oe), he = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Ruleset;
    }, enumerable: true, configurable: true}), t2.prototype.getSelectors = function() {
      return this.selectors || (this.selectors = new se(this)), this.selectors;
    }, t2.prototype.isNested = function() {
      return !!this.parent && this.parent.findParent(J.Declarations) !== null;
    }, t2;
  }(de), ue = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Selector;
    }, enumerable: true, configurable: true}), t2;
  }(oe), pe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.SimpleSelector;
    }, enumerable: true, configurable: true}), t2;
  }(oe), me = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.AtApplyRule;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2;
  }(oe), ge = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), t2;
  }(oe), fe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.CustomPropertyDeclaration;
    }, enumerable: true, configurable: true}), t2.prototype.setProperty = function(e3) {
      return this.setNode("property", e3);
    }, t2.prototype.getProperty = function() {
      return this.property;
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2.prototype.setPropertySet = function(e3) {
      return this.setNode("propertySet", e3);
    }, t2.prototype.getPropertySet = function() {
      return this.propertySet;
    }, t2;
  }(ge), be = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.CustomPropertySet;
    }, enumerable: true, configurable: true}), t2;
  }(de), _e = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.property = null, i2;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Declaration;
    }, enumerable: true, configurable: true}), t2.prototype.setProperty = function(e3) {
      return this.setNode("property", e3);
    }, t2.prototype.getProperty = function() {
      return this.property;
    }, t2.prototype.getFullPropertyName = function() {
      var e3 = this.property ? this.property.getName() : "unknown";
      if (this.parent instanceof ce && this.parent.getParent() instanceof De) {
        var n2 = this.parent.getParent().getParent();
        if (n2 instanceof t2)
          return n2.getFullPropertyName() + e3;
      }
      return e3;
    }, t2.prototype.getNonPrefixedPropertyName = function() {
      var e3 = this.getFullPropertyName();
      if (e3 && e3.charAt(0) === "-") {
        var t3 = e3.indexOf("-", 1);
        if (t3 !== -1)
          return e3.substring(t3 + 1);
      }
      return e3;
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2.prototype.setNestedProperties = function(e3) {
      return this.setNode("nestedProperties", e3);
    }, t2.prototype.getNestedProperties = function() {
      return this.nestedProperties;
    }, t2;
  }(ge), ve = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Property;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return e3 = this.getText(), (t3 = /[_\+]+$/.exec(e3)) && t3[0].length ? e3.substr(0, e3.length - t3[0].length) : e3;
      var e3, t3;
    }, t2.prototype.isCustomProperty = function() {
      return !!this.identifier && this.identifier.isCustomProperty;
    }, t2;
  }(oe), we = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Function;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2;
  }(function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Invocation;
    }, enumerable: true, configurable: true}), t2.prototype.getArguments = function() {
      return this.arguments || (this.arguments = new se(this)), this.arguments;
    }, t2;
  }(oe)), ye = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.FunctionParameter;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.setDefaultValue = function(e3) {
      return this.setNode("defaultValue", e3, 0);
    }, t2.prototype.getDefaultValue = function() {
      return this.defaultValue;
    }, t2;
  }(oe), Ce = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.FunctionArgument;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3, 0);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2;
  }(oe), xe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.If;
    }, enumerable: true, configurable: true}), t2.prototype.setExpression = function(e3) {
      return this.setNode("expression", e3, 0);
    }, t2.prototype.setElseClause = function(e3) {
      return this.setNode("elseClause", e3);
    }, t2;
  }(de), Se = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.For;
    }, enumerable: true, configurable: true}), t2.prototype.setVariable = function(e3) {
      return this.setNode("variable", e3, 0);
    }, t2;
  }(de), ke = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Each;
    }, enumerable: true, configurable: true}), t2.prototype.getVariables = function() {
      return this.variables || (this.variables = new se(this)), this.variables;
    }, t2;
  }(de), Ee = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.While;
    }, enumerable: true, configurable: true}), t2;
  }(de), Te = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Else;
    }, enumerable: true, configurable: true}), t2;
  }(de), Le = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.FunctionDeclaration;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.getParameters = function() {
      return this.parameters || (this.parameters = new se(this)), this.parameters;
    }, t2;
  }(de), Ne = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.ViewPort;
    }, enumerable: true, configurable: true}), t2;
  }(de), Ie = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.FontFace;
    }, enumerable: true, configurable: true}), t2;
  }(de), De = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.NestedProperties;
    }, enumerable: true, configurable: true}), t2;
  }(de), Oe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Keyframe;
    }, enumerable: true, configurable: true}), t2.prototype.setKeyword = function(e3) {
      return this.setNode("keyword", e3, 0);
    }, t2.prototype.getKeyword = function() {
      return this.keyword;
    }, t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2;
  }(de), Ae = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.KeyframeSelector;
    }, enumerable: true, configurable: true}), t2;
  }(de), Re = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Import;
    }, enumerable: true, configurable: true}), t2.prototype.setMedialist = function(e3) {
      return !!e3 && (e3.attachTo(this), true);
    }, t2;
  }(oe), Me = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Use;
    }, enumerable: true, configurable: true}), t2.prototype.getParameters = function() {
      return this.parameters || (this.parameters = new se(this)), this.parameters;
    }, t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2;
  }(oe), Pe = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.ModuleConfiguration;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3, 0);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2;
  }(oe), Fe = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Forward;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2;
  }(oe), We = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.ForwardVisibility;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2;
  }(oe), ze = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Namespace;
    }, enumerable: true, configurable: true}), t2;
  }(oe), Be = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Media;
    }, enumerable: true, configurable: true}), t2;
  }(de), je = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Supports;
    }, enumerable: true, configurable: true}), t2;
  }(de), Ve = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Document;
    }, enumerable: true, configurable: true}), t2;
  }(de), Ue = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), t2.prototype.getMediums = function() {
      return this.mediums || (this.mediums = new se(this)), this.mediums;
    }, t2;
  }(oe), He = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.MediaQuery;
    }, enumerable: true, configurable: true}), t2;
  }(oe), qe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.SupportsCondition;
    }, enumerable: true, configurable: true}), t2;
  }(oe), $e = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Page;
    }, enumerable: true, configurable: true}), t2;
  }(de), Ke = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.PageBoxMarginBox;
    }, enumerable: true, configurable: true}), t2;
  }(de), Ge = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Expression;
    }, enumerable: true, configurable: true}), t2;
  }(oe), Ye = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.BinaryExpression;
    }, enumerable: true, configurable: true}), t2.prototype.setLeft = function(e3) {
      return this.setNode("left", e3);
    }, t2.prototype.getLeft = function() {
      return this.left;
    }, t2.prototype.setRight = function(e3) {
      return this.setNode("right", e3);
    }, t2.prototype.getRight = function() {
      return this.right;
    }, t2.prototype.setOperator = function(e3) {
      return this.setNode("operator", e3);
    }, t2.prototype.getOperator = function() {
      return this.operator;
    }, t2;
  }(oe), Ze = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Term;
    }, enumerable: true, configurable: true}), t2.prototype.setOperator = function(e3) {
      return this.setNode("operator", e3);
    }, t2.prototype.getOperator = function() {
      return this.operator;
    }, t2.prototype.setExpression = function(e3) {
      return this.setNode("expression", e3);
    }, t2.prototype.getExpression = function() {
      return this.expression;
    }, t2;
  }(oe), Xe = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.AttributeSelector;
    }, enumerable: true, configurable: true}), t2.prototype.setNamespacePrefix = function(e3) {
      return this.setNode("namespacePrefix", e3);
    }, t2.prototype.getNamespacePrefix = function() {
      return this.namespacePrefix;
    }, t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.setOperator = function(e3) {
      return this.setNode("operator", e3);
    }, t2.prototype.getOperator = function() {
      return this.operator;
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2;
  }(oe), Qe = (function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Operator;
    }, enumerable: true, configurable: true});
  }(oe), function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.HexColorValue;
    }, enumerable: true, configurable: true}), t2;
  }(oe)), Je = ".".charCodeAt(0), et = "0".charCodeAt(0), tt = "9".charCodeAt(0), nt = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.NumericValue;
    }, enumerable: true, configurable: true}), t2.prototype.getValue = function() {
      for (var e3, t3 = this.getText(), n2 = 0, i2 = 0, r2 = t3.length; i2 < r2 && (e3 = t3.charCodeAt(i2), et <= e3 && e3 <= tt || e3 === Je); i2++)
        n2 += 1;
      return {value: t3.substring(0, n2), unit: n2 < t3.length ? t3.substring(n2) : void 0};
    }, t2;
  }(oe), it = function(e2) {
    function t2(t3, n2) {
      var i2 = e2.call(this, t3, n2) || this;
      return i2.variable = null, i2.value = null, i2.needsSemicolon = true, i2;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.VariableDeclaration;
    }, enumerable: true, configurable: true}), t2.prototype.setVariable = function(e3) {
      return !!e3 && (e3.attachTo(this), this.variable = e3, true);
    }, t2.prototype.getVariable = function() {
      return this.variable;
    }, t2.prototype.getName = function() {
      return this.variable ? this.variable.getName() : "";
    }, t2.prototype.setValue = function(e3) {
      return !!e3 && (e3.attachTo(this), this.value = e3, true);
    }, t2.prototype.getValue = function() {
      return this.value;
    }, t2;
  }(ge), rt = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Interpolation;
    }, enumerable: true, configurable: true}), t2;
  }(oe), ot = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.VariableName;
    }, enumerable: true, configurable: true}), t2.prototype.getName = function() {
      return this.getText();
    }, t2;
  }(oe), st = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.ExtendsReference;
    }, enumerable: true, configurable: true}), t2.prototype.getSelectors = function() {
      return this.selectors || (this.selectors = new se(this)), this.selectors;
    }, t2;
  }(oe), at = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.MixinContentReference;
    }, enumerable: true, configurable: true}), t2.prototype.getArguments = function() {
      return this.arguments || (this.arguments = new se(this)), this.arguments;
    }, t2;
  }(oe), lt = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.MixinContentReference;
    }, enumerable: true, configurable: true}), t2.prototype.getParameters = function() {
      return this.parameters || (this.parameters = new se(this)), this.parameters;
    }, t2;
  }(de), ct = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.MixinReference;
    }, enumerable: true, configurable: true}), t2.prototype.getNamespaces = function() {
      return this.namespaces || (this.namespaces = new se(this)), this.namespaces;
    }, t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.getArguments = function() {
      return this.arguments || (this.arguments = new se(this)), this.arguments;
    }, t2.prototype.setContent = function(e3) {
      return this.setNode("content", e3);
    }, t2.prototype.getContent = function() {
      return this.content;
    }, t2;
  }(oe), dt = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.MixinDeclaration;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2.prototype.getName = function() {
      return this.identifier ? this.identifier.getText() : "";
    }, t2.prototype.getParameters = function() {
      return this.parameters || (this.parameters = new se(this)), this.parameters;
    }, t2.prototype.setGuard = function(e3) {
      return e3 && (e3.attachTo(this), this.guard = e3), false;
    }, t2;
  }(de), ht = function(e2) {
    function t2(t3, n2) {
      return e2.call(this, t3, n2) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.UnknownAtRule;
    }, enumerable: true, configurable: true}), t2.prototype.setAtRuleName = function(e3) {
      this.atRuleName = e3;
    }, t2.prototype.getAtRuleName = function() {
      return this.atRuleName;
    }, t2;
  }(de), ut = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.ListEntry;
    }, enumerable: true, configurable: true}), t2.prototype.setKey = function(e3) {
      return this.setNode("key", e3, 0);
    }, t2.prototype.setValue = function(e3) {
      return this.setNode("value", e3, 1);
    }, t2;
  }(oe), pt = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), t2.prototype.getConditions = function() {
      return this.conditions || (this.conditions = new se(this)), this.conditions;
    }, t2;
  }(oe), mt = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), t2.prototype.setVariable = function(e3) {
      return this.setNode("variable", e3);
    }, t2;
  }(oe), gt = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return te(t2, e2), Object.defineProperty(t2.prototype, "type", {get: function() {
      return J.Module;
    }, enumerable: true, configurable: true}), t2.prototype.setIdentifier = function(e3) {
      return this.setNode("identifier", e3, 0);
    }, t2.prototype.getIdentifier = function() {
      return this.identifier;
    }, t2;
  }(oe);
  !function(e2) {
    e2[e2.Ignore = 1] = "Ignore", e2[e2.Warning = 2] = "Warning", e2[e2.Error = 4] = "Error";
  }(re || (re = {}));
  var ft = function() {
    function e2(e3, t2, n2, i2, r2, o2) {
      r2 === void 0 && (r2 = e3.offset), o2 === void 0 && (o2 = e3.length), this.node = e3, this.rule = t2, this.level = n2, this.message = i2 || t2.message, this.offset = r2, this.length = o2;
    }
    return e2.prototype.getRule = function() {
      return this.rule;
    }, e2.prototype.getLevel = function() {
      return this.level;
    }, e2.prototype.getOffset = function() {
      return this.offset;
    }, e2.prototype.getLength = function() {
      return this.length;
    }, e2.prototype.getNode = function() {
      return this.node;
    }, e2.prototype.getMessage = function() {
      return this.message;
    }, e2;
  }(), bt = function() {
    function e2() {
      this.entries = [];
    }
    return e2.entries = function(t2) {
      var n2 = new e2();
      return t2.acceptVisitor(n2), n2.entries;
    }, e2.prototype.visitNode = function(e3) {
      return e3.isErroneous() && e3.collectIssues(this.entries), true;
    }, e2;
  }();
  function _t(e2, t2) {
    return t2.length === 0 ? e2 : e2.replace(/\{(\d+)\}/g, function(e3, n2) {
      var i2 = n2[0];
      return t2[i2] !== void 0 ? t2[i2] : e3;
    });
  }
  function vt(e2, t2) {
    for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
      n2[i2 - 2] = arguments[i2];
    return _t(t2, n2);
  }
  function wt(e2) {
    return vt;
  }
  var yt = wt(), Ct = function(e2, t2) {
    this.id = e2, this.message = t2;
  }, xt = {NumberExpected: new Ct("css-numberexpected", yt("expected.number", "number expected")), ConditionExpected: new Ct("css-conditionexpected", yt("expected.condt", "condition expected")), RuleOrSelectorExpected: new Ct("css-ruleorselectorexpected", yt("expected.ruleorselector", "at-rule or selector expected")), DotExpected: new Ct("css-dotexpected", yt("expected.dot", "dot expected")), ColonExpected: new Ct("css-colonexpected", yt("expected.colon", "colon expected")), SemiColonExpected: new Ct("css-semicolonexpected", yt("expected.semicolon", "semi-colon expected")), TermExpected: new Ct("css-termexpected", yt("expected.term", "term expected")), ExpressionExpected: new Ct("css-expressionexpected", yt("expected.expression", "expression expected")), OperatorExpected: new Ct("css-operatorexpected", yt("expected.operator", "operator expected")), IdentifierExpected: new Ct("css-identifierexpected", yt("expected.ident", "identifier expected")), PercentageExpected: new Ct("css-percentageexpected", yt("expected.percentage", "percentage expected")), URIOrStringExpected: new Ct("css-uriorstringexpected", yt("expected.uriorstring", "uri or string expected")), URIExpected: new Ct("css-uriexpected", yt("expected.uri", "URI expected")), VariableNameExpected: new Ct("css-varnameexpected", yt("expected.varname", "variable name expected")), VariableValueExpected: new Ct("css-varvalueexpected", yt("expected.varvalue", "variable value expected")), PropertyValueExpected: new Ct("css-propertyvalueexpected", yt("expected.propvalue", "property value expected")), LeftCurlyExpected: new Ct("css-lcurlyexpected", yt("expected.lcurly", "{ expected")), RightCurlyExpected: new Ct("css-rcurlyexpected", yt("expected.rcurly", "} expected")), LeftSquareBracketExpected: new Ct("css-rbracketexpected", yt("expected.lsquare", "[ expected")), RightSquareBracketExpected: new Ct("css-lbracketexpected", yt("expected.rsquare", "] expected")), LeftParenthesisExpected: new Ct("css-lparentexpected", yt("expected.lparen", "( expected")), RightParenthesisExpected: new Ct("css-rparentexpected", yt("expected.rparent", ") expected")), CommaExpected: new Ct("css-commaexpected", yt("expected.comma", "comma expected")), PageDirectiveOrDeclarationExpected: new Ct("css-pagedirordeclexpected", yt("expected.pagedirordecl", "page directive or declaraton expected")), UnknownAtRule: new Ct("css-unknownatrule", yt("unknown.atrule", "at-rule unknown")), UnknownKeyword: new Ct("css-unknownkeyword", yt("unknown.keyword", "unknown keyword")), SelectorExpected: new Ct("css-selectorexpected", yt("expected.selector", "selector expected")), StringLiteralExpected: new Ct("css-stringliteralexpected", yt("expected.stringliteral", "string literal expected")), WhitespaceExpected: new Ct("css-whitespaceexpected", yt("expected.whitespace", "whitespace expected")), MediaQueryExpected: new Ct("css-mediaqueryexpected", yt("expected.mediaquery", "media query expected")), IdentifierOrWildcardExpected: new Ct("css-idorwildcardexpected", yt("expected.idorwildcard", "identifier or wildcard expected")), WildcardExpected: new Ct("css-wildcardexpected", yt("expected.wildcard", "wildcard expected")), IdentifierOrVariableExpected: new Ct("css-idorvarexpected", yt("expected.idorvar", "identifier or variable expected"))}, St = {E: "Edge", FF: "Firefox", S: "Safari", C: "Chrome", IE: "IE", O: "Opera"};
  function kt(e2) {
    switch (e2) {
      case "experimental":
        return "\u26A0\uFE0F Property is experimental. Be cautious when using it.\uFE0F\n\n";
      case "nonstandard":
        return "\u{1F6A8}\uFE0F Property is nonstandard. Avoid using it.\n\n";
      case "obsolete":
        return "\u{1F6A8}\uFE0F\uFE0F\uFE0F Property is obsolete. Avoid using it.\n\n";
      default:
        return "";
    }
  }
  function Et(e2, t2) {
    var n2;
    if ((n2 = t2 ? {kind: "markdown", value: Nt(e2)} : {kind: "plaintext", value: Lt(e2)}).value !== "")
      return n2;
  }
  function Tt(e2) {
    return (e2 = e2.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&")).replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  function Lt(e2) {
    if (!e2.description || e2.description === "")
      return "";
    if (typeof e2.description != "string")
      return e2.description.value;
    var t2 = "";
    e2.status && (t2 += kt(e2.status)), t2 += e2.description;
    var n2 = It(e2.browsers);
    return n2 && (t2 += "\n(" + n2 + ")"), "syntax" in e2 && (t2 += "\n\nSyntax: " + e2.syntax), e2.references && e2.references.length > 0 && (t2 += "\n\n", t2 += e2.references.map(function(e3) {
      return e3.name + ": " + e3.url;
    }).join(" | ")), t2;
  }
  function Nt(e2) {
    if (!e2.description || e2.description === "")
      return "";
    var t2 = "";
    e2.status && (t2 += kt(e2.status)), t2 += Tt(typeof e2.description == "string" ? e2.description : e2.description.value);
    var n2 = It(e2.browsers);
    return n2 && (t2 += "\n\n(" + Tt(n2) + ")"), "syntax" in e2 && e2.syntax && (t2 += "\n\nSyntax: " + Tt(e2.syntax)), e2.references && e2.references.length > 0 && (t2 += "\n\n", t2 += e2.references.map(function(e3) {
      return "[" + e3.name + "](" + e3.url + ")";
    }).join(" | ")), t2;
  }
  function It(e2) {
    return e2 === void 0 && (e2 = []), e2.length === 0 ? null : e2.map(function(e3) {
      var t2 = "", n2 = e3.match(/([A-Z]+)(\d+)?/), i2 = n2[1], r2 = n2[2];
      return i2 in St && (t2 += St[i2]), r2 && (t2 += " " + r2), t2;
    }).join(", ");
  }
  var Dt = wt(), Ot = [{func: "rgb($red, $green, $blue)", desc: Dt("css.builtin.rgb", "Creates a Color from red, green, and blue values.")}, {func: "rgba($red, $green, $blue, $alpha)", desc: Dt("css.builtin.rgba", "Creates a Color from red, green, blue, and alpha values.")}, {func: "hsl($hue, $saturation, $lightness)", desc: Dt("css.builtin.hsl", "Creates a Color from hue, saturation, and lightness values.")}, {func: "hsla($hue, $saturation, $lightness, $alpha)", desc: Dt("css.builtin.hsla", "Creates a Color from hue, saturation, lightness, and alpha values.")}], At = {aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgrey: "#a9a9a9", darkgreen: "#006400", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", grey: "#808080", green: "#008000", greenyellow: "#adff2f", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgrey: "#d3d3d3", lightgreen: "#90ee90", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370d8", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#d87093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", red: "#ff0000", rebeccapurple: "#663399", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32"}, Rt = {currentColor: "The value of the 'color' property. The computed value of the 'currentColor' keyword is the computed value of the 'color' property. If the 'currentColor' keyword is set on the 'color' property itself, it is treated as 'color:inherit' at parse time.", transparent: "Fully transparent. This keyword can be considered a shorthand for rgba(0,0,0,0) which is its computed value."};
  function Mt(e2, t2) {
    var n2 = e2.getText().match(/^([-+]?[0-9]*\.?[0-9]+)(%?)$/);
    if (n2) {
      n2[2] && (t2 = 100);
      var i2 = parseFloat(n2[1]) / t2;
      if (i2 >= 0 && i2 <= 1)
        return i2;
    }
    throw new Error();
  }
  function Pt(e2) {
    var t2 = e2.getName();
    return !!t2 && /^(rgb|rgba|hsl|hsla)$/gi.test(t2);
  }
  function Ft(e2) {
    return e2 < 48 ? 0 : e2 <= 57 ? e2 - 48 : (e2 < 97 && (e2 += 32), e2 >= 97 && e2 <= 102 ? e2 - 97 + 10 : 0);
  }
  function Wt(e2) {
    if (e2[0] !== "#")
      return null;
    switch (e2.length) {
      case 4:
        return {red: 17 * Ft(e2.charCodeAt(1)) / 255, green: 17 * Ft(e2.charCodeAt(2)) / 255, blue: 17 * Ft(e2.charCodeAt(3)) / 255, alpha: 1};
      case 5:
        return {red: 17 * Ft(e2.charCodeAt(1)) / 255, green: 17 * Ft(e2.charCodeAt(2)) / 255, blue: 17 * Ft(e2.charCodeAt(3)) / 255, alpha: 17 * Ft(e2.charCodeAt(4)) / 255};
      case 7:
        return {red: (16 * Ft(e2.charCodeAt(1)) + Ft(e2.charCodeAt(2))) / 255, green: (16 * Ft(e2.charCodeAt(3)) + Ft(e2.charCodeAt(4))) / 255, blue: (16 * Ft(e2.charCodeAt(5)) + Ft(e2.charCodeAt(6))) / 255, alpha: 1};
      case 9:
        return {red: (16 * Ft(e2.charCodeAt(1)) + Ft(e2.charCodeAt(2))) / 255, green: (16 * Ft(e2.charCodeAt(3)) + Ft(e2.charCodeAt(4))) / 255, blue: (16 * Ft(e2.charCodeAt(5)) + Ft(e2.charCodeAt(6))) / 255, alpha: (16 * Ft(e2.charCodeAt(7)) + Ft(e2.charCodeAt(8))) / 255};
    }
    return null;
  }
  function zt(e2) {
    if (e2.type === J.HexColorValue)
      return Wt(e2.getText());
    if (e2.type === J.Function) {
      var t2 = e2, n2 = t2.getName(), i2 = t2.getArguments().getChildren();
      if (!n2 || i2.length < 3 || i2.length > 4)
        return null;
      try {
        var r2 = i2.length === 4 ? Mt(i2[3], 1) : 1;
        if (n2 === "rgb" || n2 === "rgba")
          return {red: Mt(i2[0], 255), green: Mt(i2[1], 255), blue: Mt(i2[2], 255), alpha: r2};
        if (n2 === "hsl" || n2 === "hsla")
          return function(e3, t3, n3, i3) {
            if (i3 === void 0 && (i3 = 1), t3 === 0)
              return {red: n3, green: n3, blue: n3, alpha: i3};
            var r3 = function(e4, t4, n4) {
              for (; n4 < 0; )
                n4 += 6;
              for (; n4 >= 6; )
                n4 -= 6;
              return n4 < 1 ? (t4 - e4) * n4 + e4 : n4 < 3 ? t4 : n4 < 4 ? (t4 - e4) * (4 - n4) + e4 : e4;
            }, o3 = n3 <= 0.5 ? n3 * (t3 + 1) : n3 + t3 - n3 * t3, s3 = 2 * n3 - o3;
            return {red: r3(s3, o3, (e3 /= 60) + 2), green: r3(s3, o3, e3), blue: r3(s3, o3, e3 - 2), alpha: i3};
          }(function(e3) {
            var t3 = e3.getText();
            if (t3.match(/^([-+]?[0-9]*\.?[0-9]+)(deg)?$/))
              return parseFloat(t3) % 360;
            throw new Error();
          }(i2[0]), Mt(i2[1], 100), Mt(i2[2], 100), r2);
      } catch (e3) {
        return null;
      }
    } else if (e2.type === J.Identifier) {
      if (e2.parent && e2.parent.type !== J.Term)
        return null;
      var o2 = e2.parent;
      if (o2 && o2.parent && o2.parent.type === J.BinaryExpression) {
        var s2 = o2.parent;
        if (s2.parent && s2.parent.type === J.ListEntry && s2.parent.key === s2)
          return null;
      }
      var a2 = e2.getText().toLowerCase();
      if (a2 === "none")
        return null;
      var l2 = At[a2];
      if (l2)
        return Wt(l2);
    }
    return null;
  }
  var Bt = {bottom: "Computes to \u2018100%\u2019 for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.", center: "Computes to \u201850%\u2019 (\u2018left 50%\u2019) for the horizontal position if the horizontal position is not otherwise specified, or \u201850%\u2019 (\u2018top 50%\u2019) for the vertical position if it is.", left: "Computes to \u20180%\u2019 for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.", right: "Computes to \u2018100%\u2019 for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.", top: "Computes to \u20180%\u2019 for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset."}, jt = {"no-repeat": "Placed once and not repeated in this direction.", repeat: "Repeated in this direction as often as needed to cover the background painting area.", "repeat-x": "Computes to \u2018repeat no-repeat\u2019.", "repeat-y": "Computes to \u2018no-repeat repeat\u2019.", round: "Repeated as often as will fit within the background positioning area. If it doesn\u2019t fit a whole number of times, it is rescaled so that it does.", space: "Repeated as often as will fit within the background positioning area without being clipped and then the images are spaced out to fill the area."}, Vt = {dashed: "A series of square-ended dashes.", dotted: "A series of round dots.", double: "Two parallel solid lines with some space between them.", groove: "Looks as if it were carved in the canvas.", hidden: "Same as \u2018none\u2019, but has different behavior in the border conflict resolution rules for border-collapsed tables.", inset: "Looks as if the content on the inside of the border is sunken into the canvas.", none: "No border. Color and width are ignored.", outset: "Looks as if the content on the inside of the border is coming out of the canvas.", ridge: "Looks as if it were coming out of the canvas.", solid: "A single line segment."}, Ut = ["medium", "thick", "thin"], Ht = {"border-box": "The background is painted within (clipped to) the border box.", "content-box": "The background is painted within (clipped to) the content box.", "padding-box": "The background is painted within (clipped to) the padding box."}, qt = {"margin-box": "Uses the margin box as reference box.", "fill-box": "Uses the object bounding box as reference box.", "stroke-box": "Uses the stroke bounding box as reference box.", "view-box": "Uses the nearest SVG viewport as reference box."}, $t = {initial: "Represents the value specified as the property\u2019s initial value.", inherit: "Represents the computed value of the property on the element\u2019s parent.", unset: "Acts as either `inherit` or `initial`, depending on whether the property is inherited or not."}, Kt = {"url()": "Reference an image file by URL", "image()": "Provide image fallbacks and annotations.", "-webkit-image-set()": "Provide multiple resolutions. Remember to use unprefixed image-set() in addition.", "image-set()": "Provide multiple resolutions of an image and const the UA decide which is most appropriate in a given situation.", "-moz-element()": "Use an element in the document as an image. Remember to use unprefixed element() in addition.", "element()": "Use an element in the document as an image.", "cross-fade()": "Indicates the two images to be combined and how far along in the transition the combination is.", "-webkit-gradient()": "Deprecated. Use modern linear-gradient() or radial-gradient() instead.", "-webkit-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.", "-moz-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.", "-o-linear-gradient()": "Linear gradient. Remember to use unprefixed version in addition.", "linear-gradient()": "A linear gradient is created by specifying a straight gradient line, and then several colors placed along that line.", "-webkit-repeating-linear-gradient()": "Repeating Linear gradient. Remember to use unprefixed version in addition.", "-moz-repeating-linear-gradient()": "Repeating Linear gradient. Remember to use unprefixed version in addition.", "-o-repeating-linear-gradient()": "Repeating Linear gradient. Remember to use unprefixed version in addition.", "repeating-linear-gradient()": "Same as linear-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop\u2019s position and the first specified color-stop\u2019s position.", "-webkit-radial-gradient()": "Radial gradient. Remember to use unprefixed version in addition.", "-moz-radial-gradient()": "Radial gradient. Remember to use unprefixed version in addition.", "radial-gradient()": "Colors emerge from a single point and smoothly spread outward in a circular or elliptical shape.", "-webkit-repeating-radial-gradient()": "Repeating radial gradient. Remember to use unprefixed version in addition.", "-moz-repeating-radial-gradient()": "Repeating radial gradient. Remember to use unprefixed version in addition.", "repeating-radial-gradient()": "Same as radial-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop\u2019s position and the first specified color-stop\u2019s position."}, Gt = {ease: "Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0).", "ease-in": "Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0).", "ease-in-out": "Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0).", "ease-out": "Equivalent to cubic-bezier(0, 0, 0.58, 1.0).", linear: "Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0).", "step-end": "Equivalent to steps(1, end).", "step-start": "Equivalent to steps(1, start).", "steps()": "The first parameter specifies the number of intervals in the function. The second parameter, which is optional, is either the value \u201Cstart\u201D or \u201Cend\u201D.", "cubic-bezier()": "Specifies a cubic-bezier curve. The four values specify points P1 and P2  of the curve as (x1, y1, x2, y2).", "cubic-bezier(0.6, -0.28, 0.735, 0.045)": "Ease-in Back. Overshoots.", "cubic-bezier(0.68, -0.55, 0.265, 1.55)": "Ease-in-out Back. Overshoots.", "cubic-bezier(0.175, 0.885, 0.32, 1.275)": "Ease-out Back. Overshoots.", "cubic-bezier(0.6, 0.04, 0.98, 0.335)": "Ease-in Circular. Based on half circle.", "cubic-bezier(0.785, 0.135, 0.15, 0.86)": "Ease-in-out Circular. Based on half circle.", "cubic-bezier(0.075, 0.82, 0.165, 1)": "Ease-out Circular. Based on half circle.", "cubic-bezier(0.55, 0.055, 0.675, 0.19)": "Ease-in Cubic. Based on power of three.", "cubic-bezier(0.645, 0.045, 0.355, 1)": "Ease-in-out Cubic. Based on power of three.", "cubic-bezier(0.215, 0.610, 0.355, 1)": "Ease-out Cubic. Based on power of three.", "cubic-bezier(0.95, 0.05, 0.795, 0.035)": "Ease-in Exponential. Based on two to the power ten.", "cubic-bezier(1, 0, 0, 1)": "Ease-in-out Exponential. Based on two to the power ten.", "cubic-bezier(0.19, 1, 0.22, 1)": "Ease-out Exponential. Based on two to the power ten.", "cubic-bezier(0.47, 0, 0.745, 0.715)": "Ease-in Sine.", "cubic-bezier(0.445, 0.05, 0.55, 0.95)": "Ease-in-out Sine.", "cubic-bezier(0.39, 0.575, 0.565, 1)": "Ease-out Sine.", "cubic-bezier(0.55, 0.085, 0.68, 0.53)": "Ease-in Quadratic. Based on power of two.", "cubic-bezier(0.455, 0.03, 0.515, 0.955)": "Ease-in-out Quadratic. Based on power of two.", "cubic-bezier(0.25, 0.46, 0.45, 0.94)": "Ease-out Quadratic. Based on power of two.", "cubic-bezier(0.895, 0.03, 0.685, 0.22)": "Ease-in Quartic. Based on power of four.", "cubic-bezier(0.77, 0, 0.175, 1)": "Ease-in-out Quartic. Based on power of four.", "cubic-bezier(0.165, 0.84, 0.44, 1)": "Ease-out Quartic. Based on power of four.", "cubic-bezier(0.755, 0.05, 0.855, 0.06)": "Ease-in Quintic. Based on power of five.", "cubic-bezier(0.86, 0, 0.07, 1)": "Ease-in-out Quintic. Based on power of five.", "cubic-bezier(0.23, 1, 0.320, 1)": "Ease-out Quintic. Based on power of five."}, Yt = {"circle()": "Defines a circle.", "ellipse()": "Defines an ellipse.", "inset()": "Defines an inset rectangle.", "polygon()": "Defines a polygon."}, Zt = {length: ["em", "rem", "ex", "px", "cm", "mm", "in", "pt", "pc", "ch", "vw", "vh", "vmin", "vmax"], angle: ["deg", "rad", "grad", "turn"], time: ["ms", "s"], frequency: ["Hz", "kHz"], resolution: ["dpi", "dpcm", "dppx"], percentage: ["%", "fr"]}, Xt = ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rb", "rp", "rt", "rtc", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "const", "video", "wbr"], Qt = ["circle", "clipPath", "cursor", "defs", "desc", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "foreignObject", "g", "hatch", "hatchpath", "image", "line", "linearGradient", "marker", "mask", "mesh", "meshpatch", "meshrow", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "set", "solidcolor", "stop", "svg", "switch", "symbol", "text", "textPath", "tspan", "use", "view"], Jt = ["@bottom-center", "@bottom-left", "@bottom-left-corner", "@bottom-right", "@bottom-right-corner", "@left-bottom", "@left-middle", "@left-top", "@right-bottom", "@right-middle", "@right-top", "@top-center", "@top-left", "@top-left-corner", "@top-right", "@top-right-corner"];
  function en(e2) {
    return Object.keys(e2).map(function(t2) {
      return e2[t2];
    });
  }
  function tn(e2) {
    return e2 !== void 0;
  }
  var nn = function() {
    for (var e2 = 0, t2 = 0, n2 = arguments.length; t2 < n2; t2++)
      e2 += arguments[t2].length;
    var i2 = Array(e2), r2 = 0;
    for (t2 = 0; t2 < n2; t2++)
      for (var o2 = arguments[t2], s2 = 0, a2 = o2.length; s2 < a2; s2++, r2++)
        i2[r2] = o2[s2];
    return i2;
  }, rn = function() {
    function e2(e3) {
      e3 === void 0 && (e3 = new G()), this.keyframeRegex = /^@(\-(webkit|ms|moz|o)\-)?keyframes$/i, this.scanner = e3, this.token = {type: i.EOF, offset: -1, len: 0, text: ""}, this.prevToken = void 0;
    }
    return e2.prototype.peekIdent = function(e3) {
      return i.Ident === this.token.type && e3.length === this.token.text.length && e3 === this.token.text.toLowerCase();
    }, e2.prototype.peekKeyword = function(e3) {
      return i.AtKeyword === this.token.type && e3.length === this.token.text.length && e3 === this.token.text.toLowerCase();
    }, e2.prototype.peekDelim = function(e3) {
      return i.Delim === this.token.type && e3 === this.token.text;
    }, e2.prototype.peek = function(e3) {
      return e3 === this.token.type;
    }, e2.prototype.peekRegExp = function(e3, t2) {
      return e3 === this.token.type && t2.test(this.token.text);
    }, e2.prototype.hasWhitespace = function() {
      return !!this.prevToken && this.prevToken.offset + this.prevToken.len !== this.token.offset;
    }, e2.prototype.consumeToken = function() {
      this.prevToken = this.token, this.token = this.scanner.scan();
    }, e2.prototype.mark = function() {
      return {prev: this.prevToken, curr: this.token, pos: this.scanner.pos()};
    }, e2.prototype.restoreAtMark = function(e3) {
      this.prevToken = e3.prev, this.token = e3.curr, this.scanner.goBackTo(e3.pos);
    }, e2.prototype.try = function(e3) {
      var t2 = this.mark(), n2 = e3();
      return n2 || (this.restoreAtMark(t2), null);
    }, e2.prototype.acceptOneKeyword = function(e3) {
      if (i.AtKeyword === this.token.type)
        for (var t2 = 0, n2 = e3; t2 < n2.length; t2++) {
          var r2 = n2[t2];
          if (r2.length === this.token.text.length && r2 === this.token.text.toLowerCase())
            return this.consumeToken(), true;
        }
      return false;
    }, e2.prototype.accept = function(e3) {
      return e3 === this.token.type && (this.consumeToken(), true);
    }, e2.prototype.acceptIdent = function(e3) {
      return !!this.peekIdent(e3) && (this.consumeToken(), true);
    }, e2.prototype.acceptKeyword = function(e3) {
      return !!this.peekKeyword(e3) && (this.consumeToken(), true);
    }, e2.prototype.acceptDelim = function(e3) {
      return !!this.peekDelim(e3) && (this.consumeToken(), true);
    }, e2.prototype.acceptRegexp = function(e3) {
      return !!e3.test(this.token.text) && (this.consumeToken(), true);
    }, e2.prototype._parseRegexp = function(e3) {
      var t2 = this.createNode(J.Identifier);
      do {
      } while (this.acceptRegexp(e3));
      return this.finish(t2);
    }, e2.prototype.acceptUnquotedString = function() {
      var e3 = this.scanner.pos();
      this.scanner.goBackTo(this.token.offset);
      var t2 = this.scanner.scanUnquotedString();
      return t2 ? (this.token = t2, this.consumeToken(), true) : (this.scanner.goBackTo(e3), false);
    }, e2.prototype.resync = function(e3, t2) {
      for (; ; ) {
        if (e3 && e3.indexOf(this.token.type) !== -1)
          return this.consumeToken(), true;
        if (t2 && t2.indexOf(this.token.type) !== -1)
          return true;
        if (this.token.type === i.EOF)
          return false;
        this.token = this.scanner.scan();
      }
    }, e2.prototype.createNode = function(e3) {
      return new oe(this.token.offset, this.token.len, e3);
    }, e2.prototype.create = function(e3) {
      return new e3(this.token.offset, this.token.len);
    }, e2.prototype.finish = function(e3, t2, n2, i2) {
      if (!(e3 instanceof se) && (t2 && this.markError(e3, t2, n2, i2), this.prevToken)) {
        var r2 = this.prevToken.offset + this.prevToken.len;
        e3.length = r2 > e3.offset ? r2 - e3.offset : 0;
      }
      return e3;
    }, e2.prototype.markError = function(e3, t2, n2, i2) {
      this.token !== this.lastErrorToken && (e3.addIssue(new ft(e3, t2, re.Error, void 0, this.token.offset, this.token.len)), this.lastErrorToken = this.token), (n2 || i2) && this.resync(n2, i2);
    }, e2.prototype.parseStylesheet = function(e3) {
      var t2 = e3.version, n2 = e3.getText();
      return this.internalParse(n2, this._parseStylesheet, function(i2, r2) {
        if (e3.version !== t2)
          throw new Error("Underlying model has changed, AST is no longer valid");
        return n2.substr(i2, r2);
      });
    }, e2.prototype.internalParse = function(e3, t2, n2) {
      this.scanner.setSource(e3), this.token = this.scanner.scan();
      var i2 = t2.bind(this)();
      return i2 && (i2.textProvider = n2 || function(t3, n3) {
        return e3.substr(t3, n3);
      }), i2;
    }, e2.prototype._parseStylesheet = function() {
      for (var e3 = this.create(le); e3.addChild(this._parseStylesheetStart()); )
        ;
      var t2 = false;
      do {
        var n2 = false;
        do {
          n2 = false;
          var r2 = this._parseStylesheetStatement();
          for (r2 && (e3.addChild(r2), n2 = true, t2 = false, this.peek(i.EOF) || !this._needsSemicolonAfter(r2) || this.accept(i.SemiColon) || this.markError(e3, xt.SemiColonExpected)); this.accept(i.SemiColon) || this.accept(i.CDO) || this.accept(i.CDC); )
            n2 = true, t2 = false;
        } while (n2);
        if (this.peek(i.EOF))
          break;
        t2 || (this.peek(i.AtKeyword) ? this.markError(e3, xt.UnknownAtRule) : this.markError(e3, xt.RuleOrSelectorExpected), t2 = true), this.consumeToken();
      } while (!this.peek(i.EOF));
      return this.finish(e3);
    }, e2.prototype._parseStylesheetStart = function() {
      return this._parseCharset();
    }, e2.prototype._parseStylesheetStatement = function(e3) {
      return e3 === void 0 && (e3 = false), this.peek(i.AtKeyword) ? this._parseStylesheetAtStatement(e3) : this._parseRuleset(e3);
    }, e2.prototype._parseStylesheetAtStatement = function(e3) {
      return e3 === void 0 && (e3 = false), this._parseImport() || this._parseMedia(e3) || this._parsePage() || this._parseFontFace() || this._parseKeyframe() || this._parseSupports(e3) || this._parseViewPort() || this._parseNamespace() || this._parseDocument() || this._parseUnknownAtRule();
    }, e2.prototype._tryParseRuleset = function(e3) {
      var t2 = this.mark();
      if (this._parseSelector(e3)) {
        for (; this.accept(i.Comma) && this._parseSelector(e3); )
          ;
        if (this.accept(i.CurlyL))
          return this.restoreAtMark(t2), this._parseRuleset(e3);
      }
      return this.restoreAtMark(t2), null;
    }, e2.prototype._parseRuleset = function(e3) {
      e3 === void 0 && (e3 = false);
      var t2 = this.create(he), n2 = t2.getSelectors();
      if (!n2.addChild(this._parseSelector(e3)))
        return null;
      for (; this.accept(i.Comma); )
        if (!n2.addChild(this._parseSelector(e3)))
          return this.finish(t2, xt.SelectorExpected);
      return this._parseBody(t2, this._parseRuleSetDeclaration.bind(this));
    }, e2.prototype._parseRuleSetDeclarationAtStatement = function() {
      return this._parseAtApply() || this._parseUnknownAtRule();
    }, e2.prototype._parseRuleSetDeclaration = function() {
      return this.peek(i.AtKeyword) ? this._parseRuleSetDeclarationAtStatement() : this._tryParseCustomPropertyDeclaration() || this._parseDeclaration();
    }, e2.prototype._parseAtApply = function() {
      if (!this.peekKeyword("@apply"))
        return null;
      var e3 = this.create(me);
      return this.consumeToken(), e3.setIdentifier(this._parseIdent([ee.Variable])) ? this.finish(e3) : this.finish(e3, xt.IdentifierExpected);
    }, e2.prototype._needsSemicolonAfter = function(e3) {
      switch (e3.type) {
        case J.Keyframe:
        case J.ViewPort:
        case J.Media:
        case J.Ruleset:
        case J.Namespace:
        case J.If:
        case J.For:
        case J.Each:
        case J.While:
        case J.MixinDeclaration:
        case J.FunctionDeclaration:
        case J.MixinContentDeclaration:
          return false;
        case J.ExtendsReference:
        case J.MixinContentReference:
        case J.ReturnStatement:
        case J.MediaQuery:
        case J.Debug:
        case J.Import:
        case J.AtApplyRule:
        case J.CustomPropertyDeclaration:
          return true;
        case J.VariableDeclaration:
          return e3.needsSemicolon;
        case J.MixinReference:
          return !e3.getContent();
        case J.Declaration:
          return !e3.getNestedProperties();
      }
      return false;
    }, e2.prototype._parseDeclarations = function(e3) {
      var t2 = this.create(ce);
      if (!this.accept(i.CurlyL))
        return null;
      for (var n2 = e3(); t2.addChild(n2) && !this.peek(i.CurlyR); ) {
        if (this._needsSemicolonAfter(n2) && !this.accept(i.SemiColon))
          return this.finish(t2, xt.SemiColonExpected, [i.SemiColon, i.CurlyR]);
        for (n2 && this.prevToken && this.prevToken.type === i.SemiColon && (n2.semicolonPosition = this.prevToken.offset); this.accept(i.SemiColon); )
          ;
        n2 = e3();
      }
      return this.accept(i.CurlyR) ? this.finish(t2) : this.finish(t2, xt.RightCurlyExpected, [i.CurlyR, i.SemiColon]);
    }, e2.prototype._parseBody = function(e3, t2) {
      return e3.setDeclarations(this._parseDeclarations(t2)) ? this.finish(e3) : this.finish(e3, xt.LeftCurlyExpected, [i.CurlyR, i.SemiColon]);
    }, e2.prototype._parseSelector = function(e3) {
      var t2 = this.create(ue), n2 = false;
      for (e3 && (n2 = t2.addChild(this._parseCombinator())); t2.addChild(this._parseSimpleSelector()); )
        n2 = true, t2.addChild(this._parseCombinator());
      return n2 ? this.finish(t2) : null;
    }, e2.prototype._parseDeclaration = function(e3) {
      var t2 = this.create(_e);
      if (!t2.setProperty(this._parseProperty()))
        return null;
      if (!this.accept(i.Colon)) {
        var n2 = e3 ? nn(e3, [i.SemiColon]) : [i.SemiColon];
        return this.finish(t2, xt.ColonExpected, [i.Colon], n2);
      }
      return this.prevToken && (t2.colonPosition = this.prevToken.offset), t2.setValue(this._parseExpr()) ? (t2.addChild(this._parsePrio()), this.peek(i.SemiColon) && (t2.semicolonPosition = this.token.offset), this.finish(t2)) : this.finish(t2, xt.PropertyValueExpected);
    }, e2.prototype._tryParseCustomPropertyDeclaration = function() {
      if (!this.peekRegExp(i.Ident, /^--/))
        return null;
      var e3 = this.create(fe);
      if (!e3.setProperty(this._parseProperty()))
        return null;
      if (!this.accept(i.Colon))
        return this.finish(e3, xt.ColonExpected, [i.Colon]);
      this.prevToken && (e3.colonPosition = this.prevToken.offset);
      var t2 = this.mark();
      if (this.peek(i.CurlyL)) {
        var n2 = this.create(be), r2 = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));
        if (n2.setDeclarations(r2) && !r2.isErroneous(true) && (n2.addChild(this._parsePrio()), this.peek(i.SemiColon)))
          return this.finish(n2), e3.setPropertySet(n2), e3.semicolonPosition = this.token.offset, this.finish(e3);
        this.restoreAtMark(t2);
      }
      var o2 = this._parseExpr();
      return o2 && !o2.isErroneous(true) && (this._parsePrio(), this.peek(i.SemiColon)) ? (e3.setValue(o2), e3.semicolonPosition = this.token.offset, this.finish(e3)) : (this.restoreAtMark(t2), e3.addChild(this._parseCustomPropertyValue()), e3.addChild(this._parsePrio()), tn(e3.colonPosition) && this.token.offset === e3.colonPosition + 1 ? this.finish(e3, xt.PropertyValueExpected) : this.finish(e3));
    }, e2.prototype._parseCustomPropertyValue = function() {
      var e3 = this.create(oe), t2 = function() {
        return n2 === 0 && r2 === 0 && o2 === 0;
      }, n2 = 0, r2 = 0, o2 = 0;
      e:
        for (; ; ) {
          switch (this.token.type) {
            case i.SemiColon:
            case i.Exclamation:
              if (t2())
                break e;
              break;
            case i.CurlyL:
              n2++;
              break;
            case i.CurlyR:
              if (--n2 < 0) {
                if (r2 === 0 && o2 === 0)
                  break e;
                return this.finish(e3, xt.LeftCurlyExpected);
              }
              break;
            case i.ParenthesisL:
              r2++;
              break;
            case i.ParenthesisR:
              if (--r2 < 0)
                return this.finish(e3, xt.LeftParenthesisExpected);
              break;
            case i.BracketL:
              o2++;
              break;
            case i.BracketR:
              if (--o2 < 0)
                return this.finish(e3, xt.LeftSquareBracketExpected);
              break;
            case i.BadString:
              break e;
            case i.EOF:
              var s2 = xt.RightCurlyExpected;
              return o2 > 0 ? s2 = xt.RightSquareBracketExpected : r2 > 0 && (s2 = xt.RightParenthesisExpected), this.finish(e3, s2);
          }
          this.consumeToken();
        }
      return this.finish(e3);
    }, e2.prototype._tryToParseDeclaration = function() {
      var e3 = this.mark();
      return this._parseProperty() && this.accept(i.Colon) ? (this.restoreAtMark(e3), this._parseDeclaration()) : (this.restoreAtMark(e3), null);
    }, e2.prototype._parseProperty = function() {
      var e3 = this.create(ve), t2 = this.mark();
      return (this.acceptDelim("*") || this.acceptDelim("_")) && this.hasWhitespace() ? (this.restoreAtMark(t2), null) : e3.setIdentifier(this._parsePropertyIdentifier()) ? this.finish(e3) : null;
    }, e2.prototype._parsePropertyIdentifier = function() {
      return this._parseIdent();
    }, e2.prototype._parseCharset = function() {
      if (!this.peek(i.Charset))
        return null;
      var e3 = this.create(oe);
      return this.consumeToken(), this.accept(i.String) ? this.accept(i.SemiColon) ? this.finish(e3) : this.finish(e3, xt.SemiColonExpected) : this.finish(e3, xt.IdentifierExpected);
    }, e2.prototype._parseImport = function() {
      if (!this.peekKeyword("@import"))
        return null;
      var e3 = this.create(Re);
      return this.consumeToken(), e3.addChild(this._parseURILiteral()) || e3.addChild(this._parseStringLiteral()) ? (this.peek(i.SemiColon) || this.peek(i.EOF) || e3.setMedialist(this._parseMediaQueryList()), this.finish(e3)) : this.finish(e3, xt.URIOrStringExpected);
    }, e2.prototype._parseNamespace = function() {
      if (!this.peekKeyword("@namespace"))
        return null;
      var e3 = this.create(ze);
      return this.consumeToken(), e3.addChild(this._parseURILiteral()) || (e3.addChild(this._parseIdent()), e3.addChild(this._parseURILiteral()) || e3.addChild(this._parseStringLiteral())) ? this.accept(i.SemiColon) ? this.finish(e3) : this.finish(e3, xt.SemiColonExpected) : this.finish(e3, xt.URIExpected, [i.SemiColon]);
    }, e2.prototype._parseFontFace = function() {
      if (!this.peekKeyword("@font-face"))
        return null;
      var e3 = this.create(Ie);
      return this.consumeToken(), this._parseBody(e3, this._parseRuleSetDeclaration.bind(this));
    }, e2.prototype._parseViewPort = function() {
      if (!this.peekKeyword("@-ms-viewport") && !this.peekKeyword("@-o-viewport") && !this.peekKeyword("@viewport"))
        return null;
      var e3 = this.create(Ne);
      return this.consumeToken(), this._parseBody(e3, this._parseRuleSetDeclaration.bind(this));
    }, e2.prototype._parseKeyframe = function() {
      if (!this.peekRegExp(i.AtKeyword, this.keyframeRegex))
        return null;
      var e3 = this.create(Oe), t2 = this.create(oe);
      return this.consumeToken(), e3.setKeyword(this.finish(t2)), t2.matches("@-ms-keyframes") && this.markError(t2, xt.UnknownKeyword), e3.setIdentifier(this._parseKeyframeIdent()) ? this._parseBody(e3, this._parseKeyframeSelector.bind(this)) : this.finish(e3, xt.IdentifierExpected, [i.CurlyR]);
    }, e2.prototype._parseKeyframeIdent = function() {
      return this._parseIdent([ee.Keyframe]);
    }, e2.prototype._parseKeyframeSelector = function() {
      var e3 = this.create(Ae);
      if (!e3.addChild(this._parseIdent()) && !this.accept(i.Percentage))
        return null;
      for (; this.accept(i.Comma); )
        if (!e3.addChild(this._parseIdent()) && !this.accept(i.Percentage))
          return this.finish(e3, xt.PercentageExpected);
      return this._parseBody(e3, this._parseRuleSetDeclaration.bind(this));
    }, e2.prototype._tryParseKeyframeSelector = function() {
      var e3 = this.create(Ae), t2 = this.mark();
      if (!e3.addChild(this._parseIdent()) && !this.accept(i.Percentage))
        return null;
      for (; this.accept(i.Comma); )
        if (!e3.addChild(this._parseIdent()) && !this.accept(i.Percentage))
          return this.restoreAtMark(t2), null;
      return this.peek(i.CurlyL) ? this._parseBody(e3, this._parseRuleSetDeclaration.bind(this)) : (this.restoreAtMark(t2), null);
    }, e2.prototype._parseSupports = function(e3) {
      if (e3 === void 0 && (e3 = false), !this.peekKeyword("@supports"))
        return null;
      var t2 = this.create(je);
      return this.consumeToken(), t2.addChild(this._parseSupportsCondition()), this._parseBody(t2, this._parseSupportsDeclaration.bind(this, e3));
    }, e2.prototype._parseSupportsDeclaration = function(e3) {
      return e3 === void 0 && (e3 = false), e3 ? this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true) : this._parseStylesheetStatement(false);
    }, e2.prototype._parseSupportsCondition = function() {
      var e3 = this.create(qe);
      if (this.acceptIdent("not"))
        e3.addChild(this._parseSupportsConditionInParens());
      else if (e3.addChild(this._parseSupportsConditionInParens()), this.peekRegExp(i.Ident, /^(and|or)$/i))
        for (var t2 = this.token.text.toLowerCase(); this.acceptIdent(t2); )
          e3.addChild(this._parseSupportsConditionInParens());
      return this.finish(e3);
    }, e2.prototype._parseSupportsConditionInParens = function() {
      var e3 = this.create(qe);
      if (this.accept(i.ParenthesisL))
        return this.prevToken && (e3.lParent = this.prevToken.offset), e3.addChild(this._tryToParseDeclaration()) || this._parseSupportsCondition() ? this.accept(i.ParenthesisR) ? (this.prevToken && (e3.rParent = this.prevToken.offset), this.finish(e3)) : this.finish(e3, xt.RightParenthesisExpected, [i.ParenthesisR], []) : this.finish(e3, xt.ConditionExpected);
      if (this.peek(i.Ident)) {
        var t2 = this.mark();
        if (this.consumeToken(), !this.hasWhitespace() && this.accept(i.ParenthesisL)) {
          for (var n2 = 1; this.token.type !== i.EOF && n2 !== 0; )
            this.token.type === i.ParenthesisL ? n2++ : this.token.type === i.ParenthesisR && n2--, this.consumeToken();
          return this.finish(e3);
        }
        this.restoreAtMark(t2);
      }
      return this.finish(e3, xt.LeftParenthesisExpected, [], [i.ParenthesisL]);
    }, e2.prototype._parseMediaDeclaration = function(e3) {
      return e3 === void 0 && (e3 = false), e3 ? this._tryParseRuleset(true) || this._tryToParseDeclaration() || this._parseStylesheetStatement(true) : this._parseStylesheetStatement(false);
    }, e2.prototype._parseMedia = function(e3) {
      if (e3 === void 0 && (e3 = false), !this.peekKeyword("@media"))
        return null;
      var t2 = this.create(Be);
      return this.consumeToken(), t2.addChild(this._parseMediaQueryList()) ? this._parseBody(t2, this._parseMediaDeclaration.bind(this, e3)) : this.finish(t2, xt.MediaQueryExpected);
    }, e2.prototype._parseMediaQueryList = function() {
      var e3 = this.create(Ue);
      if (!e3.addChild(this._parseMediaQuery([i.CurlyL])))
        return this.finish(e3, xt.MediaQueryExpected);
      for (; this.accept(i.Comma); )
        if (!e3.addChild(this._parseMediaQuery([i.CurlyL])))
          return this.finish(e3, xt.MediaQueryExpected);
      return this.finish(e3);
    }, e2.prototype._parseMediaQuery = function(e3) {
      var t2 = this.create(He), n2 = true, r2 = false;
      if (!this.peek(i.ParenthesisL)) {
        if (this.acceptIdent("only") || this.acceptIdent("not"), !t2.addChild(this._parseIdent()))
          return null;
        r2 = true, n2 = this.acceptIdent("and");
      }
      for (; n2; )
        if (t2.addChild(this._parseMediaContentStart()))
          n2 = this.acceptIdent("and");
        else {
          if (!this.accept(i.ParenthesisL))
            return r2 ? this.finish(t2, xt.LeftParenthesisExpected, [], e3) : null;
          if (!t2.addChild(this._parseMediaFeatureName()))
            return this.finish(t2, xt.IdentifierExpected, [], e3);
          if (this.accept(i.Colon) && !t2.addChild(this._parseExpr()))
            return this.finish(t2, xt.TermExpected, [], e3);
          if (!this.accept(i.ParenthesisR))
            return this.finish(t2, xt.RightParenthesisExpected, [], e3);
          n2 = this.acceptIdent("and");
        }
      return this.finish(t2);
    }, e2.prototype._parseMediaContentStart = function() {
      return null;
    }, e2.prototype._parseMediaFeatureName = function() {
      return this._parseIdent();
    }, e2.prototype._parseMedium = function() {
      var e3 = this.create(oe);
      return e3.addChild(this._parseIdent()) ? this.finish(e3) : null;
    }, e2.prototype._parsePageDeclaration = function() {
      return this._parsePageMarginBox() || this._parseRuleSetDeclaration();
    }, e2.prototype._parsePage = function() {
      if (!this.peekKeyword("@page"))
        return null;
      var e3 = this.create($e);
      if (this.consumeToken(), e3.addChild(this._parsePageSelector())) {
        for (; this.accept(i.Comma); )
          if (!e3.addChild(this._parsePageSelector()))
            return this.finish(e3, xt.IdentifierExpected);
      }
      return this._parseBody(e3, this._parsePageDeclaration.bind(this));
    }, e2.prototype._parsePageMarginBox = function() {
      if (!this.peek(i.AtKeyword))
        return null;
      var e3 = this.create(Ke);
      return this.acceptOneKeyword(Jt) || this.markError(e3, xt.UnknownAtRule, [], [i.CurlyL]), this._parseBody(e3, this._parseRuleSetDeclaration.bind(this));
    }, e2.prototype._parsePageSelector = function() {
      if (!this.peek(i.Ident) && !this.peek(i.Colon))
        return null;
      var e3 = this.create(oe);
      return e3.addChild(this._parseIdent()), this.accept(i.Colon) && !e3.addChild(this._parseIdent()) ? this.finish(e3, xt.IdentifierExpected) : this.finish(e3);
    }, e2.prototype._parseDocument = function() {
      if (!this.peekKeyword("@-moz-document"))
        return null;
      var e3 = this.create(Ve);
      return this.consumeToken(), this.resync([], [i.CurlyL]), this._parseBody(e3, this._parseStylesheetStatement.bind(this));
    }, e2.prototype._parseUnknownAtRule = function() {
      if (!this.peek(i.AtKeyword))
        return null;
      var e3 = this.create(ht);
      e3.addChild(this._parseUnknownAtRuleName());
      var t2 = 0, n2 = 0, r2 = 0, o2 = 0;
      e:
        for (; ; ) {
          switch (this.token.type) {
            case i.SemiColon:
              if (n2 === 0 && r2 === 0 && o2 === 0)
                break e;
              break;
            case i.EOF:
              return n2 > 0 ? this.finish(e3, xt.RightCurlyExpected) : o2 > 0 ? this.finish(e3, xt.RightSquareBracketExpected) : r2 > 0 ? this.finish(e3, xt.RightParenthesisExpected) : this.finish(e3);
            case i.CurlyL:
              t2++, n2++;
              break;
            case i.CurlyR:
              if (n2--, t2 > 0 && n2 === 0) {
                if (this.consumeToken(), o2 > 0)
                  return this.finish(e3, xt.RightSquareBracketExpected);
                if (r2 > 0)
                  return this.finish(e3, xt.RightParenthesisExpected);
                break e;
              }
              if (n2 < 0) {
                if (r2 === 0 && o2 === 0)
                  break e;
                return this.finish(e3, xt.LeftCurlyExpected);
              }
              break;
            case i.ParenthesisL:
              r2++;
              break;
            case i.ParenthesisR:
              if (--r2 < 0)
                return this.finish(e3, xt.LeftParenthesisExpected);
              break;
            case i.BracketL:
              o2++;
              break;
            case i.BracketR:
              if (--o2 < 0)
                return this.finish(e3, xt.LeftSquareBracketExpected);
          }
          this.consumeToken();
        }
      return e3;
    }, e2.prototype._parseUnknownAtRuleName = function() {
      var e3 = this.create(oe);
      return this.accept(i.AtKeyword) ? this.finish(e3) : e3;
    }, e2.prototype._parseOperator = function() {
      if (this.peekDelim("/") || this.peekDelim("*") || this.peekDelim("+") || this.peekDelim("-") || this.peek(i.Dashmatch) || this.peek(i.Includes) || this.peek(i.SubstringOperator) || this.peek(i.PrefixOperator) || this.peek(i.SuffixOperator) || this.peekDelim("=")) {
        var e3 = this.createNode(J.Operator);
        return this.consumeToken(), this.finish(e3);
      }
      return null;
    }, e2.prototype._parseUnaryOperator = function() {
      if (!this.peekDelim("+") && !this.peekDelim("-"))
        return null;
      var e3 = this.create(oe);
      return this.consumeToken(), this.finish(e3);
    }, e2.prototype._parseCombinator = function() {
      if (this.peekDelim(">")) {
        var e3 = this.create(oe);
        this.consumeToken();
        var t2 = this.mark();
        if (!this.hasWhitespace() && this.acceptDelim(">")) {
          if (!this.hasWhitespace() && this.acceptDelim(">"))
            return e3.type = J.SelectorCombinatorShadowPiercingDescendant, this.finish(e3);
          this.restoreAtMark(t2);
        }
        return e3.type = J.SelectorCombinatorParent, this.finish(e3);
      }
      if (this.peekDelim("+")) {
        e3 = this.create(oe);
        return this.consumeToken(), e3.type = J.SelectorCombinatorSibling, this.finish(e3);
      }
      if (this.peekDelim("~")) {
        e3 = this.create(oe);
        return this.consumeToken(), e3.type = J.SelectorCombinatorAllSiblings, this.finish(e3);
      }
      if (this.peekDelim("/")) {
        e3 = this.create(oe);
        this.consumeToken();
        t2 = this.mark();
        if (!this.hasWhitespace() && this.acceptIdent("deep") && !this.hasWhitespace() && this.acceptDelim("/"))
          return e3.type = J.SelectorCombinatorShadowPiercingDescendant, this.finish(e3);
        this.restoreAtMark(t2);
      }
      return null;
    }, e2.prototype._parseSimpleSelector = function() {
      var e3 = this.create(pe), t2 = 0;
      for (e3.addChild(this._parseElementName()) && t2++; (t2 === 0 || !this.hasWhitespace()) && e3.addChild(this._parseSimpleSelectorBody()); )
        t2++;
      return t2 > 0 ? this.finish(e3) : null;
    }, e2.prototype._parseSimpleSelectorBody = function() {
      return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();
    }, e2.prototype._parseSelectorIdent = function() {
      return this._parseIdent();
    }, e2.prototype._parseHash = function() {
      if (!this.peek(i.Hash) && !this.peekDelim("#"))
        return null;
      var e3 = this.createNode(J.IdentifierSelector);
      if (this.acceptDelim("#")) {
        if (this.hasWhitespace() || !e3.addChild(this._parseSelectorIdent()))
          return this.finish(e3, xt.IdentifierExpected);
      } else
        this.consumeToken();
      return this.finish(e3);
    }, e2.prototype._parseClass = function() {
      if (!this.peekDelim("."))
        return null;
      var e3 = this.createNode(J.ClassSelector);
      return this.consumeToken(), this.hasWhitespace() || !e3.addChild(this._parseSelectorIdent()) ? this.finish(e3, xt.IdentifierExpected) : this.finish(e3);
    }, e2.prototype._parseElementName = function() {
      var e3 = this.mark(), t2 = this.createNode(J.ElementNameSelector);
      return t2.addChild(this._parseNamespacePrefix()), t2.addChild(this._parseSelectorIdent()) || this.acceptDelim("*") ? this.finish(t2) : (this.restoreAtMark(e3), null);
    }, e2.prototype._parseNamespacePrefix = function() {
      var e3 = this.mark(), t2 = this.createNode(J.NamespacePrefix);
      return !t2.addChild(this._parseIdent()) && this.acceptDelim("*"), this.acceptDelim("|") ? this.finish(t2) : (this.restoreAtMark(e3), null);
    }, e2.prototype._parseAttrib = function() {
      if (!this.peek(i.BracketL))
        return null;
      var e3 = this.create(Xe);
      return this.consumeToken(), e3.setNamespacePrefix(this._parseNamespacePrefix()), e3.setIdentifier(this._parseIdent()) ? (e3.setOperator(this._parseOperator()) && (e3.setValue(this._parseBinaryExpr()), this.acceptIdent("i")), this.accept(i.BracketR) ? this.finish(e3) : this.finish(e3, xt.RightSquareBracketExpected)) : this.finish(e3, xt.IdentifierExpected);
    }, e2.prototype._parsePseudo = function() {
      var e3 = this, t2 = this._tryParsePseudoIdentifier();
      if (t2) {
        if (!this.hasWhitespace() && this.accept(i.ParenthesisL)) {
          if (t2.addChild(this.try(function() {
            var t3 = e3.create(oe);
            if (!t3.addChild(e3._parseSelector(false)))
              return null;
            for (; e3.accept(i.Comma) && t3.addChild(e3._parseSelector(false)); )
              ;
            return e3.peek(i.ParenthesisR) ? e3.finish(t3) : null;
          }) || this._parseBinaryExpr()), !this.accept(i.ParenthesisR))
            return this.finish(t2, xt.RightParenthesisExpected);
        }
        return this.finish(t2);
      }
      return null;
    }, e2.prototype._tryParsePseudoIdentifier = function() {
      if (!this.peek(i.Colon))
        return null;
      var e3 = this.mark(), t2 = this.createNode(J.PseudoSelector);
      return this.consumeToken(), this.hasWhitespace() ? (this.restoreAtMark(e3), null) : (this.accept(i.Colon) && this.hasWhitespace() && this.markError(t2, xt.IdentifierExpected), t2.addChild(this._parseIdent()) || this.markError(t2, xt.IdentifierExpected), t2);
    }, e2.prototype._tryParsePrio = function() {
      var e3 = this.mark(), t2 = this._parsePrio();
      return t2 || (this.restoreAtMark(e3), null);
    }, e2.prototype._parsePrio = function() {
      if (!this.peek(i.Exclamation))
        return null;
      var e3 = this.createNode(J.Prio);
      return this.accept(i.Exclamation) && this.acceptIdent("important") ? this.finish(e3) : null;
    }, e2.prototype._parseExpr = function(e3) {
      e3 === void 0 && (e3 = false);
      var t2 = this.create(Ge);
      if (!t2.addChild(this._parseBinaryExpr()))
        return null;
      for (; ; ) {
        if (this.peek(i.Comma)) {
          if (e3)
            return this.finish(t2);
          this.consumeToken();
        }
        if (!t2.addChild(this._parseBinaryExpr()))
          break;
      }
      return this.finish(t2);
    }, e2.prototype._parseNamedLine = function() {
      if (!this.peek(i.BracketL))
        return null;
      var e3 = this.createNode(J.GridLine);
      for (this.consumeToken(); e3.addChild(this._parseIdent()); )
        ;
      return this.accept(i.BracketR) ? this.finish(e3) : this.finish(e3, xt.RightSquareBracketExpected);
    }, e2.prototype._parseBinaryExpr = function(e3, t2) {
      var n2 = this.create(Ye);
      if (!n2.setLeft(e3 || this._parseTerm()))
        return null;
      if (!n2.setOperator(t2 || this._parseOperator()))
        return this.finish(n2);
      if (!n2.setRight(this._parseTerm()))
        return this.finish(n2, xt.TermExpected);
      n2 = this.finish(n2);
      var i2 = this._parseOperator();
      return i2 && (n2 = this._parseBinaryExpr(n2, i2)), this.finish(n2);
    }, e2.prototype._parseTerm = function() {
      var e3 = this.create(Ze);
      return e3.setOperator(this._parseUnaryOperator()), e3.setExpression(this._parseTermExpression()) ? this.finish(e3) : null;
    }, e2.prototype._parseTermExpression = function() {
      return this._parseURILiteral() || this._parseFunction() || this._parseIdent() || this._parseStringLiteral() || this._parseNumeric() || this._parseHexColor() || this._parseOperation() || this._parseNamedLine();
    }, e2.prototype._parseOperation = function() {
      if (!this.peek(i.ParenthesisL))
        return null;
      var e3 = this.create(oe);
      return this.consumeToken(), e3.addChild(this._parseExpr()), this.accept(i.ParenthesisR) ? this.finish(e3) : this.finish(e3, xt.RightParenthesisExpected);
    }, e2.prototype._parseNumeric = function() {
      if (this.peek(i.Num) || this.peek(i.Percentage) || this.peek(i.Resolution) || this.peek(i.Length) || this.peek(i.EMS) || this.peek(i.EXS) || this.peek(i.Angle) || this.peek(i.Time) || this.peek(i.Dimension) || this.peek(i.Freq)) {
        var e3 = this.create(nt);
        return this.consumeToken(), this.finish(e3);
      }
      return null;
    }, e2.prototype._parseStringLiteral = function() {
      if (!this.peek(i.String) && !this.peek(i.BadString))
        return null;
      var e3 = this.createNode(J.StringLiteral);
      return this.consumeToken(), this.finish(e3);
    }, e2.prototype._parseURILiteral = function() {
      if (!this.peekRegExp(i.Ident, /^url(-prefix)?$/i))
        return null;
      var e3 = this.mark(), t2 = this.createNode(J.URILiteral);
      return this.accept(i.Ident), this.hasWhitespace() || !this.peek(i.ParenthesisL) ? (this.restoreAtMark(e3), null) : (this.scanner.inURL = true, this.consumeToken(), t2.addChild(this._parseURLArgument()), this.scanner.inURL = false, this.accept(i.ParenthesisR) ? this.finish(t2) : this.finish(t2, xt.RightParenthesisExpected));
    }, e2.prototype._parseURLArgument = function() {
      var e3 = this.create(oe);
      return this.accept(i.String) || this.accept(i.BadString) || this.acceptUnquotedString() ? this.finish(e3) : null;
    }, e2.prototype._parseIdent = function(e3) {
      if (!this.peek(i.Ident))
        return null;
      var t2 = this.create(ae);
      return e3 && (t2.referenceTypes = e3), t2.isCustomProperty = this.peekRegExp(i.Ident, /^--/), this.consumeToken(), this.finish(t2);
    }, e2.prototype._parseFunction = function() {
      var e3 = this.mark(), t2 = this.create(we);
      if (!t2.setIdentifier(this._parseFunctionIdentifier()))
        return null;
      if (this.hasWhitespace() || !this.accept(i.ParenthesisL))
        return this.restoreAtMark(e3), null;
      if (t2.getArguments().addChild(this._parseFunctionArgument()))
        for (; this.accept(i.Comma) && !this.peek(i.ParenthesisR); )
          t2.getArguments().addChild(this._parseFunctionArgument()) || this.markError(t2, xt.ExpressionExpected);
      return this.accept(i.ParenthesisR) ? this.finish(t2) : this.finish(t2, xt.RightParenthesisExpected);
    }, e2.prototype._parseFunctionIdentifier = function() {
      if (!this.peek(i.Ident))
        return null;
      var e3 = this.create(ae);
      if (e3.referenceTypes = [ee.Function], this.acceptIdent("progid")) {
        if (this.accept(i.Colon))
          for (; this.accept(i.Ident) && this.acceptDelim("."); )
            ;
        return this.finish(e3);
      }
      return this.consumeToken(), this.finish(e3);
    }, e2.prototype._parseFunctionArgument = function() {
      var e3 = this.create(Ce);
      return e3.setValue(this._parseExpr(true)) ? this.finish(e3) : null;
    }, e2.prototype._parseHexColor = function() {
      if (this.peekRegExp(i.Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {
        var e3 = this.create(Qe);
        return this.consumeToken(), this.finish(e3);
      }
      return null;
    }, e2;
  }();
  function on(e2, t2) {
    return e2.indexOf(t2) !== -1;
  }
  function sn() {
    for (var e2 = [], t2 = 0; t2 < arguments.length; t2++)
      e2[t2] = arguments[t2];
    for (var n2 = [], i2 = 0, r2 = e2; i2 < r2.length; i2++)
      for (var o2 = r2[i2], s2 = 0, a2 = o2; s2 < a2.length; s2++) {
        var l2 = a2[s2];
        on(n2, l2) || n2.push(l2);
      }
    return n2;
  }
  var an, ln, cn, dn, hn, un, pn, mn, gn, fn, bn, _n, vn, wn, yn, Cn, xn, Sn, kn, En, Tn, Ln = function() {
    var e2 = function(t2, n2) {
      return (e2 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
        e3.__proto__ = t3;
      } || function(e3, t3) {
        for (var n3 in t3)
          t3.hasOwnProperty(n3) && (e3[n3] = t3[n3]);
      })(t2, n2);
    };
    return function(t2, n2) {
      function i2() {
        this.constructor = t2;
      }
      e2(t2, n2), t2.prototype = n2 === null ? Object.create(n2) : (i2.prototype = n2.prototype, new i2());
    };
  }(), Nn = function() {
    function e2(e3, t2) {
      this.offset = e3, this.length = t2, this.symbols = [], this.parent = null, this.children = [];
    }
    return e2.prototype.addChild = function(e3) {
      this.children.push(e3), e3.setParent(this);
    }, e2.prototype.setParent = function(e3) {
      this.parent = e3;
    }, e2.prototype.findScope = function(e3, t2) {
      return t2 === void 0 && (t2 = 0), this.offset <= e3 && this.offset + this.length > e3 + t2 || this.offset === e3 && this.length === t2 ? this.findInScope(e3, t2) : null;
    }, e2.prototype.findInScope = function(e3, t2) {
      t2 === void 0 && (t2 = 0);
      var n2 = e3 + t2, i2 = function(e4, t3) {
        var n3 = 0, i3 = e4.length;
        if (i3 === 0)
          return 0;
        for (; n3 < i3; ) {
          var r3 = Math.floor((n3 + i3) / 2);
          t3(e4[r3]) ? i3 = r3 : n3 = r3 + 1;
        }
        return n3;
      }(this.children, function(e4) {
        return e4.offset > n2;
      });
      if (i2 === 0)
        return this;
      var r2 = this.children[i2 - 1];
      return r2.offset <= e3 && r2.offset + r2.length >= e3 + t2 ? r2.findInScope(e3, t2) : this;
    }, e2.prototype.addSymbol = function(e3) {
      this.symbols.push(e3);
    }, e2.prototype.getSymbol = function(e3, t2) {
      for (var n2 = 0; n2 < this.symbols.length; n2++) {
        var i2 = this.symbols[n2];
        if (i2.name === e3 && i2.type === t2)
          return i2;
      }
      return null;
    }, e2.prototype.getSymbols = function() {
      return this.symbols;
    }, e2;
  }(), In = function(e2) {
    function t2() {
      return e2.call(this, 0, Number.MAX_VALUE) || this;
    }
    return Ln(t2, e2), t2;
  }(Nn), Dn = function(e2, t2, n2, i2) {
    this.name = e2, this.value = t2, this.node = n2, this.type = i2;
  }, On = function() {
    function e2(e3) {
      this.scope = e3;
    }
    return e2.prototype.addSymbol = function(e3, t2, n2, i2) {
      if (e3.offset !== -1) {
        var r2 = this.scope.findScope(e3.offset, e3.length);
        r2 && r2.addSymbol(new Dn(t2, n2, e3, i2));
      }
    }, e2.prototype.addScope = function(e3) {
      if (e3.offset !== -1) {
        var t2 = this.scope.findScope(e3.offset, e3.length);
        if (t2 && (t2.offset !== e3.offset || t2.length !== e3.length)) {
          var n2 = new Nn(e3.offset, e3.length);
          return t2.addChild(n2), n2;
        }
        return t2;
      }
      return null;
    }, e2.prototype.addSymbolToChildScope = function(e3, t2, n2, i2, r2) {
      if (e3 && e3.offset !== -1) {
        var o2 = this.addScope(e3);
        o2 && o2.addSymbol(new Dn(n2, i2, t2, r2));
      }
    }, e2.prototype.visitNode = function(e3) {
      switch (e3.type) {
        case J.Keyframe:
          return this.addSymbol(e3, e3.getName(), void 0, ee.Keyframe), true;
        case J.CustomPropertyDeclaration:
          return this.visitCustomPropertyDeclarationNode(e3);
        case J.VariableDeclaration:
          return this.visitVariableDeclarationNode(e3);
        case J.Ruleset:
          return this.visitRuleSet(e3);
        case J.MixinDeclaration:
          return this.addSymbol(e3, e3.getName(), void 0, ee.Mixin), true;
        case J.FunctionDeclaration:
          return this.addSymbol(e3, e3.getName(), void 0, ee.Function), true;
        case J.FunctionParameter:
          return this.visitFunctionParameterNode(e3);
        case J.Declarations:
          return this.addScope(e3), true;
        case J.For:
          var t2 = e3, n2 = t2.getDeclarations();
          return n2 && t2.variable && this.addSymbolToChildScope(n2, t2.variable, t2.variable.getName(), void 0, ee.Variable), true;
        case J.Each:
          var i2 = e3, r2 = i2.getDeclarations();
          if (r2)
            for (var o2 = 0, s2 = i2.getVariables().getChildren(); o2 < s2.length; o2++) {
              var a2 = s2[o2];
              this.addSymbolToChildScope(r2, a2, a2.getName(), void 0, ee.Variable);
            }
          return true;
      }
      return true;
    }, e2.prototype.visitRuleSet = function(e3) {
      var t2 = this.scope.findScope(e3.offset, e3.length);
      if (t2)
        for (var n2 = 0, i2 = e3.getSelectors().getChildren(); n2 < i2.length; n2++) {
          var r2 = i2[n2];
          r2 instanceof ue && r2.getChildren().length === 1 && t2.addSymbol(new Dn(r2.getChild(0).getText(), void 0, r2, ee.Rule));
        }
      return true;
    }, e2.prototype.visitVariableDeclarationNode = function(e3) {
      var t2 = e3.getValue() ? e3.getValue().getText() : void 0;
      return this.addSymbol(e3, e3.getName(), t2, ee.Variable), true;
    }, e2.prototype.visitFunctionParameterNode = function(e3) {
      var t2 = e3.getParent().getDeclarations();
      if (t2) {
        var n2 = e3.getDefaultValue(), i2 = n2 ? n2.getText() : void 0;
        this.addSymbolToChildScope(t2, e3, e3.getName(), i2, ee.Variable);
      }
      return true;
    }, e2.prototype.visitCustomPropertyDeclarationNode = function(e3) {
      var t2 = e3.getValue() ? e3.getValue().getText() : "";
      return this.addCSSVariable(e3.getProperty(), e3.getProperty().getName(), t2, ee.Variable), true;
    }, e2.prototype.addCSSVariable = function(e3, t2, n2, i2) {
      e3.offset !== -1 && this.scope.addSymbol(new Dn(t2, n2, e3, i2));
    }, e2;
  }(), An = function() {
    function e2(e3) {
      this.global = new In(), e3.acceptVisitor(new On(this.global));
    }
    return e2.prototype.findSymbolsAtOffset = function(e3, t2) {
      for (var n2 = this.global.findScope(e3, 0), i2 = [], r2 = {}; n2; ) {
        for (var o2 = n2.getSymbols(), s2 = 0; s2 < o2.length; s2++) {
          var a2 = o2[s2];
          a2.type !== t2 || r2[a2.name] || (i2.push(a2), r2[a2.name] = true);
        }
        n2 = n2.parent;
      }
      return i2;
    }, e2.prototype.internalFindSymbol = function(e3, t2) {
      var n2 = e3;
      if (e3.parent instanceof ye && e3.parent.getParent() instanceof de && (n2 = e3.parent.getParent().getDeclarations()), e3.parent instanceof Ce && e3.parent.getParent() instanceof we) {
        var i2 = e3.parent.getParent().getIdentifier();
        if (i2) {
          var r2 = this.internalFindSymbol(i2, [ee.Function]);
          r2 && (n2 = r2.node.getDeclarations());
        }
      }
      if (!n2)
        return null;
      for (var o2 = e3.getText(), s2 = this.global.findScope(n2.offset, n2.length); s2; ) {
        for (var a2 = 0; a2 < t2.length; a2++) {
          var l2 = t2[a2], c2 = s2.getSymbol(o2, l2);
          if (c2)
            return c2;
        }
        s2 = s2.parent;
      }
      return null;
    }, e2.prototype.evaluateReferenceTypes = function(e3) {
      if (e3 instanceof ae) {
        var t2 = e3.referenceTypes;
        if (t2)
          return t2;
        if (e3.isCustomProperty)
          return [ee.Variable];
        var n2 = function(e4) {
          var t3 = e4.findParent(J.Declaration), n3 = t3 && t3.getValue();
          return n3 && n3.encloses(e4) ? t3 : null;
        }(e3);
        if (n2) {
          var i2 = n2.getNonPrefixedPropertyName();
          if ((i2 === "animation" || i2 === "animation-name") && n2.getValue() && n2.getValue().offset === e3.offset)
            return [ee.Keyframe];
        }
      } else if (e3 instanceof ot)
        return [ee.Variable];
      return e3.findAParent(J.Selector, J.ExtendsReference) ? [ee.Rule] : null;
    }, e2.prototype.findSymbolFromNode = function(e3) {
      if (!e3)
        return null;
      for (; e3.type === J.Interpolation; )
        e3 = e3.getParent();
      var t2 = this.evaluateReferenceTypes(e3);
      return t2 ? this.internalFindSymbol(e3, t2) : null;
    }, e2.prototype.matchesSymbol = function(e3, t2) {
      if (!e3)
        return false;
      for (; e3.type === J.Interpolation; )
        e3 = e3.getParent();
      if (!e3.matches(t2.name))
        return false;
      var n2 = this.evaluateReferenceTypes(e3);
      return !(!n2 || n2.indexOf(t2.type) === -1) && this.internalFindSymbol(e3, n2) === t2;
    }, e2.prototype.findSymbol = function(e3, t2, n2) {
      for (var i2 = this.global.findScope(n2); i2; ) {
        var r2 = i2.getSymbol(e3, t2);
        if (r2)
          return r2;
        i2 = i2.parent;
      }
      return null;
    }, e2;
  }();
  !function(e2) {
    e2.create = function(e3, t2) {
      return {line: e3, character: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.objectLiteral(t2) && di.number(t2.line) && di.number(t2.character);
    };
  }(an || (an = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      if (di.number(e3) && di.number(t2) && di.number(n2) && di.number(i2))
        return {start: an.create(e3, t2), end: an.create(n2, i2)};
      if (an.is(e3) && an.is(t2))
        return {start: e3, end: t2};
      throw new Error("Range#create called with invalid arguments[" + e3 + ", " + t2 + ", " + n2 + ", " + i2 + "]");
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.objectLiteral(t2) && an.is(t2.start) && an.is(t2.end);
    };
  }(ln || (ln = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, range: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && ln.is(t2.range) && (di.string(t2.uri) || di.undefined(t2.uri));
    };
  }(cn || (cn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {targetUri: e3, targetRange: t2, targetSelectionRange: n2, originSelectionRange: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && ln.is(t2.targetRange) && di.string(t2.targetUri) && (ln.is(t2.targetSelectionRange) || di.undefined(t2.targetSelectionRange)) && (ln.is(t2.originSelectionRange) || di.undefined(t2.originSelectionRange));
    };
  }(dn || (dn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {red: e3, green: t2, blue: n2, alpha: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.number(t2.red) && di.number(t2.green) && di.number(t2.blue) && di.number(t2.alpha);
    };
  }(hn || (hn = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, color: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return ln.is(t2.range) && hn.is(t2.color);
    };
  }(un || (un = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {label: e3, textEdit: t2, additionalTextEdits: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.string(t2.label) && (di.undefined(t2.textEdit) || Cn.is(t2)) && (di.undefined(t2.additionalTextEdits) || di.typedArray(t2.additionalTextEdits, Cn.is));
    };
  }(pn || (pn = {})), function(e2) {
    e2.Comment = "comment", e2.Imports = "imports", e2.Region = "region";
  }(mn || (mn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {startLine: e3, endLine: t2};
      return di.defined(n2) && (o2.startCharacter = n2), di.defined(i2) && (o2.endCharacter = i2), di.defined(r2) && (o2.kind = r2), o2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.number(t2.startLine) && di.number(t2.startLine) && (di.undefined(t2.startCharacter) || di.number(t2.startCharacter)) && (di.undefined(t2.endCharacter) || di.number(t2.endCharacter)) && (di.undefined(t2.kind) || di.string(t2.kind));
    };
  }(gn || (gn = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {location: e3, message: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && cn.is(t2.location) && di.string(t2.message);
    };
  }(fn || (fn = {})), function(e2) {
    e2.Error = 1, e2.Warning = 2, e2.Information = 3, e2.Hint = 4;
  }(bn || (bn = {})), function(e2) {
    e2.Unnecessary = 1, e2.Deprecated = 2;
  }(_n || (_n = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return t2 != null && (di.number(t2.value) || di.string(t2.value)) && di.string(t2.target);
    };
  }(vn || (vn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {range: e3, message: t2};
      return di.defined(n2) && (s2.severity = n2), di.defined(i2) && (s2.code = i2), di.defined(r2) && (s2.source = r2), di.defined(o2) && (s2.relatedInformation = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && ln.is(t2.range) && di.string(t2.message) && (di.number(t2.severity) || di.undefined(t2.severity)) && (di.number(t2.code) || di.string(t2.code) || di.undefined(t2.code)) && (di.string(t2.source) || di.undefined(t2.source)) && (di.undefined(t2.relatedInformation) || di.typedArray(t2.relatedInformation, fn.is));
    };
  }(wn || (wn = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {title: e3, command: t2};
      return di.defined(n2) && n2.length > 0 && (r2.arguments = n2), r2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.string(t2.title) && di.string(t2.command);
    };
  }(yn || (yn = {})), function(e2) {
    e2.replace = function(e3, t2) {
      return {range: e3, newText: t2};
    }, e2.insert = function(e3, t2) {
      return {range: {start: e3, end: e3}, newText: t2};
    }, e2.del = function(e3) {
      return {range: e3, newText: ""};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.objectLiteral(t2) && di.string(t2.newText) && ln.is(t2.range);
    };
  }(Cn || (Cn = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {textDocument: e3, edits: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && Mn.is(t2.textDocument) && Array.isArray(t2.edits);
    };
  }(xn || (xn = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "create", uri: e3};
      return t2 === void 0 || t2.overwrite === void 0 && t2.ignoreIfExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "create" && di.string(t2.uri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || di.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || di.boolean(t2.options.ignoreIfExists)));
    };
  }(Sn || (Sn = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {kind: "rename", oldUri: e3, newUri: t2};
      return n2 === void 0 || n2.overwrite === void 0 && n2.ignoreIfExists === void 0 || (i2.options = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "rename" && di.string(t2.oldUri) && di.string(t2.newUri) && (t2.options === void 0 || (t2.options.overwrite === void 0 || di.boolean(t2.options.overwrite)) && (t2.options.ignoreIfExists === void 0 || di.boolean(t2.options.ignoreIfExists)));
    };
  }(kn || (kn = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {kind: "delete", uri: e3};
      return t2 === void 0 || t2.recursive === void 0 && t2.ignoreIfNotExists === void 0 || (n2.options = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && t2.kind === "delete" && di.string(t2.uri) && (t2.options === void 0 || (t2.options.recursive === void 0 || di.boolean(t2.options.recursive)) && (t2.options.ignoreIfNotExists === void 0 || di.boolean(t2.options.ignoreIfNotExists)));
    };
  }(En || (En = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return t2 && (t2.changes !== void 0 || t2.documentChanges !== void 0) && (t2.documentChanges === void 0 || t2.documentChanges.every(function(e4) {
        return di.string(e4.kind) ? Sn.is(e4) || kn.is(e4) || En.is(e4) : xn.is(e4);
      }));
    };
  }(Tn || (Tn = {}));
  var Rn, Mn, Pn, Fn, Wn, zn, Bn, jn, Vn, Un, Hn, qn, $n, Kn, Gn, Yn, Zn, Xn, Qn, Jn, ei, ti, ni, ii, ri, oi, si, ai, li = function() {
    function e2(e3) {
      this.edits = e3;
    }
    return e2.prototype.insert = function(e3, t2) {
      this.edits.push(Cn.insert(e3, t2));
    }, e2.prototype.replace = function(e3, t2) {
      this.edits.push(Cn.replace(e3, t2));
    }, e2.prototype.delete = function(e3) {
      this.edits.push(Cn.del(e3));
    }, e2.prototype.add = function(e3) {
      this.edits.push(e3);
    }, e2.prototype.all = function() {
      return this.edits;
    }, e2.prototype.clear = function() {
      this.edits.splice(0, this.edits.length);
    }, e2;
  }();
  !function() {
    function e2(e3) {
      var t2 = this;
      this._textEditChanges = Object.create(null), e3 && (this._workspaceEdit = e3, e3.documentChanges ? e3.documentChanges.forEach(function(e4) {
        if (xn.is(e4)) {
          var n2 = new li(e4.edits);
          t2._textEditChanges[e4.textDocument.uri] = n2;
        }
      }) : e3.changes && Object.keys(e3.changes).forEach(function(n2) {
        var i2 = new li(e3.changes[n2]);
        t2._textEditChanges[n2] = i2;
      }));
    }
    Object.defineProperty(e2.prototype, "edit", {get: function() {
      return this._workspaceEdit === void 0 ? {documentChanges: []} : this._workspaceEdit;
    }, enumerable: true, configurable: true}), e2.prototype.getTextEditChange = function(e3) {
      if (Mn.is(e3)) {
        if (this._workspaceEdit || (this._workspaceEdit = {documentChanges: []}), !this._workspaceEdit.documentChanges)
          throw new Error("Workspace edit is not configured for document changes.");
        var t2 = e3;
        if (!(i2 = this._textEditChanges[t2.uri])) {
          var n2 = {textDocument: t2, edits: r2 = []};
          this._workspaceEdit.documentChanges.push(n2), i2 = new li(r2), this._textEditChanges[t2.uri] = i2;
        }
        return i2;
      }
      if (this._workspaceEdit || (this._workspaceEdit = {changes: Object.create(null)}), !this._workspaceEdit.changes)
        throw new Error("Workspace edit is not configured for normal text edit changes.");
      var i2;
      if (!(i2 = this._textEditChanges[e3])) {
        var r2 = [];
        this._workspaceEdit.changes[e3] = r2, i2 = new li(r2), this._textEditChanges[e3] = i2;
      }
      return i2;
    }, e2.prototype.createFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(Sn.create(e3, t2));
    }, e2.prototype.renameFile = function(e3, t2, n2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(kn.create(e3, t2, n2));
    }, e2.prototype.deleteFile = function(e3, t2) {
      this.checkDocumentChanges(), this._workspaceEdit.documentChanges.push(En.create(e3, t2));
    }, e2.prototype.checkDocumentChanges = function() {
      if (!this._workspaceEdit || !this._workspaceEdit.documentChanges)
        throw new Error("Workspace edit is not configured for document changes.");
    };
  }();
  !function(e2) {
    e2.create = function(e3) {
      return {uri: e3};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.string(t2.uri);
    };
  }(Rn || (Rn = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {uri: e3, version: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.string(t2.uri) && (t2.version === null || di.number(t2.version));
    };
  }(Mn || (Mn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return {uri: e3, languageId: t2, version: n2, text: i2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.string(t2.uri) && di.string(t2.languageId) && di.number(t2.version) && di.string(t2.text);
    };
  }(Pn || (Pn = {})), function(e2) {
    e2.PlainText = "plaintext", e2.Markdown = "markdown";
  }(Fn || (Fn = {})), function(e2) {
    e2.is = function(t2) {
      var n2 = t2;
      return n2 === e2.PlainText || n2 === e2.Markdown;
    };
  }(Fn || (Fn = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return di.objectLiteral(e3) && Fn.is(t2.kind) && di.string(t2.value);
    };
  }(Wn || (Wn = {})), function(e2) {
    e2.Text = 1, e2.Method = 2, e2.Function = 3, e2.Constructor = 4, e2.Field = 5, e2.Variable = 6, e2.Class = 7, e2.Interface = 8, e2.Module = 9, e2.Property = 10, e2.Unit = 11, e2.Value = 12, e2.Enum = 13, e2.Keyword = 14, e2.Snippet = 15, e2.Color = 16, e2.File = 17, e2.Reference = 18, e2.Folder = 19, e2.EnumMember = 20, e2.Constant = 21, e2.Struct = 22, e2.Event = 23, e2.Operator = 24, e2.TypeParameter = 25;
  }(zn || (zn = {})), function(e2) {
    e2.PlainText = 1, e2.Snippet = 2;
  }(Bn || (Bn = {})), function(e2) {
    e2.Deprecated = 1;
  }(jn || (jn = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {newText: e3, insert: t2, replace: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && di.string(t2.newText) && ln.is(t2.insert) && ln.is(t2.replace);
    };
  }(Vn || (Vn = {})), function(e2) {
    e2.create = function(e3) {
      return {label: e3};
    };
  }(Un || (Un = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {items: e3 || [], isIncomplete: !!t2};
    };
  }(Hn || (Hn = {})), function(e2) {
    e2.fromPlainText = function(e3) {
      return e3.replace(/[\\`*_{}[\]()#+\-.!]/g, "\\$&");
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.string(t2) || di.objectLiteral(t2) && di.string(t2.language) && di.string(t2.value);
    };
  }(qn || (qn = {})), function(e2) {
    e2.is = function(e3) {
      var t2 = e3;
      return !!t2 && di.objectLiteral(t2) && (Wn.is(t2.contents) || qn.is(t2.contents) || di.typedArray(t2.contents, qn.is)) && (e3.range === void 0 || ln.is(e3.range));
    };
  }($n || ($n = {})), function(e2) {
    e2.create = function(e3, t2) {
      return t2 ? {label: e3, documentation: t2} : {label: e3};
    };
  }(Kn || (Kn = {})), function(e2) {
    e2.create = function(e3, t2) {
      for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
        n2[i2 - 2] = arguments[i2];
      var r2 = {label: e3};
      return di.defined(t2) && (r2.documentation = t2), di.defined(n2) ? r2.parameters = n2 : r2.parameters = [], r2;
    };
  }(Gn || (Gn = {})), function(e2) {
    e2.Text = 1, e2.Read = 2, e2.Write = 3;
  }(Yn || (Yn = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return di.number(t2) && (n2.kind = t2), n2;
    };
  }(Zn || (Zn = {})), function(e2) {
    e2.File = 1, e2.Module = 2, e2.Namespace = 3, e2.Package = 4, e2.Class = 5, e2.Method = 6, e2.Property = 7, e2.Field = 8, e2.Constructor = 9, e2.Enum = 10, e2.Interface = 11, e2.Function = 12, e2.Variable = 13, e2.Constant = 14, e2.String = 15, e2.Number = 16, e2.Boolean = 17, e2.Array = 18, e2.Object = 19, e2.Key = 20, e2.Null = 21, e2.EnumMember = 22, e2.Struct = 23, e2.Event = 24, e2.Operator = 25, e2.TypeParameter = 26;
  }(Xn || (Xn = {})), function(e2) {
    e2.Deprecated = 1;
  }(Qn || (Qn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2) {
      var o2 = {name: e3, kind: t2, location: {uri: i2, range: n2}};
      return r2 && (o2.containerName = r2), o2;
    };
  }(Jn || (Jn = {})), function(e2) {
    e2.create = function(e3, t2, n2, i2, r2, o2) {
      var s2 = {name: e3, detail: t2, kind: n2, range: i2, selectionRange: r2};
      return o2 !== void 0 && (s2.children = o2), s2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && di.string(t2.name) && di.number(t2.kind) && ln.is(t2.range) && ln.is(t2.selectionRange) && (t2.detail === void 0 || di.string(t2.detail)) && (t2.deprecated === void 0 || di.boolean(t2.deprecated)) && (t2.children === void 0 || Array.isArray(t2.children)) && (t2.tags === void 0 || Array.isArray(t2.tags));
    };
  }(ei || (ei = {})), function(e2) {
    e2.Empty = "", e2.QuickFix = "quickfix", e2.Refactor = "refactor", e2.RefactorExtract = "refactor.extract", e2.RefactorInline = "refactor.inline", e2.RefactorRewrite = "refactor.rewrite", e2.Source = "source", e2.SourceOrganizeImports = "source.organizeImports", e2.SourceFixAll = "source.fixAll";
  }(ti || (ti = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {diagnostics: e3};
      return t2 != null && (n2.only = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.typedArray(t2.diagnostics, wn.is) && (t2.only === void 0 || di.typedArray(t2.only, di.string));
    };
  }(ni || (ni = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      var i2 = {title: e3};
      return yn.is(t2) ? i2.command = t2 : i2.edit = t2, n2 !== void 0 && (i2.kind = n2), i2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return t2 && di.string(t2.title) && (t2.diagnostics === void 0 || di.typedArray(t2.diagnostics, wn.is)) && (t2.kind === void 0 || di.string(t2.kind)) && (t2.edit !== void 0 || t2.command !== void 0) && (t2.command === void 0 || yn.is(t2.command)) && (t2.isPreferred === void 0 || di.boolean(t2.isPreferred)) && (t2.edit === void 0 || Tn.is(t2.edit));
    };
  }(ii || (ii = {})), function(e2) {
    e2.create = function(e3, t2) {
      var n2 = {range: e3};
      return di.defined(t2) && (n2.data = t2), n2;
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && ln.is(t2.range) && (di.undefined(t2.command) || yn.is(t2.command));
    };
  }(ri || (ri = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {tabSize: e3, insertSpaces: t2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && di.number(t2.tabSize) && di.boolean(t2.insertSpaces);
    };
  }(oi || (oi = {})), function(e2) {
    e2.create = function(e3, t2, n2) {
      return {range: e3, target: t2, data: n2};
    }, e2.is = function(e3) {
      var t2 = e3;
      return di.defined(t2) && ln.is(t2.range) && (di.undefined(t2.target) || di.string(t2.target));
    };
  }(si || (si = {})), function(e2) {
    e2.create = function(e3, t2) {
      return {range: e3, parent: t2};
    }, e2.is = function(t2) {
      var n2 = t2;
      return n2 !== void 0 && ln.is(n2.range) && (n2.parent === void 0 || e2.is(n2.parent));
    };
  }(ai || (ai = {}));
  var ci;
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new hi(e3, t2, n2, i2);
    }, e2.is = function(e3) {
      var t2 = e3;
      return !!(di.defined(t2) && di.string(t2.uri) && (di.undefined(t2.languageId) || di.string(t2.languageId)) && di.number(t2.lineCount) && di.func(t2.getText) && di.func(t2.positionAt) && di.func(t2.offsetAt));
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2, function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }), r2 = n2.length, o2 = i2.length - 1; o2 >= 0; o2--) {
        var s2 = i2[o2], a2 = e3.offsetAt(s2.range.start), l2 = e3.offsetAt(s2.range.end);
        if (!(l2 <= r2))
          throw new Error("Overlapping edit");
        n2 = n2.substring(0, a2) + s2.newText + n2.substring(l2, n2.length), r2 = a2;
      }
      return n2;
    };
  }(ci || (ci = {}));
  var di, hi = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(e3, t2) {
      this._content = e3.text, this._version = t2, this._lineOffsets = void 0;
    }, e2.prototype.getLineOffsets = function() {
      if (this._lineOffsets === void 0) {
        for (var e3 = [], t2 = this._content, n2 = true, i2 = 0; i2 < t2.length; i2++) {
          n2 && (e3.push(i2), n2 = false);
          var r2 = t2.charAt(i2);
          n2 = r2 === "\r" || r2 === "\n", r2 === "\r" && i2 + 1 < t2.length && t2.charAt(i2 + 1) === "\n" && i2++;
        }
        n2 && t2.length > 0 && e3.push(t2.length), this._lineOffsets = e3;
      }
      return this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, i2 = t2.length;
      if (i2 === 0)
        return an.create(0, e3);
      for (; n2 < i2; ) {
        var r2 = Math.floor((n2 + i2) / 2);
        t2[r2] > e3 ? i2 = r2 : n2 = r2 + 1;
      }
      var o2 = n2 - 1;
      return an.create(o2, e3 - t2[o2]);
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2;
  }();
  !function(e2) {
    var t2 = Object.prototype.toString;
    e2.defined = function(e3) {
      return e3 !== void 0;
    }, e2.undefined = function(e3) {
      return e3 === void 0;
    }, e2.boolean = function(e3) {
      return e3 === true || e3 === false;
    }, e2.string = function(e3) {
      return t2.call(e3) === "[object String]";
    }, e2.number = function(e3) {
      return t2.call(e3) === "[object Number]";
    }, e2.func = function(e3) {
      return t2.call(e3) === "[object Function]";
    }, e2.objectLiteral = function(e3) {
      return e3 !== null && typeof e3 == "object";
    }, e2.typedArray = function(e3, t3) {
      return Array.isArray(e3) && e3.every(t3);
    };
  }(di || (di = {}));
  var ui, pi, mi, gi = function() {
    function e2(e3, t2, n2, i2) {
      this._uri = e3, this._languageId = t2, this._version = n2, this._content = i2, this._lineOffsets = void 0;
    }
    return Object.defineProperty(e2.prototype, "uri", {get: function() {
      return this._uri;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "languageId", {get: function() {
      return this._languageId;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "version", {get: function() {
      return this._version;
    }, enumerable: true, configurable: true}), e2.prototype.getText = function(e3) {
      if (e3) {
        var t2 = this.offsetAt(e3.start), n2 = this.offsetAt(e3.end);
        return this._content.substring(t2, n2);
      }
      return this._content;
    }, e2.prototype.update = function(t2, n2) {
      for (var i2 = 0, r2 = t2; i2 < r2.length; i2++) {
        var o2 = r2[i2];
        if (e2.isIncremental(o2)) {
          var s2 = bi(o2.range), a2 = this.offsetAt(s2.start), l2 = this.offsetAt(s2.end);
          this._content = this._content.substring(0, a2) + o2.text + this._content.substring(l2, this._content.length);
          var c2 = Math.max(s2.start.line, 0), d2 = Math.max(s2.end.line, 0), h2 = this._lineOffsets, u2 = fi(o2.text, false, a2);
          if (d2 - c2 === u2.length)
            for (var p2 = 0, m2 = u2.length; p2 < m2; p2++)
              h2[p2 + c2 + 1] = u2[p2];
          else
            u2.length < 1e4 ? h2.splice.apply(h2, [c2 + 1, d2 - c2].concat(u2)) : this._lineOffsets = h2 = h2.slice(0, c2 + 1).concat(u2, h2.slice(d2 + 1));
          var g2 = o2.text.length - (l2 - a2);
          if (g2 !== 0)
            for (p2 = c2 + 1 + u2.length, m2 = h2.length; p2 < m2; p2++)
              h2[p2] = h2[p2] + g2;
        } else {
          if (!e2.isFull(o2))
            throw new Error("Unknown change event received");
          this._content = o2.text, this._lineOffsets = void 0;
        }
      }
      this._version = n2;
    }, e2.prototype.getLineOffsets = function() {
      return this._lineOffsets === void 0 && (this._lineOffsets = fi(this._content, true)), this._lineOffsets;
    }, e2.prototype.positionAt = function(e3) {
      e3 = Math.max(Math.min(e3, this._content.length), 0);
      var t2 = this.getLineOffsets(), n2 = 0, i2 = t2.length;
      if (i2 === 0)
        return {line: 0, character: e3};
      for (; n2 < i2; ) {
        var r2 = Math.floor((n2 + i2) / 2);
        t2[r2] > e3 ? i2 = r2 : n2 = r2 + 1;
      }
      var o2 = n2 - 1;
      return {line: o2, character: e3 - t2[o2]};
    }, e2.prototype.offsetAt = function(e3) {
      var t2 = this.getLineOffsets();
      if (e3.line >= t2.length)
        return this._content.length;
      if (e3.line < 0)
        return 0;
      var n2 = t2[e3.line], i2 = e3.line + 1 < t2.length ? t2[e3.line + 1] : this._content.length;
      return Math.max(Math.min(n2 + e3.character, i2), n2);
    }, Object.defineProperty(e2.prototype, "lineCount", {get: function() {
      return this.getLineOffsets().length;
    }, enumerable: true, configurable: true}), e2.isIncremental = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range !== void 0 && (t2.rangeLength === void 0 || typeof t2.rangeLength == "number");
    }, e2.isFull = function(e3) {
      var t2 = e3;
      return t2 != null && typeof t2.text == "string" && t2.range === void 0 && t2.rangeLength === void 0;
    }, e2;
  }();
  function fi(e2, t2, n2) {
    n2 === void 0 && (n2 = 0);
    for (var i2 = t2 ? [n2] : [], r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2.charCodeAt(r2);
      o2 !== 13 && o2 !== 10 || (o2 === 13 && r2 + 1 < e2.length && e2.charCodeAt(r2 + 1) === 10 && r2++, i2.push(n2 + r2 + 1));
    }
    return i2;
  }
  function bi(e2) {
    var t2 = e2.start, n2 = e2.end;
    return t2.line > n2.line || t2.line === n2.line && t2.character > n2.character ? {start: n2, end: t2} : e2;
  }
  function _i(e2) {
    var t2 = bi(e2.range);
    return t2 !== e2.range ? {newText: e2.newText, range: t2} : e2;
  }
  !function(e2) {
    e2.create = function(e3, t2, n2, i2) {
      return new gi(e3, t2, n2, i2);
    }, e2.update = function(e3, t2, n2) {
      if (e3 instanceof gi)
        return e3.update(t2, n2), e3;
      throw new Error("TextDocument.update: document must be created by TextDocument.create");
    }, e2.applyEdits = function(e3, t2) {
      for (var n2 = e3.getText(), i2 = 0, r2 = [], o2 = 0, s2 = function e4(t3, n3) {
        if (t3.length <= 1)
          return t3;
        var i3 = t3.length / 2 | 0, r3 = t3.slice(0, i3), o3 = t3.slice(i3);
        e4(r3, n3), e4(o3, n3);
        var s3 = 0, a3 = 0, l3 = 0;
        for (; s3 < r3.length && a3 < o3.length; ) {
          var c2 = n3(r3[s3], o3[a3]);
          t3[l3++] = c2 <= 0 ? r3[s3++] : o3[a3++];
        }
        for (; s3 < r3.length; )
          t3[l3++] = r3[s3++];
        for (; a3 < o3.length; )
          t3[l3++] = o3[a3++];
        return t3;
      }(t2.map(_i), function(e4, t3) {
        var n3 = e4.range.start.line - t3.range.start.line;
        return n3 === 0 ? e4.range.start.character - t3.range.start.character : n3;
      }); o2 < s2.length; o2++) {
        var a2 = s2[o2], l2 = e3.offsetAt(a2.range.start);
        if (l2 < i2)
          throw new Error("Overlapping edit");
        l2 > i2 && r2.push(n2.substring(i2, l2)), a2.newText.length && r2.push(a2.newText), i2 = e3.offsetAt(a2.range.end);
      }
      return r2.push(n2.substr(i2)), r2.join("");
    };
  }(ui || (ui = {})), (pi || (pi = {})).LATEST = {textDocument: {completion: {completionItem: {documentationFormat: [Fn.Markdown, Fn.PlainText]}}, hover: {contentFormat: [Fn.Markdown, Fn.PlainText]}}}, function(e2) {
    e2[e2.Unknown = 0] = "Unknown", e2[e2.File = 1] = "File", e2[e2.Directory = 2] = "Directory", e2[e2.SymbolicLink = 64] = "SymbolicLink";
  }(mi || (mi = {}));
  var vi = n(144), wi = "/".charCodeAt(0), yi = ".".charCodeAt(0);
  function Ci(e2) {
    var t2 = e2.lastIndexOf("/");
    return t2 !== -1 ? e2.substr(0, t2) : "";
  }
  function xi(e2) {
    for (var t2 = [], n2 = 0, i2 = e2; n2 < i2.length; n2++) {
      var r2 = i2[n2];
      r2.length === 0 || r2.length === 1 && r2.charCodeAt(0) === yi || (r2.length === 2 && r2.charCodeAt(0) === yi && r2.charCodeAt(1) === yi ? t2.pop() : t2.push(r2));
    }
    e2.length > 1 && e2[e2.length - 1].length === 0 && t2.push("");
    var o2 = t2.join("/");
    return e2[0].length === 0 && (o2 = "/" + o2), o2;
  }
  function Si(e2) {
    for (var t2 = [], n2 = 1; n2 < arguments.length; n2++)
      t2[n2 - 1] = arguments[n2];
    for (var i2 = vi.a.parse(e2), r2 = i2.path.split("/"), o2 = 0, s2 = t2; o2 < s2.length; o2++) {
      var a2 = s2[o2];
      r2.push.apply(r2, a2.split("/"));
    }
    return i2.with({path: xi(r2)}).toString();
  }
  var ki = function(e2, t2, n2, i2) {
    return new (n2 || (n2 = Promise))(function(r2, o2) {
      function s2(e3) {
        try {
          l2(i2.next(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function a2(e3) {
        try {
          l2(i2.throw(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function l2(e3) {
        var t3;
        e3.done ? r2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
          e4(t3);
        })).then(s2, a2);
      }
      l2((i2 = i2.apply(e2, t2 || [])).next());
    });
  }, Ei = function(e2, t2) {
    var n2, i2, r2, o2, s2 = {label: 0, sent: function() {
      if (1 & r2[0])
        throw r2[1];
      return r2[1];
    }, trys: [], ops: []};
    return o2 = {next: a2(0), throw: a2(1), return: a2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
      return this;
    }), o2;
    function a2(o3) {
      return function(a3) {
        return function(o4) {
          if (n2)
            throw new TypeError("Generator is already executing.");
          for (; s2; )
            try {
              if (n2 = 1, i2 && (r2 = 2 & o4[0] ? i2.return : o4[0] ? i2.throw || ((r2 = i2.return) && r2.call(i2), 0) : i2.next) && !(r2 = r2.call(i2, o4[1])).done)
                return r2;
              switch (i2 = 0, r2 && (o4 = [2 & o4[0], r2.value]), o4[0]) {
                case 0:
                case 1:
                  r2 = o4;
                  break;
                case 4:
                  return s2.label++, {value: o4[1], done: false};
                case 5:
                  s2.label++, i2 = o4[1], o4 = [0];
                  continue;
                case 7:
                  o4 = s2.ops.pop(), s2.trys.pop();
                  continue;
                default:
                  if (!(r2 = s2.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                    s2 = 0;
                    continue;
                  }
                  if (o4[0] === 3 && (!r2 || o4[1] > r2[0] && o4[1] < r2[3])) {
                    s2.label = o4[1];
                    break;
                  }
                  if (o4[0] === 6 && s2.label < r2[1]) {
                    s2.label = r2[1], r2 = o4;
                    break;
                  }
                  if (r2 && s2.label < r2[2]) {
                    s2.label = r2[2], s2.ops.push(o4);
                    break;
                  }
                  r2[2] && s2.ops.pop(), s2.trys.pop();
                  continue;
              }
              o4 = t2.call(e2, s2);
            } catch (e3) {
              o4 = [6, e3], i2 = 0;
            } finally {
              n2 = r2 = 0;
            }
          if (5 & o4[0])
            throw o4[1];
          return {value: o4[0] ? o4[1] : void 0, done: true};
        }([o3, a3]);
      };
    }
  }, Ti = function() {
    function e2(e3) {
      this.readDirectory = e3, this.literalCompletions = [], this.importCompletions = [];
    }
    return e2.prototype.onCssURILiteralValue = function(e3) {
      this.literalCompletions.push(e3);
    }, e2.prototype.onCssImportPath = function(e3) {
      this.importCompletions.push(e3);
    }, e2.prototype.computeCompletions = function(e3, t2) {
      return ki(this, void 0, void 0, function() {
        var n2, i2, r2, o2, s2, a2, l2, c2, d2, h2, u2, p2, m2, g2, f2, b2, _2;
        return Ei(this, function(v2) {
          switch (v2.label) {
            case 0:
              n2 = {items: [], isIncomplete: false}, i2 = 0, r2 = this.literalCompletions, v2.label = 1;
            case 1:
              return i2 < r2.length ? (o2 = r2[i2], s2 = o2.uriValue, (m2 = Ni(s2)) !== "." && m2 !== ".." ? [3, 2] : (n2.isIncomplete = true, [3, 4])) : [3, 5];
            case 2:
              return [4, this.providePathSuggestions(s2, o2.position, o2.range, e3, t2)];
            case 3:
              for (a2 = v2.sent(), l2 = 0, c2 = a2; l2 < c2.length; l2++)
                _2 = c2[l2], n2.items.push(_2);
              v2.label = 4;
            case 4:
              return i2++, [3, 1];
            case 5:
              d2 = 0, h2 = this.importCompletions, v2.label = 6;
            case 6:
              return d2 < h2.length ? (u2 = h2[d2], p2 = u2.pathValue, (m2 = Ni(p2)) !== "." && m2 !== ".." ? [3, 7] : (n2.isIncomplete = true, [3, 9])) : [3, 10];
            case 7:
              return [4, this.providePathSuggestions(p2, u2.position, u2.range, e3, t2)];
            case 8:
              for (g2 = v2.sent(), e3.languageId === "scss" && g2.forEach(function(e4) {
                Y(e4.label, "_") && Z(e4.label, ".scss") && (e4.textEdit ? e4.textEdit.newText = e4.label.slice(1, -5) : e4.label = e4.label.slice(1, -5));
              }), f2 = 0, b2 = g2; f2 < b2.length; f2++)
                _2 = b2[f2], n2.items.push(_2);
              v2.label = 9;
            case 9:
              return d2++, [3, 6];
            case 10:
              return [2, n2];
          }
        });
      });
    }, e2.prototype.providePathSuggestions = function(e3, t2, n2, i2, r2) {
      return ki(this, void 0, void 0, function() {
        var o2, s2, a2, l2, c2, d2, h2, u2, p2, m2, g2, f2, b2, _2, v2;
        return Ei(this, function(w2) {
          switch (w2.label) {
            case 0:
              if (o2 = Ni(e3), s2 = Y(e3, "'") || Y(e3, '"'), a2 = s2 ? o2.slice(0, t2.character - (n2.start.character + 1)) : o2.slice(0, t2.character - n2.start.character), l2 = i2.uri, c2 = s2 ? function(e4, t3, n3) {
                var i3 = Oi(e4.start, t3), r3 = Oi(e4.end, n3);
                return ln.create(i3, r3);
              }(n2, 1, -1) : n2, d2 = function(e4, t3, n3) {
                var i3, r3 = e4.lastIndexOf("/");
                if (r3 === -1)
                  i3 = n3;
                else {
                  var o3 = t3.slice(r3 + 1), s3 = Oi(n3.end, -o3.length), a3 = o3.indexOf(" "), l3 = void 0;
                  l3 = a3 !== -1 ? Oi(s3, a3) : n3.end, i3 = ln.create(s3, l3);
                }
                return i3;
              }(a2, o2, c2), h2 = a2.substring(0, a2.lastIndexOf("/") + 1), !(u2 = r2.resolveReference(h2 || ".", l2)))
                return [3, 4];
              w2.label = 1;
            case 1:
              return w2.trys.push([1, 3, , 4]), p2 = [], [4, this.readDirectory(u2)];
            case 2:
              for (m2 = w2.sent(), g2 = 0, f2 = m2; g2 < f2.length; g2++)
                b2 = f2[g2], _2 = b2[0], v2 = b2[1], _2.charCodeAt(0) === Li || v2 !== mi.Directory && Si(u2, _2) === l2 || p2.push(Ii(_2, v2 === mi.Directory, d2));
              return [2, p2];
            case 3:
              return w2.sent(), [3, 4];
            case 4:
              return [2, []];
          }
        });
      });
    }, e2;
  }(), Li = ".".charCodeAt(0);
  function Ni(e2) {
    return Y(e2, "'") || Y(e2, '"') ? e2.slice(1, -1) : e2;
  }
  function Ii(e2, t2, n2) {
    return t2 ? {label: Di(e2 += "/"), kind: zn.Folder, textEdit: Cn.replace(n2, Di(e2)), command: {title: "Suggest", command: "editor.action.triggerSuggest"}} : {label: Di(e2), kind: zn.File, textEdit: Cn.replace(n2, Di(e2))};
  }
  function Di(e2) {
    return e2.replace(/(\s|\(|\)|,|"|')/g, "\\$1");
  }
  function Oi(e2, t2) {
    return an.create(e2.line, e2.character + t2);
  }
  var Ai, Ri = function(e2, t2, n2, i2) {
    return new (n2 || (n2 = Promise))(function(r2, o2) {
      function s2(e3) {
        try {
          l2(i2.next(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function a2(e3) {
        try {
          l2(i2.throw(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function l2(e3) {
        var t3;
        e3.done ? r2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
          e4(t3);
        })).then(s2, a2);
      }
      l2((i2 = i2.apply(e2, t2 || [])).next());
    });
  }, Mi = function(e2, t2) {
    var n2, i2, r2, o2, s2 = {label: 0, sent: function() {
      if (1 & r2[0])
        throw r2[1];
      return r2[1];
    }, trys: [], ops: []};
    return o2 = {next: a2(0), throw: a2(1), return: a2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
      return this;
    }), o2;
    function a2(o3) {
      return function(a3) {
        return function(o4) {
          if (n2)
            throw new TypeError("Generator is already executing.");
          for (; s2; )
            try {
              if (n2 = 1, i2 && (r2 = 2 & o4[0] ? i2.return : o4[0] ? i2.throw || ((r2 = i2.return) && r2.call(i2), 0) : i2.next) && !(r2 = r2.call(i2, o4[1])).done)
                return r2;
              switch (i2 = 0, r2 && (o4 = [2 & o4[0], r2.value]), o4[0]) {
                case 0:
                case 1:
                  r2 = o4;
                  break;
                case 4:
                  return s2.label++, {value: o4[1], done: false};
                case 5:
                  s2.label++, i2 = o4[1], o4 = [0];
                  continue;
                case 7:
                  o4 = s2.ops.pop(), s2.trys.pop();
                  continue;
                default:
                  if (!(r2 = s2.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                    s2 = 0;
                    continue;
                  }
                  if (o4[0] === 3 && (!r2 || o4[1] > r2[0] && o4[1] < r2[3])) {
                    s2.label = o4[1];
                    break;
                  }
                  if (o4[0] === 6 && s2.label < r2[1]) {
                    s2.label = r2[1], r2 = o4;
                    break;
                  }
                  if (r2 && s2.label < r2[2]) {
                    s2.label = r2[2], s2.ops.push(o4);
                    break;
                  }
                  r2[2] && s2.ops.pop(), s2.trys.pop();
                  continue;
              }
              o4 = t2.call(e2, s2);
            } catch (e3) {
              o4 = [6, e3], i2 = 0;
            } finally {
              n2 = r2 = 0;
            }
          if (5 & o4[0])
            throw o4[1];
          return {value: o4[0] ? o4[1] : void 0, done: true};
        }([o3, a3]);
      };
    }
  }, Pi = wt(), Fi = Bn.Snippet;
  !function(e2) {
    e2.Enums = " ", e2.Normal = "d", e2.VendorPrefixed = "x", e2.Term = "y", e2.Variable = "z";
  }(Ai || (Ai = {}));
  var Wi = function() {
    function e2(e3, t2, n2) {
      e3 === void 0 && (e3 = null), this.variablePrefix = e3, this.lsOptions = t2, this.cssDataManager = n2, this.completionParticipants = [];
    }
    return e2.prototype.configure = function(e3) {
      this.settings = e3;
    }, e2.prototype.getSymbolContext = function() {
      return this.symbolContext || (this.symbolContext = new An(this.styleSheet)), this.symbolContext;
    }, e2.prototype.setCompletionParticipants = function(e3) {
      this.completionParticipants = e3 || [];
    }, e2.prototype.doComplete2 = function(e3, t2, n2, i2) {
      return Ri(this, void 0, void 0, function() {
        var r2, o2, s2, a2;
        return Mi(this, function(l2) {
          switch (l2.label) {
            case 0:
              if (!this.lsOptions.fileSystemProvider || !this.lsOptions.fileSystemProvider.readDirectory)
                return [2, this.doComplete(e3, t2, n2)];
              r2 = new Ti(this.lsOptions.fileSystemProvider.readDirectory), o2 = this.completionParticipants, this.completionParticipants = [r2].concat(o2), s2 = this.doComplete(e3, t2, n2), l2.label = 1;
            case 1:
              return l2.trys.push([1, , 3, 4]), [4, r2.computeCompletions(e3, i2)];
            case 2:
              return a2 = l2.sent(), [2, {isIncomplete: s2.isIncomplete || a2.isIncomplete, items: a2.items.concat(s2.items)}];
            case 3:
              return this.completionParticipants = o2, [7];
            case 4:
              return [2];
          }
        });
      });
    }, e2.prototype.doComplete = function(e3, t2, n2) {
      this.offset = e3.offsetAt(t2), this.position = t2, this.currentWord = function(e4, t3) {
        var n3 = t3 - 1, i3 = e4.getText();
        for (; n3 >= 0 && ' 	\n\r":{[()]},*>+'.indexOf(i3.charAt(n3)) === -1; )
          n3--;
        return i3.substring(n3 + 1, t3);
      }(e3, this.offset), this.defaultReplaceRange = ln.create(an.create(this.position.line, this.position.character - this.currentWord.length), this.position), this.textDocument = e3, this.styleSheet = n2;
      try {
        var i2 = {isIncomplete: false, items: []};
        this.nodePath = ie(this.styleSheet, this.offset);
        for (var r2 = this.nodePath.length - 1; r2 >= 0; r2--) {
          var o2 = this.nodePath[r2];
          if (o2 instanceof ve)
            this.getCompletionsForDeclarationProperty(o2.getParent(), i2);
          else if (o2 instanceof Ge)
            o2.parent instanceof rt ? this.getVariableProposals(null, i2) : this.getCompletionsForExpression(o2, i2);
          else if (o2 instanceof pe) {
            var s2 = o2.findAParent(J.ExtendsReference, J.Ruleset);
            if (s2)
              if (s2.type === J.ExtendsReference)
                this.getCompletionsForExtendsReference(s2, o2, i2);
              else {
                var a2 = s2;
                this.getCompletionsForSelector(a2, a2 && a2.isNested(), i2);
              }
          } else if (o2 instanceof Ce)
            this.getCompletionsForFunctionArgument(o2, o2.getParent(), i2);
          else if (o2 instanceof ce)
            this.getCompletionsForDeclarations(o2, i2);
          else if (o2 instanceof it)
            this.getCompletionsForVariableDeclaration(o2, i2);
          else if (o2 instanceof he)
            this.getCompletionsForRuleSet(o2, i2);
          else if (o2 instanceof rt)
            this.getCompletionsForInterpolation(o2, i2);
          else if (o2 instanceof Le)
            this.getCompletionsForFunctionDeclaration(o2, i2);
          else if (o2 instanceof ct)
            this.getCompletionsForMixinReference(o2, i2);
          else if (o2 instanceof we)
            this.getCompletionsForFunctionArgument(null, o2, i2);
          else if (o2 instanceof je)
            this.getCompletionsForSupports(o2, i2);
          else if (o2 instanceof qe)
            this.getCompletionsForSupportsCondition(o2, i2);
          else if (o2 instanceof st)
            this.getCompletionsForExtendsReference(o2, null, i2);
          else if (o2.type === J.URILiteral)
            this.getCompletionForUriLiteralValue(o2, i2);
          else if (o2.parent === null)
            this.getCompletionForTopLevel(i2);
          else {
            if (o2.type !== J.StringLiteral || !this.isImportPathParent(o2.parent.type))
              continue;
            this.getCompletionForImportPath(o2, i2);
          }
          if (i2.items.length > 0 || this.offset > o2.offset)
            return this.finalize(i2);
        }
        return this.getCompletionsForStylesheet(i2), i2.items.length === 0 && this.variablePrefix && this.currentWord.indexOf(this.variablePrefix) === 0 && this.getVariableProposals(null, i2), this.finalize(i2);
      } finally {
        this.position = null, this.currentWord = null, this.textDocument = null, this.styleSheet = null, this.symbolContext = null, this.defaultReplaceRange = null, this.nodePath = null;
      }
    }, e2.prototype.isImportPathParent = function(e3) {
      return e3 === J.Import;
    }, e2.prototype.finalize = function(e3) {
      return e3;
    }, e2.prototype.findInNodePath = function() {
      for (var e3 = [], t2 = 0; t2 < arguments.length; t2++)
        e3[t2] = arguments[t2];
      for (var n2 = this.nodePath.length - 1; n2 >= 0; n2--) {
        var i2 = this.nodePath[n2];
        if (e3.indexOf(i2.type) !== -1)
          return i2;
      }
      return null;
    }, e2.prototype.getCompletionsForDeclarationProperty = function(e3, t2) {
      return this.getPropertyProposals(e3, t2);
    }, e2.prototype.getPropertyProposals = function(e3, t2) {
      var n2 = this, i2 = this.isTriggerPropertyValueCompletionEnabled, r2 = this.isCompletePropertyWithSemicolonEnabled;
      return this.cssDataManager.getProperties().forEach(function(o2) {
        var s2, a2, l2 = false;
        e3 ? (s2 = n2.getCompletionRange(e3.getProperty()), a2 = o2.name, tn(e3.colonPosition) || (a2 += ": ", l2 = true)) : (s2 = n2.getCompletionRange(null), a2 = o2.name + ": ", l2 = true), !e3 && r2 && (a2 += "$0;"), e3 && !e3.semicolonPosition && r2 && n2.offset >= n2.textDocument.offsetAt(s2.end) && (a2 += "$0;");
        var c2 = {label: o2.name, documentation: Et(o2, n2.doesSupportMarkdown()), tags: zi(o2) ? [jn.Deprecated] : [], textEdit: Cn.replace(s2, a2), insertTextFormat: Bn.Snippet, kind: zn.Property};
        o2.restrictions || (l2 = false), i2 && l2 && (c2.command = {title: "Suggest", command: "editor.action.triggerSuggest"});
        var d2 = (255 - (typeof o2.relevance == "number" ? Math.min(Math.max(o2.relevance, 0), 99) : 50)).toString(16), h2 = Y(o2.name, "-") ? Ai.VendorPrefixed : Ai.Normal;
        c2.sortText = h2 + "_" + d2, t2.items.push(c2);
      }), this.completionParticipants.forEach(function(e4) {
        e4.onCssProperty && e4.onCssProperty({propertyName: n2.currentWord, range: n2.defaultReplaceRange});
      }), t2;
    }, Object.defineProperty(e2.prototype, "isTriggerPropertyValueCompletionEnabled", {get: function() {
      return !this.settings || !this.settings.completion || this.settings.completion.triggerPropertyValueCompletion === void 0 || this.settings.completion.triggerPropertyValueCompletion;
    }, enumerable: true, configurable: true}), Object.defineProperty(e2.prototype, "isCompletePropertyWithSemicolonEnabled", {get: function() {
      return !this.settings || !this.settings.completion || this.settings.completion.completePropertyWithSemicolon === void 0 || this.settings.completion.completePropertyWithSemicolon;
    }, enumerable: true, configurable: true}), e2.prototype.getCompletionsForDeclarationValue = function(e3, t2) {
      for (var n2 = this, i2 = e3.getFullPropertyName(), r2 = this.cssDataManager.getProperty(i2), o2 = e3.getValue() || null; o2 && o2.hasChildren(); )
        o2 = o2.findChildAtOffset(this.offset, false);
      if (this.completionParticipants.forEach(function(e4) {
        e4.onCssPropertyValue && e4.onCssPropertyValue({propertyName: i2, propertyValue: n2.currentWord, range: n2.getCompletionRange(o2)});
      }), r2) {
        if (r2.restrictions)
          for (var s2 = 0, a2 = r2.restrictions; s2 < a2.length; s2++) {
            switch (a2[s2]) {
              case "color":
                this.getColorProposals(r2, o2, t2);
                break;
              case "position":
                this.getPositionProposals(r2, o2, t2);
                break;
              case "repeat":
                this.getRepeatStyleProposals(r2, o2, t2);
                break;
              case "line-style":
                this.getLineStyleProposals(r2, o2, t2);
                break;
              case "line-width":
                this.getLineWidthProposals(r2, o2, t2);
                break;
              case "geometry-box":
                this.getGeometryBoxProposals(r2, o2, t2);
                break;
              case "box":
                this.getBoxProposals(r2, o2, t2);
                break;
              case "image":
                this.getImageProposals(r2, o2, t2);
                break;
              case "timing-function":
                this.getTimingFunctionProposals(r2, o2, t2);
                break;
              case "shape":
                this.getBasicShapeProposals(r2, o2, t2);
            }
          }
        this.getValueEnumProposals(r2, o2, t2), this.getCSSWideKeywordProposals(r2, o2, t2), this.getUnitProposals(r2, o2, t2);
      } else
        for (var l2 = 0, c2 = function(e4, t3) {
          var n3 = t3.getFullPropertyName(), i3 = new Bi();
          function r3(e5) {
            return (e5 instanceof ae || e5 instanceof nt || e5 instanceof Qe) && i3.add(e5.getText()), true;
          }
          return e4.accept(function(e5) {
            if (e5 instanceof _e && e5 !== t3 && function(e6) {
              var t4 = e6.getFullPropertyName();
              return n3 === t4;
            }(e5)) {
              var i4 = e5.getValue();
              i4 && i4.accept(r3);
            }
            return true;
          }), i3;
        }(this.styleSheet, e3).getEntries(); l2 < c2.length; l2++) {
          var d2 = c2[l2];
          t2.items.push({label: d2, textEdit: Cn.replace(this.getCompletionRange(o2), d2), kind: zn.Value});
        }
      return this.getVariableProposals(o2, t2), this.getTermProposals(r2, o2, t2), t2;
    }, e2.prototype.getValueEnumProposals = function(e3, t2, n2) {
      if (e3.values)
        for (var i2 = 0, r2 = e3.values; i2 < r2.length; i2++) {
          var o2 = r2[i2], s2 = o2.name, a2 = void 0;
          if (Z(s2, ")")) {
            var l2 = s2.lastIndexOf("(");
            l2 !== -1 && (s2 = s2.substr(0, l2) + "($1)", a2 = Fi);
          }
          var c2 = Ai.Enums;
          Y(o2.name, "-") && (c2 += Ai.VendorPrefixed);
          var d2 = {label: o2.name, documentation: Et(o2, this.doesSupportMarkdown()), tags: zi(e3) ? [jn.Deprecated] : [], textEdit: Cn.replace(this.getCompletionRange(t2), s2), sortText: c2, kind: zn.Value, insertTextFormat: a2};
          n2.items.push(d2);
        }
      return n2;
    }, e2.prototype.getCSSWideKeywordProposals = function(e3, t2, n2) {
      for (var i2 in $t)
        n2.items.push({label: i2, documentation: $t[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getCompletionsForInterpolation = function(e3, t2) {
      return this.offset >= e3.offset + 2 && this.getVariableProposals(null, t2), t2;
    }, e2.prototype.getVariableProposals = function(e3, t2) {
      for (var n2 = 0, i2 = this.getSymbolContext().findSymbolsAtOffset(this.offset, ee.Variable); n2 < i2.length; n2++) {
        var r2 = i2[n2], o2 = Y(r2.name, "--") ? "var(" + r2.name + ")" : r2.name, s2 = {label: r2.name, documentation: r2.value ? X(r2.value) : r2.value, textEdit: Cn.replace(this.getCompletionRange(e3), o2), kind: zn.Variable, sortText: Ai.Variable};
        if (typeof s2.documentation == "string" && Ui(s2.documentation) && (s2.kind = zn.Color), r2.node.type === J.FunctionParameter) {
          var a2 = r2.node.getParent();
          a2.type === J.MixinDeclaration && (s2.detail = Pi("completion.argument", "argument from '{0}'", a2.getName()));
        }
        t2.items.push(s2);
      }
      return t2;
    }, e2.prototype.getVariableProposalsForCSSVarFunction = function(e3) {
      for (var t2 = this.getSymbolContext().findSymbolsAtOffset(this.offset, ee.Variable), n2 = 0, i2 = t2 = t2.filter(function(e4) {
        return Y(e4.name, "--");
      }); n2 < i2.length; n2++) {
        var r2 = i2[n2], o2 = {label: r2.name, documentation: r2.value ? X(r2.value) : r2.value, textEdit: Cn.replace(this.getCompletionRange(null), r2.name), kind: zn.Variable};
        typeof o2.documentation == "string" && Ui(o2.documentation) && (o2.kind = zn.Color), e3.items.push(o2);
      }
      return e3;
    }, e2.prototype.getUnitProposals = function(e3, t2, n2) {
      var i2 = "0";
      if (this.currentWord.length > 0) {
        var r2 = this.currentWord.match(/^-?\d[\.\d+]*/);
        r2 && (i2 = r2[0], n2.isIncomplete = i2.length === this.currentWord.length);
      } else
        this.currentWord.length === 0 && (n2.isIncomplete = true);
      if (t2 && t2.parent && t2.parent.type === J.Term && (t2 = t2.getParent()), e3.restrictions)
        for (var o2 = 0, s2 = e3.restrictions; o2 < s2.length; o2++) {
          var a2 = s2[o2], l2 = Zt[a2];
          if (l2)
            for (var c2 = 0, d2 = l2; c2 < d2.length; c2++) {
              var h2 = i2 + d2[c2];
              n2.items.push({label: h2, textEdit: Cn.replace(this.getCompletionRange(t2), h2), kind: zn.Unit});
            }
        }
      return n2;
    }, e2.prototype.getCompletionRange = function(e3) {
      if (e3 && e3.offset <= this.offset && this.offset <= e3.end) {
        var t2 = e3.end !== -1 ? this.textDocument.positionAt(e3.end) : this.position, n2 = this.textDocument.positionAt(e3.offset);
        if (n2.line === t2.line)
          return ln.create(n2, t2);
      }
      return this.defaultReplaceRange;
    }, e2.prototype.getColorProposals = function(e3, t2, n2) {
      for (var i2 in At)
        n2.items.push({label: i2, documentation: At[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Color});
      for (var i2 in Rt)
        n2.items.push({label: i2, documentation: Rt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      var r2 = new Bi();
      this.styleSheet.acceptVisitor(new Vi(r2, this.offset));
      for (var o2 = 0, s2 = r2.getEntries(); o2 < s2.length; o2++) {
        i2 = s2[o2];
        n2.items.push({label: i2, textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Color});
      }
      for (var a2 = function(e4) {
        var i3 = 1, r3 = e4.func.replace(/\[?\$(\w+)\]?/g, function(e5, t3) {
          return "${" + i3++ + ":" + t3 + "}";
        });
        n2.items.push({label: e4.func.substr(0, e4.func.indexOf("(")), detail: e4.func, documentation: e4.desc, textEdit: Cn.replace(l2.getCompletionRange(t2), r3), insertTextFormat: Fi, kind: zn.Function});
      }, l2 = this, c2 = 0, d2 = Ot; c2 < d2.length; c2++) {
        a2(d2[c2]);
      }
      return n2;
    }, e2.prototype.getPositionProposals = function(e3, t2, n2) {
      for (var i2 in Bt)
        n2.items.push({label: i2, documentation: Bt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getRepeatStyleProposals = function(e3, t2, n2) {
      for (var i2 in jt)
        n2.items.push({label: i2, documentation: jt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getLineStyleProposals = function(e3, t2, n2) {
      for (var i2 in Vt)
        n2.items.push({label: i2, documentation: Vt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getLineWidthProposals = function(e3, t2, n2) {
      for (var i2 = 0, r2 = Ut; i2 < r2.length; i2++) {
        var o2 = r2[i2];
        n2.items.push({label: o2, textEdit: Cn.replace(this.getCompletionRange(t2), o2), kind: zn.Value});
      }
      return n2;
    }, e2.prototype.getGeometryBoxProposals = function(e3, t2, n2) {
      for (var i2 in qt)
        n2.items.push({label: i2, documentation: qt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getBoxProposals = function(e3, t2, n2) {
      for (var i2 in Ht)
        n2.items.push({label: i2, documentation: Ht[i2], textEdit: Cn.replace(this.getCompletionRange(t2), i2), kind: zn.Value});
      return n2;
    }, e2.prototype.getImageProposals = function(e3, t2, n2) {
      for (var i2 in Kt) {
        var r2 = ji(i2);
        n2.items.push({label: i2, documentation: Kt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), r2), kind: zn.Function, insertTextFormat: i2 !== r2 ? Fi : void 0});
      }
      return n2;
    }, e2.prototype.getTimingFunctionProposals = function(e3, t2, n2) {
      for (var i2 in Gt) {
        var r2 = ji(i2);
        n2.items.push({label: i2, documentation: Gt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), r2), kind: zn.Function, insertTextFormat: i2 !== r2 ? Fi : void 0});
      }
      return n2;
    }, e2.prototype.getBasicShapeProposals = function(e3, t2, n2) {
      for (var i2 in Yt) {
        var r2 = ji(i2);
        n2.items.push({label: i2, documentation: Yt[i2], textEdit: Cn.replace(this.getCompletionRange(t2), r2), kind: zn.Function, insertTextFormat: i2 !== r2 ? Fi : void 0});
      }
      return n2;
    }, e2.prototype.getCompletionsForStylesheet = function(e3) {
      var t2 = this.styleSheet.findFirstChildBeforeOffset(this.offset);
      return t2 ? t2 instanceof he ? this.getCompletionsForRuleSet(t2, e3) : t2 instanceof je ? this.getCompletionsForSupports(t2, e3) : e3 : this.getCompletionForTopLevel(e3);
    }, e2.prototype.getCompletionForTopLevel = function(e3) {
      var t2 = this;
      return this.cssDataManager.getAtDirectives().forEach(function(n2) {
        e3.items.push({label: n2.name, textEdit: Cn.replace(t2.getCompletionRange(null), n2.name), documentation: Et(n2, t2.doesSupportMarkdown()), tags: zi(n2) ? [jn.Deprecated] : [], kind: zn.Keyword});
      }), this.getCompletionsForSelector(null, false, e3), e3;
    }, e2.prototype.getCompletionsForRuleSet = function(e3, t2) {
      var n2 = e3.getDeclarations();
      return n2 && n2.endsWith("}") && this.offset >= n2.end ? this.getCompletionForTopLevel(t2) : !n2 || this.offset <= n2.offset ? this.getCompletionsForSelector(e3, e3.isNested(), t2) : this.getCompletionsForDeclarations(e3.getDeclarations(), t2);
    }, e2.prototype.getCompletionsForSelector = function(e3, t2, n2) {
      var i2 = this, r2 = this.findInNodePath(J.PseudoSelector, J.IdentifierSelector, J.ClassSelector, J.ElementNameSelector);
      if (!r2 && this.offset - this.currentWord.length > 0 && this.textDocument.getText()[this.offset - this.currentWord.length - 1] === ":" && (this.currentWord = ":" + this.currentWord, this.defaultReplaceRange = ln.create(an.create(this.position.line, this.position.character - this.currentWord.length), this.position)), this.cssDataManager.getPseudoClasses().forEach(function(e4) {
        var t3 = ji(e4.name), o3 = {label: e4.name, textEdit: Cn.replace(i2.getCompletionRange(r2), t3), documentation: Et(e4, i2.doesSupportMarkdown()), tags: zi(e4) ? [jn.Deprecated] : [], kind: zn.Function, insertTextFormat: e4.name !== t3 ? Fi : void 0};
        Y(e4.name, ":-") && (o3.sortText = Ai.VendorPrefixed), n2.items.push(o3);
      }), this.cssDataManager.getPseudoElements().forEach(function(e4) {
        var t3 = ji(e4.name), o3 = {label: e4.name, textEdit: Cn.replace(i2.getCompletionRange(r2), t3), documentation: Et(e4, i2.doesSupportMarkdown()), tags: zi(e4) ? [jn.Deprecated] : [], kind: zn.Function, insertTextFormat: e4.name !== t3 ? Fi : void 0};
        Y(e4.name, "::-") && (o3.sortText = Ai.VendorPrefixed), n2.items.push(o3);
      }), !t2) {
        for (var o2 = 0, s2 = Xt; o2 < s2.length; o2++) {
          var a2 = s2[o2];
          n2.items.push({label: a2, textEdit: Cn.replace(this.getCompletionRange(r2), a2), kind: zn.Keyword});
        }
        for (var l2 = 0, c2 = Qt; l2 < c2.length; l2++) {
          a2 = c2[l2];
          n2.items.push({label: a2, textEdit: Cn.replace(this.getCompletionRange(r2), a2), kind: zn.Keyword});
        }
      }
      var d2 = {};
      d2[this.currentWord] = true;
      var h2 = this.textDocument.getText();
      if (this.styleSheet.accept(function(e4) {
        if (e4.type === J.SimpleSelector && e4.length > 0) {
          var t3 = h2.substr(e4.offset, e4.length);
          return t3.charAt(0) !== "." || d2[t3] || (d2[t3] = true, n2.items.push({label: t3, textEdit: Cn.replace(i2.getCompletionRange(r2), t3), kind: zn.Keyword})), false;
        }
        return true;
      }), e3 && e3.isNested()) {
        var u2 = e3.getSelectors().findFirstChildBeforeOffset(this.offset);
        u2 && e3.getSelectors().getChildren().indexOf(u2) === 0 && this.getPropertyProposals(null, n2);
      }
      return n2;
    }, e2.prototype.getCompletionsForDeclarations = function(e3, t2) {
      if (!e3 || this.offset === e3.offset)
        return t2;
      var n2 = e3.findFirstChildBeforeOffset(this.offset);
      if (!n2)
        return this.getCompletionsForDeclarationProperty(null, t2);
      if (n2 instanceof ge) {
        var i2 = n2;
        if (!tn(i2.colonPosition) || this.offset <= i2.colonPosition)
          return this.getCompletionsForDeclarationProperty(i2, t2);
        if (tn(i2.semicolonPosition) && i2.semicolonPosition < this.offset)
          return this.offset === i2.semicolonPosition + 1 ? t2 : this.getCompletionsForDeclarationProperty(null, t2);
        if (i2 instanceof _e)
          return this.getCompletionsForDeclarationValue(i2, t2);
      } else
        n2 instanceof st ? this.getCompletionsForExtendsReference(n2, null, t2) : (this.currentWord && this.currentWord[0] === "@" || n2 instanceof he) && this.getCompletionsForDeclarationProperty(null, t2);
      return t2;
    }, e2.prototype.getCompletionsForVariableDeclaration = function(e3, t2) {
      return this.offset && tn(e3.colonPosition) && this.offset > e3.colonPosition && this.getVariableProposals(e3.getValue(), t2), t2;
    }, e2.prototype.getCompletionsForExpression = function(e3, t2) {
      var n2 = e3.getParent();
      if (n2 instanceof Ce)
        return this.getCompletionsForFunctionArgument(n2, n2.getParent(), t2), t2;
      var i2 = e3.findParent(J.Declaration);
      if (!i2)
        return this.getTermProposals(void 0, null, t2), t2;
      var r2 = e3.findChildAtOffset(this.offset, true);
      return r2 ? r2 instanceof nt || r2 instanceof ae ? this.getCompletionsForDeclarationValue(i2, t2) : t2 : this.getCompletionsForDeclarationValue(i2, t2);
    }, e2.prototype.getCompletionsForFunctionArgument = function(e3, t2, n2) {
      var i2 = t2.getIdentifier();
      return i2 && i2.matches("var") && (t2.getArguments().hasChildren() && t2.getArguments().getChild(0) !== e3 || this.getVariableProposalsForCSSVarFunction(n2)), n2;
    }, e2.prototype.getCompletionsForFunctionDeclaration = function(e3, t2) {
      var n2 = e3.getDeclarations();
      return n2 && this.offset > n2.offset && this.offset < n2.end && this.getTermProposals(void 0, null, t2), t2;
    }, e2.prototype.getCompletionsForMixinReference = function(e3, t2) {
      for (var n2 = this, i2 = 0, r2 = this.getSymbolContext().findSymbolsAtOffset(this.offset, ee.Mixin); i2 < r2.length; i2++) {
        var o2 = r2[i2];
        o2.node instanceof dt && t2.items.push(this.makeTermProposal(o2, o2.node.getParameters(), null));
      }
      var s2 = e3.getIdentifier() || null;
      return this.completionParticipants.forEach(function(e4) {
        e4.onCssMixinReference && e4.onCssMixinReference({mixinName: n2.currentWord, range: n2.getCompletionRange(s2)});
      }), t2;
    }, e2.prototype.getTermProposals = function(e3, t2, n2) {
      for (var i2 = 0, r2 = this.getSymbolContext().findSymbolsAtOffset(this.offset, ee.Function); i2 < r2.length; i2++) {
        var o2 = r2[i2];
        o2.node instanceof Le && n2.items.push(this.makeTermProposal(o2, o2.node.getParameters(), t2));
      }
      return n2;
    }, e2.prototype.makeTermProposal = function(e3, t2, n2) {
      e3.node;
      var i2 = t2.getChildren().map(function(e4) {
        return e4 instanceof ye ? e4.getName() : e4.getText();
      }), r2 = e3.name + "(" + i2.map(function(e4, t3) {
        return "${" + (t3 + 1) + ":" + e4 + "}";
      }).join(", ") + ")";
      return {label: e3.name, detail: e3.name + "(" + i2.join(", ") + ")", textEdit: Cn.replace(this.getCompletionRange(n2), r2), insertTextFormat: Fi, kind: zn.Function, sortText: Ai.Term};
    }, e2.prototype.getCompletionsForSupportsCondition = function(e3, t2) {
      var n2 = e3.findFirstChildBeforeOffset(this.offset);
      if (n2) {
        if (n2 instanceof _e)
          return !tn(n2.colonPosition) || this.offset <= n2.colonPosition ? this.getCompletionsForDeclarationProperty(n2, t2) : this.getCompletionsForDeclarationValue(n2, t2);
        if (n2 instanceof qe)
          return this.getCompletionsForSupportsCondition(n2, t2);
      }
      return tn(e3.lParent) && this.offset > e3.lParent && (!tn(e3.rParent) || this.offset <= e3.rParent) ? this.getCompletionsForDeclarationProperty(null, t2) : t2;
    }, e2.prototype.getCompletionsForSupports = function(e3, t2) {
      var n2 = e3.getDeclarations();
      if (!n2 || this.offset <= n2.offset) {
        var i2 = e3.findFirstChildBeforeOffset(this.offset);
        return i2 instanceof qe ? this.getCompletionsForSupportsCondition(i2, t2) : t2;
      }
      return this.getCompletionForTopLevel(t2);
    }, e2.prototype.getCompletionsForExtendsReference = function(e3, t2, n2) {
      return n2;
    }, e2.prototype.getCompletionForUriLiteralValue = function(e3, t2) {
      var n2, i2, r2;
      if (e3.hasChildren()) {
        var o2 = e3.getChild(0);
        n2 = o2.getText(), i2 = this.position, r2 = this.getCompletionRange(o2);
      } else {
        n2 = "", i2 = this.position;
        var s2 = this.textDocument.positionAt(e3.offset + "url(".length);
        r2 = ln.create(s2, s2);
      }
      return this.completionParticipants.forEach(function(e4) {
        e4.onCssURILiteralValue && e4.onCssURILiteralValue({uriValue: n2, position: i2, range: r2});
      }), t2;
    }, e2.prototype.getCompletionForImportPath = function(e3, t2) {
      var n2 = this;
      return this.completionParticipants.forEach(function(t3) {
        t3.onCssImportPath && t3.onCssImportPath({pathValue: e3.getText(), position: n2.position, range: n2.getCompletionRange(e3)});
      }), t2;
    }, e2.prototype.doesSupportMarkdown = function() {
      var e3, t2, n2;
      if (!tn(this.supportsMarkdown)) {
        if (!tn(this.lsOptions.clientCapabilities))
          return this.supportsMarkdown = true, this.supportsMarkdown;
        var i2 = (n2 = (t2 = (e3 = this.lsOptions.clientCapabilities.textDocument) === null || e3 === void 0 ? void 0 : e3.completion) === null || t2 === void 0 ? void 0 : t2.completionItem) === null || n2 === void 0 ? void 0 : n2.documentationFormat;
        this.supportsMarkdown = Array.isArray(i2) && i2.indexOf(Fn.Markdown) !== -1;
      }
      return this.supportsMarkdown;
    }, e2;
  }();
  function zi(e2) {
    return !(!e2.status || e2.status !== "nonstandard" && e2.status !== "obsolete");
  }
  var Bi = function() {
    function e2() {
      this.entries = {};
    }
    return e2.prototype.add = function(e3) {
      this.entries[e3] = true;
    }, e2.prototype.getEntries = function() {
      return Object.keys(this.entries);
    }, e2;
  }();
  function ji(e2) {
    return e2.replace(/\(\)$/, "($1)");
  }
  var Vi = function() {
    function e2(e3, t2) {
      this.entries = e3, this.currentOffset = t2;
    }
    return e2.prototype.visitNode = function(e3) {
      return (e3 instanceof Qe || e3 instanceof we && Pt(e3)) && (this.currentOffset < e3.offset || e3.end < this.currentOffset) && this.entries.add(e3.getText()), true;
    }, e2;
  }();
  function Ui(e2) {
    return e2.toLowerCase() in At || /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(e2);
  }
  var Hi, qi = function() {
    var e2 = function(t2, n2) {
      return (e2 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
        e3.__proto__ = t3;
      } || function(e3, t3) {
        for (var n3 in t3)
          t3.hasOwnProperty(n3) && (e3[n3] = t3[n3]);
      })(t2, n2);
    };
    return function(t2, n2) {
      function i2() {
        this.constructor = t2;
      }
      e2(t2, n2), t2.prototype = n2 === null ? Object.create(n2) : (i2.prototype = n2.prototype, new i2());
    };
  }(), $i = wt(), Ki = function() {
    function e2() {
      this.parent = null, this.children = null, this.attributes = null;
    }
    return e2.prototype.findAttribute = function(e3) {
      if (this.attributes)
        for (var t2 = 0, n2 = this.attributes; t2 < n2.length; t2++) {
          var i2 = n2[t2];
          if (i2.name === e3)
            return i2.value;
        }
      return null;
    }, e2.prototype.addChild = function(t2) {
      t2 instanceof e2 && (t2.parent = this), this.children || (this.children = []), this.children.push(t2);
    }, e2.prototype.append = function(e3) {
      if (this.attributes) {
        var t2 = this.attributes[this.attributes.length - 1];
        t2.value = t2.value + e3;
      }
    }, e2.prototype.prepend = function(e3) {
      if (this.attributes) {
        var t2 = this.attributes[0];
        t2.value = e3 + t2.value;
      }
    }, e2.prototype.findRoot = function() {
      for (var e3 = this; e3.parent && !(e3.parent instanceof Gi); )
        e3 = e3.parent;
      return e3;
    }, e2.prototype.removeChild = function(e3) {
      if (this.children) {
        var t2 = this.children.indexOf(e3);
        if (t2 !== -1)
          return this.children.splice(t2, 1), true;
      }
      return false;
    }, e2.prototype.addAttr = function(e3, t2) {
      this.attributes || (this.attributes = []);
      for (var n2 = 0, i2 = this.attributes; n2 < i2.length; n2++) {
        var r2 = i2[n2];
        if (r2.name === e3)
          return void (r2.value += " " + t2);
      }
      this.attributes.push({name: e3, value: t2});
    }, e2.prototype.clone = function(t2) {
      t2 === void 0 && (t2 = true);
      var n2 = new e2();
      if (this.attributes) {
        n2.attributes = [];
        for (var i2 = 0, r2 = this.attributes; i2 < r2.length; i2++) {
          var o2 = r2[i2];
          n2.addAttr(o2.name, o2.value);
        }
      }
      if (t2 && this.children) {
        n2.children = [];
        for (var s2 = 0; s2 < this.children.length; s2++)
          n2.addChild(this.children[s2].clone());
      }
      return n2;
    }, e2.prototype.cloneWithParent = function() {
      var e3 = this.clone(false);
      !this.parent || this.parent instanceof Gi || this.parent.cloneWithParent().addChild(e3);
      return e3;
    }, e2;
  }(), Gi = function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return qi(t2, e2), t2;
  }(Ki), Yi = function(e2) {
    function t2(t3) {
      var n2 = e2.call(this) || this;
      return n2.addAttr("name", t3), n2;
    }
    return qi(t2, e2), t2;
  }(Ki), Zi = function() {
    function e2(e3) {
      this.quote = e3, this.result = [];
    }
    return e2.prototype.print = function(e3) {
      return this.result = [], e3 instanceof Gi ? e3.children && this.doPrint(e3.children, 0) : this.doPrint([e3], 0), [{language: "html", value: this.result.join("\n")}];
    }, e2.prototype.doPrint = function(e3, t2) {
      for (var n2 = 0, i2 = e3; n2 < i2.length; n2++) {
        var r2 = i2[n2];
        this.doPrintElement(r2, t2), r2.children && this.doPrint(r2.children, t2 + 1);
      }
    }, e2.prototype.writeLine = function(e3, t2) {
      var n2 = new Array(e3 + 1).join("  ");
      this.result.push(n2 + t2);
    }, e2.prototype.doPrintElement = function(e3, t2) {
      var n2 = e3.findAttribute("name");
      if (e3 instanceof Yi || n2 === "\u2026")
        this.writeLine(t2, n2);
      else {
        var i2 = ["<"];
        if (n2 ? i2.push(n2) : i2.push("element"), e3.attributes)
          for (var r2 = 0, o2 = e3.attributes; r2 < o2.length; r2++) {
            var s2 = o2[r2];
            if (s2.name !== "name") {
              i2.push(" "), i2.push(s2.name);
              var a2 = s2.value;
              a2 && (i2.push("="), i2.push(Hi.ensure(a2, this.quote)));
            }
          }
        i2.push(">"), this.writeLine(t2, i2.join(""));
      }
    }, e2;
  }();
  !function(e2) {
    function t2(e3) {
      var t3 = e3.match(/^['"](.*)["']$/);
      return t3 ? t3[1] : e3;
    }
    e2.ensure = function(e3, n2) {
      return n2 + t2(e3) + n2;
    }, e2.remove = t2;
  }(Hi || (Hi = {}));
  var Xi = function() {
    this.id = 0, this.attr = 0, this.tag = 0;
  };
  function Qi(e2, t2) {
    for (var n2 = new Ki(), i2 = 0, r2 = e2.getChildren(); i2 < r2.length; i2++) {
      var o2 = r2[i2];
      switch (o2.type) {
        case J.SelectorCombinator:
          if (t2) {
            var s2 = o2.getText().split("&");
            if (s2.length === 1) {
              n2.addAttr("name", s2[0]);
              break;
            }
            if (n2 = t2.cloneWithParent(), s2[0])
              n2.findRoot().prepend(s2[0]);
            for (var a2 = 1; a2 < s2.length; a2++) {
              if (a2 > 1) {
                var l2 = t2.cloneWithParent();
                n2.addChild(l2.findRoot()), n2 = l2;
              }
              n2.append(s2[a2]);
            }
          }
          break;
        case J.SelectorPlaceholder:
          if (o2.matches("@at-root"))
            return n2;
        case J.ElementNameSelector:
          var c2 = o2.getText();
          n2.addAttr("name", c2 === "*" ? "element" : Ji(c2));
          break;
        case J.ClassSelector:
          n2.addAttr("class", Ji(o2.getText().substring(1)));
          break;
        case J.IdentifierSelector:
          n2.addAttr("id", Ji(o2.getText().substring(1)));
          break;
        case J.MixinDeclaration:
          n2.addAttr("class", o2.getName());
          break;
        case J.PseudoSelector:
          n2.addAttr(Ji(o2.getText()), "");
          break;
        case J.AttributeSelector:
          var d2 = o2, h2 = d2.getIdentifier();
          if (h2) {
            var u2 = d2.getValue(), p2 = d2.getOperator(), m2 = void 0;
            if (u2 && p2)
              switch (Ji(p2.getText())) {
                case "|=":
                  m2 = Hi.remove(Ji(u2.getText())) + "-\u2026";
                  break;
                case "^=":
                  m2 = Hi.remove(Ji(u2.getText())) + "\u2026";
                  break;
                case "$=":
                  m2 = "\u2026" + Hi.remove(Ji(u2.getText()));
                  break;
                case "~=":
                  m2 = " \u2026 " + Hi.remove(Ji(u2.getText())) + " \u2026 ";
                  break;
                case "*=":
                  m2 = "\u2026" + Hi.remove(Ji(u2.getText())) + "\u2026";
                  break;
                default:
                  m2 = Hi.remove(Ji(u2.getText()));
              }
            n2.addAttr(Ji(h2.getText()), m2);
          }
      }
    }
    return n2;
  }
  function Ji(e2) {
    var t2 = new G();
    t2.setSource(e2);
    var n2 = t2.scanUnquotedString();
    return n2 ? n2.text : e2;
  }
  var er = function() {
    function e2(e3) {
      this.cssDataManager = e3;
    }
    return e2.prototype.selectorToMarkedString = function(e3) {
      var t2 = function(e4) {
        if (e4.matches("@at-root"))
          return null;
        var t3 = new Gi(), n3 = [], i2 = e4.getParent();
        if (i2 instanceof he)
          for (var r2 = i2.getParent(); r2 && !nr(r2); ) {
            if (r2 instanceof he) {
              if (r2.getSelectors().matches("@at-root"))
                break;
              n3.push(r2);
            }
            r2 = r2.getParent();
          }
        for (var o2 = new tr(t3), s2 = n3.length - 1; s2 >= 0; s2--) {
          var a2 = n3[s2].getSelectors().getChild(0);
          a2 && o2.processSelector(a2);
        }
        return o2.processSelector(e4), t3;
      }(e3);
      if (t2) {
        var n2 = new Zi('"').print(t2);
        return n2.push(this.selectorToSpecificityMarkedString(e3)), n2;
      }
      return [];
    }, e2.prototype.simpleSelectorToMarkedString = function(e3) {
      var t2 = Qi(e3), n2 = new Zi('"').print(t2);
      return n2.push(this.selectorToSpecificityMarkedString(e3)), n2;
    }, e2.prototype.isPseudoElementIdentifier = function(e3) {
      var t2 = e3.match(/^::?([\w-]+)/);
      return !!t2 && !!this.cssDataManager.getPseudoElement("::" + t2[1]);
    }, e2.prototype.selectorToSpecificityMarkedString = function(e3) {
      var t2 = this, n2 = function(e4) {
        for (var r2 = 0, o2 = e4.getChildren(); r2 < o2.length; r2++) {
          var s2 = o2[r2];
          switch (s2.type) {
            case J.IdentifierSelector:
              i2.id++;
              break;
            case J.ClassSelector:
            case J.AttributeSelector:
              i2.attr++;
              break;
            case J.ElementNameSelector:
              if (s2.matches("*"))
                break;
              i2.tag++;
              break;
            case J.PseudoSelector:
              var a2 = s2.getText();
              if (t2.isPseudoElementIdentifier(a2))
                i2.tag++;
              else {
                if (a2.match(/^:not/i))
                  break;
                i2.attr++;
              }
          }
          s2.getChildren().length > 0 && n2(s2);
        }
      }, i2 = new Xi();
      return n2(e3), $i("specificity", "[Selector Specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity): ({0}, {1}, {2})", i2.id, i2.attr, i2.tag);
    }, e2;
  }(), tr = function() {
    function e2(e3) {
      this.prev = null, this.element = e3;
    }
    return e2.prototype.processSelector = function(e3) {
      var t2 = null;
      if (!(this.element instanceof Gi) && e3.getChildren().some(function(e4) {
        return e4.hasChildren() && e4.getChild(0).type === J.SelectorCombinator;
      })) {
        var n2 = this.element.findRoot();
        n2.parent instanceof Gi && (t2 = this.element, this.element = n2.parent, this.element.removeChild(n2), this.prev = null);
      }
      for (var i2 = 0, r2 = e3.getChildren(); i2 < r2.length; i2++) {
        var o2 = r2[i2];
        if (o2 instanceof pe) {
          if (this.prev instanceof pe) {
            var s2 = new Yi("\u2026");
            this.element.addChild(s2), this.element = s2;
          } else
            this.prev && (this.prev.matches("+") || this.prev.matches("~")) && this.element.parent && (this.element = this.element.parent);
          this.prev && this.prev.matches("~") && (this.element.addChild(Qi(o2)), this.element.addChild(new Yi("\u22EE")));
          var a2 = Qi(o2, t2), l2 = a2.findRoot();
          this.element.addChild(l2), this.element = a2;
        }
        (o2 instanceof pe || o2.type === J.SelectorCombinatorParent || o2.type === J.SelectorCombinatorShadowPiercingDescendant || o2.type === J.SelectorCombinatorSibling || o2.type === J.SelectorCombinatorAllSiblings) && (this.prev = o2);
      }
    }, e2;
  }();
  function nr(e2) {
    switch (e2.type) {
      case J.MixinDeclaration:
      case J.Stylesheet:
        return true;
    }
    return false;
  }
  var ir = function() {
    function e2(e3, t2) {
      this.clientCapabilities = e3, this.cssDataManager = t2, this.selectorPrinting = new er(t2);
    }
    return e2.prototype.doHover = function(e3, t2, n2) {
      function i2(t3) {
        return ln.create(e3.positionAt(t3.offset), e3.positionAt(t3.end));
      }
      for (var r2 = ie(n2, e3.offsetAt(t2)), o2 = null, s2 = 0; s2 < r2.length; s2++) {
        var a2 = r2[s2];
        if (a2 instanceof ue) {
          o2 = {contents: this.selectorPrinting.selectorToMarkedString(a2), range: i2(a2)};
          break;
        }
        if (a2 instanceof pe) {
          Y(a2.getText(), "@") || (o2 = {contents: this.selectorPrinting.simpleSelectorToMarkedString(a2), range: i2(a2)});
          break;
        }
        if (a2 instanceof _e) {
          var l2 = a2.getFullPropertyName();
          (d2 = this.cssDataManager.getProperty(l2)) && (o2 = (h2 = Et(d2, this.doesSupportMarkdown())) ? {contents: h2, range: i2(a2)} : null);
        } else if (a2 instanceof ht) {
          var c2 = a2.getText();
          (d2 = this.cssDataManager.getAtDirective(c2)) && (o2 = (h2 = Et(d2, this.doesSupportMarkdown())) ? {contents: h2, range: i2(a2)} : null);
        } else if (a2 instanceof oe && a2.type === J.PseudoSelector) {
          var d2, h2, u2 = a2.getText();
          (d2 = u2.slice(0, 2) === "::" ? this.cssDataManager.getPseudoElement(u2) : this.cssDataManager.getPseudoClass(u2)) && (o2 = (h2 = Et(d2, this.doesSupportMarkdown())) ? {contents: h2, range: i2(a2)} : null);
        } else
          ;
      }
      return o2 && (o2.contents = this.convertContents(o2.contents)), o2;
    }, e2.prototype.convertContents = function(e3) {
      return this.doesSupportMarkdown() || typeof e3 == "string" ? e3 : "kind" in e3 ? {kind: "plaintext", value: e3.value} : Array.isArray(e3) ? e3.map(function(e4) {
        return typeof e4 == "string" ? e4 : e4.value;
      }) : e3.value;
    }, e2.prototype.doesSupportMarkdown = function() {
      if (!tn(this.supportsMarkdown)) {
        if (!tn(this.clientCapabilities))
          return this.supportsMarkdown = true, this.supportsMarkdown;
        var e3 = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.hover;
        this.supportsMarkdown = e3 && e3.contentFormat && Array.isArray(e3.contentFormat) && e3.contentFormat.indexOf(Fn.Markdown) !== -1;
      }
      return this.supportsMarkdown;
    }, e2;
  }(), rr = function(e2, t2, n2, i2) {
    return new (n2 || (n2 = Promise))(function(r2, o2) {
      function s2(e3) {
        try {
          l2(i2.next(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function a2(e3) {
        try {
          l2(i2.throw(e3));
        } catch (e4) {
          o2(e4);
        }
      }
      function l2(e3) {
        var t3;
        e3.done ? r2(e3.value) : (t3 = e3.value, t3 instanceof n2 ? t3 : new n2(function(e4) {
          e4(t3);
        })).then(s2, a2);
      }
      l2((i2 = i2.apply(e2, t2 || [])).next());
    });
  }, or = function(e2, t2) {
    var n2, i2, r2, o2, s2 = {label: 0, sent: function() {
      if (1 & r2[0])
        throw r2[1];
      return r2[1];
    }, trys: [], ops: []};
    return o2 = {next: a2(0), throw: a2(1), return: a2(2)}, typeof Symbol == "function" && (o2[Symbol.iterator] = function() {
      return this;
    }), o2;
    function a2(o3) {
      return function(a3) {
        return function(o4) {
          if (n2)
            throw new TypeError("Generator is already executing.");
          for (; s2; )
            try {
              if (n2 = 1, i2 && (r2 = 2 & o4[0] ? i2.return : o4[0] ? i2.throw || ((r2 = i2.return) && r2.call(i2), 0) : i2.next) && !(r2 = r2.call(i2, o4[1])).done)
                return r2;
              switch (i2 = 0, r2 && (o4 = [2 & o4[0], r2.value]), o4[0]) {
                case 0:
                case 1:
                  r2 = o4;
                  break;
                case 4:
                  return s2.label++, {value: o4[1], done: false};
                case 5:
                  s2.label++, i2 = o4[1], o4 = [0];
                  continue;
                case 7:
                  o4 = s2.ops.pop(), s2.trys.pop();
                  continue;
                default:
                  if (!(r2 = s2.trys, (r2 = r2.length > 0 && r2[r2.length - 1]) || o4[0] !== 6 && o4[0] !== 2)) {
                    s2 = 0;
                    continue;
                  }
                  if (o4[0] === 3 && (!r2 || o4[1] > r2[0] && o4[1] < r2[3])) {
                    s2.label = o4[1];
                    break;
                  }
                  if (o4[0] === 6 && s2.label < r2[1]) {
                    s2.label = r2[1], r2 = o4;
                    break;
                  }
                  if (r2 && s2.label < r2[2]) {
                    s2.label = r2[2], s2.ops.push(o4);
                    break;
                  }
                  r2[2] && s2.ops.pop(), s2.trys.pop();
                  continue;
              }
              o4 = t2.call(e2, s2);
            } catch (e3) {
              o4 = [6, e3], i2 = 0;
            } finally {
              n2 = r2 = 0;
            }
          if (5 & o4[0])
            throw o4[1];
          return {value: o4[0] ? o4[1] : void 0, done: true};
        }([o3, a3]);
      };
    }
  }, sr = wt(), ar = function() {
    function e2(e3) {
      this.fileSystemProvider = e3;
    }
    return e2.prototype.findDefinition = function(e3, t2, n2) {
      var i2 = new An(n2), r2 = ne(n2, e3.offsetAt(t2));
      if (!r2)
        return null;
      var o2 = i2.findSymbolFromNode(r2);
      return o2 ? {uri: e3.uri, range: lr(o2.node, e3)} : null;
    }, e2.prototype.findReferences = function(e3, t2, n2) {
      return this.findDocumentHighlights(e3, t2, n2).map(function(t3) {
        return {uri: e3.uri, range: t3.range};
      });
    }, e2.prototype.findDocumentHighlights = function(e3, t2, n2) {
      var i2 = [], r2 = ne(n2, e3.offsetAt(t2));
      if (!r2 || r2.type === J.Stylesheet || r2.type === J.Declarations)
        return i2;
      r2.type === J.Identifier && r2.parent && r2.parent.type === J.ClassSelector && (r2 = r2.parent);
      var o2 = new An(n2), s2 = o2.findSymbolFromNode(r2), a2 = r2.getText();
      return n2.accept(function(t3) {
        if (s2) {
          if (o2.matchesSymbol(t3, s2))
            return i2.push({kind: cr(t3), range: lr(t3, e3)}), false;
        } else
          r2 && r2.type === t3.type && t3.matches(a2) && i2.push({kind: cr(t3), range: lr(t3, e3)});
        return true;
      }), i2;
    }, e2.prototype.isRawStringDocumentLinkNode = function(e3) {
      return e3.type === J.Import;
    }, e2.prototype.findDocumentLinks = function(e3, t2, n2) {
      for (var i2 = this.findUnresolvedLinks(e3, t2), r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2].target;
        if (o2 && !/^\w+:\/\//g.test(o2)) {
          var s2 = n2.resolveReference(o2, e3.uri);
          s2 && (i2[r2].target = s2);
        }
      }
      return i2;
    }, e2.prototype.findDocumentLinks2 = function(e3, t2, n2) {
      return rr(this, void 0, void 0, function() {
        var i2, r2, o2, s2, a2, l2, c2;
        return or(this, function(d2) {
          switch (d2.label) {
            case 0:
              i2 = this.findUnresolvedLinks(e3, t2), r2 = [], o2 = 0, s2 = i2, d2.label = 1;
            case 1:
              return o2 < s2.length ? (a2 = s2[o2], !(l2 = a2.target) || /^\w+:\/\//g.test(l2) ? [3, 3] : [4, this.resolveRelativeReference(l2, e3.uri, n2)]) : [3, 5];
            case 2:
              return (c2 = d2.sent()) !== void 0 && (a2.target = c2, r2.push(a2)), [3, 4];
            case 3:
              r2.push(a2), d2.label = 4;
            case 4:
              return o2++, [3, 1];
            case 5:
              return [2, r2];
          }
        });
      });
    }, e2.prototype.findUnresolvedLinks = function(e3, t2) {
      var n2 = this, i2 = [], r2 = function(t3) {
        var n3 = t3.getText(), r3 = lr(t3, e3);
        r3.start.line === r3.end.line && r3.start.character === r3.end.character || ((Y(n3, "'") || Y(n3, '"')) && (n3 = n3.slice(1, -1)), i2.push({target: n3, range: r3}));
      };
      return t2.accept(function(e4) {
        if (e4.type === J.URILiteral) {
          var t3 = e4.getChild(0);
          return t3 && r2(t3), false;
        }
        if (e4.parent && n2.isRawStringDocumentLinkNode(e4.parent)) {
          var i3 = e4.getText();
          return (Y(i3, "'") || Y(i3, '"')) && r2(e4), false;
        }
        return true;
      }), i2;
    }, e2.prototype.findDocumentSymbols = function(e3, t2) {
      var n2 = [];
      return t2.accept(function(t3) {
        var i2 = {name: null, kind: Xn.Class, location: null}, r2 = t3;
        if (t3 instanceof ue)
          return i2.name = t3.getText(), (r2 = t3.findAParent(J.Ruleset, J.ExtendsReference)) && (i2.location = cn.create(e3.uri, lr(r2, e3)), n2.push(i2)), false;
        if (t3 instanceof it)
          i2.name = t3.getName(), i2.kind = Xn.Variable;
        else if (t3 instanceof dt)
          i2.name = t3.getName(), i2.kind = Xn.Method;
        else if (t3 instanceof Le)
          i2.name = t3.getName(), i2.kind = Xn.Function;
        else if (t3 instanceof Oe)
          i2.name = sr("literal.keyframes", "@keyframes {0}", t3.getName());
        else if (t3 instanceof Ie)
          i2.name = sr("literal.fontface", "@font-face");
        else if (t3 instanceof Be) {
          var o2 = t3.getChild(0);
          o2 instanceof Ue && (i2.name = "@media " + o2.getText(), i2.kind = Xn.Module);
        }
        return i2.name && (i2.location = cn.create(e3.uri, lr(r2, e3)), n2.push(i2)), true;
      }), n2;
    }, e2.prototype.findDocumentColors = function(e3, t2) {
      var n2 = [];
      return t2.accept(function(t3) {
        var i2 = function(e4, t4) {
          var n3 = zt(e4);
          if (n3) {
            var i3 = lr(e4, t4);
            return {color: n3, range: i3};
          }
          return null;
        }(t3, e3);
        return i2 && n2.push(i2), true;
      }), n2;
    }, e2.prototype.getColorPresentations = function(e3, t2, n2, i2) {
      var r2, o2 = [], s2 = Math.round(255 * n2.red), a2 = Math.round(255 * n2.green), l2 = Math.round(255 * n2.blue);
      r2 = n2.alpha === 1 ? "rgb(" + s2 + ", " + a2 + ", " + l2 + ")" : "rgba(" + s2 + ", " + a2 + ", " + l2 + ", " + n2.alpha + ")", o2.push({label: r2, textEdit: Cn.replace(i2, r2)}), r2 = n2.alpha === 1 ? "#" + dr(s2) + dr(a2) + dr(l2) : "#" + dr(s2) + dr(a2) + dr(l2) + dr(Math.round(255 * n2.alpha)), o2.push({label: r2, textEdit: Cn.replace(i2, r2)});
      var c2 = function(e4) {
        var t3 = e4.red, n3 = e4.green, i3 = e4.blue, r3 = e4.alpha, o3 = Math.max(t3, n3, i3), s3 = Math.min(t3, n3, i3), a3 = 0, l3 = 0, c3 = (s3 + o3) / 2, d2 = o3 - s3;
        if (d2 > 0) {
          switch (l3 = Math.min(c3 <= 0.5 ? d2 / (2 * c3) : d2 / (2 - 2 * c3), 1), o3) {
            case t3:
              a3 = (n3 - i3) / d2 + (n3 < i3 ? 6 : 0);
              break;
            case n3:
              a3 = (i3 - t3) / d2 + 2;
              break;
            case i3:
              a3 = (t3 - n3) / d2 + 4;
          }
          a3 *= 60, a3 = Math.round(a3);
        }
        return {h: a3, s: l3, l: c3, a: r3};
      }(n2);
      return r2 = c2.a === 1 ? "hsl(" + c2.h + ", " + Math.round(100 * c2.s) + "%, " + Math.round(100 * c2.l) + "%)" : "hsla(" + c2.h + ", " + Math.round(100 * c2.s) + "%, " + Math.round(100 * c2.l) + "%, " + c2.a + ")", o2.push({label: r2, textEdit: Cn.replace(i2, r2)}), o2;
    }, e2.prototype.doRename = function(e3, t2, n2, i2) {
      var r2, o2 = this.findDocumentHighlights(e3, t2, i2).map(function(e4) {
        return Cn.replace(e4.range, n2);
      });
      return {changes: (r2 = {}, r2[e3.uri] = o2, r2)};
    }, e2.prototype.resolveRelativeReference = function(e3, t2, n2) {
      return rr(this, void 0, void 0, function() {
        var i2, r2, o2, s2, a2;
        return or(this, function(l2) {
          switch (l2.label) {
            case 0:
              return e3[0] === "~" && e3[1] !== "/" && this.fileSystemProvider ? (e3 = e3.substring(1), Y(t2, "file://") ? (i2 = function(e4) {
                if (e4[0] === "@")
                  return e4.substring(0, e4.indexOf("/", e4.indexOf("/") + 1));
                return e4.substring(0, e4.indexOf("/"));
              }(e3), r2 = n2.resolveReference("/", t2), o2 = Ci(t2), [4, this.resolvePathToModule(i2, o2, r2)]) : [3, 2]) : [3, 3];
            case 1:
              if (s2 = l2.sent())
                return a2 = e3.substring(i2.length + 1), [2, Si(s2, a2)];
              l2.label = 2;
            case 2:
            case 3:
              return [2, n2.resolveReference(e3, t2)];
          }
        });
      });
    }, e2.prototype.resolvePathToModule = function(e3, t2, n2) {
      return rr(this, void 0, void 0, function() {
        var i2;
        return or(this, function(r2) {
          switch (r2.label) {
            case 0:
              return i2 = Si(t2, "node_modules", e3, "package.json"), [4, this.fileExists(i2)];
            case 1:
              return r2.sent() ? [2, Ci(i2)] : n2 && t2.startsWith(n2) && t2.length !== n2.length ? [2, this.resolvePathToModule(e3, Ci(t2), n2)] : [2, void 0];
          }
        });
      });
    }, e2.prototype.fileExists = function(e3) {
      return rr(this, void 0, void 0, function() {
        var t2;
        return or(this, function(n2) {
          switch (n2.label) {
            case 0:
              if (!this.fileSystemProvider)
                return [2, false];
              n2.label = 1;
            case 1:
              return n2.trys.push([1, 3, , 4]), [4, this.fileSystemProvider.stat(e3)];
            case 2:
              return (t2 = n2.sent()).type === mi.Unknown && t2.size === -1 ? [2, false] : [2, true];
            case 3:
              return n2.sent(), [2, false];
            case 4:
              return [2];
          }
        });
      });
    }, e2;
  }();
  function lr(e2, t2) {
    return ln.create(t2.positionAt(e2.offset), t2.positionAt(e2.end));
  }
  function cr(e2) {
    if (e2.type === J.Selector)
      return Yn.Write;
    if (e2 instanceof ae && e2.parent && e2.parent instanceof ve && e2.isCustomProperty)
      return Yn.Write;
    if (e2.parent)
      switch (e2.parent.type) {
        case J.FunctionDeclaration:
        case J.MixinDeclaration:
        case J.Keyframe:
        case J.VariableDeclaration:
        case J.FunctionParameter:
          return Yn.Write;
      }
    return Yn.Read;
  }
  function dr(e2) {
    var t2 = e2.toString(16);
    return t2.length !== 2 ? "0" + t2 : t2;
  }
  var hr = wt(), ur = re.Warning, pr = re.Error, mr = re.Ignore, gr = function(e2, t2, n2) {
    this.id = e2, this.message = t2, this.defaultValue = n2;
  }, fr = function(e2, t2, n2) {
    this.id = e2, this.message = t2, this.defaultValue = n2;
  }, br = {AllVendorPrefixes: new gr("compatibleVendorPrefixes", hr("rule.vendorprefixes.all", "When using a vendor-specific prefix make sure to also include all other vendor-specific properties"), mr), IncludeStandardPropertyWhenUsingVendorPrefix: new gr("vendorPrefix", hr("rule.standardvendorprefix.all", "When using a vendor-specific prefix also include the standard property"), ur), DuplicateDeclarations: new gr("duplicateProperties", hr("rule.duplicateDeclarations", "Do not use duplicate style definitions"), mr), EmptyRuleSet: new gr("emptyRules", hr("rule.emptyRuleSets", "Do not use empty rulesets"), ur), ImportStatemement: new gr("importStatement", hr("rule.importDirective", "Import statements do not load in parallel"), mr), BewareOfBoxModelSize: new gr("boxModel", hr("rule.bewareOfBoxModelSize", "Do not use width or height when using padding or border"), mr), UniversalSelector: new gr("universalSelector", hr("rule.universalSelector", "The universal selector (*) is known to be slow"), mr), ZeroWithUnit: new gr("zeroUnits", hr("rule.zeroWidthUnit", "No unit for zero needed"), mr), RequiredPropertiesForFontFace: new gr("fontFaceProperties", hr("rule.fontFaceProperties", "@font-face rule must define 'src' and 'font-family' properties"), ur), HexColorLength: new gr("hexColorLength", hr("rule.hexColor", "Hex colors must consist of three, four, six or eight hex numbers"), pr), ArgsInColorFunction: new gr("argumentsInColorFunction", hr("rule.colorFunction", "Invalid number of parameters"), pr), UnknownProperty: new gr("unknownProperties", hr("rule.unknownProperty", "Unknown property."), ur), UnknownAtRules: new gr("unknownAtRules", hr("rule.unknownAtRules", "Unknown at-rule."), ur), IEStarHack: new gr("ieHack", hr("rule.ieHack", "IE hacks are only necessary when supporting IE7 and older"), mr), UnknownVendorSpecificProperty: new gr("unknownVendorSpecificProperties", hr("rule.unknownVendorSpecificProperty", "Unknown vendor specific property."), mr), PropertyIgnoredDueToDisplay: new gr("propertyIgnoredDueToDisplay", hr("rule.propertyIgnoredDueToDisplay", "Property is ignored due to the display."), ur), AvoidImportant: new gr("important", hr("rule.avoidImportant", "Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored."), mr), AvoidFloat: new gr("float", hr("rule.avoidFloat", "Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes."), mr), AvoidIdSelector: new gr("idSelector", hr("rule.avoidIdSelector", "Selectors should not contain IDs because these rules are too tightly coupled with the HTML."), mr)}, _r = {ValidProperties: new fr("validProperties", hr("rule.validProperties", "A list of properties that are not validated against the `unknownProperties` rule."), [])}, vr = function() {
    function e2(e3) {
      e3 === void 0 && (e3 = {}), this.conf = e3;
    }
    return e2.prototype.getRule = function(e3) {
      if (this.conf.hasOwnProperty(e3.id)) {
        var t2 = function(e4) {
          switch (e4) {
            case "ignore":
              return re.Ignore;
            case "warning":
              return re.Warning;
            case "error":
              return re.Error;
          }
          return null;
        }(this.conf[e3.id]);
        if (t2)
          return t2;
      }
      return e3.defaultValue;
    }, e2.prototype.getSetting = function(e3) {
      return this.conf[e3.id];
    }, e2;
  }();
  var wr = wt(), yr = function() {
    function e2(e3) {
      this.cssDataManager = e3;
    }
    return e2.prototype.doCodeActions = function(e3, t2, n2, i2) {
      return this.doCodeActions2(e3, t2, n2, i2).map(function(t3) {
        var n3 = t3.edit && t3.edit.documentChanges && t3.edit.documentChanges[0];
        return yn.create(t3.title, "_css.applyCodeAction", e3.uri, e3.version, n3 && n3.edits);
      });
    }, e2.prototype.doCodeActions2 = function(e3, t2, n2, i2) {
      var r2 = [];
      if (n2.diagnostics)
        for (var o2 = 0, s2 = n2.diagnostics; o2 < s2.length; o2++) {
          var a2 = s2[o2];
          this.appendFixesForMarker(e3, i2, a2, r2);
        }
      return r2;
    }, e2.prototype.getFixesForUnknownProperty = function(e3, t2, n2, i2) {
      var r2 = t2.getName(), o2 = [];
      this.cssDataManager.getProperties().forEach(function(e4) {
        var t3 = function(e5, t4, n3) {
          n3 === void 0 && (n3 = 4);
          var i3 = Math.abs(e5.length - t4.length);
          if (i3 > n3)
            return 0;
          var r3, o3, s3 = [], a3 = [];
          for (r3 = 0; r3 < t4.length + 1; ++r3)
            a3.push(0);
          for (r3 = 0; r3 < e5.length + 1; ++r3)
            s3.push(a3);
          for (r3 = 1; r3 < e5.length + 1; ++r3)
            for (o3 = 1; o3 < t4.length + 1; ++o3)
              e5[r3 - 1] === t4[o3 - 1] ? s3[r3][o3] = s3[r3 - 1][o3 - 1] + 1 : s3[r3][o3] = Math.max(s3[r3 - 1][o3], s3[r3][o3 - 1]);
          return s3[e5.length][t4.length] - Math.sqrt(i3);
        }(r2, e4.name);
        t3 >= r2.length / 2 && o2.push({property: e4.name, score: t3});
      }), o2.sort(function(e4, t3) {
        return t3.score - e4.score || e4.property.localeCompare(t3.property);
      });
      for (var s2 = 3, a2 = 0, l2 = o2; a2 < l2.length; a2++) {
        var c2 = l2[a2].property, d2 = wr("css.codeaction.rename", "Rename to '{0}'", c2), h2 = Cn.replace(n2.range, c2), u2 = Mn.create(e3.uri, e3.version), p2 = {documentChanges: [xn.create(u2, [h2])]}, m2 = ii.create(d2, p2, ti.QuickFix);
        if (m2.diagnostics = [n2], i2.push(m2), --s2 <= 0)
          return;
      }
    }, e2.prototype.appendFixesForMarker = function(e3, t2, n2, i2) {
      if (n2.code === br.UnknownProperty.id)
        for (var r2 = e3.offsetAt(n2.range.start), o2 = e3.offsetAt(n2.range.end), s2 = ie(t2, r2), a2 = s2.length - 1; a2 >= 0; a2--) {
          var l2 = s2[a2];
          if (l2 instanceof _e) {
            var c2 = l2.getProperty();
            if (c2 && c2.offset === r2 && c2.end === o2)
              return void this.getFixesForUnknownProperty(e3, c2, n2, i2);
          }
        }
    }, e2;
  }(), Cr = function(e2) {
    this.fullPropertyName = e2.getFullPropertyName().toLowerCase(), this.node = e2;
  };
  function xr(e2, t2, n2, i2) {
    var r2 = e2[t2];
    r2.value = n2, n2 && (on(r2.properties, i2) || r2.properties.push(i2));
  }
  function Sr(e2, t2, n2, i2) {
    t2 === "top" || t2 === "right" || t2 === "bottom" || t2 === "left" ? xr(e2, t2, n2, i2) : function(e3, t3, n3) {
      xr(e3, "top", t3, n3), xr(e3, "right", t3, n3), xr(e3, "bottom", t3, n3), xr(e3, "left", t3, n3);
    }(e2, n2, i2);
  }
  function kr(e2, t2, n2) {
    switch (t2.length) {
      case 1:
        Sr(e2, void 0, t2[0], n2);
        break;
      case 2:
        Sr(e2, "top", t2[0], n2), Sr(e2, "bottom", t2[0], n2), Sr(e2, "right", t2[1], n2), Sr(e2, "left", t2[1], n2);
        break;
      case 3:
        Sr(e2, "top", t2[0], n2), Sr(e2, "right", t2[1], n2), Sr(e2, "left", t2[1], n2), Sr(e2, "bottom", t2[2], n2);
        break;
      case 4:
        Sr(e2, "top", t2[0], n2), Sr(e2, "right", t2[1], n2), Sr(e2, "bottom", t2[2], n2), Sr(e2, "left", t2[3], n2);
    }
  }
  function Er(e2, t2) {
    for (var n2 = 0, i2 = t2; n2 < i2.length; n2++) {
      var r2 = i2[n2];
      if (e2.matches(r2))
        return true;
    }
    return false;
  }
  function Tr(e2, t2) {
    return t2 === void 0 && (t2 = true), (!t2 || !Er(e2, ["initial", "unset"])) && parseFloat(e2.getText()) !== 0;
  }
  function Lr(e2, t2) {
    return t2 === void 0 && (t2 = true), e2.map(function(e3) {
      return Tr(e3, t2);
    });
  }
  function Nr(e2, t2) {
    return t2 === void 0 && (t2 = true), !Er(e2, ["none", "hidden"]) && (!t2 || !Er(e2, ["initial", "unset"]));
  }
  function Ir(e2, t2) {
    return t2 === void 0 && (t2 = true), e2.map(function(e3) {
      return Nr(e3, t2);
    });
  }
  function Dr(e2) {
    var t2 = e2.getChildren();
    if (t2.length === 1)
      return Tr(r2 = t2[0]) && Nr(r2);
    for (var n2 = 0, i2 = t2; n2 < i2.length; n2++) {
      var r2;
      if (!Tr(r2 = i2[n2], false) || !Nr(r2, false))
        return false;
    }
    return true;
  }
  var Or = wt(), Ar = function() {
    function e2() {
      this.data = {};
    }
    return e2.prototype.add = function(e3, t2, n2) {
      var i2 = this.data[e3];
      i2 || (i2 = {nodes: [], names: []}, this.data[e3] = i2), i2.names.push(t2), n2 && i2.nodes.push(n2);
    }, e2;
  }(), Rr = function() {
    function e2(e3, t2, n2) {
      var i2 = this;
      this.cssDataManager = n2, this.warnings = [], this.settings = t2, this.documentText = e3.getText(), this.keyframes = new Ar(), this.validProperties = {};
      var r2 = t2.getSetting(_r.ValidProperties);
      Array.isArray(r2) && r2.forEach(function(e4) {
        if (typeof e4 == "string") {
          var t3 = e4.trim().toLowerCase();
          t3.length && (i2.validProperties[t3] = true);
        }
      });
    }
    return e2.entries = function(t2, n2, i2, r2, o2) {
      var s2 = new e2(n2, i2, r2);
      return t2.acceptVisitor(s2), s2.completeValidations(), s2.getEntries(o2);
    }, e2.prototype.isValidPropertyDeclaration = function(e3) {
      var t2 = e3.fullPropertyName;
      return this.validProperties[t2];
    }, e2.prototype.fetch = function(e3, t2) {
      for (var n2 = [], i2 = 0, r2 = e3; i2 < r2.length; i2++) {
        var o2 = r2[i2];
        o2.fullPropertyName === t2 && n2.push(o2);
      }
      return n2;
    }, e2.prototype.fetchWithValue = function(e3, t2, n2) {
      for (var i2 = [], r2 = 0, o2 = e3; r2 < o2.length; r2++) {
        var s2 = o2[r2];
        if (s2.fullPropertyName === t2) {
          var a2 = s2.node.getValue();
          a2 && this.findValueInExpression(a2, n2) && i2.push(s2);
        }
      }
      return i2;
    }, e2.prototype.findValueInExpression = function(e3, t2) {
      var n2 = false;
      return e3.accept(function(e4) {
        return e4.type === J.Identifier && e4.matches(t2) && (n2 = true), !n2;
      }), n2;
    }, e2.prototype.getEntries = function(e3) {
      return e3 === void 0 && (e3 = re.Warning | re.Error), this.warnings.filter(function(t2) {
        return (t2.getLevel() & e3) != 0;
      });
    }, e2.prototype.addEntry = function(e3, t2, n2) {
      var i2 = new ft(e3, t2, this.settings.getRule(t2), n2);
      this.warnings.push(i2);
    }, e2.prototype.getMissingNames = function(e3, t2) {
      for (var n2 = e3.slice(0), i2 = 0; i2 < t2.length; i2++) {
        var r2 = n2.indexOf(t2[i2]);
        r2 !== -1 && (n2[r2] = null);
      }
      var o2 = null;
      for (i2 = 0; i2 < n2.length; i2++) {
        var s2 = n2[i2];
        s2 && (o2 = o2 === null ? Or("namelist.single", "'{0}'", s2) : Or("namelist.concatenated", "{0}, '{1}'", o2, s2));
      }
      return o2;
    }, e2.prototype.visitNode = function(e3) {
      switch (e3.type) {
        case J.UnknownAtRule:
          return this.visitUnknownAtRule(e3);
        case J.Keyframe:
          return this.visitKeyframe(e3);
        case J.FontFace:
          return this.visitFontFace(e3);
        case J.Ruleset:
          return this.visitRuleSet(e3);
        case J.SimpleSelector:
          return this.visitSimpleSelector(e3);
        case J.Function:
          return this.visitFunction(e3);
        case J.NumericValue:
          return this.visitNumericValue(e3);
        case J.Import:
          return this.visitImport(e3);
        case J.HexColorValue:
          return this.visitHexColorValue(e3);
        case J.Prio:
          return this.visitPrio(e3);
      }
      return true;
    }, e2.prototype.completeValidations = function() {
      this.validateKeyframes();
    }, e2.prototype.visitUnknownAtRule = function(e3) {
      var t2 = e3.getChild(0);
      return !!t2 && (!this.cssDataManager.getAtDirective(t2.getText()) && (this.addEntry(t2, br.UnknownAtRules, "Unknown at rule " + t2.getText()), true));
    }, e2.prototype.visitKeyframe = function(e3) {
      var t2 = e3.getKeyword();
      if (!t2)
        return false;
      var n2 = t2.getText();
      return this.keyframes.add(e3.getName(), n2, n2 !== "@keyframes" ? t2 : null), true;
    }, e2.prototype.validateKeyframes = function() {
      var e3 = ["@-webkit-keyframes", "@-moz-keyframes", "@-o-keyframes"];
      for (var t2 in this.keyframes.data) {
        var n2 = this.keyframes.data[t2].names, i2 = n2.indexOf("@keyframes") === -1;
        if (i2 || n2.length !== 1) {
          var r2 = this.getMissingNames(e3, n2);
          if (r2 || i2)
            for (var o2 = 0, s2 = this.keyframes.data[t2].nodes; o2 < s2.length; o2++) {
              var a2 = s2[o2];
              if (i2) {
                var l2 = Or("keyframes.standardrule.missing", "Always define standard rule '@keyframes' when defining keyframes.");
                this.addEntry(a2, br.IncludeStandardPropertyWhenUsingVendorPrefix, l2);
              }
              if (r2) {
                l2 = Or("keyframes.vendorspecific.missing", "Always include all vendor specific rules: Missing: {0}", r2);
                this.addEntry(a2, br.AllVendorPrefixes, l2);
              }
            }
        }
      }
      return true;
    }, e2.prototype.visitSimpleSelector = function(e3) {
      var t2 = this.documentText.charAt(e3.offset);
      return e3.length === 1 && t2 === "*" && this.addEntry(e3, br.UniversalSelector), t2 === "#" && this.addEntry(e3, br.AvoidIdSelector), true;
    }, e2.prototype.visitImport = function(e3) {
      return this.addEntry(e3, br.ImportStatemement), true;
    }, e2.prototype.visitRuleSet = function(t2) {
      var n2 = t2.getDeclarations();
      if (!n2)
        return false;
      n2.hasChildren() || this.addEntry(t2.getSelectors(), br.EmptyRuleSet);
      for (var i2 = [], r2 = 0, o2 = n2.getChildren(); r2 < o2.length; r2++) {
        (x2 = o2[r2]) instanceof _e && i2.push(new Cr(x2));
      }
      var s2 = function(e3) {
        for (var t3 = {top: {value: false, properties: []}, right: {value: false, properties: []}, bottom: {value: false, properties: []}, left: {value: false, properties: []}}, n3 = 0, i3 = e3; n3 < i3.length; n3++) {
          var r3 = i3[n3], o3 = r3.node.value;
          if (o3 !== void 0)
            switch (r3.fullPropertyName) {
              case "box-sizing":
                return {top: {value: false, properties: []}, right: {value: false, properties: []}, bottom: {value: false, properties: []}, left: {value: false, properties: []}};
              case "width":
                t3.width = r3;
                break;
              case "height":
                t3.height = r3;
                break;
              default:
                var s3 = r3.fullPropertyName.split("-");
                switch (s3[0]) {
                  case "border":
                    switch (s3[1]) {
                      case void 0:
                      case "top":
                      case "right":
                      case "bottom":
                      case "left":
                        switch (s3[2]) {
                          case void 0:
                            Sr(t3, s3[1], Dr(o3), r3);
                            break;
                          case "width":
                            Sr(t3, s3[1], Tr(o3, false), r3);
                            break;
                          case "style":
                            Sr(t3, s3[1], Nr(o3, true), r3);
                        }
                        break;
                      case "width":
                        kr(t3, Lr(o3.getChildren(), false), r3);
                        break;
                      case "style":
                        kr(t3, Ir(o3.getChildren(), true), r3);
                    }
                    break;
                  case "padding":
                    s3.length === 1 ? kr(t3, Lr(o3.getChildren(), true), r3) : Sr(t3, s3[1], Tr(o3, true), r3);
                }
            }
        }
        return t3;
      }(i2);
      if (s2.width) {
        var a2 = [];
        if (s2.right.value && (a2 = sn(a2, s2.right.properties)), s2.left.value && (a2 = sn(a2, s2.left.properties)), a2.length !== 0) {
          for (var l2 = 0, c2 = a2; l2 < c2.length; l2++) {
            var d2 = c2[l2];
            this.addEntry(d2.node, br.BewareOfBoxModelSize);
          }
          this.addEntry(s2.width.node, br.BewareOfBoxModelSize);
        }
      }
      if (s2.height) {
        a2 = [];
        if (s2.top.value && (a2 = sn(a2, s2.top.properties)), s2.bottom.value && (a2 = sn(a2, s2.bottom.properties)), a2.length !== 0) {
          for (var h2 = 0, u2 = a2; h2 < u2.length; h2++) {
            d2 = u2[h2];
            this.addEntry(d2.node, br.BewareOfBoxModelSize);
          }
          this.addEntry(s2.height.node, br.BewareOfBoxModelSize);
        }
      }
      var p2 = this.fetchWithValue(i2, "display", "inline");
      if (p2.length > 0)
        for (var m2 = 0, g2 = ["width", "height", "margin-top", "margin-bottom", "float"]; m2 < g2.length; m2++)
          for (var f2 = g2[m2], b2 = this.fetch(i2, f2), _2 = 0; _2 < b2.length; _2++) {
            var v2 = b2[_2].node, w2 = v2.getValue();
            (f2 !== "float" || w2 && !w2.matches("none")) && this.addEntry(v2, br.PropertyIgnoredDueToDisplay, Or("rule.propertyIgnoredDueToDisplayInline", "Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect."));
          }
      if ((p2 = this.fetchWithValue(i2, "display", "inline-block")).length > 0)
        for (b2 = this.fetch(i2, "float"), _2 = 0; _2 < b2.length; _2++) {
          var y2 = b2[_2].node;
          (w2 = y2.getValue()) && !w2.matches("none") && this.addEntry(y2, br.PropertyIgnoredDueToDisplay, Or("rule.propertyIgnoredDueToDisplayInlineBlock", "inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'"));
        }
      if ((p2 = this.fetchWithValue(i2, "display", "block")).length > 0)
        for (b2 = this.fetch(i2, "vertical-align"), _2 = 0; _2 < b2.length; _2++)
          this.addEntry(b2[_2].node, br.PropertyIgnoredDueToDisplay, Or("rule.propertyIgnoredDueToDisplayBlock", "Property is ignored due to the display. With 'display: block', vertical-align should not be used."));
      var C2 = this.fetch(i2, "float");
      for (_2 = 0; _2 < C2.length; _2++) {
        var x2 = C2[_2];
        this.isValidPropertyDeclaration(x2) || this.addEntry(x2.node, br.AvoidFloat);
      }
      for (var S2 = 0; S2 < i2.length; S2++) {
        if ((x2 = i2[S2]).fullPropertyName !== "background" && !this.validProperties[x2.fullPropertyName]) {
          if ((w2 = x2.node.getValue()) && this.documentText.charAt(w2.offset) !== "-") {
            var k2 = this.fetch(i2, x2.fullPropertyName);
            if (k2.length > 1)
              for (var E2 = 0; E2 < k2.length; E2++) {
                var T2 = k2[E2].node.getValue();
                T2 && this.documentText.charAt(T2.offset) !== "-" && k2[E2] !== x2 && this.addEntry(x2.node, br.DuplicateDeclarations);
              }
          }
        }
      }
      if (!t2.getSelectors().matches(":export")) {
        for (var L2 = new Ar(), N2 = false, I2 = 0, D2 = i2; I2 < D2.length; I2++) {
          var O2 = (x2 = D2[I2]).node;
          if (this.isCSSDeclaration(O2)) {
            var A2 = x2.fullPropertyName, R2 = A2.charAt(0);
            if (R2 === "-") {
              if (A2.charAt(1) !== "-") {
                this.cssDataManager.isKnownProperty(A2) || this.validProperties[A2] || this.addEntry(O2.getProperty(), br.UnknownVendorSpecificProperty);
                var M2 = O2.getNonPrefixedPropertyName();
                L2.add(M2, A2, O2.getProperty());
              }
            } else {
              var P2 = A2;
              R2 !== "*" && R2 !== "_" || (this.addEntry(O2.getProperty(), br.IEStarHack), A2 = A2.substr(1)), this.cssDataManager.isKnownProperty(P2) || this.cssDataManager.isKnownProperty(A2) || this.validProperties[A2] || this.addEntry(O2.getProperty(), br.UnknownProperty, Or("property.unknownproperty.detailed", "Unknown property: '{0}'", O2.getFullPropertyName())), L2.add(A2, A2, null);
            }
          } else
            N2 = true;
        }
        if (!N2)
          for (var F2 in L2.data) {
            var W2 = L2.data[F2], z2 = W2.names, B2 = this.cssDataManager.isStandardProperty(F2) && z2.indexOf(F2) === -1;
            if (B2 || z2.length !== 1) {
              for (var j2 = [], V2 = (S2 = 0, e2.prefixes.length); S2 < V2; S2++) {
                var U2 = e2.prefixes[S2];
                this.cssDataManager.isStandardProperty(U2 + F2) && j2.push(U2 + F2);
              }
              var H2 = this.getMissingNames(j2, z2);
              if (H2 || B2)
                for (var q2 = 0, $2 = W2.nodes; q2 < $2.length; q2++) {
                  var K2 = $2[q2];
                  if (B2) {
                    var G2 = Or("property.standard.missing", "Also define the standard property '{0}' for compatibility", F2);
                    this.addEntry(K2, br.IncludeStandardPropertyWhenUsingVendorPrefix, G2);
                  }
                  if (H2) {
                    G2 = Or("property.vendorspecific.missing", "Always include all vendor specific properties: Missing: {0}", H2);
                    this.addEntry(K2, br.AllVendorPrefixes, G2);
                  }
                }
            }
          }
      }
      return true;
    }, e2.prototype.visitPrio = function(e3) {
      return this.addEntry(e3, br.AvoidImportant), true;
    }, e2.prototype.visitNumericValue = function(e3) {
      var t2 = e3.findParent(J.Function);
      if (t2 && t2.getName() === "calc")
        return true;
      var n2 = e3.findParent(J.Declaration);
      if (n2 && n2.getValue()) {
        var i2 = e3.getValue();
        if (!i2.unit || Zt.length.indexOf(i2.unit.toLowerCase()) === -1)
          return true;
        parseFloat(i2.value) === 0 && i2.unit && !this.validProperties[n2.getFullPropertyName()] && this.addEntry(e3, br.ZeroWithUnit);
      }
      return true;
    }, e2.prototype.visitFontFace = function(e3) {
      var t2 = e3.getDeclarations();
      if (!t2)
        return false;
      for (var n2 = false, i2 = false, r2 = false, o2 = 0, s2 = t2.getChildren(); o2 < s2.length; o2++) {
        var a2 = s2[o2];
        if (this.isCSSDeclaration(a2)) {
          var l2 = a2.getProperty().getName().toLowerCase();
          l2 === "src" && (n2 = true), l2 === "font-family" && (i2 = true);
        } else
          r2 = true;
      }
      return r2 || n2 && i2 || this.addEntry(e3, br.RequiredPropertiesForFontFace), true;
    }, e2.prototype.isCSSDeclaration = function(e3) {
      if (e3 instanceof _e) {
        if (!e3.getValue())
          return false;
        var t2 = e3.getProperty();
        if (!t2)
          return false;
        var n2 = t2.getIdentifier();
        return !(!n2 || n2.containsInterpolation());
      }
      return false;
    }, e2.prototype.visitHexColorValue = function(e3) {
      var t2 = e3.length;
      return t2 !== 9 && t2 !== 7 && t2 !== 5 && t2 !== 4 && this.addEntry(e3, br.HexColorLength), false;
    }, e2.prototype.visitFunction = function(e3) {
      var t2 = e3.getName().toLowerCase(), n2 = -1, i2 = 0;
      switch (t2) {
        case "rgb(":
        case "hsl(":
          n2 = 3;
          break;
        case "rgba(":
        case "hsla(":
          n2 = 4;
      }
      return n2 !== -1 && (e3.getArguments().accept(function(e4) {
        return !(e4 instanceof Ye) || (i2 += 1, false);
      }), i2 !== n2 && this.addEntry(e3, br.ArgsInColorFunction)), true;
    }, e2.prefixes = ["-ms-", "-moz-", "-o-", "-webkit-"], e2;
  }(), Mr = function() {
    function e2(e3) {
      this.cssDataManager = e3;
    }
    return e2.prototype.configure = function(e3) {
      this.settings = e3;
    }, e2.prototype.doValidation = function(e3, t2, n2) {
      if (n2 === void 0 && (n2 = this.settings), n2 && n2.validate === false)
        return [];
      var i2 = [];
      i2.push.apply(i2, bt.entries(t2)), i2.push.apply(i2, Rr.entries(t2, e3, new vr(n2 && n2.lint), this.cssDataManager));
      var r2 = [];
      for (var o2 in br)
        r2.push(br[o2].id);
      return i2.filter(function(e4) {
        return e4.getLevel() !== re.Ignore;
      }).map(function(t3) {
        var n3 = ln.create(e3.positionAt(t3.getOffset()), e3.positionAt(t3.getOffset() + t3.getLength())), i3 = e3.languageId;
        return {code: t3.getRule().id, source: i3, message: t3.getMessage(), severity: t3.getLevel() === re.Warning ? bn.Warning : bn.Error, range: n3};
      });
    }, e2;
  }(), Pr = function() {
    var e2 = function(t2, n2) {
      return (e2 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
        e3.__proto__ = t3;
      } || function(e3, t3) {
        for (var n3 in t3)
          t3.hasOwnProperty(n3) && (e3[n3] = t3[n3]);
      })(t2, n2);
    };
    return function(t2, n2) {
      function i2() {
        this.constructor = t2;
      }
      e2(t2, n2), t2.prototype = n2 === null ? Object.create(n2) : (i2.prototype = n2.prototype, new i2());
    };
  }(), Fr = "/".charCodeAt(0), Wr = "\n".charCodeAt(0), zr = "\r".charCodeAt(0), Br = "\f".charCodeAt(0), jr = "$".charCodeAt(0), Vr = "#".charCodeAt(0), Ur = "{".charCodeAt(0), Hr = "=".charCodeAt(0), qr = "!".charCodeAt(0), $r = "<".charCodeAt(0), Kr = ">".charCodeAt(0), Gr = ".".charCodeAt(0), Yr = ("@".charCodeAt(0), i.CustomToken), Zr = Yr++, Xr = Yr++, Qr = (Yr++, Yr++), Jr = Yr++, eo = Yr++, to = Yr++, no = Yr++, io = (Yr++, function(e2) {
    function t2() {
      return e2 !== null && e2.apply(this, arguments) || this;
    }
    return Pr(t2, e2), t2.prototype.scanNext = function(t3) {
      if (this.stream.advanceIfChar(jr)) {
        var n2 = ["$"];
        if (this.ident(n2))
          return this.finishToken(t3, Zr, n2.join(""));
        this.stream.goBackTo(t3);
      }
      return this.stream.advanceIfChars([Vr, Ur]) ? this.finishToken(t3, Xr) : this.stream.advanceIfChars([Hr, Hr]) ? this.finishToken(t3, Qr) : this.stream.advanceIfChars([qr, Hr]) ? this.finishToken(t3, Jr) : this.stream.advanceIfChar($r) ? this.stream.advanceIfChar(Hr) ? this.finishToken(t3, to) : this.finishToken(t3, i.Delim) : this.stream.advanceIfChar(Kr) ? this.stream.advanceIfChar(Hr) ? this.finishToken(t3, eo) : this.finishToken(t3, i.Delim) : this.stream.advanceIfChars([Gr, Gr, Gr]) ? this.finishToken(t3, no) : e2.prototype.scanNext.call(this, t3);
    }, t2.prototype.comment = function() {
      return !!e2.prototype.comment.call(this) || !(this.inURL || !this.stream.advanceIfChars([Fr, Fr])) && (this.stream.advanceWhileChar(function(e3) {
        switch (e3) {
          case Wr:
          case zr:
          case Br:
            return false;
          default:
            return true;
        }
      }), true);
    }, t2;
  }(G)), ro = wt(), oo = function(e2, t2) {
    this.id = e2, this.message = t2;
  }, so = {FromExpected: new oo("scss-fromexpected", ro("expected.from", "'from' expected")), ThroughOrToExpected: new oo("scss-throughexpected", ro("expected.through", "'through' or 'to' expected")), InExpected: new oo("scss-fromexpected", ro("expected.in", "'in' expected"))}, ao = function() {
    var e2 = function(t2, n2) {
      return (e2 = Object.setPrototypeOf || {__proto__: []} instanceof Array && function(e3, t3) {
        e3.__proto__ = t3;
      } || function(e3, t3) {
        for (var n3 in t3)
          t3.hasOwnProperty(n3) && (e3[n3] = t3[n3]);
      })(t2, n2);
    };
    return function(t2, n2) {
      function i2() {
        this.constructor = t2;
      }
      e2(t2, n2), t2.prototype = n2 === null ? Object.create(n2) : (i2.prototype = n2.prototype, new i2());
    };
  }(), lo = function(e2) {
    function t2() {
      return e2.call(this, new io()) || this;
    }
    return ao(t2, e2), t2.prototype._parseStylesheetStatement = function(t3) {
      return t3 === void 0 && (t3 = false), this.peek(i.AtKeyword) ? this._parseWarnAndDebug() || this._parseControlStatement() || this._parseMixinDeclaration() || this._parseMixinContent() || this._parseMixinReference() || this._parseFunctionDeclaration() || this._parseForward() || this._parseUse() || this._parseRuleset(t3) || e2.prototype._parseStylesheetAtStatement.call(this, t3) : this._parseRuleset(true) || this._parseVariableDeclaration();
    }, t2.prototype._parseImport = function() {
      if (!this.peekKeyword("@import"))
        return null;
      var e3 = this.create(Re);
      if (this.consumeToken(), !e3.addChild(this._parseURILiteral()) && !e3.addChild(this._parseStringLiteral()))
        return this.finish(e3, xt.URIOrStringExpected);
      for (; this.accept(i.Comma); )
        if (!e3.addChild(this._parseURILiteral()) && !e3.addChild(this._parseStringLiteral()))
          return this.finish(e3, xt.URIOrStringExpected);
      return this.peek(i.SemiColon) || this.peek(i.EOF) || e3.setMedialist(this._parseMediaQueryList()), this.finish(e3);
    }, t2.prototype._parseVariableDeclaration = function(e3) {
      if (e3 === void 0 && (e3 = []), !this.peek(Zr))
        return null;
      var t3 = this.create(it);
      if (!t3.setVariable(this._parseVariable()))
        return null;
      if (!this.accept(i.Colon))
        return this.finish(t3, xt.ColonExpected);
      if (this.prevToken && (t3.colonPosition = this.prevToken.offset), !t3.setValue(this._parseExpr()))
        return this.finish(t3, xt.VariableValueExpected, [], e3);
      for (; this.peek(i.Exclamation); )
        if (t3.addChild(this._tryParsePrio()))
          ;
        else {
          if (this.consumeToken(), !this.peekRegExp(i.Ident, /^(default|global)$/))
            return this.finish(t3, xt.UnknownKeyword);
          this.consumeToken();
        }
      return this.peek(i.SemiColon) && (t3.semicolonPosition = this.token.offset), this.finish(t3);
    }, t2.prototype._parseMediaContentStart = function() {
      return this._parseInterpolation();
    }, t2.prototype._parseMediaFeatureName = function() {
      return this._parseModuleMember() || this._parseFunction() || this._parseIdent() || this._parseVariable();
    }, t2.prototype._parseKeyframeSelector = function() {
      return this._tryParseKeyframeSelector() || this._parseControlStatement(this._parseKeyframeSelector.bind(this)) || this._parseVariableDeclaration() || this._parseMixinContent();
    }, t2.prototype._parseVariable = function() {
      if (!this.peek(Zr))
        return null;
      var e3 = this.create(ot);
      return this.consumeToken(), e3;
    }, t2.prototype._parseModuleMember = function() {
      var e3 = this.mark(), t3 = this.create(gt);
      return t3.setIdentifier(this._parseIdent([ee.Module])) ? this.hasWhitespace() || !this.acceptDelim(".") || this.hasWhitespace() ? (this.restoreAtMark(e3), null) : t3.addChild(this._parseVariable() || this._parseFunction()) ? t3 : this.finish(t3, xt.IdentifierOrVariableExpected) : null;
    }, t2.prototype._parseIdent = function(e3) {
      var t3 = this;
      if (!this.peek(i.Ident) && !this.peek(Xr) && !this.peekDelim("-"))
        return null;
      var n2 = this.create(ae);
      n2.referenceTypes = e3, n2.isCustomProperty = this.peekRegExp(i.Ident, /^--/);
      for (var r2, o2 = false; (this.accept(i.Ident) || n2.addChild((r2 = void 0, r2 = t3.mark(), t3.acceptDelim("-") && (t3.hasWhitespace() || t3.acceptDelim("-"), t3.hasWhitespace()) ? (t3.restoreAtMark(r2), null) : t3._parseInterpolation())) || o2 && this.acceptRegexp(/[\w-]/)) && (o2 = true, !this.hasWhitespace()); )
        ;
      return o2 ? this.finish(n2) : null;
    }, t2.prototype._parseTermExpression = function() {
      return this._parseModuleMember() || this._parseVariable() || this._parseSelectorCombinator() || e2.prototype._parseTermExpression.call(this);
    }, t2.prototype._parseInterpolation = function() {
      if (this.peek(Xr)) {
        var e3 = this.create(rt);
        return this.consumeToken(), e3.addChild(this._parseExpr()) || this._parseSelectorCombinator() ? this.accept(i.CurlyR) ? this.finish(e3) : this.finish(e3, xt.RightCurlyExpected) : this.accept(i.CurlyR) ? this.finish(e3) : this.finish(e3, xt.ExpressionExpected);
      }
      return null;
    }, t2.prototype._parseOperator = function() {
      if (this.peek(Qr) || this.peek(Jr) || this.peek(eo) || this.peek(to) || this.peekDelim(">") || this.peekDelim("<")